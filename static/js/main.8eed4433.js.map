{"version":3,"sources":["../static/js/main.8eed4433.js","../webpack/bootstrap c3c12a54c6331343e235","../node_modules/dagre/lib/lodash.js","../node_modules/dagre/lib/util.js","../node_modules/graphlib/lib/lodash.js","../node_modules/dagre/lib/graphlib.js","../node_modules/dagre/lib/rank/util.js","../node_modules/object-assign/index.js","../node_modules/react/index.js","../node_modules/graphlib/lib/graph.js","../node_modules/react-scripts/node_modules/promise/lib/core.js","../node_modules/webpack/buildin/global.js","../node_modules/fbjs/lib/invariant.js","../node_modules/fbjs/lib/emptyObject.js","../node_modules/fbjs/lib/emptyFunction.js","../node_modules/lodash/lodash.js","../node_modules/graphlib/lib/alg/dijkstra.js","../node_modules/graphlib/lib/data/priority-queue.js","../node_modules/graphlib/lib/alg/tarjan.js","../node_modules/graphlib/lib/alg/topsort.js","../node_modules/graphlib/lib/alg/dfs.js","../node_modules/dagre/lib/rank/feasible-tree.js","../node_modules/react-scripts/config/polyfills.js","../node_modules/react-scripts/node_modules/promise/lib/rejection-tracking.js","../node_modules/asap/browser-raw.js","../node_modules/react-scripts/node_modules/promise/lib/es6-extensions.js","../node_modules/react-scripts/node_modules/whatwg-fetch/fetch.js","index.js","../node_modules/react/cjs/react.production.min.js","../node_modules/react-dom/index.js","../node_modules/react-dom/cjs/react-dom.production.min.js","../node_modules/fbjs/lib/ExecutionEnvironment.js","../node_modules/fbjs/lib/getActiveElement.js","../node_modules/fbjs/lib/shallowEqual.js","../node_modules/fbjs/lib/containsNode.js","../node_modules/fbjs/lib/isTextNode.js","../node_modules/fbjs/lib/isNode.js","App.js","../node_modules/jsplumb/dist/js/jsplumb.js","../node_modules/dagre/index.js","../node_modules/graphlib/index.js","../node_modules/graphlib/lib/index.js","../node_modules/webpack/buildin/module.js","../node_modules/graphlib/lib/version.js","../node_modules/graphlib/lib/json.js","../node_modules/graphlib/lib/alg/index.js","../node_modules/graphlib/lib/alg/components.js","../node_modules/graphlib/lib/alg/dijkstra-all.js","../node_modules/graphlib/lib/alg/find-cycles.js","../node_modules/graphlib/lib/alg/floyd-warshall.js","../node_modules/graphlib/lib/alg/is-acyclic.js","../node_modules/graphlib/lib/alg/postorder.js","../node_modules/graphlib/lib/alg/preorder.js","../node_modules/graphlib/lib/alg/prim.js","../node_modules/dagre/lib/layout.js","../node_modules/dagre/lib/acyclic.js","../node_modules/dagre/lib/greedy-fas.js","../node_modules/dagre/lib/data/list.js","../node_modules/dagre/lib/normalize.js","../node_modules/dagre/lib/rank/index.js","../node_modules/dagre/lib/rank/network-simplex.js","../node_modules/dagre/lib/parent-dummy-chains.js","../node_modules/dagre/lib/nesting-graph.js","../node_modules/dagre/lib/add-border-segments.js","../node_modules/dagre/lib/coordinate-system.js","../node_modules/dagre/lib/order/index.js","../node_modules/dagre/lib/order/init-order.js","../node_modules/dagre/lib/order/cross-count.js","../node_modules/dagre/lib/order/sort-subgraph.js","../node_modules/dagre/lib/order/barycenter.js","../node_modules/dagre/lib/order/resolve-conflicts.js","../node_modules/dagre/lib/order/sort.js","../node_modules/dagre/lib/order/build-layer-graph.js","../node_modules/dagre/lib/order/add-subgraph-constraints.js","../node_modules/dagre/lib/position/index.js","../node_modules/dagre/lib/position/bk.js","../node_modules/dagre/lib/debug.js","../node_modules/dagre/lib/version.js","registerServiceWorker.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","lodash","e","window","_","addDummyNode","g","type","attrs","v","uniqueId","hasNode","dummy","setNode","simplify","simplified","Graph","setGraph","graph","forEach","nodes","node","edges","simpleLabel","edge","w","weight","minlen","label","setEdge","Math","max","asNonCompoundGraph","multigraph","isMultigraph","children","length","successorWeights","weightMap","map","sucs","outEdges","zipObject","predecessorWeights","preds","inEdges","intersectRect","rect","point","x","y","dx","dy","width","h","height","Error","sx","sy","abs","buildLayerMatrix","layering","range","maxRank","rank","isUndefined","order","normalizeRanks","min","minBy","has","removeEmptyRanks","offset","layers","push","delta","nodeRankFactor","vs","addBorderNode","prefix","arguments","partition","collection","fn","result","lhs","rhs","value","time","start","now","console","log","notime","graphlib","longestPath","dfs","visited","Number","POSITIVE_INFINITY","undefined","sources","slack","toObject","val","TypeError","getOwnPropertySymbols","propIsEnumerable","propertyIsEnumerable","assign","test1","String","getOwnPropertyNames","test2","fromCharCode","join","test3","split","letter","keys","err","target","source","from","symbols","to","key","opts","this","_isDirected","directed","_isMultigraph","_isCompound","compound","_label","_defaultNodeLabelFn","constant","_defaultEdgeLabelFn","_nodes","_parent","_children","GRAPH_NODE","_in","_preds","_out","_sucs","_edgeObjs","_edgeLabels","incrementOrInitEntry","k","decrementOrRemoveEntry","edgeArgsToId","isDirected","v_","w_","tmp","EDGE_KEY_DELIM","DEFAULT_EDGE_NAME","edgeArgsToObj","edgeObj","edgeObjToId","_nodeCount","_edgeCount","isCompound","setDefaultNodeLabel","newDefault","isFunction","nodeCount","self","filter","isEmpty","sinks","setNodes","args","each","removeNode","removeEdge","_removeFromParentsChildList","child","setParent","parent","ancestor","predecessors","predsV","successors","sucsV","neighbors","union","isLeaf","filterNodes","findParent","copy","parents","constructor","setDefaultEdgeLabel","edgeCount","values","setPath","reduce","valueSpecified","arg0","freeze","hasEdge","u","inV","outV","nodeEdges","concat","noop","getThen","obj","then","ex","LAST_ERROR","IS_ERROR","tryCallOne","a","tryCallTwo","b","Promise","_75","_83","_18","_38","doResolve","safeThen","onFulfilled","onRejected","resolve","reject","res","handle","Handler","deferred","_47","handleResolved","asap","cb","promise","ret","newValue","finale","bind","_71","done","reason","_44","Function","eval","invariant","condition","format","f","validateFormat","error","argIndex","replace","framesToPop","emptyObject","makeEmptyFunction","arg","emptyFunction","thatReturns","thatReturnsFalse","thatReturnsTrue","thatReturnsNull","thatReturnsThis","thatReturnsArgument","global","__WEBPACK_AMD_DEFINE_RESULT__","apply","func","thisArg","arrayAggregator","array","setter","iteratee","accumulator","index","arrayEach","arrayEachRight","arrayEvery","predicate","arrayFilter","resIndex","arrayIncludes","baseIndexOf","arrayIncludesWith","comparator","arrayMap","Array","arrayPush","arrayReduce","initAccum","arrayReduceRight","arraySome","asciiToArray","string","asciiWords","match","reAsciiWord","baseFindKey","eachFunc","baseFindIndex","fromIndex","fromRight","strictIndexOf","baseIsNaN","baseIndexOfWith","baseMean","baseSum","NAN","baseProperty","basePropertyOf","baseReduce","baseSortBy","comparer","sort","current","baseTimes","baseToPairs","props","baseUnary","baseValues","cacheHas","cache","charsStartIndex","strSymbols","chrSymbols","charsEndIndex","countHolders","placeholder","escapeStringChar","chr","stringEscapes","getValue","hasUnicode","reHasUnicode","test","hasUnicodeWord","reHasUnicodeWord","iteratorToArray","iterator","data","next","mapToArray","size","overArg","transform","replaceHolders","PLACEHOLDER","safeGet","setToArray","set","setToPairs","strictLastIndexOf","stringSize","unicodeSize","asciiSize","stringToArray","unicodeToArray","reUnicode","lastIndex","unicodeWords","reUnicodeWord","LARGE_ARRAY_SIZE","CORE_ERROR_TEXT","FUNC_ERROR_TEXT","HASH_UNDEFINED","MAX_MEMOIZE_SIZE","CLONE_DEEP_FLAG","CLONE_FLAT_FLAG","CLONE_SYMBOLS_FLAG","COMPARE_PARTIAL_FLAG","COMPARE_UNORDERED_FLAG","WRAP_BIND_FLAG","WRAP_BIND_KEY_FLAG","WRAP_CURRY_BOUND_FLAG","WRAP_CURRY_FLAG","WRAP_CURRY_RIGHT_FLAG","WRAP_PARTIAL_FLAG","WRAP_PARTIAL_RIGHT_FLAG","WRAP_ARY_FLAG","WRAP_REARG_FLAG","WRAP_FLIP_FLAG","DEFAULT_TRUNC_LENGTH","DEFAULT_TRUNC_OMISSION","HOT_COUNT","HOT_SPAN","LAZY_FILTER_FLAG","LAZY_MAP_FLAG","INFINITY","MAX_SAFE_INTEGER","MAX_INTEGER","MAX_ARRAY_LENGTH","MAX_ARRAY_INDEX","HALF_MAX_ARRAY_LENGTH","wrapFlags","argsTag","arrayTag","asyncTag","boolTag","dateTag","domExcTag","errorTag","funcTag","genTag","mapTag","numberTag","nullTag","objectTag","proxyTag","regexpTag","setTag","stringTag","symbolTag","undefinedTag","weakMapTag","weakSetTag","arrayBufferTag","dataViewTag","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","reEmptyStringLeading","reEmptyStringMiddle","reEmptyStringTrailing","reEscapedHtml","reUnescapedHtml","reHasEscapedHtml","RegExp","reHasUnescapedHtml","reEscape","reEvaluate","reInterpolate","reIsDeepProp","reIsPlainProp","rePropName","reRegExpChar","reHasRegExpChar","reTrim","reTrimStart","reTrimEnd","reWrapComment","reWrapDetails","reSplitDetails","reEscapeChar","reEsTemplate","reFlags","reIsBadHex","reIsBinary","reIsHostCtor","reIsOctal","reIsUint","reLatin","reNoMatch","reUnescapedString","rsComboRange","rsComboMarksRange","rsBreakRange","rsMathOpRange","rsBreak","rsCombo","rsLower","rsMisc","rsFitz","rsRegional","rsSurrPair","rsUpper","rsMiscLower","reOptMod","rsModifier","rsOptJoin","rsSeq","rsEmoji","rsSymbol","reApos","reComboMark","rsMiscUpper","contextProps","templateCounter","typedArrayTags","cloneableTags","deburredLetters","À","Á","Â","Ã","Ä","Å","à","á","â","ã","ä","å","Ç","ç","Ð","ð","È","É","Ê","Ë","è","é","ê","ë","Ì","Í","Î","Ï","ì","í","î","ï","Ñ","ñ","Ò","Ó","Ô","Õ","Ö","Ø","ò","ó","ô","õ","ö","ø","Ù","Ú","Û","Ü","ù","ú","û","ü","Ý","ý","ÿ","Æ","æ","Þ","þ","ß","Ā","Ă","Ą","ā","ă","ą","Ć","Ĉ","Ċ","Č","ć","ĉ","ċ","č","Ď","Đ","ď","đ","Ē","Ĕ","Ė","Ę","Ě","ē","ĕ","ė","ę","ě","Ĝ","Ğ","Ġ","Ģ","ĝ","ğ","ġ","ģ","Ĥ","Ħ","ĥ","ħ","Ĩ","Ī","Ĭ","Į","İ","ĩ","ī","ĭ","į","ı","Ĵ","ĵ","Ķ","ķ","ĸ","Ĺ","Ļ","Ľ","Ŀ","Ł","ĺ","ļ","ľ","ŀ","ł","Ń","Ņ","Ň","Ŋ","ń","ņ","ň","ŋ","Ō","Ŏ","Ő","ō","ŏ","ő","Ŕ","Ŗ","Ř","ŕ","ŗ","ř","Ś","Ŝ","Ş","Š","ś","ŝ","ş","š","Ţ","Ť","Ŧ","ţ","ť","ŧ","Ũ","Ū","Ŭ","Ů","Ű","Ų","ũ","ū","ŭ","ů","ű","ų","Ŵ","ŵ","Ŷ","ŷ","Ÿ","Ź","Ż","Ž","ź","ż","ž","Ĳ","ĳ","Œ","œ","ŉ","ſ","htmlEscapes","&","<",">","\"","'","htmlUnescapes","&amp;","&lt;","&gt;","&quot;","&#39;","\\","\n","\r"," "," ","freeParseFloat","parseFloat","freeParseInt","parseInt","freeGlobal","freeSelf","root","freeExports","nodeType","freeModule","moduleExports","freeProcess","process","nodeUtil","types","require","binding","nodeIsArrayBuffer","isArrayBuffer","nodeIsDate","isDate","nodeIsMap","isMap","nodeIsRegExp","isRegExp","nodeIsSet","isSet","nodeIsTypedArray","isTypedArray","deburrLetter","escapeHtmlChar","unescapeHtmlChar","runInContext","context","isObjectLike","isArray","LazyWrapper","LodashWrapper","wrapperClone","baseLodash","chainAll","__wrapped__","__actions__","__chain__","__index__","__values__","__dir__","__filtered__","__iteratees__","__takeCount__","__views__","lazyClone","copyArray","lazyReverse","clone","lazyValue","dir","isArr","isRight","arrLength","view","getView","end","iteratees","iterLength","takeCount","nativeMin","baseWrapperValue","outer","iterIndex","computed","Hash","entries","clear","entry","hashClear","__data__","nativeCreate","hashDelete","hashGet","hashHas","hashSet","ListCache","listCacheClear","listCacheDelete","assocIndexOf","pop","splice","listCacheGet","listCacheHas","listCacheSet","MapCache","mapCacheClear","hash","Map","mapCacheDelete","getMapData","mapCacheGet","mapCacheHas","mapCacheSet","SetCache","add","setCacheAdd","setCacheHas","Stack","stackClear","stackDelete","stackGet","stackHas","stackSet","pairs","arrayLikeKeys","inherited","isArg","isArguments","isBuff","isBuffer","isType","skipIndexes","isIndex","arraySample","baseRandom","arraySampleSize","shuffleSelf","baseClamp","arrayShuffle","assignMergeValue","eq","baseAssignValue","assignValue","objValue","baseAggregator","baseEach","baseAssign","copyObject","baseAssignIn","keysIn","writable","baseAt","paths","skip","number","lower","upper","baseClone","bitmask","customizer","stack","isDeep","isFlat","isFull","isObject","initCloneArray","tag","getTag","isFunc","cloneBuffer","initCloneObject","copySymbolsIn","copySymbols","initCloneByTag","stacked","subValue","keysFunc","getAllKeysIn","getAllKeys","baseConforms","baseConformsTo","baseDelay","wait","setTimeout","baseDifference","includes","isCommon","valuesLength","valuesIndex","baseEvery","baseExtremum","isSymbol","baseFill","toInteger","toLength","baseFilter","baseFlatten","depth","isStrict","isFlattenable","baseForOwn","baseFor","baseForOwnRight","baseForRight","baseFunctions","baseGet","path","castPath","toKey","baseGetAllKeys","symbolsFunc","baseGetTag","symToStringTag","getRawTag","objectToString","baseGt","other","baseHas","baseHasIn","baseInRange","nativeMax","baseIntersection","arrays","othLength","othIndex","caches","maxLength","Infinity","seen","baseInverter","baseInvoke","last","baseIsArguments","baseIsArrayBuffer","baseIsDate","baseIsEqual","baseIsEqualDeep","equalFunc","objIsArr","othIsArr","objTag","othTag","objIsObj","othIsObj","isSameTag","equalArrays","equalByTag","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","equalObjects","baseIsMap","baseIsMatch","matchData","noCustomizer","srcValue","baseIsNative","isMasked","reIsNative","toSource","baseIsRegExp","baseIsSet","baseIsTypedArray","isLength","baseIteratee","identity","baseMatchesProperty","baseMatches","baseKeys","isPrototype","nativeKeys","baseKeysIn","nativeKeysIn","isProto","baseLt","baseMap","isArrayLike","getMatchData","matchesStrictComparable","isKey","isStrictComparable","hasIn","baseMerge","srcIndex","baseMergeDeep","mergeFunc","isTyped","isArrayLikeObject","cloneTypedArray","isPlainObject","toPlainObject","baseNth","baseOrderBy","orders","getIteratee","criteria","compareMultiple","basePick","basePickBy","baseSet","basePropertyDeep","basePullAll","indexOf","basePullAt","indexes","previous","baseUnset","nativeFloor","nativeRandom","baseRange","step","nativeCeil","baseRepeat","baseRest","setToString","overRest","baseSample","baseSampleSize","nested","baseShuffle","baseSlice","baseSome","baseSortedIndex","retHighest","low","high","mid","baseSortedIndexBy","valIsNaN","valIsNull","valIsSymbol","valIsUndefined","othIsDefined","othIsNull","othIsReflexive","othIsSymbol","setLow","baseSortedUniq","baseToNumber","baseToString","symbolToString","baseUniq","createSet","seenIndex","baseUpdate","updater","baseWhile","isDrop","actions","action","baseXor","baseZipObject","assignFunc","valsLength","castArrayLikeObject","castFunction","stringToPath","toString","castSlice","buffer","slice","allocUnsafe","cloneArrayBuffer","arrayBuffer","byteLength","Uint8Array","cloneDataView","dataView","byteOffset","cloneRegExp","regexp","exec","cloneSymbol","symbol","symbolValueOf","typedArray","compareAscending","valIsDefined","valIsReflexive","objCriteria","othCriteria","ordersLength","composeArgs","partials","holders","isCurried","argsIndex","argsLength","holdersLength","leftIndex","leftLength","rangeLength","isUncurried","composeArgsRight","holdersIndex","rightIndex","rightLength","isNew","getSymbols","getSymbolsIn","createAggregator","initializer","createAssigner","assigner","guard","isIterateeCall","createBaseEach","iterable","createBaseFor","createBind","wrapper","Ctor","isBind","createCtor","createCaseFirst","methodName","charAt","trailing","createCompounder","callback","words","deburr","thisBinding","baseCreate","createCurry","arity","getHolder","createRecurry","createHybrid","createFind","findIndexFunc","createFlow","flatRest","funcs","prereq","thru","reverse","getFuncName","funcName","getData","isLaziable","plant","partialsRight","holdersRight","argPos","ary","holdersCount","newHolders","isBindKey","reorder","isFlip","isAry","createInverter","toIteratee","createMathOperation","operator","defaultValue","createOver","arrayFunc","createPadding","chars","charsLength","createPartial","createRange","toFinite","createRelationalOperation","toNumber","wrapFunc","isCurry","newHoldersRight","newPartials","newPartialsRight","newData","setData","setWrapToString","createRound","precision","pair","createToPairs","createWrap","mergeData","baseSetData","customDefaultsAssignIn","objectProto","customDefaultsMerge","customOmitClone","isPartial","arrValue","othValue","compared","message","convert","objProps","objLength","skipCtor","objCtor","othCtor","flatten","realNames","otherFunc","isKeyable","getNative","isOwn","unmasked","nativeObjectToString","transforms","getWrapDetails","hasPath","hasFunc","input","getPrototype","insertWrapDetails","details","spreadableSymbol","maskSrcKey","srcBitmask","newBitmask","isCombo","otherArgs","oldArray","reference","updateWrapDetails","shortOut","count","lastCalled","stamp","nativeNow","remaining","rand","funcToString","chunk","compact","drop","dropRight","dropRightWhile","dropWhile","fill","findIndex","findLastIndex","flattenDeep","flattenDepth","fromPairs","head","initial","separator","nativeJoin","lastIndexOf","nth","pullAll","pullAllBy","pullAllWith","remove","nativeReverse","sortedIndex","sortedIndexBy","sortedIndexOf","sortedLastIndex","sortedLastIndexBy","sortedLastIndexOf","sortedUniq","sortedUniqBy","tail","take","takeRight","takeRightWhile","takeWhile","uniq","uniqBy","uniqWith","unzip","group","unzipWith","zipObjectDeep","chain","tap","interceptor","wrapperChain","wrapperCommit","wrapperNext","toArray","wrapperToIterator","wrapperPlant","wrapperReverse","wrapped","wrapperValue","every","flatMap","flatMapDeep","flatMapDepth","forEachRight","baseEachRight","isString","orderBy","reduceRight","negate","sample","sampleSize","shuffle","some","after","before","curry","curryRight","debounce","options","invokeFunc","lastArgs","lastThis","lastInvokeTime","leadingEdge","timerId","timerExpired","leading","remainingWait","timeSinceLastCall","lastCallTime","timeSinceLastInvoke","timeWaiting","maxing","maxWait","shouldInvoke","trailingEdge","cancel","clearTimeout","flush","debounced","isInvoking","flip","memoize","resolver","memoized","Cache","once","rest","spread","throttle","unary","wrap","partial","castArray","cloneWith","cloneDeep","cloneDeepWith","conformsTo","isBoolean","isElement","isEqual","isEqualWith","isError","isFinite","nativeIsFinite","isInteger","isMatch","isMatchWith","isNaN","isNumber","isNative","isMaskable","isNull","isNil","proto","objectCtorString","isSafeInteger","isWeakMap","isWeakSet","symIterator","remainder","valueOf","isBinary","toSafeInteger","create","properties","findKey","findLastKey","forIn","forInRight","forOwn","forOwnRight","functions","functionsIn","mapKeys","mapValues","omitBy","pickBy","prop","setWith","isArrLike","unset","update","updateWith","valuesIn","clamp","inRange","random","floating","temp","capitalize","upperFirst","toLowerCase","endsWith","position","escape","escapeRegExp","pad","strLength","padEnd","padStart","radix","nativeParseInt","repeat","limit","startsWith","template","settings","templateSettings","assignInWith","isEscaping","isEvaluating","imports","importsKeys","importsValues","interpolate","reDelimiters","evaluate","sourceURL","escapeValue","interpolateValue","esTemplateValue","evaluateValue","variable","attempt","toLower","toUpper","toUpperCase","trim","trimEnd","trimStart","truncate","omission","search","substring","newEnd","unescape","pattern","cond","conforms","defaultTo","matches","matchesProperty","mixin","methodNames","noConflict","oldDash","nthArg","propertyOf","stubArray","stubFalse","stubObject","stubString","stubTrue","times","toPath","id","idCounter","maxBy","mean","meanBy","sum","sumBy","defaults","pick","Date","arrayProto","funcProto","coreJsData","uid","IE_PROTO","Buffer","Symbol","getPrototypeOf","objectCreate","isConcatSpreadable","toStringTag","ctxClearTimeout","ctxNow","ctxSetTimeout","ceil","floor","nativeGetSymbols","nativeIsBuffer","DataView","Set","WeakMap","metaMap","dataViewCtorString","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","symbolProto","baseSetToString","castRest","ArrayBuffer","ctorString","charCodeAt","quote","subString","difference","differenceBy","differenceWith","intersection","mapped","intersectionBy","intersectionWith","pull","pullAt","unionBy","unionWith","without","xor","xorBy","xorWith","zip","zipWith","wrapperAt","countBy","find","findLast","groupBy","invokeMap","keyBy","sortBy","bindKey","defer","delay","overArgs","funcsLength","partialRight","rearg","gt","gte","lt","lte","assignIn","assignWith","at","propsIndex","propsLength","defaultsDeep","mergeWith","invert","invertBy","invoke","merge","omit","toPairs","toPairsIn","camelCase","word","kebabCase","lowerCase","lowerFirst","snakeCase","startCase","upperCase","bindAll","flow","flowRight","method","methodOf","over","overEvery","overSome","rangeRight","augend","addend","divide","dividend","divisor","multiply","multiplier","multiplicand","round","subtract","minuend","subtrahend","entriesIn","extend","extendWith","eachRight","first","VERSION","isFilter","takeName","dropName","checkIteratee","isTaker","lodashFunc","retUnwrapped","isLazy","useLazy","isHybrid","isUnwrapped","onlyLazy","chainName","commit","toJSON","dijkstra","weightFn","edgeFn","runDijkstra","DEFAULT_WEIGHT_FUNC","vEntry","results","pq","PriorityQueue","updateNeighbors","wEntry","distance","predecessor","decrease","removeMin","_arr","_keyIndices","priority","keyIndices","arr","_decrease","_swap","_heapify","r","largest","j","origArrI","origArrJ","tarjan","onStack","lowlink","cmpt","topsort","visit","CycleException","navigation","acc","doDfs","postorder","feasibleTree","t","tightTree","findMinSlackEdge","shiftRanks","edgeV","enable","disable","enabled","onUnhandled","allRejections","matchWhitelist","rejections","whitelist","DEFAULT_WHITELIST","displayId","logged","logError","onHandled","warn","_56","timeout","line","list","cls","ReferenceError","RangeError","rawAsap","task","queue","requestFlush","flushing","currentIndex","capacity","scan","newLength","makeRequestCallFromTimer","handleTimer","timeoutHandle","clearInterval","intervalHandle","setInterval","scope","BrowserMutationObserver","MutationObserver","WebKitMutationObserver","toggle","observer","document","createTextNode","observe","characterData","valuePromise","TRUE","FALSE","NULL","UNDEFINED","ZERO","EMPTYSTRING","all","race","normalizeName","normalizeValue","iteratorFor","items","shift","support","Headers","headers","append","header","consumed","body","bodyUsed","fileReaderReady","reader","onload","onerror","readBlobAsArrayBuffer","blob","FileReader","readAsArrayBuffer","readBlobAsText","readAsText","readArrayBufferAsText","buf","bufferClone","Body","_initBody","_bodyInit","_bodyText","Blob","isPrototypeOf","_bodyBlob","formData","FormData","_bodyFormData","searchParams","URLSearchParams","isDataView","_bodyArrayBuffer","isArrayBufferView","rejected","text","decode","json","JSON","parse","normalizeMethod","upcased","methods","Request","url","credentials","mode","referrer","form","bytes","decodeURIComponent","parseHeaders","rawHeaders","parts","Response","bodyInit","status","ok","statusText","fetch","viewClasses","isView","oldValue","response","redirectStatuses","redirect","location","init","request","xhr","XMLHttpRequest","getAllResponseHeaders","responseURL","responseText","ontimeout","open","withCredentials","responseType","setRequestHeader","send","polyfill","__webpack_exports__","__WEBPACK_IMPORTED_MODULE_0_react__","__WEBPACK_IMPORTED_MODULE_0_react___default","__WEBPACK_IMPORTED_MODULE_1_react_dom__","__WEBPACK_IMPORTED_MODULE_1_react_dom___default","__WEBPACK_IMPORTED_MODULE_2__index_css__","__WEBPACK_IMPORTED_MODULE_3__App__","__WEBPACK_IMPORTED_MODULE_4__registerServiceWorker__","render","createElement","getElementById","D","encodeURIComponent","F","refs","E","G","H","M","ref","K","L","defaultProps","$$typeof","_owner","J","N","=",":","Q","P","keyPrefix","R","S","T","C","U","V","W","q","O","for","z","A","B","isMounted","enqueueForceUpdate","enqueueReplaceState","enqueueSetState","isReactComponent","setState","forceUpdate","I","isPureReactComponent","__self","__source","X","Children","only","createRef","Component","PureComponent","createContext","_calculateChangedBits","_defaultValue","_currentValue","_currentValue2","_changedBits","_changedBits2","Provider","Consumer","_context","forwardRef","Fragment","StrictMode","unstable_AsyncMode","unstable_Profiler","cloneElement","createFactory","isValidElement","version","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentOwner","Y","default","Z","checkDCE","__REACT_DEVTOOLS_GLOBAL_HOOK__","aa","ia","_hasCaughtError","_caughtError","ka","_hasRethrowError","_rethrowError","na","la","ma","oa","extractEvents","eventTypes","pa","phasedRegistrationNames","qa","registrationName","ra","sa","dependencies","ta","ua","za","currentTarget","ya","invokeGuardedCallbackAndCatchFirstError","Aa","Ba","Da","_dispatchListeners","_dispatchInstances","isPropagationStopped","isPersistent","release","Ea","Fa","Ha","stateNode","wa","disabled","Ia","Ca","rethrowCaughtError","Ja","Na","parentNode","Oa","Pa","Ma","return","Ra","Sa","dispatchConfig","Ta","_targetInst","Ua","Va","Xa","Ya","Za","alternate","ab","eb","bb","db","lb","kb","canUseDOM","documentElement","mb","_fallbackText","_startText","nb","_root","nativeEvent","Interface","isDefaultPrevented","defaultPrevented","returnValue","rb","eventPool","sb","destructor","qb","getPooled","Db","vb","keyCode","Eb","detail","Gb","which","Cb","Ab","Hb","Fb","wb","ctrlKey","altKey","metaKey","char","zb","Nb","xa","Jb","restoreControlledState","Ob","Lb","Mb","Pb","Qb","Sb","Tb","Ub","Wb","Vb","Yb","nodeName","Xb","Zb","srcElement","correspondingUseElement","$b","setAttribute","ac","bc","getOwnPropertyDescriptor","setValue","stopTracking","_valueTracker","cc","dc","checked","tc","sc","uc","displayName","pc","mc","ic","hc","kc","pendingProps","lc","jc","rc","qc","vc","_debugOwner","_debugSource","fileName","lineNumber","Ac","zc","xc","wc","Bc","acceptsBooleans","Cc","attributeName","attributeNamespace","mustUseProperty","propertyName","Ec","Fc","removeAttribute","setAttributeNS","Gc","defaultChecked","_wrapperState","initialChecked","Hc","Ic","initialValue","controlled","Jc","Kc","Lc","Mc","ownerDocument","activeElement","Oc","Nc","change","Rc","Sc","Tc","Vc","Pc","detachEvent","Wc","Qc","Xc","attachEvent","Yc","Zc","$c","dd","getModifierState","cd","ed","jd","effectTag","kd","ld","sibling","md","nd","rd","charCode","Cd","bubbled","captured","isInteractive","Ad","Bd","Gd","targetInst","ancestors","containerInfo","topLevelType","Id","Hd","Ed","Kd","Ld","addEventListener","Md","Fd","Rd","Qd","Pd","Od","Sd","firstChild","Td","textContent","nextSibling","Ud","contentEditable","ae","$d","Xd","da","selectionStart","selectionEnd","getSelection","anchorNode","anchorOffset","focusNode","focusOffset","Zd","ea","Wd","select","Yd","xe","ba","ye","ze","selected","defaultSelected","Ae","wasMultiple","multiple","Be","dangerouslySetInnerHTML","Ce","De","Ee","Ge","He","Ke","lastChild","nodeValue","Ne","style","Le","setProperty","Pe","Oe","Qe","is","Se","blur","focus","jb","Te","Fe","html","innerHTML","removeChild","createElementNS","Ue","Ve","Re","__html","Je","onClick","onclick","We","Xe","Ye","Ze","cf","autoFocus","df","hf","jf","mf","lf","kf","pf","qf","of","nf","rf","contextTypes","ha","__reactInternalMemoizedUnmaskedChildContext","__reactInternalMemoizedMaskedChildContext","childContextTypes","sf","tf","uf","vf","getChildContext","wf","__reactInternalMemoizedMergedChildContext","xf","yf","memoizedState","updateQueue","memoizedProps","lastEffect","firstEffect","nextEffect","expirationTime","zf","Af","Bf","Cf","Df","pendingChildren","implementation","Ef","earliestPendingTime","latestPendingTime","earliestSuspendedTime","latestSuspendedTime","latestPingedTime","pendingCommitExpirationTime","finishedWork","pendingContext","hydrate","remainingExpirationTime","firstBatch","nextScheduledRoot","Hf","If","isDisabled","supportsFiber","inject","Ff","onCommitFiberRoot","Gf","onCommitFiberUnmount","Jf","Kf","Mf","baseState","firstUpdate","lastUpdate","firstCapturedUpdate","lastCapturedUpdate","firstCapturedEffect","lastCapturedEffect","Nf","Of","payload","Pf","Qf","Rf","Sf","Tf","Lf","Uf","Vf","Wf","Xf","ag","$f","Zf","Yf","bg","gg","cg","ig","fg","eg","dg","namespaceURI","tagName","jg","kg","lg","qg","shouldComponentUpdate","rg","state","componentWillReceiveProps","UNSAFE_componentWillReceiveProps","pg","sg","getDerivedStateFromProps","getSnapshotBeforeUpdate","UNSAFE_componentWillMount","componentWillMount","componentDidMount","ug","_stringRef","vg","wg","gc","tg","nc","Jd","delete","Cg","Dg","Eg","Bg","Ag","zg","Fg","Gg","Hg","Ig","yg","xg","Jg","Kg","ec","Lg","Mg","Qg","Rg","_reactInternalFiber","UNSAFE_componentWillUpdate","componentWillUpdate","componentDidUpdate","element","hidden","unstable_observedBits","Sg","Wg","Tg","Ug","appendChild","Vg","Xg","suppressReactErrorLogging","Yg","Zg","$g","componentWillUnmount","ah","bh","ch","insertBefore","dh","eh","fh","gh","componentDidCatch","hh","componentStack","ih","jh","vh","qh","rh","sh","uh","wh","xh","yh","ph","lh","zh","mh","Ah","Bh","th","getDerivedStateFromCatch","og","Ch","mg","nh","ng","oh","Dh","Eh","Fh","Gh","ef","kh","Hh","Ih","Th","Kh","Lh","gf","ff","Uh","Jh","Qh","Vh","Wh","Xh","Yh","Ph","Mh","Zh","$h","Rh","_onComplete","Nh","Oh","ai","_expirationTime","_defer","af","rangeCount","Wa","bf","focusedElem","selectionRange","ja","mi","__reactInternalSnapshotBeforeUpdate","fa","setStart","removeAllRanges","addRange","setEnd","left","scrollLeft","top","scrollTop","hg","oc","ca","wi","xi","Ng","Og","yi","yc","Pg","zi","timeRemaining","Sh","bi","ci","di","ei","fi","gi","hi","ii","ji","ki","findFiberByHostInstance","findHostInstanceByFiber","ni","oi","_callbacks","_next","_hasChildren","_didComplete","pi","_didCommit","_onCommit","qi","_internalRoot","ri","si","hasAttribute","ti","_reactRootContainer","legacy_renderSubtreeIntoContainer","ui","invokeGuardedCallback","hasCaughtError","clearCaughtError","va","plugins","eventNameDispatchConfigs","registrationNameModules","registrationNameDependencies","possibleRegistrationNames","injectEventPluginOrder","injectEventPluginsByName","Ga","Ka","injection","getListener","runEventsInBatch","runExtractedEventsInBatch","La","Qa","precacheFiberNode","getClosestInstanceFromNode","getInstanceFromNode","getNodeFromInstance","getFiberCurrentPropsFromNode","updateFiberProps","$a","accumulateTwoPhaseDispatches","accumulateTwoPhaseDispatchesSkipTarget","accumulateEnterLeaveDispatches","accumulateDirectDispatches","animationend","animationiteration","animationstart","transitionend","animation","transition","fb","gb","hb","ib","ob","pb","eventPhase","bubbles","cancelable","timeStamp","isTrusted","preventDefault","stopPropagation","cancelBubble","persist","tb","ub","xb","documentMode","yb","Bb","beforeInput","compositionEnd","compositionStart","compositionUpdate","Ib","Kb","injectFiberControlledHostComponent","Rb","enqueueStateRestore","needsStateRestore","restoreStateIfNeeded","color","date","datetime","datetime-local","email","month","password","tel","week","fc","Dc","tabIndex","Uc","ad","_isInputEventSupported","bd","Alt","Control","Meta","Shift","fd","screenX","screenY","clientX","clientY","pageX","pageY","shiftKey","button","buttons","relatedTarget","fromElement","toElement","gd","pointerId","pressure","tiltX","tiltY","pointerType","isPrimary","hd","mouseEnter","mouseLeave","pointerEnter","pointerLeave","defaultView","parentWindow","od","animationName","elapsedTime","pseudoElement","pd","clipboardData","qd","sd","Esc","Spacebar","Left","Up","Right","Down","Del","Win","Menu","Apps","Scroll","MozPrintableKey","td","8","9","12","13","16","17","18","19","20","27","32","33","34","35","36","37","38","39","40","45","46","112","113","114","115","116","117","118","119","120","121","122","123","144","145","224","ud","locale","vd","dataTransfer","wd","touches","targetTouches","changedTouches","xd","yd","deltaX","wheelDeltaX","deltaY","wheelDeltaY","wheelDelta","deltaZ","deltaMode","zd","Dd","isInteractiveTopLevelEventType","Nd","_enabled","setEnabled","isEnabled","trapBubbledEvent","trapCapturedEvent","dispatchEvent","Vd","be","onSelect","SimpleEventPlugin","EnterLeaveEventPlugin","ChangeEventPlugin","SelectEventPlugin","BeforeInputEventPlugin","ce","requestAnimationFrame","de","ee","fe","ge","performance","he","ie","je","ke","le","me","ne","oe","pe","qe","re","se","didTimeout","ue","scheduledCallback","postMessage","te","timeoutTime","ve","prev","we","mathml","svg","Ie","MSApp","execUnsafeLocalFunction","animationIterationCount","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","columns","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","fontWeight","lineClamp","lineHeight","opacity","orphans","tabSize","widows","zIndex","zoom","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","Me","menuitem","area","base","br","col","embed","hr","img","keygen","link","meta","param","track","wbr","$e","setInitialProperties","diffProperties","updateProperties","diffHydratedProperties","diffHydratedText","warnForUnmatchedText","warnForDeletedHydratableElement","warnForDeletedHydratableText","warnForInsertedHydratedElement","warnForInsertedHydratedText","querySelectorAll","stringify","li","updateContainerAtExpirationTime","createContainer","updateContainer","flushRoot","requestWork","computeUniqueAsyncExpiration","batchedUpdates","unbatchedUpdates","deferredUpdates","syncUpdates","interactiveUpdates","flushInteractiveUpdates","flushControlled","flushSync","getPublicRootInstance","findHostInstance","findHostInstanceWithNoPortals","injectIntoDevTools","unmount","createBatch","vi","createPortal","findDOMNode","unstable_renderSubtreeIntoContainer","unmountComponentAtNode","unstable_createPortal","unstable_batchedUpdates","unstable_deferredUpdates","unstable_interactiveUpdates","unstable_flushControlled","EventPluginHub","EventPluginRegistry","EventPropagators","ReactControlledComponent","ReactDOMComponentTree","ReactDOMEventListener","unstable_createRoot","bundleType","rendererPackageName","Ai","Bi","ExecutionEnvironment","canUseWorkers","Worker","canUseEventListeners","canUseViewport","screen","isInWorker","getActiveElement","doc","shallowEqual","objA","objB","keysA","keysB","containsNode","outerNode","innerNode","isTextNode","contains","compareDocumentPosition","isNode","Node","_toConsumableArray","arr2","_classCallCheck","instance","Constructor","_possibleConstructorReturn","_inherits","subClass","superClass","setPrototypeOf","__proto__","__WEBPACK_IMPORTED_MODULE_1_jsplumb__","__WEBPACK_IMPORTED_MODULE_2_dagre__","__WEBPACK_IMPORTED_MODULE_2_dagre___default","_typeof","_createClass","defineProperties","descriptor","protoProps","staticProps","JSPLUMB_ID","arrowCommon","foldback","fillStyle","overlays","sourceId","targetId","graphNodes","separation","marginx","clientWidth","marginy","nodesep","rankdir","ranker","ranksep","connection","layout","jsPlumbSettings","Connector","alwaysRespectStubs","cornerRadius","midpoint","stub","DragOptions","cursor","PaintStyle","stroke","strokeStyle","lineWidth","EndpointStyle","radius","HoverPaintStyle","EndpointHoverStyle","ConnectionOverlays","Container","App","_Component","_ref","_temp","_this","_ret","_len","_key","jsPlumbInstance","isJsPlumbInstanceCreated","dragging","nodeDragging","_ratio","_scale","_left","_top","_initX","_initY","onConnection","connObj","originalEvent","setPaintStyle","onDelConnection","removeConnection","conn","updateParent","onChange","setEventListeners","eventListeners","event","onCanvasMousewheel","onMouseMove","onCanvasMousedown","upDateNode","nodesDom","el","nodeDom","onCanvasMouseUpLeave","onCanvasMousemove","_this2","ready","getInstance","setContainer","sourceEndpointStyle","targetEndpointStyle","endpoint","cssClass","hoverClass","connector","connectorStyle","hoverStyle","anSourceEndpoint","paintStyle","hoverPaintStyle","isSource","maxConnections","Anchor","connectorHoverStyle","anTargetEndpoint","isTarget","nUUID","addEndpoint","uuid","anchor","draggable","connect","uuids","_this3","leftArray","topArray","className","nodesMap","difLeft","difTop","scale","translateWidth","translateHeight","clientHeight","marginLeft","href","onWheel","onMouseDown","onMouseUp","onMouseLeave","onContextMenu","padding","right","border","background","transformOrigin","sgn","Vectors","v1","v2","dotProduct","square","sqrt","flatnessTolerance","pow","_distanceFromCurve","curve","candidates","_convertToBezier","degree","higherDegree","numSolutions","_findRoots","dist","_bezier","newDist","_nearestPointOnCurve","cdTable","row","column","left_count","right_count","left_t","right_t","_getCrossingCount","_isFlatEnough","_computeXIntercept","sign","old_sign","n_crossings","intercept_1","intercept_2","left_intercept","right_intercept","det","dInv","a1","b1","c1","a2","b2","c2","max_distance_above","max_distance_below","XNM","YNM","XMK","_curveFunctionCache","_getCurveFunctions","fns","f_term","l_term","c_term","t_term","one_minus_t_term","_termFunc","terms","_pointOnPath","_x","_y","_dist","p1","p2","_isPoint","_pointAlongPath","tally","curLoc","direction","cur","_length","_pointAlongPathFrom","_locationAlongPathFrom","_gradientAtPoint","atan","_gradientAtPointAlongPathFrom","_perpendicularToPathAt","_theta2","sin","cos","jsBezier","distanceFromCurve","gradientAtPoint","gradientAtPointAlongCurveFrom","nearestPointOnCurve","pointOnCurve","pointAlongCurveFrom","perpendicularToCurveAt","locationAlongCurveFrom","getLength","Biltong","_isa","_pointHelper","_gradient","gradient","_p1","_p2","_quadrant","normal","lineLength","quadrant","_segmentMultipliers","theta","PI","intersects","r1","r2","x1","x2","y1","y2","encloses","allowSharedEdges","v3","v4","_inverseSegmentMultipliers","pointOnLine","fromPoint","toPoint","segmentMultiplier","perpendicularLineTo","theta2","Sniff","android","navigator","userAgent","matchesSelector","selector","ctx","possibles","_gel","_t","_pi","doCompute","out","_one","_d","guid","_store","__ta","__tauid","_unstore","__taExtra","_unbind","__taUnstore","_curryChildFilter","evt","_fn","pathInfo","registerExtraFunction","newFn","DefaultHandler","isTouchDevice","touchMap","tfn","_bind","getAttribute","SmartClickHandler","__taSmartClicks","down","__tad","_pageLocation","up","__tau","click","_tapProfiles","taps","dbltap","contextmenu","TapHandler","clickThreshold","dblClickThreshold","isMouseDevice","__taTapHandler","tt","downSelectors","finished","clearSingle","clearDouble","_touchCount","eventId","pLoop","meeHelper","__tamee","MouseEnterExitHandler","activeElements","mouseenter","mouseexit","mousedown","mouseup","mousemove","iev","rv","appName","$1","isIELT9","_genLoc","ts","_touches","_getTouch","_screenLocation","_clientLocation","idx","item","originalFn","_each","_el","removeEventListener","__taTouchProxy","Window","Mottle","params","mouseEnterExitHandler","tapHandler","_smartClicks","smartClicks","_doBind","on","_c","_e","_f","off","trigger","originalIsMouse","MouseEvent","eventToBind","bindingAMouseEvent","pl","sl","cl","_decorate","_evt","eventGenerators","TouchEvent","touch","createTouch","createTouchList","initTouchEvent","MouseEvents","initMouseEvent","createEvent","ite","evtName","createEventObject","eventType","eventName","fireEvent","consume","doNotPreventDefault","pageLocation","setForceTouchEvents","setForceMouseEvents","_suggest","unshift","_vanquish","_difference","l1","l2","_isString","getOffsetRect","elem","box","getBoundingClientRect","docElem","pageYOffset","pageXOffset","clientTop","clientLeft","isIE9","_pl","_classes","droppable","drag","active","hover","noSelect","ghostProxy","clonedDrag","_events","_devNull","_true","_foreach","_setDroppablesActive","andHover","setActive","updatePosition","setHover","_consume","_inputFilter","_katavorio","getInputFilterSelector","Super","css","addClass","_class","_uuid","toggleEnabled","setScope","scopes","addScope","removeScope","toggleScope","katavorio","Drag","rightButtonCanDrag","downAt","posAtDown","pagePosAtDown","pageDelta","moving","consumeStartEvent","dragEl","_multipleDrop","scroll","multipleDrop","isConstrained","useGhostProxy","cloneNode","snapThreshold","_snap","pos","gridX","gridY","thresholdX","thresholdY","_dx","_dxl","_dxt","_dy","_dyl","_dyt","posses","posseRoles","toGrid","grid","tx","DEFAULT_GRID_X","ty","DEFAULT_GRID_Y","snap","getPosition","setPosition","setUseGhostProxy","constrain","negativeFilter","allowNegative","_setConstrain","_constrainRect","_size","containment","setConstrain","revertFunction","setRevert","_assignId","_katavorioId","_filters","_testFilter","_setFilter","setFilter","_exclude","addFilter","removeFilter","clearAllFilters","canDrag","constrainRect","matchingDroppables","intersectingDroppables","downListener","moveListener","upListener","markSelection","markPosses","_dispatch","consumeFilteredEvents","mark","abort","ignoreZoom","getZoom","moveBy","updateSelection","updatePosses","unbind","removeClass","unmark","unmarkSelection","unmarkPosses","stop","notifySelectionDragStop","notifyPosseDragStop","getFilters","getDragElement","listeners","beforeStart","revert","events","notifyStart","force","positions","sel","dPos","ghostProxyOffsets","finalPos","selection","andNotify","getSize","getMatchingDroppables","dragClass","cs","getConstrainingRectangle","notifySelectionDragStart","doNotCheckDroppables","offsetLeft","offsetTop","_rankSort","desiredLoc","cPos","gp","pageRect","focusDropElement","pagePosition","canDrop","isHover","destroy","filterExclude","Drop","_activeClass","activeClass","_hoverClass","allowLoopback","_katavorioDragHover","Katavorio","katavorioParams","_selection","_selectionMap","_dragsByScope","_dropsByScope","_zoom","_reg","_obj","_unreg","_prepareParams","_m","_dd","_p","_mistletoe","existingDrag","_css","overrideCss","_scope","inputFilterSelector","setInputFilterSelector","_katavorioDrag","_katavorioDrop","deselect","_s","deselectAll","_posses","members","_posseAction","setZoom","_scopeManip","kObj","_kObj","snapToGrid","getDragsForScope","getDropsForScope","_destroy","selIdx","_removeListener","elementRemoved","destroyDraggable","destroyDroppable","reset","_processOneSpec","_spec","dontAddExisting","posseId","posse","addToPosse","spec","setPosse","diff","removeFromPosse","removeFromAllPosses","setPosseState","isNamedFunction","getTime","collations","ar","cMap","inObj","term","str","_getArray","a_1","functionChain","successValue","failValue","populate","model","functionPrefix","doNotExpandFunctions","fromString","findWithFunction","removeWithFunction","addWithFunction","hashFunction","addToList","insertAtStart","suggest","insertAtHead","_protoFn","_makeFn","protoFn","fastTrim","ws","mergeWithParents","parentAttribute","_def","def","d_1","_getDef","_i","logEnabled","msg","wrappedFunction","newFunction","returnOnThisValue","jsPlumbUtil","EventGenerator","_listeners","eventsSuspended","tick","eventsToDieOn","listener","__jsPlumb","fire","_gone","shouldFireEvent","_drain","eventOrListener","forEvent","setSuspendEvents","isSuspendEvents","silently","cleanupListeners","sizeElement","_ju","_timestamp","_updateHoverStyle","component","_jsPlumb","mergedHoverStyle","jsPlumb","_updateAttachedElements","timestamp","sourceElement","affectedElements","getAttachedElements","_splitType","_mapType","typeId","_applyTypes","doNotRepaint","getDefaultType","getTypeDescriptor","defType","tid","getType","applyType","repaint","jsPlumbUIComponent","idPrefix","parameters","paintStyleInUse","beforeDetach","beforeDrop","overlayPlacements","Defaults","HoverClass","typeCache","cacheTypeItem","getCachedTypeItem","getId","oo","defaultOverlayKeys","fo","convertToFullOverlaySpec","_defaultType","getDefaultScope","appendToDefaultType","isDetachAllowed","isDropAllowed","dropEndpoint","checkCondition","domListeners","setListenerComponent","_removeTypeCssHelper","typeIndex","canvas","getParameter","setParameter","getParameters","setParameters","getClass","hasClass","clazz","updateClasses","classesToAdd","classesToRemove","setType","clearTypes","reapplyTypes","hasType","addType","_cont","removeType","toggleType","setHoverPaintStyle","getPaintStyle","getHoverPaintStyle","ignoreAttachedElements","currentlyDragging","isHoverSuspended","isSuspendDrawing","recalc","_jsPlumbInstanceIndex","getInstanceIndex","_defaults","Anchors","ConnectionsDetachable","DoNotThrowErrors","DropOptions","Endpoint","EndpointOverlays","Endpoints","EndpointStyles","EndpointHoverStyles","LabelStyle","LogEnabled","Overlays","MaxConnections","stroke-width","ReattachConnections","RenderMode","Scope","_connectionTypes","_endpointTypes","_currentInstance","_instanceIndex","_bb","_initialDefaults","_info","getElement","_getId","repaintEverything","_container","_containerDelegations","unbindContainer","moveParent","selectEndpoints","ep","previousContainer","eventAliases","endpointclick","endpointdblclick","_oneDelegateHandler","componentType","jp","alias","_addOneDelegate","elId","managedElements","getContainer","initialized","importDefaults","restoreDefaults","connections","endpointsByElement","endpointsByUUID","offsets","offsetTimestamps","draggableStates","connectionBeingDragged","sizes","_suspendDrawing","_suspendedAt","DEFAULT_SCOPE","_curIdStamp","_idstamp","_appendElement","appendToRoot","_draw","clearEdits","repaintEls","dm","getDragManager","getElementsForDraggable","_updateOffset","anchorManager","redraw","_getEndpoint","_initDraggableIfNecessary","isDraggable","dragOptions","headless","isDragSupported","isAlreadyDraggable","initDraggable","dragEvent","dragEvents","stopEvent","startEvent","_started","_manage","setHoverSuspended","elementDraggingClass","sourceElementDraggingClass","targetElementDraggingClass","setConnectionBeingDragged","getUIPosition","uip","elements","dragEnded","register","_scopeMatch","e1","e2","s1","s2","_mergeOverrides","_prepareConnectionParams","referenceParams","sourceEndpoint","targetEndpoint","connectionType","connectorOverlays","connectorPointerEvents","_addEndpoint","anchors","endpoints","endpointStyles","endpointStyle","endpointHoverStyles","endpointHoverStyle","_oneElementDef","defs","matchType","newConnection","tep","newEndpoint","uniqueEndpoint","finalEndpoint","setDeleteOnEmpty","sourceEndpointDefinitions","targetEndpointDefinitions","_newConnection","connectionFunc","ConnectionType","getDefaultConnectionType","_newEndpoint","finaliseConnection","_finaliseConnection","con","isDetachable","jpc","doInformAnchorManager","suspendedEndpoint","pending","isTemporarySource","doNotFireConnectionEvent","eventArgs","endpointFunc","EndpointType","fireDetachEvent","elementId","endpointAdded","_operation","jj","retVal","_setDraggable","setElementDraggable","_setVisible","alsoChangeEndpoints","setVisible","info","oidx","isVisible","_toggleDraggable","setDraggable","_toggleVisible","changeEndpoints","_getCachedData","doNotCreateIfNotFound","isConnectionBeingDragged","getManagedElements","connectorClass","connectorOutlineClass","connectedClass","endpointClass","endpointConnectedClass","endpointFullClass","endpointDropAllowedClass","endpointDropForbiddenClass","overlayClass","draggingClass","endpointAnchorClassPrefix","hoverSourceClass","hoverTargetClass","dragSelectClass","Connectors","ConnectorRenderers","SVG","inputs","_ensureContainer","myOffset","paint","anchorLoc","compute","xy","addEndpoints","animate","animationSupported","del","stepFunction","animEvents","completeFunction","complete","revalidate","doAnimate","conditionName","stTypes","epDefs","_set","sid","sep","_st","cId","oldEndpoint","evtParams","originalSourceId","newSourceId","originalTargetId","newTargetId","addConnection","makeEndpoint","detachFromConnection","fireMoveEvent","setSource","sourceChanged","setTarget","updateOtherEndpoint","deleteEndpoint","dontUpdateHover","deleteAttachedObjects","deleteObject","deleteEveryEndpoint","_is","setSuspendDrawing","doFireEvent","connType","argIsConnection","connectionDetached","unregisterEndpoint","newEndpoints","deleteConnection","cleanup","deleteEveryConnection","deletedCount","batch","deleteConnectionsForElement","endpointCount","connectionCount","unravelConnection","doNotCleanup","initDroppable","_setOperation","_getOperation","prepareList","doNotGetIds","filterList","missingIsFalse","getConnections","flat","targets","proxies","originalEp","ss","_curryEach","executor","_curryGet","_makeCommonSelectHandler","setters","getters","_makeConnectionSelectHandler","common","setDetachable","setReattach","setConnector","isReattach","_makeEndpointSelectHandler","setAnchor","noElementFilters","either","sourceMatchExact","targetMatchExact","inner","_ep","noMatchSource","noMatchTarget","getAllConnections","getEndpoint","getEndpoints","getDefaultEndpointType","Connection","appendElement","_hoverSuspended","hide","idstamp","candidate","can","offsetParent","_getContainerFromDefaults","manage","_transient","updateOffset","getOffset","bottom","centerx","centery","AnchorManager","makeAnchor","pp","_a","specimen","newAnchor","getOrientation","DynamicAnchor","anchorParams","orientation","makeAnchors","makeDynamicAnchor","anchorSelector","selectorFilter","_instance","getSelector","_makeElementDropHandler","elInfo","dropOptions","proxyComponent","_drop","EndpointDropHandler","targetCount","onDrop","unlock","isRedrop","suspendedElement","eps","deriveEndpointAndAnchorSpec","_mtNew","positionFinder","dropPosition","elPosition","elSize","ap","constructorParams","maybeCleanup","dropEvent","_drag","_jsPlumbRelatedElement","makeTarget","_doOne","elid","_isJsPlumbGroup","createEndpoint","targetDef","unmakeTarget","doNotClearArrays","makeSource","aae","onMaxConnections","_del","existingStop","endpointAddedButNoDragYet","anchorDef","oldAnchor","oldConnection","mouseDownListener","sourceCount","elxy","getPositionOnElement","tempEndpointParams","_delTempEndpoint","extract","att","setDragFilter","unmakeSource","eldefs","unmakeEverySource","_getScope","_setScope","getScope","getSourceScope","getTargetScope","setSourceScope","setTargetScope","setDragScope","setDropScope","unmakeEveryTarget","_setEnabled","originalState","newState","_first","toggleSourceEnabled","isSourceEnabled","setSourceEnabled","toggleTargetEnabled","isTargetEnabled","setTargetEnabled","_elEach","isIdAlready","updateOffsets","removeAllEndpoints","recurse","ebe","childNodes","_doRemove","clearFor","removeFloatingConnection","floatingConnections","removeElement","empty","dontRemoveFocus","doNotUnbindInstanceEventListeners","removeAllGroups","removeGroupManager","doReset","_clearObject","setDefaultScope","dontPrependDefault","bits","as","setId","newId","doNotSetAttribute","sConns","tConns","setElementId","setReferenceElement","changeId","_conns","epIdx","setDebugLog","debugLog","repaintAfterwards","curVal","getSuspendedAt","doNotRepaintAfterwards","_wasSuspended","doWhileSuspended","getCachedData","show","toggleVisible","toggleDraggable","addListener","registerFloatingConnection","getFloatingConnectionFor","registerConnectionType","registerConnectionTypes","registerEndpointType","registerEndpointTypes","typeDescriptor","setIdChanged","oldId","newParent","_dom","_id","_pdom","_pid","o1","o2","names","getFloatingAnchorIndex","isFloating","overrideFns","ovf","DragManager","_draggables","_dlist","_delements","_elementsWithEndpoints","_draggablesForElements","parentOffset","_oneLevel","cEl","cid","cOff","childOffsetOverrides","domEl","cel","pid","pLoc","cLoc","endpointDeleted","pId","currentChildLocation","clearParent","revalidateParent","childOffset","co","getDragAncestor","aid","_setClassName","cn","classList","baseVal","_getClassName","_classManip","curClasses","_oneSet","classes","screenLocation","clientLocation","dragManager","recalculateOffsets","atts","ns","attName","setAttributes","getRenderModes","toggleClass","toAdd","toRemove","setClass","getStyle","getComputedStyle","getPropertyValue","currentStyle","relativeToRoot","container","op","_maybeAdjustScroll","offsetWidth","offsetHeight","getAbsolutePosition","setAbsolutePosition","animateFrom","animateOptions","getWidth","getHeight","getRenderMode","_jp","_makeLabelOverlay","_params","labelStyle","mergedParams","Label","_processOverlay","_newOverlay","OverlayCapableJsPlumbUIComponent","overlayPositions","labelLocation","defaultLabelLocation","keep","existing","updateFrom","reattach","addOverlay","removeOverlay","overlay","getOverlay","getOverlays","hideOverlay","hideOverlays","showOverlay","showOverlays","removeAllOverlays","overlayId","dontCleanup","removeOverlays","bgCanvas","isAppendedAtTopLevel","getLabel","lo","getLabelOverlay","setLabel","setLocation","setAbsoluteOverlayPosition","getAbsoluteOverlayPosition","_clazzManip","dontUpdateOverlays","_makeConnectionDragHandler","stopped","_ui","anchorPoint","getCurrentLocation","stopDrag","_makeDraggablePlaceholder","ipco","ips","_makeFloatingEndpoint","referenceAnchor","referenceCanvas","FloatingAnchor","typeParameters","findConnectionToUseForDynamicAnchor","elementWithPrecedence","connectorHoverClass","connectorTooltip","visible","floatingEndpoint","dragProxy","connectionCost","connectionsDirected","currentAnchorClass","deleteOnEmpty","_updateAnchorClass","oldAnchorClass","getCssClass","anchorClass","prepareAnchor","currentAnchor","setPreparedAnchor","continuousAnchorFactory","internalHover","prepareEndpoint","rm","endpointArgs","tooltip","setEndpoint","setPreparedEndpoint","reattachConnections","connectionsDetachable","detachable","dragAllowedWhenFull","detachFrom","setElement","parentId","curId","rehomeEndpoint","makeInPlaceCopy","loc","inPlaceAnchor","hideOnDrag","connectorSelector","setStyle","connectorPaintStyle","dimensions","isDynamic","oIdx","oId","oInfo","oOffset","oWH","txy","twh","tElement","draw","draggingInitialised","placeholderInfo","existingJpc","existingJpcParams","_dragHandler","defaultOpts","beforeStartEvent","beforeStartParams","startParams","_continue","beforeDrag","canvasElement","dragId","endpointToFloat","centerAnchor","_savedAnchor","anchorIdx","dragScope","getDragScope","suspendedElementId","suspendedElementType","referenceEndpoint","getDropEvent","deleteConnectionNow","floatingElement","floatingId","floatingIndex","_forceReattach","_forceDetach","deleteAfterDragStop","visibility","anchorParamsToUse","_initDropTarget","isTransient","isDropSupported","overEvent","outEvent","dhParams","getDragObject","_jpc","doNotChangeConnections","doNotNotifyOtherEndpoint","display","isConnectedTo","found","getConnectionCost","setConnectionCost","areConnectionsDirected","setConnectionsDirected","_elId","setDragAllowedWhenFull","allowed","equals","getUuid","computeAnchor","existingConnection","_doContinue","continueFunction","optionalData","aParam","originalSourceEndpoint","newSourceEndpoint","originalTargetEndpoint","newTargetEndpoint","makeConnector","renderMode","connectorName","connectorArgs","forComponent","_makeAnchor","_updateConnectedClass","_jsPlumbConnections","previousConnection","pointer-events","editorParams","lastPaintedAt","eS","eT","deleteEndpointsOnEmpty","_detachable","_reattach","myInfo","myWH","otherInfo","otherOffset","otherWH","initialTimestamp","cost","_types","updateConnectedClass","typeMap","_connector","prepareConnector","setPreparedConnector","_anchors","informEndpoints","getUuids","getCost","setCost","getConnector","connectorSpec","doNotChangeListenerComponent","previousClasses","transfer","tId","sId","sourceInfo","targetInfo","sE","tE","sAnchorP","tAnchorP","resetBounds","sourcePos","targetPos","sourceOrientation","targetOrientation","overlayExtents","minX","minY","maxX","maxY","outlineWidth","extents","xmin","bounds","ymin","xmax","ymax","es","outlineStroke","ehs","drawEndpoints","_amEndpoints","continuousAnchorLocations","userDefinedContinuousAnchorLocations","continuousAnchorOrientations","connectionsByElementId","anchorLists","placeAnchorsOnLine","desc","elementDimensions","elementPosition","horizontal","otherMultiplier","xp","yp","currySort","reverseAngles","leftSort","edgeSortFunctions","_sortHelper","_array","placeAnchors","_anchorLists","sS","sO","placeSomeAnchors","unsortedConnections","isHorizontal","_setAnchorLocation","anchorPos","weAreSource","weAreTarget","addFloatingConnection","doRegisterTarget","registerConnection","otherIndex","otherEndpoint","otherAnchor","isContinuous","removeEndpointFromAnchorLists","eId","connInfo","doNotRedraw","getConnectionsFor","getEndpointsFor","_updateAnchorList","lists","aBoolean","otherElId","edgeId","connsToPaint","endpointsToPaint","firstMatchingElIdx","endpointId","listToAddTo","listToRemoveFrom","_continuousAnchorEdge","rIdx","insertIdx","sourceElId","oldTargetId","sIndex","tIndex","originalId","newElement","tIdx","currentId","offsetToUI","doNotRecalcEndpoint","endpointConnections","connectionsToPaint","anchorsToUpdate","orientationCache","sourceContinuous","targetContinuous","oKey","calculateOrientation","getDefaultFace","ContinuousAnchor","faces","clockwise","availableFaces","opposites","clockwiseOptions","antiClockwiseOptions","secondBest","lastChoice","_currentFace","_lockedFace","X_AXIS_FACES","Y_AXIS_FACES","_lockedAxis","isRelocatable","isSnapOnRelocate","verifyEdge","isEdgeSupported","setCurrentFace","face","overrideLock","getCurrentFace","getSupportedFaces","lock","isLocked","lockCurrentAxis","unlockCurrentAxis","clearUserDefinedLocation","setUserDefinedLocation","sourceAnchor","targetAnchor","Orientation","HORIZONTAL","VERTICAL","DIAGONAL","IDENTITY","axes","atan2","midpoints","dim","sourceEdge","targetEdge","userDefinedLocation","lastReturnValue","relocatable","setRelocatable","_relocatable","snapOnRelocate","locked","ox","oy","ao","getUserDefinedLocation","refCanvas","_lastResult","_endpoint","_convertAnchor","getAnchors","_curAnchor","_lastAnchor","_distance","cx","cy","ax","ay","acx","acy","_anchorSelector","minIdx","minDist","udl","setAnchorCoordinates","coords","_curryAnchor","fnInit","DynamicAnchors","AutoDefault","_curryContinuousAnchor","Continuous","AnchorPositionFinders","Fixed","dp","Grid","gx","gy","mx","my","Perimeter","anchorCount","shape","_circle","_path","segments","anchorsPerFace","_computeFace","fractionalLength","_shape","_rectangle","_shapes","Circle","Ellipse","Diamond","Rectangle","Square","Triangle","Path","points","tl","rotation","amountInDegrees","_jg","Segments","AbstractSegment","findClosestPointOnPath","getBounds","Straight","m2","_recalc","getGradient","getCoordinates","setCoordinates","pointOnPath","absolute","pointAlongPathFrom","farAwayPoint","within","closest","_x1","_y1","fractionInSegment","Arc","_calcAngle","_calcAngleForLocation","segment","anticlockwise","startAngle","endAngle","TWO_PI","sweep","circumference","frac","gentleRound","angle","arcSpan","Bezier","cp1x","cp1y","cp2x","cp2y","_translateLocation","_curve","SegmentRenderer","getPath","laf","AbstractComponent","AbstractConnector","totalLength","segmentProportions","segmentProportionalLengths","sourceStub","targetStub","gap","sourceGap","targetGap","userProvidedSegments","paintInfo","getPathData","findSegmentForPoint","_updateSegmentProportions","_findSegmentForLocation","inSegmentProportion","proportion","_addSegment","updateBounds","_clearSegments","setSegments","_segs","_prepareCompute","swapX","swapY","lw","so","oIndex","oProduct","xSpan","ySpan","startStubX","startStubY","endStubX","endStubY","isXGreaterThanStubTimes2","isYGreaterThanStubTimes2","opposite","perpendicular","orthogonal","sourceAxis","stubs","anchorOrientation","getSegments","segBounds","seg","_compute","addSegment","prepareCompute","maxStub","maxGap","AbstractEndpoint","Dot","defaultOffset","defaultInnerRadius","DOMElementEndpoint","displayElements","getDisplayElements","appendDisplayElement","Image","_onload","src","deleted","widthToUse","heightToUse","setImage","_img","margin","outline","actuallyPaint","Blank","AbstractOverlay","endpointLoc","endpointLocation","incrementLocation","amount","getLocation","Arrow","computeMaxSize","elementCreated","currentConnectionPaintStyle","hxy","cxy","fromLoc","__","PlainArrow","_getDimensions","forceRefresh","cachedDimensions","getDimensions","AbstractDOMOverlay","detached","div","initialised","initiallyInvisible","webkitTransform","mozTransform","msTransform","oTransform","absolutePosition","locToUse","minx","miny","clearCachedDimensions","containerExtents","Custom","GuideLines","tailLine","headLine","labelText","font","borderWidth","dStyle","borderStyle","_getEventManager","_mottle","getEventManager","_jpi","STOP","REVERT","GROUP","CMD_SHOW","CMD_HIDE","GroupManager","_cleanupDetachedConnection","_connectionSourceMap","_connectionTargetMap","getMembers","_updateConnectionsForGroup","processed","oneSet","_jsPlumbGroup","_managedGroups","connMap","addGroup","getEl","manager","addToGroup","doNotFireEvent","getGroup","groupEl","currentGroup","elpos","cpos","collapsed","getDragArea","updateConnectionsForGroup","handleDroppedConnections","expandConnection","collapseConnection","newPosition","removeFromGroup","groupId","getGroups","removeGroup","deleteMembers","manipulateDOM","expandGroup","_groups","_collapseConnection","proxyEp","groupElId","originalElementId","otherEl","shouldProxy","getAnchor","isProxyEndpoint","collapseGroup","_collapseSet","conns","_expandConnection","originalElement","_expandSet","repaintGroup","refreshAllGroups","Group","_findParent","_isInsideParent","leftEdge","rightEdge","topEdge","bottomEdge","_orphan","_unbindDragHandlers","_pruneOrOrphan","prune","_revalidate","orphan","_bindDragHandlers","ghost","__el","dropOverride","proxied","internal","endpointIndex","overrideDrop","getGroupManager","els","targetGroup","sourceGroup","dragArea","doNotUpdateConnections","removeAll","orphanAll","dragParams","toggleGroup","mgr","getGroupFor","Flowchart","lastOrientation","_super","lastx","lasty","loopbackRadius","segmentDirections","lx","ly","segLength","_cloneArray","writeSegments","currentDirection","nextDirection","minSegLength","radiusToUse","sgny","sgnx","sgnEqual","commonStubCalculator","stubCalculators","axis","areInProximity","oss","oes","midx","midy","orientations","lineCalculators","sis","midLines","linesToEnd","startToEnd","startToMidToEnd","otherStubs","soIdx","toIdx","_so","_to","otherFlipped","stub1","stub2","segmentIndexes","startStub","otherStartStub","endStub","otherEndStub","extent","otherAxis","_val","AbstractBezierConnector","showLoopback","curviness","proximityLimit","isLoopbackCurrently","sp","tp","_w","_h","loopback","_computeBezier","majorAnchor","getCurviness","_findControlPoint","sourceAnchorPosition","targetAnchorPosition","soo","too","_CP","_CP2","_sx","_sy","_tx","_ty","_segment","StateMachine","_controlPoint","_midx","_midy","svgAttributeMap","stroke-linejoin","stroke-dashoffset","stroke-linecap","_attr","attributes","_node","xmlns","_pos","_clearGradient","_updateGradient","uiComponent","gradientUnits","stops","styleToUse","stopColor","stop-color","applyGradientTo","_applyStyles","_appendAtIndex","attr","SvgComponent","pointerEventsSpec","renderer","originalArgs","svgParams","useDivWrapper","class","outlineStyle","outlineStrokeWidth","bgPath","SvgEndpoint","makeNode","updateNode","AbstractSvgArrowOverlay","superclass","makePath","p1_1","p1_2","attachListeners","d1","d2","_jk","_getDragManager","category","scrollWidth","scrollHeight","_animProps","pName","enctype","ldist","tdist","duration","steps","linc","tinc","_int","unbindDraggable","unbindDroppable","isElementDraggable","specs","addToDragSelection","removeFromDragSelection","clearDragSelection","_do","readyState","debug","util","lib","alg","webpackPolyfill","deprecate","write","writeNodes","writeEdges","edgeValue","read","components","dijkstraAll","findCycles","floydWarshall","isAcyclic","preorder","prim","cmpts","weightFunc","edgeFunc","runFloydWarshall","rowK","rowI","ik","kj","ij","altDistance","pri","edgeWeight","debugTiming","layoutGraph","buildLayoutGraph","runLayout","updateInputGraph","makeSpaceForEdgeLabels","removeSelfEdges","acyclic","run","nestingGraph","injectEdgeLabelProxies","assignRankMinMax","removeEdgeLabelProxies","normalize","parentDummyChains","addBorderSegments","insertSelfEdges","coordinateSystem","adjust","positionSelfEdges","removeBorderNodes","undo","fixupEdgeLabelCoords","translateGraph","assignNodeIntersects","reversePointsForReversedEdges","inputGraph","inputLabel","layoutLabel","canonicalize","graphDefaults","selectNumberAttrs","graphNumAttrs","graphAttrs","nodeNumAttrs","nodeDefaults","edgeDefaults","edgeNumAttrs","edgeAttrs","labelpos","labeloffset","borderTop","minRank","borderBottom","labelRank","getExtremes","graphLabel","marginX","marginY","nodeV","nodeW","reversed","borderLeft","borderRight","selfEdges","layer","orderShift","selfEdge","selfNode","newAttrs","edgesep","fas","acyclicer","greedyFAS","dfsFAS","forwardName","buildState","DEFAULT_WEIGHT_FN","doGreedyFAS","buckets","zeroIdx","dequeue","collectPredecessors","uEntry","assignBucket","fasGraph","maxIn","maxOut","in","prevWeight","List","enqueue","sentinel","_prev","_sentinel","unlink","filterOutLinks","strs","curr","dummyChains","normalizeEdge","vRank","wRank","edgeLabel","origLabel","networkSimplexRanker","tightTreeRanker","longestPathRanker","networkSimplex","rankUtil","initRank","initLowLimValues","initCutValues","leaveEdge","enterEdge","exchangeEdges","assignCutValue","childLab","cutvalue","calcCutValue","childIsTail","graphEdge","cutValue","isOutEdge","pointsToHead","otherWeight","isTreeEdge","otherCutValue","tree","dfsAssignLowLim","nextLim","lim","vLabel","wLabel","tailLabel","isDescendant","updateRanks","flipped","rootLabel","postorderNums","pathData","findPath","lca","pathIdx","pathV","ascending","vPath","wPath","depths","treeDepths","nodeSep","nestingRoot","sumWeights","childNode","childTop","childBottom","thisWeight","nestingEdge","sgNode","borderType","rankDir","swapWidthHeight","reverseY","swapXY","swapWidthHeightOne","reverseYOne","swapXYOne","downLayerGraphs","buildLayerGraphs","upLayerGraphs","initOrder","assignOrder","best","bestCC","lastBest","sweepLayerGraphs","crossCount","ranks","relationship","buildLayerGraph","layerGraphs","biasRight","sorted","sortSubgraph","addSubgraphConstraints","simpleNodes","orderedVs","twoLayerCrossCount","northLayer","southLayer","southPos","southEntries","firstIndex","treeSize","weightSum","movable","bl","subgraphs","barycenters","barycenter","subgraphResult","mergeBarycenters","resolveConflicts","expandSubgraphs","blPred","brPred","nodeU","mappedEntries","indegree","entryV","entryW","doResolveConflicts","sourceSet","merged","mergeEntries","sortable","unsortable","vsIndex","compareWithBias","consumeUnsortable","bias","createRootNode","rootPrev","prevChild","positionY","positionX","rankSep","prevY","maxHeight","findType1Conflicts","visitLayer","prevLayer","k0","scanPos","prevLayerLength","lastNode","findOtherInnerSegmentNode","k1","scanNode","uLabel","uPos","addConflict","conflicts","findType2Conflicts","south","southEnd","prevNorthBorder","nextNorthBorder","uNode","north","nextNorthPos","prevNorthPos","southLookahead","conflictsV","hasConflict","verticalAlignment","neighborFn","align","prevIdx","mp","il","horizontalCompaction","reverseSep","iterate","setXsFunc","nextNodesFunc","blockG","pass1","xs","pass2","buildBlockGraph","blockGraph","sepFn","vRoot","uRoot","prevMax","findSmallestWidthAlignment","xss","NEGATIVE_INFINITY","halfWidth","alignCoordinates","alignTo","alignToVals","alignToMin","alignToMax","vert","horiz","alignment","xsVals","balance","ul","ignore","adjustedLayering","smallestWidth","edgeSep","debugOrdering","layerMatrix","layerV","URL","origin","swUrl","isLocalhost","checkValidServiceWorker","serviceWorker","registerValidSW","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","unregister","reload","Boolean","hostname"],"mappings":"CAAS,SAAUA,GCInB,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAE,OAGA,IAAAC,GAAAF,EAAAD,IACAI,EAAAJ,EACAK,GAAA,EACAH,WAUA,OANAJ,GAAAE,GAAAM,KAAAH,EAAAD,QAAAC,IAAAD,QAAAH,GAGAI,EAAAE,GAAA,EAGAF,EAAAD,QAvBA,GAAAD,KA4BAF,GAAAQ,EAAAT,EAGAC,EAAAS,EAAAP,EAGAF,EAAAU,EAAA,SAAAP,EAAAQ,EAAAC,GACAZ,EAAAa,EAAAV,EAAAQ,IACAG,OAAAC,eAAAZ,EAAAQ,GACAK,cAAA,EACAC,YAAA,EACAC,IAAAN,KAMAZ,EAAAmB,EAAA,SAAAf,GACA,GAAAQ,GAAAR,KAAAgB,WACA,WAA2B,MAAAhB,GAAA,SAC3B,WAAiC,MAAAA,GAEjC,OADAJ,GAAAU,EAAAE,EAAA,IAAAA,GACAA,GAIAZ,EAAAa,EAAA,SAAAQ,EAAAC,GAAsD,MAAAR,QAAAS,UAAAC,eAAAjB,KAAAc,EAAAC,IAGtDtB,EAAAyB,EAAA,KAGAzB,IAAA0B,EAAA,MDMM,SAAUtB,EAAQD,EAASH,GEjEjC,GAAA2B,EAGA,KACAA,EAAA3B,EAAA,IACG,MAAA4B,IAGHD,IACAA,EAAAE,OAAAC,GAGA1B,EAAAD,QAAAwB,GF0EM,SAAUvB,EAAQD,EAASH,GAEjC,YGjEA,SAAA+B,GAAAC,EAAAC,EAAAC,EAAAvB,GACA,GAAAwB,EACA,IACAA,EAAAL,EAAAM,SAAAzB,SACGqB,EAAAK,QAAAF,GAIH,OAFAD,GAAAI,MAAAL,EACAD,EAAAO,QAAAJ,EAAAD,GACAC,EAOA,QAAAK,GAAAR,GACA,GAAAS,IAAA,GAAAC,IAAAC,SAAAX,EAAAY,QAUA,OATAd,GAAAe,QAAAb,EAAAc,QAAA,SAAAX,GAAoCM,EAAAF,QAAAJ,EAAAH,EAAAe,KAAAZ,MACpCL,EAAAe,QAAAb,EAAAgB,QAAA,SAAApB,GACA,GAAAqB,GAAAR,EAAAS,KAAAtB,EAAAO,EAAAP,EAAAuB,KAAoDC,OAAA,EAAAC,OAAA,GACpDC,EAAAtB,EAAAkB,KAAAtB,EACAa,GAAAc,QAAA3B,EAAAO,EAAAP,EAAAuB,GACAC,OAAAH,EAAAG,OAAAE,EAAAF,OACAC,OAAAG,KAAAC,IAAAR,EAAAI,OAAAC,EAAAD,YAGAZ,EAGA,QAAAiB,GAAA1B,GACA,GAAAS,GAAA,GAAAC,IAA8BiB,WAAA3B,EAAA4B,iBAA+BjB,SAAAX,EAAAY,QAS7D,OARAd,GAAAe,QAAAb,EAAAc,QAAA,SAAAX,GACAH,EAAA6B,SAAA1B,GAAA2B,QACArB,EAAAF,QAAAJ,EAAAH,EAAAe,KAAAZ,MAGAL,EAAAe,QAAAb,EAAAgB,QAAA,SAAApB,GACAa,EAAAc,QAAA3B,EAAAI,EAAAkB,KAAAtB,MAEAa,EAGA,QAAAsB,GAAA/B,GACA,GAAAgC,GAAAlC,EAAAmC,IAAAjC,EAAAc,QAAA,SAAAX,GACA,GAAA+B,KAIA,OAHApC,GAAAe,QAAAb,EAAAmC,SAAAhC,GAAA,SAAAP,GACAsC,EAAAtC,EAAAuB,IAAAe,EAAAtC,EAAAuB,IAAA,GAAAnB,EAAAkB,KAAAtB,GAAAwB,SAEAc,GAEA,OAAApC,GAAAsC,UAAApC,EAAAc,QAAAkB,GAGA,QAAAK,GAAArC,GACA,GAAAgC,GAAAlC,EAAAmC,IAAAjC,EAAAc,QAAA,SAAAX,GACA,GAAAmC,KAIA,OAHAxC,GAAAe,QAAAb,EAAAuC,QAAApC,GAAA,SAAAP,GACA0C,EAAA1C,EAAAO,IAAAmC,EAAA1C,EAAAO,IAAA,GAAAH,EAAAkB,KAAAtB,GAAAwB,SAEAkB,GAEA,OAAAxC,GAAAsC,UAAApC,EAAAc,QAAAkB,GAOA,QAAAQ,GAAAC,EAAAC,GACA,GAAAC,GAAAF,EAAAE,EACAC,EAAAH,EAAAG,EAIAC,EAAAH,EAAAC,IACAG,EAAAJ,EAAAE,IACAzB,EAAAsB,EAAAM,MAAA,EACAC,EAAAP,EAAAQ,OAAA,CAEA,KAAAJ,IAAAC,EACA,SAAAI,OAAA,4DAGA,IAAAC,GAAAC,CAiBA,OAhBA5B,MAAA6B,IAAAP,GAAA3B,EAAAK,KAAA6B,IAAAR,GAAAG,GAEAF,EAAA,IACAE,MAEAG,EAAAH,EAAAH,EAAAC,EACAM,EAAAJ,IAGAH,EAAA,IACA1B,MAEAgC,EAAAhC,EACAiC,EAAAjC,EAAA2B,EAAAD,IAGUF,IAAAQ,EAAAP,IAAAQ,GAOV,QAAAE,GAAAtD,GACA,GAAAuD,GAAAzD,EAAAmC,IAAAnC,EAAA0D,MAAAC,EAAAzD,GAAA,cAA4D,UAQ5D,OAPAF,GAAAe,QAAAb,EAAAc,QAAA,SAAAX,GACA,GAAAY,GAAAf,EAAAe,KAAAZ,GACAuD,EAAA3C,EAAA2C,IACA5D,GAAA6D,YAAAD,KACAH,EAAAG,GAAA3C,EAAA6C,OAAAzD,KAGAoD,EAOA,QAAAM,GAAA7D,GACA,GAAA8D,GAAAhE,EAAAiE,MAAAjE,EAAAmC,IAAAjC,EAAAc,QAAA,SAAAX,GAAkD,MAAAH,GAAAe,KAAAZ,GAAAuD,OAClD5D,GAAAe,QAAAb,EAAAc,QAAA,SAAAX,GACA,GAAAY,GAAAf,EAAAe,KAAAZ,EACAL,GAAAkE,IAAAjD,EAAA,UACAA,EAAA2C,MAAAI,KAKA,QAAAG,GAAAjE,GAEA,GAAAkE,GAAApE,EAAAiE,MAAAjE,EAAAmC,IAAAjC,EAAAc,QAAA,SAAAX,GAAqD,MAAAH,GAAAe,KAAAZ,GAAAuD,QAErDS,IACArE,GAAAe,QAAAb,EAAAc,QAAA,SAAAX,GACA,GAAAuD,GAAA1D,EAAAe,KAAAZ,GAAAuD,KAAAQ,CACAC,GAAAT,KACAS,EAAAT,OAEAS,EAAAT,GAAAU,KAAAjE,IAGA,IAAAkE,GAAA,EACAC,EAAAtE,EAAAY,QAAA0D,cACAxE,GAAAe,QAAAsD,EAAA,SAAAI,EAAAlG,GACAyB,EAAA6D,YAAAY,IAAAlG,EAAAiG,IAAA,IACAD,EACKA,GACLvE,EAAAe,QAAA0D,EAAA,SAAApE,GAAiCH,EAAAe,KAAAZ,GAAAuD,MAAAW,MAKjC,QAAAG,GAAAxE,EAAAyE,EAAAf,EAAAE,GACA,GAAA7C,IACAgC,MAAA,EACAE,OAAA,EAMA,OAJAyB,WAAA5C,QAAA,IACAf,EAAA2C,OACA3C,EAAA6C,SAEA7D,EAAAC,EAAA,SAAAe,EAAA0D,GAGA,QAAAhB,GAAAzD,GACA,MAAAF,GAAA2B,IAAA3B,EAAAmC,IAAAjC,EAAAc,QAAA,SAAAX,GACA,GAAAuD,GAAA1D,EAAAe,KAAAZ,GAAAuD,IACA,KAAA5D,EAAA6D,YAAAD,GACA,MAAAA,MAUA,QAAAiB,GAAAC,EAAAC,GACA,GAAAC,IAAgBC,OAAAC,OAQhB,OAPAlF,GAAAe,QAAA+D,EAAA,SAAAK,GACAJ,EAAAI,GACAH,EAAAC,IAAAX,KAAAa,GAEAH,EAAAE,IAAAZ,KAAAa,KAGAH,EAOA,QAAAI,GAAAvG,EAAAkG,GACA,GAAAM,GAAArF,EAAAsF,KACA,KACA,MAAAP,KACG,QACHQ,QAAAC,IAAA3G,EAAA,WAAAmB,EAAAsF,MAAAD,GAAA,OAIA,QAAAI,GAAA5G,EAAAkG,GACA,MAAAA,KAxOA,GAAA/E,GAAA9B,EAAA,GACA0C,EAAA1C,EAAA,GAAA0C,KAEAtC,GAAAD,SACA4B,eACAS,WACAkB,qBACAK,mBACAM,qBACAG,gBACAc,mBACAO,iBACAI,mBACAO,gBACAf,UACAkB,YACAO,OACAK,WHwTM,SAAUnH,EAAQD,EAASH,GIzUjC,GAAA2B,EAGA,KACAA,EAAA3B,EAAA,IACG,MAAA4B,IAGHD,IACAA,EAAAE,OAAAC,GAGA1B,EAAAD,QAAAwB,GJkVM,SAAUvB,EAAQD,EAASH,GK9VjC,GAAAwH,EAGA,KACAA,EAAAxH,EAAA,IACG,MAAA4B,IAGH4F,IACAA,EAAA3F,OAAA2F,UAGApH,EAAAD,QAAAqH,GLuWM,SAAUpH,EAAQD,EAASH,GAEjC,YMzVA,SAAAyH,GAAAzF,GAGA,QAAA0F,GAAAvF,GACA,GAAAmB,GAAAtB,EAAAe,KAAAZ,EACA,IAAAL,EAAAkE,IAAA2B,EAAAxF,GACA,MAAAmB,GAAAoC,IAEAiC,GAAAxF,IAAA,CAEA,IAAAuD,GAAA5D,EAAAiE,MAAAjE,EAAAmC,IAAAjC,EAAAmC,SAAAhC,GAAA,SAAAP,GACA,MAAA8F,GAAA9F,EAAAuB,GAAAnB,EAAAkB,KAAAtB,GAAAyB,SASA,OANAqC,KAAAkC,OAAAC,uBACAC,KAAApC,GACA,OAAAA,IACAA,EAAA,GAGApC,EAAAoC,OAnBA,GAAAiC,KAsBA7F,GAAAe,QAAAb,EAAA+F,UAAAL,GAOA,QAAAM,GAAAhG,EAAAJ,GACA,MAAAI,GAAAe,KAAAnB,EAAAuB,GAAAuC,KAAA1D,EAAAe,KAAAnB,EAAAO,GAAAuD,KAAA1D,EAAAkB,KAAAtB,GAAAyB,OA3DA,GAAAvB,GAAA9B,EAAA,EAEAI,GAAAD,SACAsH,cACAO,UNqbM,SAAU5H,EAAQD,EAASH,GAEjC,YOjbA,SAAAiI,GAAAC,GACA,UAAAA,OAAAJ,KAAAI,EACA,SAAAC,WAAA,wDAGA,OAAArH,QAAAoH,GATA,GAAAE,GAAAtH,OAAAsH,sBACA5G,EAAAV,OAAAS,UAAAC,eACA6G,EAAAvH,OAAAS,UAAA+G,oBAsDAlI,GAAAD,QA5CA,WACA,IACA,IAAAW,OAAAyH,OACA,QAMA,IAAAC,GAAA,GAAAC,QAAA,MAEA,IADAD,EAAA,QACA,MAAA1H,OAAA4H,oBAAAF,GAAA,GACA,QAKA,QADAG,MACAtI,EAAA,EAAiBA,EAAA,GAAQA,IACzBsI,EAAA,IAAAF,OAAAG,aAAAvI,KAKA,mBAHAS,OAAA4H,oBAAAC,GAAA1E,IAAA,SAAA9C,GACA,MAAAwH,GAAAxH,KAEA0H,KAAA,IACA,QAIA,IAAAC,KAIA,OAHA,uBAAAC,MAAA,IAAAlG,QAAA,SAAAmG,GACAF,EAAAE,OAGA,yBADAlI,OAAAmI,KAAAnI,OAAAyH,UAAkCO,IAAAD,KAAA,IAMhC,MAAAK,GAEF,aAIApI,OAAAyH,OAAA,SAAAY,EAAAC,GAKA,OAJAC,GAEAC,EADAC,EAAAtB,EAAAkB,GAGAzH,EAAA,EAAgBA,EAAAgF,UAAA5C,OAAsBpC,IAAA,CACtC2H,EAAAvI,OAAA4F,UAAAhF,GAEA,QAAA8H,KAAAH,GACA7H,EAAAjB,KAAA8I,EAAAG,KACAD,EAAAC,GAAAH,EAAAG,GAIA,IAAApB,EAAA,CACAkB,EAAAlB,EAAAiB,EACA,QAAAhJ,GAAA,EAAkBA,EAAAiJ,EAAAxF,OAAoBzD,IACtCgI,EAAA9H,KAAA8I,EAAAC,EAAAjJ,MACAkJ,EAAAD,EAAAjJ,IAAAgJ,EAAAC,EAAAjJ,MAMA,MAAAkJ,KPocM,SAAUnJ,EAAQD,EAASH,GAEjC,YQ3hBAI,GAAAD,QAAAH,EAAA,KRuiBM,SAAUI,EAAQD,EAASH,GAEjC,YSxhBA,SAAA0C,GAAA+G,GACAC,KAAAC,aAAA7H,EAAAkE,IAAAyD,EAAA,aAAAA,EAAAG,SACAF,KAAAG,gBAAA/H,EAAAkE,IAAAyD,EAAA,eAAAA,EAAA9F,WACA+F,KAAAI,cAAAhI,EAAAkE,IAAAyD,EAAA,aAAAA,EAAAM,SAGAL,KAAAM,WAAAlC,GAGA4B,KAAAO,oBAAAnI,EAAAoI,aAAApC,IAGA4B,KAAAS,oBAAArI,EAAAoI,aAAApC,IAGA4B,KAAAU,UAEAV,KAAAI,cAEAJ,KAAAW,WAGAX,KAAAY,aACAZ,KAAAY,UAAAC,OAIAb,KAAAc,OAGAd,KAAAe,UAGAf,KAAAgB,QAGAhB,KAAAiB,SAGAjB,KAAAkB,aAGAlB,KAAAmB,eA4aA,QAAAC,GAAA7G,EAAA8G,GACA9G,EAAA8G,GACA9G,EAAA8G,KAEA9G,EAAA8G,GAAA,EAIA,QAAAC,GAAA/G,EAAA8G,KACA9G,EAAA8G,UAAkB9G,GAAA8G,GAGlB,QAAAE,GAAAC,EAAAC,EAAAC,EAAAzK,GACA,GAAAwB,GAAA,GAAAgJ,EACAhI,EAAA,GAAAiI,CACA,KAAAF,GAAA/I,EAAAgB,EAAA,CACA,GAAAkI,GAAAlJ,CACAA,GAAAgB,EACAA,EAAAkI,EAEA,MAAAlJ,GAAAmJ,EAAAnI,EAAAmI,GACAxJ,EAAA6D,YAAAhF,GAAA4K,EAAA5K,GAGA,QAAA6K,GAAAN,EAAAC,EAAAC,EAAAzK,GACA,GAAAwB,GAAA,GAAAgJ,EACAhI,EAAA,GAAAiI,CACA,KAAAF,GAAA/I,EAAAgB,EAAA,CACA,GAAAkI,GAAAlJ,CACAA,GAAAgB,EACAA,EAAAkI,EAEA,GAAAI,IAAkBtJ,IAAAgB,IAIlB,OAHAxC,KACA8K,EAAA9K,QAEA8K,EAGA,QAAAC,GAAAR,EAAAO,GACA,MAAAR,GAAAC,EAAAO,EAAAtJ,EAAAsJ,EAAAtI,EAAAsI,EAAA9K,MAhhBA,GAAAmB,GAAA9B,EAAA,EAEAI,GAAAD,QAAAuC,CAEA,IAAA6I,GAAA,KACAhB,EAAA,KACAe,EAAA,MA0DA5I,GAAAnB,UAAAoK,WAAA,EAGAjJ,EAAAnB,UAAAqK,WAAA,EAKAlJ,EAAAnB,UAAA2J,WAAA,WACA,MAAAxB,MAAAC,aAGAjH,EAAAnB,UAAAqC,aAAA,WACA,MAAA8F,MAAAG,eAGAnH,EAAAnB,UAAAsK,WAAA,WACA,MAAAnC,MAAAI,aAGApH,EAAAnB,UAAAoB,SAAA,SAAAW,GAEA,MADAoG,MAAAM,OAAA1G,EACAoG,MAGAhH,EAAAnB,UAAAqB,MAAA,WACA,MAAA8G,MAAAM,QAMAtH,EAAAnB,UAAAuK,oBAAA,SAAAC,GAKA,MAJAjK,GAAAkK,WAAAD,KACAA,EAAAjK,EAAAoI,SAAA6B,IAEArC,KAAAO,oBAAA8B,EACArC,MAGAhH,EAAAnB,UAAA0K,UAAA,WACA,MAAAvC,MAAAiC,YAGAjJ,EAAAnB,UAAAuB,MAAA,WACA,MAAAhB,GAAAmH,KAAAS,KAAAU,SAGA1H,EAAAnB,UAAAwG,QAAA,WACA,GAAAmE,GAAAxC,IACA,OAAA5H,GAAAqK,OAAAzC,KAAA5G,QAAA,SAAAX,GACA,MAAAL,GAAAsK,QAAAF,EAAA1B,IAAArI,OAIAO,EAAAnB,UAAA8K,MAAA,WACA,GAAAH,GAAAxC,IACA,OAAA5H,GAAAqK,OAAAzC,KAAA5G,QAAA,SAAAX,GACA,MAAAL,GAAAsK,QAAAF,EAAAxB,KAAAvI,OAIAO,EAAAnB,UAAA+K,SAAA,SAAA/F,EAAAU,GACA,GAAAsF,GAAA7F,UACAwF,EAAAxC,IAQA,OAPA5H,GAAA0K,KAAAjG,EAAA,SAAApE,GACAoK,EAAAzI,OAAA,EACAoI,EAAA3J,QAAAJ,EAAA8E,GAEAiF,EAAA3J,QAAAJ,KAGAuH,MAGAhH,EAAAnB,UAAAgB,QAAA,SAAAJ,EAAA8E,GACA,MAAAnF,GAAAkE,IAAA0D,KAAAU,OAAAjI,IACAuE,UAAA5C,OAAA,IACA4F,KAAAU,OAAAjI,GAAA8E,GAEAyC,OAGAA,KAAAU,OAAAjI,GAAAuE,UAAA5C,OAAA,EAAAmD,EAAAyC,KAAAO,oBAAA9H,GACAuH,KAAAI,cACAJ,KAAAW,QAAAlI,GAAAoI,EACAb,KAAAY,UAAAnI,MACAuH,KAAAY,UAAAC,GAAApI,IAAA,GAEAuH,KAAAc,IAAArI,MACAuH,KAAAe,OAAAtI,MACAuH,KAAAgB,KAAAvI,MACAuH,KAAAiB,MAAAxI,QACAuH,KAAAiC,WACAjC,OAGAhH,EAAAnB,UAAAwB,KAAA,SAAAZ,GACA,MAAAuH,MAAAU,OAAAjI,IAGAO,EAAAnB,UAAAc,QAAA,SAAAF,GACA,MAAAL,GAAAkE,IAAA0D,KAAAU,OAAAjI,IAGAO,EAAAnB,UAAAkL,WAAA,SAAAtK,GACA,GAAA+J,GAAAxC,IACA,IAAA5H,EAAAkE,IAAA0D,KAAAU,OAAAjI,GAAA,CACA,GAAAuK,GAAA,SAAA9K,GAAkCsK,EAAAQ,WAAAR,EAAAtB,UAAAhJ,WAClC8H,MAAAU,OAAAjI,GACAuH,KAAAI,cACAJ,KAAAiD,4BAAAxK,SACAuH,MAAAW,QAAAlI,GACAL,EAAA0K,KAAA9C,KAAA7F,SAAA1B,GAAA,SAAAyK,GACAV,EAAAW,UAAAD,WAEAlD,MAAAY,UAAAnI,IAEAL,EAAA0K,KAAA1K,EAAAmH,KAAAS,KAAAc,IAAArI,IAAAuK,SACAhD,MAAAc,IAAArI,SACAuH,MAAAe,OAAAtI,GACAL,EAAA0K,KAAA1K,EAAAmH,KAAAS,KAAAgB,KAAAvI,IAAAuK,SACAhD,MAAAgB,KAAAvI,SACAuH,MAAAiB,MAAAxI,KACAuH,KAAAiC,WAEA,MAAAjC,OAGAhH,EAAAnB,UAAAsL,UAAA,SAAA1K,EAAA2K,GACA,IAAApD,KAAAI,YACA,SAAA5E,OAAA,4CAGA,IAAApD,EAAA6D,YAAAmH,GACAA,EAAAvC,MACG,CAEHuC,GAAA,EACA,QAAAC,GAAAD,GACAhL,EAAA6D,YAAAoH,GACAA,EAAArD,KAAAoD,OAAAC,GACA,GAAAA,IAAA5K,EACA,SAAA+C,OAAA,WAAA4H,EAAA,iBAAA3K,EACA,wBAIAuH,MAAAnH,QAAAuK,GAOA,MAJApD,MAAAnH,QAAAJ,GACAuH,KAAAiD,4BAAAxK,GACAuH,KAAAW,QAAAlI,GAAA2K,EACApD,KAAAY,UAAAwC,GAAA3K,IAAA,EACAuH,MAGAhH,EAAAnB,UAAAoL,4BAAA,SAAAxK,SACAuH,MAAAY,UAAAZ,KAAAW,QAAAlI,QAGAO,EAAAnB,UAAAuL,OAAA,SAAA3K,GACA,GAAAuH,KAAAI,YAAA,CACA,GAAAgD,GAAApD,KAAAW,QAAAlI,EACA,IAAA2K,IAAAvC,EACA,MAAAuC,KAKApK,EAAAnB,UAAAsC,SAAA,SAAA1B,GAKA,GAJAL,EAAA6D,YAAAxD,KACAA,EAAAoI,GAGAb,KAAAI,YAAA,CACA,GAAAjG,GAAA6F,KAAAY,UAAAnI,EACA,IAAA0B,EACA,MAAA/B,GAAAmH,KAAApF,OAEG,IAAA1B,IAAAoI,EACH,MAAAb,MAAA5G,OACG,IAAA4G,KAAArH,QAAAF,GACH,WAIAO,EAAAnB,UAAAyL,aAAA,SAAA7K,GACA,GAAA8K,GAAAvD,KAAAe,OAAAtI,EACA,IAAA8K,EACA,MAAAnL,GAAAmH,KAAAgE,IAIAvK,EAAAnB,UAAA2L,WAAA,SAAA/K,GACA,GAAAgL,GAAAzD,KAAAiB,MAAAxI,EACA,IAAAgL,EACA,MAAArL,GAAAmH,KAAAkE,IAIAzK,EAAAnB,UAAA6L,UAAA,SAAAjL,GACA,GAAAmC,GAAAoF,KAAAsD,aAAA7K,EACA,IAAAmC,EACA,MAAAxC,GAAAuL,MAAA/I,EAAAoF,KAAAwD,WAAA/K,KAIAO,EAAAnB,UAAA+L,OAAA,SAAAnL,GACA,GAAAiL,EAMA,OAJAA,GADA1D,KAAAwB,aACAxB,KAAAwD,WAAA/K,GAEAuH,KAAA0D,UAAAjL,GAEA,IAAAiL,EAAAtJ,QAGApB,EAAAnB,UAAAgM,YAAA,SAAApB,GAuBA,QAAAqB,GAAArL,GACA,GAAA2K,GAAAZ,EAAAY,OAAA3K,EACA,YAAA2F,KAAAgF,GAAAW,EAAApL,QAAAyK,IACAY,EAAAvL,GAAA2K,EACAA,GACKA,IAAAY,GACLA,EAAAZ,GAEAU,EAAAV,GA9BA,GAAAW,GAAA,GAAA/D,MAAAiE,aACA/D,SAAAF,KAAAC,YACAhG,WAAA+F,KAAAG,cACAE,SAAAL,KAAAI,aAGA2D,GAAA9K,SAAA+G,KAAA9G,QAEA,IAAAsJ,GAAAxC,IACA5H,GAAA0K,KAAA9C,KAAAU,OAAA,SAAAnD,EAAA9E,GACAgK,EAAAhK,IACAsL,EAAAlL,QAAAJ,EAAA8E,KAIAnF,EAAA0K,KAAA9C,KAAAkB,UAAA,SAAAhJ,GACA6L,EAAApL,QAAAT,EAAAO,IAAAsL,EAAApL,QAAAT,EAAAuB,IACAsK,EAAAlK,QAAA3B,EAAAsK,EAAAhJ,KAAAtB,KAIA,IAAA8L,KAmBA,OANAhE,MAAAI,aACAhI,EAAA0K,KAAAiB,EAAA3K,QAAA,SAAAX,GACAsL,EAAAZ,UAAA1K,EAAAqL,EAAArL,MAIAsL,GAKA/K,EAAAnB,UAAAqM,oBAAA,SAAA7B,GAKA,MAJAjK,GAAAkK,WAAAD,KACAA,EAAAjK,EAAAoI,SAAA6B,IAEArC,KAAAS,oBAAA4B,EACArC,MAGAhH,EAAAnB,UAAAsM,UAAA,WACA,MAAAnE,MAAAkC,YAGAlJ,EAAAnB,UAAAyB,MAAA,WACA,MAAAlB,GAAAgM,OAAApE,KAAAkB,YAGAlI,EAAAnB,UAAAwM,QAAA,SAAAxH,EAAAU,GACA,GAAAiF,GAAAxC,KACA6C,EAAA7F,SASA,OARA5E,GAAAkM,OAAAzH,EAAA,SAAApE,EAAAgB,GAMA,MALAoJ,GAAAzI,OAAA,EACAoI,EAAA3I,QAAApB,EAAAgB,EAAA8D,GAEAiF,EAAA3I,QAAApB,EAAAgB,GAEAA,IAEAuG,MAOAhH,EAAAnB,UAAAgC,QAAA,WACA,GAAApB,GAAAgB,EAAAxC,EAAAsG,EACAgH,GAAA,EACAC,EAAAxH,UAAA,EAEA,kBAAAwH,IAAA,OAAAA,GAAA,KAAAA,IACA/L,EAAA+L,EAAA/L,EACAgB,EAAA+K,EAAA/K,EACAxC,EAAAuN,EAAAvN,KACA,IAAA+F,UAAA5C,SACAmD,EAAAP,UAAA,GACAuH,GAAA,KAGA9L,EAAA+L,EACA/K,EAAAuD,UAAA,GACA/F,EAAA+F,UAAA,GACAA,UAAA5C,OAAA,IACAmD,EAAAP,UAAA,GACAuH,GAAA,IAIA9L,EAAA,GAAAA,EACAgB,EAAA,GAAAA,EACArB,EAAA6D,YAAAhF,KACAA,EAAA,GAAAA,EAGA,IAAAiB,GAAAqJ,EAAAvB,KAAAC,YAAAxH,EAAAgB,EAAAxC,EACA,IAAAmB,EAAAkE,IAAA0D,KAAAmB,YAAAjJ,GAIA,MAHAqM,KACAvE,KAAAmB,YAAAjJ,GAAAqF,GAEAyC,IAGA,KAAA5H,EAAA6D,YAAAhF,KAAA+I,KAAAG,cACA,SAAA3E,OAAA,oDAKAwE,MAAAnH,QAAAJ,GACAuH,KAAAnH,QAAAY,GAEAuG,KAAAmB,YAAAjJ,GAAAqM,EAAAhH,EAAAyC,KAAAS,oBAAAhI,EAAAgB,EAAAxC,EAEA,IAAA8K,GAAAD,EAAA9B,KAAAC,YAAAxH,EAAAgB,EAAAxC,EAYA,OAVAwB,GAAAsJ,EAAAtJ,EACAgB,EAAAsI,EAAAtI,EAEArC,OAAAqN,OAAA1C,GACA/B,KAAAkB,UAAAhJ,GAAA6J,EACAX,EAAApB,KAAAe,OAAAtH,GAAAhB,GACA2I,EAAApB,KAAAiB,MAAAxI,GAAAgB,GACAuG,KAAAc,IAAArH,GAAAvB,GAAA6J,EACA/B,KAAAgB,KAAAvI,GAAAP,GAAA6J,EACA/B,KAAAkC,aACAlC,MAGAhH,EAAAnB,UAAA2B,KAAA,SAAAf,EAAAgB,EAAAxC,GACA,GAAAiB,GAAA,IAAA8E,UAAA5C,OACA4H,EAAAhC,KAAAC,YAAAjD,UAAA,IACAuE,EAAAvB,KAAAC,YAAAxH,EAAAgB,EAAAxC,EACA,OAAA+I,MAAAmB,YAAAjJ,IAGAc,EAAAnB,UAAA6M,QAAA,SAAAjM,EAAAgB,EAAAxC,GACA,GAAAiB,GAAA,IAAA8E,UAAA5C,OACA4H,EAAAhC,KAAAC,YAAAjD,UAAA,IACAuE,EAAAvB,KAAAC,YAAAxH,EAAAgB,EAAAxC,EACA,OAAAmB,GAAAkE,IAAA0D,KAAAmB,YAAAjJ,IAGAc,EAAAnB,UAAAmL,WAAA,SAAAvK,EAAAgB,EAAAxC,GACA,GAAAiB,GAAA,IAAA8E,UAAA5C,OACA4H,EAAAhC,KAAAC,YAAAjD,UAAA,IACAuE,EAAAvB,KAAAC,YAAAxH,EAAAgB,EAAAxC,GACAuC,EAAAwG,KAAAkB,UAAAhJ,EAYA,OAXAsB,KACAf,EAAAe,EAAAf,EACAgB,EAAAD,EAAAC,QACAuG,MAAAmB,YAAAjJ,SACA8H,MAAAkB,UAAAhJ,GACAoJ,EAAAtB,KAAAe,OAAAtH,GAAAhB,GACA6I,EAAAtB,KAAAiB,MAAAxI,GAAAgB,SACAuG,MAAAc,IAAArH,GAAAvB,SACA8H,MAAAgB,KAAAvI,GAAAP,GACA8H,KAAAkC,cAEAlC,MAGAhH,EAAAnB,UAAAgD,QAAA,SAAApC,EAAAkM,GACA,GAAAC,GAAA5E,KAAAc,IAAArI,EACA,IAAAmM,EAAA,CACA,GAAAtL,GAAAlB,EAAAgM,OAAAQ,EACA,OAAAD,GAGAvM,EAAAqK,OAAAnJ,EAAA,SAAAE,GAA2C,MAAAA,GAAAf,IAAAkM,IAF3CrL,IAMAN,EAAAnB,UAAA4C,SAAA,SAAAhC,EAAAgB,GACA,GAAAoL,GAAA7E,KAAAgB,KAAAvI,EACA,IAAAoM,EAAA,CACA,GAAAvL,GAAAlB,EAAAgM,OAAAS,EACA,OAAApL,GAGArB,EAAAqK,OAAAnJ,EAAA,SAAAE,GAA2C,MAAAA,GAAAC,QAF3CH,IAMAN,EAAAnB,UAAAiN,UAAA,SAAArM,EAAAgB,GACA,GAAAoB,GAAAmF,KAAAnF,QAAApC,EAAAgB,EACA,IAAAoB,EACA,MAAAA,GAAAkK,OAAA/E,KAAAvF,SAAAhC,EAAAgB,MT+lBM,SAAU/C,EAAQD,EAASH,GAEjC,YUnkCA,SAAA0O,MAqBA,QAAAC,GAAAC,GACA,IACA,MAAAA,GAAAC,KACG,MAAAC,GAEH,MADAC,GAAAD,EACAE,GAIA,QAAAC,GAAApI,EAAAqI,GACA,IACA,MAAArI,GAAAqI,GACG,MAAAJ,GAEH,MADAC,GAAAD,EACAE,GAGA,QAAAG,GAAAtI,EAAAqI,EAAAE,GACA,IACAvI,EAAAqI,EAAAE,GACG,MAAAN,GAEH,MADAC,GAAAD,EACAE,GAMA,QAAAK,GAAAxI,GACA,oBAAA6C,MACA,SAAAvB,WAAA,uCAEA,uBAAAtB,GACA,SAAAsB,WAAA,mDAEAuB,MAAA4F,IAAA,EACA5F,KAAA6F,IAAA,EACA7F,KAAA8F,IAAA,KACA9F,KAAA+F,IAAA,KACA5I,IAAA6H,GACAgB,EAAA7I,EAAA6C,MAeA,QAAAiG,GAAAzD,EAAA0D,EAAAC,GACA,UAAA3D,GAAAyB,YAAA,SAAAmC,EAAAC,GACA,GAAAC,GAAA,GAAAX,GAAAX,EACAsB,GAAAnB,KAAAiB,EAAAC,GACAE,EAAA/D,EAAA,GAAAgE,GAAAN,EAAAC,EAAAG,MAGA,QAAAC,GAAA/D,EAAAiE,GACA,SAAAjE,EAAAqD,KACArD,IAAAsD,GAKA,IAHAH,EAAAe,KACAf,EAAAe,IAAAlE,GAEA,IAAAA,EAAAqD,IACA,WAAArD,EAAAoD,KACApD,EAAAoD,IAAA,OACApD,EAAAuD,IAAAU,IAGA,IAAAjE,EAAAoD,KACApD,EAAAoD,IAAA,OACApD,EAAAuD,KAAAvD,EAAAuD,IAAAU,SAGAjE,GAAAuD,IAAArJ,KAAA+J,EAGAE,GAAAnE,EAAAiE,GAGA,QAAAE,GAAAnE,EAAAiE,GACAG,EAAA,WACA,GAAAC,GAAA,IAAArE,EAAAqD,IAAAY,EAAAP,YAAAO,EAAAN,UACA,WAAAU,EAMA,YALA,IAAArE,EAAAqD,IACAO,EAAAK,EAAAK,QAAAtE,EAAAsD,KAEAO,EAAAI,EAAAK,QAAAtE,EAAAsD,KAIA,IAAAiB,GAAAxB,EAAAsB,EAAArE,EAAAsD,IACAiB,KAAAzB,EACAe,EAAAI,EAAAK,QAAAzB,GAEAe,EAAAK,EAAAK,QAAAC,KAIA,QAAAX,GAAA5D,EAAAwE,GAEA,GAAAA,IAAAxE,EACA,MAAA6D,GACA7D,EACA,GAAA/D,WAAA,6CAGA,IACAuI,IACA,iBAAAA,IAAA,mBAAAA,IACA,CACA,GAAA7B,GAAAF,EAAA+B,EACA,IAAA7B,IAAAG,EACA,MAAAe,GAAA7D,EAAA6C,EAEA,IACAF,IAAA3C,EAAA2C,MACA6B,YAAArB,GAKA,MAHAnD,GAAAqD,IAAA,EACArD,EAAAsD,IAAAkB,MACAC,GAAAzE,EAEK,uBAAA2C,GAEL,WADAa,GAAAb,EAAA+B,KAAAF,GAAAxE,GAIAA,EAAAqD,IAAA,EACArD,EAAAsD,IAAAkB,EACAC,EAAAzE,GAGA,QAAA6D,GAAA7D,EAAAwE,GACAxE,EAAAqD,IAAA,EACArD,EAAAsD,IAAAkB,EACArB,EAAAwB,KACAxB,EAAAwB,IAAA3E,EAAAwE,GAEAC,EAAAzE,GAEA,QAAAyE,GAAAzE,GAKA,GAJA,IAAAA,EAAAoD,MACAW,EAAA/D,IAAAuD,KACAvD,EAAAuD,IAAA,MAEA,IAAAvD,EAAAoD,IAAA,CACA,OAAAjP,GAAA,EAAmBA,EAAA6L,EAAAuD,IAAA3L,OAAqBzD,IACxC4P,EAAA/D,IAAAuD,IAAApP,GAEA6L,GAAAuD,IAAA,MAIA,QAAAS,GAAAN,EAAAC,EAAAW,GACA9G,KAAAkG,YAAA,mBAAAA,KAAA,KACAlG,KAAAmG,WAAA,mBAAAA,KAAA,KACAnG,KAAA8G,UASA,QAAAd,GAAA7I,EAAA2J,GACA,GAAAM,IAAA,EACAd,EAAAb,EAAAtI,EAAA,SAAAI,GACA6J,IACAA,GAAA,EACAhB,EAAAU,EAAAvJ,KACG,SAAA8J,GACHD,IACAA,GAAA,EACAf,EAAAS,EAAAO,KAEAD,IAAAd,IAAAhB,IACA8B,GAAA,EACAf,EAAAS,EAAAzB,IAhNA,GAAAuB,GAAAtQ,EAAA,IAqBA+O,EAAA,KACAC,IA2BA5O,GAAAD,QAAAkP,EAgBAA,EAAAe,IAAA,KACAf,EAAAwB,IAAA,KACAxB,EAAA2B,IAAAtC,EAEAW,EAAA9N,UAAAsN,KAAA,SAAAe,EAAAC,GACA,GAAAnG,KAAAiE,cAAA0B,EACA,MAAAM,GAAAjG,KAAAkG,EAAAC,EAEA,IAAAG,GAAA,GAAAX,GAAAX,EAEA,OADAuB,GAAAvG,KAAA,GAAAwG,GAAAN,EAAAC,EAAAG,IACAA,IVotCM,SAAU5P,EAAQD,GWjyCxB,GAAA6B,EAGAA,GAAA,WACA,MAAA0H,QAGA,KAEA1H,KAAAiP,SAAA,qBAAAC,MAAA,QACC,MAAAtP,GAED,iBAAAC,UACAG,EAAAH,QAOAzB,EAAAD,QAAA6B,GXwyCM,SAAU5B,EAAQD,EAASH,GAEjC,YY/xCA,SAAAmR,GAAAC,EAAAC,EAAAnC,EAAAE,EAAA3O,EAAAC,EAAAkB,EAAA0P,GAGA,GAFAC,EAAAF,IAEAD,EAAA,CACA,GAAAI,EACA,QAAA1J,KAAAuJ,EACAG,EAAA,GAAAtM,OAAA,qIACK,CACL,GAAAqH,IAAA2C,EAAAE,EAAA3O,EAAAC,EAAAkB,EAAA0P,GACAG,EAAA,CACAD,GAAA,GAAAtM,OAAAmM,EAAAK,QAAA,iBACA,MAAAnF,GAAAkF,QAEAD,EAAA7Q,KAAA,sBAIA,KADA6Q,GAAAG,YAAA,EACAH,GA3BA,GAAAD,GAAA,SAAAF,IA+BAjR,GAAAD,QAAAgR,GZm0CM,SAAU/Q,EAAQD,EAASH,GAEjC,Ya/2CA,IAAA4R,KAMAxR,GAAAD,QAAAyR,Gb83CM,SAAUxR,EAAQD,EAASH,GAEjC,Ycr4CA,SAAA6R,GAAAC,GACA,kBACA,MAAAA,IASA,GAAAC,GAAA,YAEAA,GAAAC,YAAAH,EACAE,EAAAE,iBAAAJ,GAAA,GACAE,EAAAG,gBAAAL,GAAA,GACAE,EAAAI,gBAAAN,EAAA,MACAE,EAAAK,gBAAA,WACA,MAAA1I,OAEAqI,EAAAM,oBAAA,SAAAP,GACA,MAAAA,IAGA1R,EAAAD,QAAA4R,Gdq5CM,SAAU3R,EAAQD,EAASH,IAEL,SAASsS,EAAQlS,Ge17C7C,GAAAmS,IAQC,WA8cD,QAAAC,GAAAC,EAAAC,EAAAnG,GACA,OAAAA,EAAAzI,QACA,aAAA2O,GAAAlS,KAAAmS,EACA,cAAAD,GAAAlS,KAAAmS,EAAAnG,EAAA,GACA,cAAAkG,GAAAlS,KAAAmS,EAAAnG,EAAA,GAAAA,EAAA,GACA,cAAAkG,GAAAlS,KAAAmS,EAAAnG,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAEA,MAAAkG,GAAAD,MAAAE,EAAAnG,GAaA,QAAAoG,GAAAC,EAAAC,EAAAC,EAAAC,GAIA,IAHA,GAAAC,IAAA,EACAlP,EAAA,MAAA8O,EAAA,EAAAA,EAAA9O,SAEAkP,EAAAlP,GAAA,CACA,GAAAmD,GAAA2L,EAAAI,EACAH,GAAAE,EAAA9L,EAAA6L,EAAA7L,GAAA2L,GAEA,MAAAG,GAYA,QAAAE,GAAAL,EAAAE,GAIA,IAHA,GAAAE,IAAA,EACAlP,EAAA,MAAA8O,EAAA,EAAAA,EAAA9O,SAEAkP,EAAAlP,IACA,IAAAgP,EAAAF,EAAAI,KAAAJ,KAIA,MAAAA,GAYA,QAAAM,GAAAN,EAAAE,GAGA,IAFA,GAAAhP,GAAA,MAAA8O,EAAA,EAAAA,EAAA9O,OAEAA,MACA,IAAAgP,EAAAF,EAAA9O,KAAA8O,KAIA,MAAAA,GAaA,QAAAO,GAAAP,EAAAQ,GAIA,IAHA,GAAAJ,IAAA,EACAlP,EAAA,MAAA8O,EAAA,EAAAA,EAAA9O,SAEAkP,EAAAlP,GACA,IAAAsP,EAAAR,EAAAI,KAAAJ,GACA,QAGA,UAYA,QAAAS,GAAAT,EAAAQ,GAMA,IALA,GAAAJ,IAAA,EACAlP,EAAA,MAAA8O,EAAA,EAAAA,EAAA9O,OACAwP,EAAA,EACAxM,OAEAkM,EAAAlP,GAAA,CACA,GAAAmD,GAAA2L,EAAAI,EACAI,GAAAnM,EAAA+L,EAAAJ,KACA9L,EAAAwM,KAAArM,GAGA,MAAAH,GAYA,QAAAyM,GAAAX,EAAA3L,GAEA,SADA,MAAA2L,EAAA,EAAAA,EAAA9O,SACA0P,EAAAZ,EAAA3L,EAAA,MAYA,QAAAwM,GAAAb,EAAA3L,EAAAyM,GAIA,IAHA,GAAAV,IAAA,EACAlP,EAAA,MAAA8O,EAAA,EAAAA,EAAA9O,SAEAkP,EAAAlP,GACA,GAAA4P,EAAAzM,EAAA2L,EAAAI,IACA,QAGA,UAYA,QAAAW,GAAAf,EAAAE,GAKA,IAJA,GAAAE,IAAA,EACAlP,EAAA,MAAA8O,EAAA,EAAAA,EAAA9O,OACAgD,EAAA8M,MAAA9P,KAEAkP,EAAAlP,GACAgD,EAAAkM,GAAAF,EAAAF,EAAAI,KAAAJ,EAEA,OAAA9L,GAWA,QAAA+M,GAAAjB,EAAA9E,GAKA,IAJA,GAAAkF,IAAA,EACAlP,EAAAgK,EAAAhK,OACAoC,EAAA0M,EAAA9O,SAEAkP,EAAAlP,GACA8O,EAAA1M,EAAA8M,GAAAlF,EAAAkF,EAEA,OAAAJ,GAeA,QAAAkB,GAAAlB,EAAAE,EAAAC,EAAAgB,GACA,GAAAf,IAAA,EACAlP,EAAA,MAAA8O,EAAA,EAAAA,EAAA9O,MAKA,KAHAiQ,GAAAjQ,IACAiP,EAAAH,IAAAI,MAEAA,EAAAlP,GACAiP,EAAAD,EAAAC,EAAAH,EAAAI,KAAAJ,EAEA,OAAAG,GAeA,QAAAiB,GAAApB,EAAAE,EAAAC,EAAAgB,GACA,GAAAjQ,GAAA,MAAA8O,EAAA,EAAAA,EAAA9O,MAIA,KAHAiQ,GAAAjQ,IACAiP,EAAAH,IAAA9O,IAEAA,KACAiP,EAAAD,EAAAC,EAAAH,EAAA9O,KAAA8O,EAEA,OAAAG,GAaA,QAAAkB,GAAArB,EAAAQ,GAIA,IAHA,GAAAJ,IAAA,EACAlP,EAAA,MAAA8O,EAAA,EAAAA,EAAA9O,SAEAkP,EAAAlP,GACA,GAAAsP,EAAAR,EAAAI,KAAAJ,GACA,QAGA,UAmBA,QAAAsB,GAAAC,GACA,MAAAA,GAAApL,MAAA,IAUA,QAAAqL,GAAAD,GACA,MAAAA,GAAAE,MAAAC,QAcA,QAAAC,GAAA3N,EAAAwM,EAAAoB,GACA,GAAA1N,EAOA,OANA0N,GAAA5N,EAAA,SAAAK,EAAAuC,EAAA5C,GACA,GAAAwM,EAAAnM,EAAAuC,EAAA5C,GAEA,MADAE,GAAA0C,GACA,IAGA1C,EAcA,QAAA2N,GAAA7B,EAAAQ,EAAAsB,EAAAC,GAIA,IAHA,GAAA7Q,GAAA8O,EAAA9O,OACAkP,EAAA0B,GAAAC,EAAA,MAEAA,EAAA3B,QAAAlP,GACA,GAAAsP,EAAAR,EAAAI,KAAAJ,GACA,MAAAI,EAGA,UAYA,QAAAQ,GAAAZ,EAAA3L,EAAAyN,GACA,MAAAzN,OACA2N,EAAAhC,EAAA3L,EAAAyN,GACAD,EAAA7B,EAAAiC,EAAAH,GAaA,QAAAI,GAAAlC,EAAA3L,EAAAyN,EAAAhB,GAIA,IAHA,GAAAV,GAAA0B,EAAA,EACA5Q,EAAA8O,EAAA9O,SAEAkP,EAAAlP,GACA,GAAA4P,EAAAd,EAAAI,GAAA/L,GACA,MAAA+L,EAGA,UAUA,QAAA6B,GAAA5N,GACA,MAAAA,OAYA,QAAA8N,GAAAnC,EAAAE,GACA,GAAAhP,GAAA,MAAA8O,EAAA,EAAAA,EAAA9O,MACA,OAAAA,GAAAkR,EAAApC,EAAAE,GAAAhP,EAAAmR,GAUA,QAAAC,GAAA1L,GACA,gBAAAnI,GACA,aAAAA,EAAAyG,GAAAzG,EAAAmI,IAWA,QAAA2L,GAAA9T,GACA,gBAAAmI,GACA,aAAAnI,EAAAyG,GAAAzG,EAAAmI,IAiBA,QAAA4L,GAAAxO,EAAAkM,EAAAC,EAAAgB,EAAAS,GAMA,MALAA,GAAA5N,EAAA,SAAAK,EAAA+L,EAAApM,GACAmM,EAAAgB,GACAA,GAAA,EAAA9M,GACA6L,EAAAC,EAAA9L,EAAA+L,EAAApM,KAEAmM,EAaA,QAAAsC,GAAAzC,EAAA0C,GACA,GAAAxR,GAAA8O,EAAA9O,MAGA,KADA8O,EAAA2C,KAAAD,GACAxR,KACA8O,EAAA9O,GAAA8O,EAAA9O,GAAAmD,KAEA,OAAA2L,GAYA,QAAAoC,GAAApC,EAAAE,GAKA,IAJA,GAAAhM,GACAkM,GAAA,EACAlP,EAAA8O,EAAA9O,SAEAkP,EAAAlP,GAAA,CACA,GAAA0R,GAAA1C,EAAAF,EAAAI,GACAwC,KAAA1N,KACAhB,MAAAgB,GAAA0N,EAAA1O,EAAA0O,GAGA,MAAA1O,GAYA,QAAA2O,GAAAtU,EAAA2R,GAIA,IAHA,GAAAE,IAAA,EACAlM,EAAA8M,MAAAzS,KAEA6R,EAAA7R,GACA2F,EAAAkM,GAAAF,EAAAE,EAEA,OAAAlM,GAYA,QAAA4O,GAAArU,EAAAsU,GACA,MAAAhC,GAAAgC,EAAA,SAAAnM,GACA,OAAAA,EAAAnI,EAAAmI,MAWA,QAAAoM,GAAAnD,GACA,gBAAAxL,GACA,MAAAwL,GAAAxL,IAcA,QAAA4O,GAAAxU,EAAAsU,GACA,MAAAhC,GAAAgC,EAAA,SAAAnM,GACA,MAAAnI,GAAAmI,KAYA,QAAAsM,GAAAC,EAAAvM,GACA,MAAAuM,GAAA/P,IAAAwD,GAYA,QAAAwM,GAAAC,EAAAC,GAIA,IAHA,GAAAlD,IAAA,EACAlP,EAAAmS,EAAAnS,SAEAkP,EAAAlP,GAAA0P,EAAA0C,EAAAD,EAAAjD,GAAA,QACA,MAAAA,GAYA,QAAAmD,GAAAF,EAAAC,GAGA,IAFA,GAAAlD,GAAAiD,EAAAnS,OAEAkP,KAAAQ,EAAA0C,EAAAD,EAAAjD,GAAA,QACA,MAAAA,GAWA,QAAAoD,GAAAxD,EAAAyD,GAIA,IAHA,GAAAvS,GAAA8O,EAAA9O,OACAgD,EAAA,EAEAhD,KACA8O,EAAA9O,KAAAuS,KACAvP,CAGA,OAAAA,GA6BA,QAAAwP,GAAAC,GACA,WAAAC,GAAAD,GAWA,QAAAE,GAAApV,EAAAmI,GACA,aAAAnI,EAAAyG,GAAAzG,EAAAmI,GAUA,QAAAkN,GAAAvC,GACA,MAAAwC,IAAAC,KAAAzC,GAUA,QAAA0C,GAAA1C,GACA,MAAA2C,IAAAF,KAAAzC,GAUA,QAAA4C,GAAAC,GAIA,IAHA,GAAAC,GACAnQ,OAEAmQ,EAAAD,EAAAE,QAAApG,MACAhK,EAAAV,KAAA6Q,EAAAhQ,MAEA,OAAAH,GAUA,QAAAqQ,GAAAlT,GACA,GAAA+O,IAAA,EACAlM,EAAA8M,MAAA3P,EAAAmT,KAKA,OAHAnT,GAAApB,QAAA,SAAAoE,EAAAuC,GACA1C,IAAAkM,IAAAxJ,EAAAvC,KAEAH,EAWA,QAAAuQ,GAAA5E,EAAA6E,GACA,gBAAAxF,GACA,MAAAW,GAAA6E,EAAAxF,KAaA,QAAAyF,GAAA3E,EAAAyD,GAMA,IALA,GAAArD,IAAA,EACAlP,EAAA8O,EAAA9O,OACAwP,EAAA,EACAxM,OAEAkM,EAAAlP,GAAA,CACA,GAAAmD,GAAA2L,EAAAI,EACA/L,KAAAoP,GAAApP,IAAAuQ,KACA5E,EAAAI,GAAAwE,GACA1Q,EAAAwM,KAAAN,GAGA,MAAAlM,GAWA,QAAA2Q,GAAApW,EAAAmI,GACA,mBAAAA,EACA1B,GACAzG,EAAAmI,GAUA,QAAAkO,GAAAC,GACA,GAAA3E,IAAA,EACAlM,EAAA8M,MAAA+D,EAAAP,KAKA,OAHAO,GAAA9U,QAAA,SAAAoE,GACAH,IAAAkM,GAAA/L,IAEAH,EAUA,QAAA8Q,GAAAD,GACA,GAAA3E,IAAA,EACAlM,EAAA8M,MAAA+D,EAAAP,KAKA,OAHAO,GAAA9U,QAAA,SAAAoE,GACAH,IAAAkM,IAAA/L,OAEAH,EAaA,QAAA8N,GAAAhC,EAAA3L,EAAAyN,GAIA,IAHA,GAAA1B,GAAA0B,EAAA,EACA5Q,EAAA8O,EAAA9O,SAEAkP,EAAAlP,GACA,GAAA8O,EAAAI,KAAA/L,EACA,MAAA+L,EAGA,UAaA,QAAA6E,GAAAjF,EAAA3L,EAAAyN,GAEA,IADA,GAAA1B,GAAA0B,EAAA,EACA1B,KACA,GAAAJ,EAAAI,KAAA/L,EACA,MAAA+L,EAGA,OAAAA,GAUA,QAAA8E,GAAA3D,GACA,MAAAuC,GAAAvC,GACA4D,GAAA5D,GACA6D,GAAA7D,GAUA,QAAA8D,GAAA9D,GACA,MAAAuC,GAAAvC,GACA+D,GAAA/D,GACAD,EAAAC,GAmBA,QAAA4D,IAAA5D,GAEA,IADA,GAAArN,GAAAqR,GAAAC,UAAA,EACAD,GAAAvB,KAAAzC,MACArN,CAEA,OAAAA,GAUA,QAAAoR,IAAA/D,GACA,MAAAA,GAAAE,MAAA8D,QAUA,QAAAE,IAAAlE,GACA,MAAAA,GAAAE,MAAAiE,QA91CA,GAAAxQ,IAMAyQ,GAAA,IAGAC,GAAA,kEACAC,GAAA,sBAGAC,GAAA,4BAGAC,GAAA,IAGAnB,GAAA,yBAGAoB,GAAA,EACAC,GAAA,EACAC,GAAA,EAGAC,GAAA,EACAC,GAAA,EAGAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,GACAC,GAAA,GACAC,GAAA,GACAC,GAAA,IACAC,GAAA,IACAC,GAAA,IAGAC,GAAA,GACAC,GAAA,MAGAC,GAAA,IACAC,GAAA,GAGAC,GAAA,EACAC,GAAA,EAIAC,GAAA,IACAC,GAAA,iBACAC,GAAA,uBACAlF,GAAA,IAGAmF,GAAA,WACAC,GAAAD,GAAA,EACAE,GAAAF,KAAA,EAGAG,KACA,MAAAf,KACA,OAAAP,KACA,UAAAC,KACA,QAAAE,KACA,aAAAC,KACA,OAAAK,KACA,UAAAJ,KACA,eAAAC,KACA,QAAAE,KAIAe,GAAA,qBACAC,GAAA,iBACAC,GAAA,yBACAC,GAAA,mBACAC,GAAA,gBACAC,GAAA,wBACAC,GAAA,iBACAC,GAAA,oBACAC,GAAA,6BACAC,GAAA,eACAC,GAAA,kBACAC,GAAA,gBACAC,GAAA,kBAEAC,GAAA,iBACAC,GAAA,kBACAC,GAAA,eACAC,GAAA,kBACAC,GAAA,kBACAC,GAAA,qBACAC,GAAA,mBACAC,GAAA,mBAEAC,GAAA,uBACAC,GAAA,oBACAC,GAAA,wBACAC,GAAA,wBACAC,GAAA,qBACAC,GAAA,sBACAC,GAAA,sBACAC,GAAA,sBACAC,GAAA,6BACAC,GAAA,uBACAC,GAAA,uBAGAC,GAAA,iBACAC,GAAA,qBACAC,GAAA,gCAGAC,GAAA,4BACAC,GAAA,WACAC,GAAAC,OAAAH,GAAAvT,QACA2T,GAAAD,OAAAF,GAAAxT,QAGA4T,GAAA,mBACAC,GAAA,kBACAC,GAAA,mBAGAC,GAAA,mDACAC,GAAA,QACAC,GAAA,mGAMAC,GAAA,sBACAC,GAAAT,OAAAQ,GAAAlU,QAGAoU,GAAA,aACAC,GAAA,OACAC,GAAA,OAGAC,GAAA,4CACAC,GAAA,oCACAC,GAAA,QAGAvJ,GAAA,4CAGAwJ,GAAA,WAMAC,GAAA,kCAGAC,GAAA,OAGAC,GAAA,qBAGAC,GAAA,aAGAC,GAAA,8BAGAC,GAAA,cAGAC,GAAA,mBAGAC,GAAA,8CAGAC,GAAA,OAGAC,GAAA,yBAOAC,GAAAC,gDASAC,GAAAC,8OAKAC,GAAA,IAAAF,GAAA,IACAG,GAAA,IAAAL,GAAA,IAGAM,GAAA,8BACAC,GAAA,oBAAAL,GAHA,yEAIAM,GAAA,2BAGAC,GAAA,kCACAC,GAAA,qCACAC,GAAA,8BAIAC,GAAA,MAAAN,GAAA,IAAAC,GAAA,IAIAM,GAAAC,gFAEAC,GAAA,iBAbA,qBAaAN,GAAAC,IAAAtW,KAAA,0BAAAyW,GAAA,KAGAG,GAJA,oBAIAH,GAAAE,GACAE,GAAA,OAtBA,oBAsBAR,GAAAC,IAAAtW,KAAA,SAAA4W,GACAE,GAAA,OAlBA,qBAkBAb,GAAA,IAAAA,GAAAI,GAAAC,GA3BA,qBA2BAtW,KAAA,SAGA+W,GAAA9C,OA/BA,YA+BA,KAMA+C,GAAA/C,OAAAgC,GAAA,KAGA3G,GAAA2E,OAAAmC,GAAA,MAAAA,GAAA,KAAAU,GAAAF,GAAA,KAGAnH,GAAAwE,QACAsC,GAAA,IAAAL,GAAA,0CAAAF,GAAAO,GAAA,KAAAvW,KAAA,SACAiX,4YAAAjB,GAAAO,GAAAC,GAAA,KAAAxW,KAAA,SACAuW,GAAA,IAAAC,GAAA,sCACAD,GAAA,sCAtBA,mDADA,mDApBA,OA+CAM,IACA7W,KAAA,UAGA8N,GAAAmG,OAAA,0BAAA2B,GA3DA,mBA8DA3H,GAAA,sEAGAiJ,IACA,yEACA,uEACA,oEACA,0DACA,uDAIAC,IAAA,EAGAC,KACAA,IAAAlE,IAAAkE,GAAAjE,IACAiE,GAAAhE,IAAAgE,GAAA/D,IACA+D,GAAA9D,IAAA8D,GAAA7D,IACA6D,GAAA5D,IAAA4D,GAAA3D,IACA2D,GAAA1D,KAAA,EACA0D,GAAAzF,IAAAyF,GAAAxF,IACAwF,GAAApE,IAAAoE,GAAAtF,IACAsF,GAAAnE,IAAAmE,GAAArF,IACAqF,GAAAnF,IAAAmF,GAAAlF,IACAkF,GAAAhF,IAAAgF,GAAA/E,IACA+E,GAAA7E,IAAA6E,GAAA3E,IACA2E,GAAA1E,IAAA0E,GAAAzE,IACAyE,GAAAtE,KAAA,CAGA,IAAAuE,MACAA,IAAA1F,IAAA0F,GAAAzF,IACAyF,GAAArE,IAAAqE,GAAApE,IACAoE,GAAAvF,IAAAuF,GAAAtF,IACAsF,GAAAnE,IAAAmE,GAAAlE,IACAkE,GAAAjE,IAAAiE,GAAAhE,IACAgE,GAAA/D,IAAA+D,GAAAjF,IACAiF,GAAAhF,IAAAgF,GAAA9E,IACA8E,GAAA5E,IAAA4E,GAAA3E,IACA2E,GAAA1E,IAAA0E,GAAAzE,IACAyE,GAAA9D,IAAA8D,GAAA7D,IACA6D,GAAA5D,IAAA4D,GAAA3D,KAAA,EACA2D,GAAApF,IAAAoF,GAAAnF,IACAmF,GAAAvE,KAAA,CAGA,IAAAwrW,IACAsW,KAAA,KACAP,IAAA,IACAQ,KAAA,IACAC,KAAA,IACAC,SAAA,QACAC,SAAA,SAIAC,GAAAC,WACAC,GAAAC,SAGAC,GAAA,gBAAAjb,SAAAxR,iBAAAwR,EAGAkb,GAAA,gBAAAthB,kBAAApL,iBAAAoL,KAGAuhB,GAAAF,IAAAC,IAAAvc,SAAA,iBAGAyc,GAAA,gBAAAvtB,UAAAwtB,UAAAxtB,EAGAytB,GAAAF,IAAA,gBAAAttB,UAAAutB,UAAAvtB,EAGAytB,GAAAD,OAAAztB,UAAAutB,GAGAI,GAAAD,IAAAN,GAAAQ,QAGAC,GAAA,WACA,IAEA,GAAAC,GAAAL,OAAAM,SAAAN,GAAAM,QAAA,QAAAD,KAEA,OAAAA,IAKAH,OAAAK,SAAAL,GAAAK,QAAA,QACK,MAAAvsB,QAILwsB,GAAAJ,OAAAK,cACAC,GAAAN,OAAAO,OACAC,GAAAR,OAAAS,MACAC,GAAAV,OAAAW,SACAC,GAAAZ,OAAAa,MACAC,GAAAd,OAAAe,aA2RA/W,GAAA9C,EAAA,UAsWA8Z,GAAA7Z,EAAAgL,IASA8O,GAAA9Z,EAAA+W,IAmPAgD,GAAA/Z,EAAAqX,IAg3eA1qB,GA1yeA,QAAAqtB,GAAAC,GAkPA,QAAAztB,GAAAsF,GACA,GAAAooB,GAAApoB,KAAAqoB,GAAAroB,kBAAAsoB,IAAA,CACA,GAAAtoB,YAAAuoB,GACA,MAAAvoB,EAEA,IAAAzF,GAAAjB,KAAA0G,EAAA,eACA,MAAAwoB,IAAAxoB,GAGA,UAAAuoB,GAAAvoB,GAgCA,QAAAyoB,MAWA,QAAAF,GAAAvoB,EAAA0oB,GACAjmB,KAAAkmB,YAAA3oB,EACAyC,KAAAmmB,eACAnmB,KAAAomB,YAAAH,EACAjmB,KAAAqmB,UAAA,EACArmB,KAAAsmB,WAAAloB,GAgFA,QAAAynB,GAAAtoB,GACAyC,KAAAkmB,YAAA3oB,EACAyC,KAAAmmB,eACAnmB,KAAAumB,QAAA,EACAvmB,KAAAwmB,cAAA,EACAxmB,KAAAymB,iBACAzmB,KAAA0mB,cAAAhW,GACA1Q,KAAA2mB,aAWA,QAAAC,KACA,GAAAxpB,GAAA,GAAAyoB,GAAA7lB,KAAAkmB,YAOA,OANA9oB,GAAA+oB,YAAAU,GAAA7mB,KAAAmmB,aACA/oB,EAAAmpB,QAAAvmB,KAAAumB,QACAnpB,EAAAopB,aAAAxmB,KAAAwmB,aACAppB,EAAAqpB,cAAAI,GAAA7mB,KAAAymB,eACArpB,EAAAspB,cAAA1mB,KAAA0mB,cACAtpB,EAAAupB,UAAAE,GAAA7mB,KAAA2mB,WACAvpB,EAWA,QAAA0pB,KACA,GAAA9mB,KAAAwmB,aAAA,CACA,GAAAppB,GAAA,GAAAyoB,GAAA7lB,KACA5C,GAAAmpB,SAAA,EACAnpB,EAAAopB,cAAA,MAEAppB,GAAA4C,KAAA+mB,QACA3pB,EAAAmpB,UAAA,CAEA,OAAAnpB,GAWA,QAAA4pB,MACA,GAAA9d,GAAAlJ,KAAAkmB,YAAA3oB,QACA0pB,EAAAjnB,KAAAumB,QACAW,EAAAtB,GAAA1c,GACAie,EAAAF,EAAA,EACAG,EAAAF,EAAAhe,EAAA9O,OAAA,EACAitB,EAAAC,GAAA,EAAAF,EAAApnB,KAAA2mB,WACAlpB,EAAA4pB,EAAA5pB,MACA8pB,EAAAF,EAAAE,IACAntB,EAAAmtB,EAAA9pB,EACA6L,EAAA6d,EAAAI,EAAA9pB,EAAA,EACA+pB,EAAAxnB,KAAAymB,cACAgB,EAAAD,EAAAptB,OACAwP,EAAA,EACA8d,EAAAC,GAAAvtB,EAAA4F,KAAA0mB,cAEA,KAAAQ,IAAAC,GAAAC,GAAAhtB,GAAAstB,GAAAttB,EACA,MAAAwtB,IAAA1e,EAAAlJ,KAAAmmB,YAEA,IAAA/oB,KAEAyqB,GACA,KAAAztB,KAAAwP,EAAA8d,GAAA,CACApe,GAAA2d,CAKA,KAHA,GAAAa,IAAA,EACAvqB,EAAA2L,EAAAI,KAEAwe,EAAAL,GAAA,CACA,GAAAla,GAAAia,EAAAM,GACA1e,EAAAmE,EAAAnE,SACA7Q,EAAAgV,EAAAhV,KACAwvB,EAAA3e,EAAA7L,EAEA,IAAAhF,GAAA+X,GACA/S,EAAAwqB,MACW,KAAAA,EAAA,CACX,GAAAxvB,GAAA8X,GACA,QAAAwX,EAEA,MAAAA,IAIAzqB,EAAAwM,KAAArM,EAEA,MAAAH,GAgBA,QAAA4qB,IAAAC,GACA,GAAA3e,IAAA,EACAlP,EAAA,MAAA6tB,EAAA,EAAAA,EAAA7tB,MAGA,KADA4F,KAAAkoB,UACA5e,EAAAlP,GAAA,CACA,GAAA+tB,GAAAF,EAAA3e,EACAtJ,MAAAiO,IAAAka,EAAA,GAAAA,EAAA,KAWA,QAAAC,MACApoB,KAAAqoB,SAAAC,MAAA,SACAtoB,KAAA0N,KAAA,EAaA,QAAA6a,IAAAzoB,GACA,GAAA1C,GAAA4C,KAAA1D,IAAAwD,UAAAE,MAAAqoB,SAAAvoB,EAEA,OADAE,MAAA0N,MAAAtQ,EAAA,IACAA,EAYA,QAAAorB,IAAA1oB,GACA,GAAAyN,GAAAvN,KAAAqoB,QACA,IAAAC,GAAA,CACA,GAAAlrB,GAAAmQ,EAAAzN,EACA,OAAA1C,KAAA4R,GAAA5Q,GAAAhB,EAEA,MAAAtF,IAAAjB,KAAA0W,EAAAzN,GAAAyN,EAAAzN,GAAA1B,GAYA,QAAAqqB,IAAA3oB,GACA,GAAAyN,GAAAvN,KAAAqoB,QACA,OAAAC,IAAA/a,EAAAzN,KAAA1B,GAAAtG,GAAAjB,KAAA0W,EAAAzN,GAaA,QAAA4oB,IAAA5oB,EAAAvC,GACA,GAAAgQ,GAAAvN,KAAAqoB,QAGA,OAFAroB,MAAA0N,MAAA1N,KAAA1D,IAAAwD,GAAA,IACAyN,EAAAzN,GAAAwoB,IAAA/qB,IAAAa,GAAA4Q,GAAAzR,EACAyC,KAmBA,QAAA2oB,IAAAV,GACA,GAAA3e,IAAA,EACAlP,EAAA,MAAA6tB,EAAA,EAAAA,EAAA7tB,MAGA,KADA4F,KAAAkoB,UACA5e,EAAAlP,GAAA,CACA,GAAA+tB,GAAAF,EAAA3e,EACAtJ,MAAAiO,IAAAka,EAAA,GAAAA,EAAA,KAWA,QAAAS,MACA5oB,KAAAqoB,YACAroB,KAAA0N,KAAA,EAYA,QAAAmb,IAAA/oB,GACA,GAAAyN,GAAAvN,KAAAqoB,SACA/e,EAAAwf,GAAAvb,EAAAzN,EAEA,SAAAwJ,EAAA,KAIAA,GADAiE,EAAAnT,OAAA,EAEAmT,EAAAwb,MAEAC,GAAAnyB,KAAA0W,EAAAjE,EAAA,KAEAtJ,KAAA0N,MACA,GAYA,QAAAub,IAAAnpB,GACA,GAAAyN,GAAAvN,KAAAqoB,SACA/e,EAAAwf,GAAAvb,EAAAzN,EAEA,OAAAwJ,GAAA,EAAAlL,GAAAmP,EAAAjE,GAAA,GAYA,QAAA4f,IAAAppB,GACA,MAAAgpB,IAAA9oB,KAAAqoB,SAAAvoB,IAAA,EAaA,QAAAqpB,IAAArpB,EAAAvC,GACA,GAAAgQ,GAAAvN,KAAAqoB,SACA/e,EAAAwf,GAAAvb,EAAAzN,EAQA,OANAwJ,GAAA,KACAtJ,KAAA0N,KACAH,EAAA7Q,MAAAoD,EAAAvC,KAEAgQ,EAAAjE,GAAA,GAAA/L,EAEAyC,KAmBA,QAAAopB,IAAAnB,GACA,GAAA3e,IAAA,EACAlP,EAAA,MAAA6tB,EAAA,EAAAA,EAAA7tB,MAGA,KADA4F,KAAAkoB,UACA5e,EAAAlP,GAAA,CACA,GAAA+tB,GAAAF,EAAA3e,EACAtJ,MAAAiO,IAAAka,EAAA,GAAAA,EAAA,KAWA,QAAAkB,MACArpB,KAAA0N,KAAA,EACA1N,KAAAqoB,UACAiB,KAAA,GAAAtB,IACAztB,IAAA,IAAAgvB,IAAAZ,IACAle,OAAA,GAAAud,KAaA,QAAAwB,IAAA1pB,GACA,GAAA1C,GAAAqsB,GAAAzpB,KAAAF,GAAA,OAAAA,EAEA,OADAE,MAAA0N,MAAAtQ,EAAA,IACAA,EAYA,QAAAssB,IAAA5pB,GACA,MAAA2pB,IAAAzpB,KAAAF,GAAAtI,IAAAsI,GAYA,QAAA6pB,IAAA7pB,GACA,MAAA2pB,IAAAzpB,KAAAF,GAAAxD,IAAAwD,GAaA,QAAA8pB,IAAA9pB,EAAAvC,GACA,GAAAgQ,GAAAkc,GAAAzpB,KAAAF,GACA4N,EAAAH,EAAAG,IAIA,OAFAH,GAAAU,IAAAnO,EAAAvC,GACAyC,KAAA0N,MAAAH,EAAAG,QAAA,IACA1N,KAoBA,QAAA6pB,IAAAzlB,GACA,GAAAkF,IAAA,EACAlP,EAAA,MAAAgK,EAAA,EAAAA,EAAAhK,MAGA,KADA4F,KAAAqoB,SAAA,GAAAe,MACA9f,EAAAlP,GACA4F,KAAA8pB,IAAA1lB,EAAAkF,IAcA,QAAAygB,IAAAxsB,GAEA,MADAyC,MAAAqoB,SAAApa,IAAA1Q,EAAAyR,IACAhP,KAYA,QAAAgqB,IAAAzsB,GACA,MAAAyC,MAAAqoB,SAAA/rB,IAAAiB,GAgBA,QAAA0sB,IAAAhC,GACA,GAAA1a,GAAAvN,KAAAqoB,SAAA,GAAAM,IAAAV,EACAjoB,MAAA0N,KAAAH,EAAAG,KAUA,QAAAwc,MACAlqB,KAAAqoB,SAAA,GAAAM,IACA3oB,KAAA0N,KAAA,EAYA,QAAAyc,IAAArqB,GACA,GAAAyN,GAAAvN,KAAAqoB,SACAjrB,EAAAmQ,EAAA,OAAAzN,EAGA,OADAE,MAAA0N,KAAAH,EAAAG,KACAtQ,EAYA,QAAAgtB,IAAAtqB,GACA,MAAAE,MAAAqoB,SAAA7wB,IAAAsI,GAYA,QAAAuqB,IAAAvqB,GACA,MAAAE,MAAAqoB,SAAA/rB,IAAAwD,GAaA,QAAAwqB,IAAAxqB,EAAAvC,GACA,GAAAgQ,GAAAvN,KAAAqoB,QACA,IAAA9a,YAAAob,IAAA,CACA,GAAA4B,GAAAhd,EAAA8a,QACA,KAAAkB,IAAAgB,EAAAnwB,OAAAyU,GAAA,EAGA,MAFA0b,GAAA7tB,MAAAoD,EAAAvC,IACAyC,KAAA0N,OAAAH,EAAAG,KACA1N,IAEAuN,GAAAvN,KAAAqoB,SAAA,GAAAe,IAAAmB,GAIA,MAFAhd,GAAAU,IAAAnO,EAAAvC,GACAyC,KAAA0N,KAAAH,EAAAG,KACA1N,KAoBA,QAAAwqB,IAAAjtB,EAAAktB,GACA,GAAAvD,GAAAtB,GAAAroB,GACAmtB,GAAAxD,GAAAyD,GAAAptB,GACAqtB,GAAA1D,IAAAwD,GAAAG,GAAAttB,GACAutB,GAAA5D,IAAAwD,IAAAE,GAAAvF,GAAA9nB,GACAwtB,EAAA7D,GAAAwD,GAAAE,GAAAE,EACA1tB,EAAA2tB,EAAAhf,EAAAxO,EAAAnD,OAAA2E,OACA3E,EAAAgD,EAAAhD,MAEA,QAAA0F,KAAAvC,IACAktB,IAAA3yB,GAAAjB,KAAA0G,EAAAuC,IACAirB,IAEA,UAAAjrB,GAEA8qB,IAAA,UAAA9qB,GAAA,UAAAA,IAEAgrB,IAAA,UAAAhrB,GAAA,cAAAA,GAAA,cAAAA,IAEAkrB,GAAAlrB,EAAA1F,KAEAgD,EAAAV,KAAAoD,EAGA,OAAA1C,GAUA,QAAA6tB,IAAA/hB,GACA,GAAA9O,GAAA8O,EAAA9O,MACA,OAAAA,GAAA8O,EAAAgiB,GAAA,EAAA9wB,EAAA,IAAAgE,GAWA,QAAA+sB,IAAAjiB,EAAAzR,GACA,MAAA2zB,IAAAvE,GAAA3d,GAAAmiB,GAAA5zB,EAAA,EAAAyR,EAAA9O,SAUA,QAAAkxB,IAAApiB,GACA,MAAAkiB,IAAAvE,GAAA3d,IAYA,QAAAqiB,IAAA5zB,EAAAmI,EAAAvC,IACAA,IAAAa,IAAAotB,GAAA7zB,EAAAmI,GAAAvC,MACAA,IAAAa,IAAA0B,IAAAnI,KACA8zB,GAAA9zB,EAAAmI,EAAAvC,GAcA,QAAAmuB,IAAA/zB,EAAAmI,EAAAvC,GACA,GAAAouB,GAAAh0B,EAAAmI,EACAhI,IAAAjB,KAAAc,EAAAmI,IAAA0rB,GAAAG,EAAApuB,KACAA,IAAAa,IAAA0B,IAAAnI,KACA8zB,GAAA9zB,EAAAmI,EAAAvC,GAYA,QAAAurB,IAAA5f,EAAApJ,GAEA,IADA,GAAA1F,GAAA8O,EAAA9O,OACAA,KACA,GAAAoxB,GAAAtiB,EAAA9O,GAAA,GAAA0F,GACA,MAAA1F,EAGA,UAcA,QAAAwxB,IAAA1uB,EAAAiM,EAAAC,EAAAC,GAIA,MAHAwiB,IAAA3uB,EAAA,SAAAK,EAAAuC,EAAA5C,GACAiM,EAAAE,EAAA9L,EAAA6L,EAAA7L,GAAAL,KAEAmM,EAYA,QAAAyiB,IAAAn0B,EAAA+H,GACA,MAAA/H,IAAAo0B,GAAArsB,EAAAH,GAAAG,GAAA/H,GAYA,QAAAq0B,IAAAr0B,EAAA+H,GACA,MAAA/H,IAAAo0B,GAAArsB,EAAAusB,GAAAvsB,GAAA/H,GAYA,QAAA8zB,IAAA9zB,EAAAmI,EAAAvC,GACA,aAAAuC,GAAAzI,GACAA,GAAAM,EAAAmI,GACAxI,cAAA,EACAC,YAAA,EACAgG,QACA2uB,UAAA,IAGAv0B,EAAAmI,GAAAvC,EAYA,QAAA4uB,IAAAx0B,EAAAy0B,GAMA,IALA,GAAA9iB,IAAA,EACAlP,EAAAgyB,EAAAhyB,OACAgD,EAAA8M,GAAA9P,GACAiyB,EAAA,MAAA10B,IAEA2R,EAAAlP,GACAgD,EAAAkM,GAAA+iB,EAAAjuB,GAAA5G,GAAAG,EAAAy0B,EAAA9iB,GAEA,OAAAlM,GAYA,QAAAiuB,IAAAiB,EAAAC,EAAAC,GASA,MARAF,SACAE,IAAApuB,KACAkuB,KAAAE,EAAAF,EAAAE,GAEAD,IAAAnuB,KACAkuB,KAAAC,EAAAD,EAAAC,IAGAD,EAmBA,QAAAG,IAAAlvB,EAAAmvB,EAAAC,EAAA7sB,EAAAnI,EAAAi1B,GACA,GAAAxvB,GACAyvB,EAAAH,EAAAxd,GACA4d,EAAAJ,EAAAvd,GACA4d,EAAAL,EAAAtd,EAKA,IAHAud,IACAvvB,EAAAzF,EAAAg1B,EAAApvB,EAAAuC,EAAAnI,EAAAi1B,GAAAD,EAAApvB,IAEAH,IAAAgB,GACA,MAAAhB,EAEA,KAAA4vB,GAAAzvB,GACA,MAAAA,EAEA,IAAA2pB,GAAAtB,GAAAroB,EACA,IAAA2pB,GAEA,GADA9pB,EAAA6vB,GAAA1vB,IACAsvB,EACA,MAAAhG,IAAAtpB,EAAAH,OAEO,CACP,GAAA8vB,GAAAC,GAAA5vB,GACA6vB,EAAAF,GAAA7b,IAAA6b,GAAA5b,EAEA,IAAAuZ,GAAAttB,GACA,MAAA8vB,IAAA9vB,EAAAsvB,EAEA,IAAAK,GAAAxb,IAAAwb,GAAApc,IAAAsc,IAAAz1B,GAEA,GADAyF,EAAA0vB,GAAAM,KAA0CE,GAAA/vB,IAC1CsvB,EACA,MAAAC,GACAS,GAAAhwB,EAAAyuB,GAAA5uB,EAAAG,IACAiwB,GAAAjwB,EAAAuuB,GAAA1uB,EAAAG,QAES,CACT,IAAAiZ,GAAA0W,GACA,MAAAv1B,GAAA4F,IAEAH,GAAAqwB,GAAAlwB,EAAA2vB,EAAAL,IAIAD,MAAA,GAAA3C,IACA,IAAAyD,GAAAd,EAAAp1B,IAAA+F,EACA,IAAAmwB,EACA,MAAAA,EAIA,IAFAd,EAAA3e,IAAA1Q,EAAAH,GAEA+nB,GAAA5nB,GAKA,MAJAA,GAAApE,QAAA,SAAAw0B,GACAvwB,EAAA0sB,IAAA2C,GAAAkB,EAAAjB,EAAAC,EAAAgB,EAAApwB,EAAAqvB,MAGAxvB,CAGA,IAAA2nB,GAAAxnB,GAKA,MAJAA,GAAApE,QAAA,SAAAw0B,EAAA7tB,GACA1C,EAAA6Q,IAAAnO,EAAA2sB,GAAAkB,EAAAjB,EAAAC,EAAA7sB,EAAAvC,EAAAqvB,MAGAxvB,CAGA,IAAAwwB,GAAAb,EACAD,EAAAe,GAAAC,GACAhB,EAAAb,GAAA1sB,GAEA0M,EAAAib,EAAA9oB,GAAAwvB,EAAArwB,EASA,OARAgM,GAAA0C,GAAA1O,EAAA,SAAAowB,EAAA7tB,GACAmM,IACAnM,EAAA6tB,EACAA,EAAApwB,EAAAuC,IAGA4rB,GAAAtuB,EAAA0C,EAAA2sB,GAAAkB,EAAAjB,EAAAC,EAAA7sB,EAAAvC,EAAAqvB,MAEAxvB,EAUA,QAAA2wB,IAAAruB,GACA,GAAAuM,GAAA1M,GAAAG,EACA,iBAAA/H,GACA,MAAAq2B,IAAAr2B,EAAA+H,EAAAuM,IAYA,QAAA+hB,IAAAr2B,EAAA+H,EAAAuM,GACA,GAAA7R,GAAA6R,EAAA7R,MACA,UAAAzC,EACA,OAAAyC,CAGA,KADAzC,EAAAP,GAAAO,GACAyC,KAAA,CACA,GAAA0F,GAAAmM,EAAA7R,GACAsP,EAAAhK,EAAAI,GACAvC,EAAA5F,EAAAmI,EAEA,IAAAvC,IAAAa,MAAA0B,IAAAnI,MAAA+R,EAAAnM,GACA,SAGA,SAaA,QAAA0wB,IAAAllB,EAAAmlB,EAAArrB,GACA,qBAAAkG,GACA,SAAAtK,IAAAsQ,GAEA,OAAAof,IAAA,WAAoCplB,EAAAD,MAAA1K,GAAAyE,IAA+BqrB,GAcnE,QAAAE,IAAAllB,EAAA9E,EAAAgF,EAAAY,GACA,GAAAV,IAAA,EACA+kB,EAAAxkB,EACAykB,GAAA,EACAl0B,EAAA8O,EAAA9O,OACAgD,KACAmxB,EAAAnqB,EAAAhK,MAEA,KAAAA,EACA,MAAAgD,EAEAgM,KACAhF,EAAA6F,EAAA7F,EAAA8H,EAAA9C,KAEAY,GACAqkB,EAAAtkB,EACAukB,GAAA,GAEAlqB,EAAAhK,QAAAyU,KACAwf,EAAAjiB,EACAkiB,GAAA,EACAlqB,EAAA,GAAAylB,IAAAzlB,GAEAyjB,GACA,OAAAve,EAAAlP,GAAA,CACA,GAAAmD,GAAA2L,EAAAI,GACAye,EAAA,MAAA3e,EAAA7L,EAAA6L,EAAA7L,EAGA,IADAA,EAAAyM,GAAA,IAAAzM,IAAA,EACA+wB,GAAAvG,MAAA,CAEA,IADA,GAAAyG,GAAAD,EACAC,KACA,GAAApqB,EAAAoqB,KAAAzG,EACA,QAAAF,EAGAzqB,GAAAV,KAAAa,OAEA8wB,GAAAjqB,EAAA2jB,EAAA/d,IACA5M,EAAAV,KAAAa,GAGA,MAAAH,GAgCA,QAAAqxB,IAAAvxB,EAAAwM,GACA,GAAAtM,IAAA,CAKA,OAJAyuB,IAAA3uB,EAAA,SAAAK,EAAA+L,EAAApM,GAEA,MADAE,KAAAsM,EAAAnM,EAAA+L,EAAApM,KAGAE,EAaA,QAAAsxB,IAAAxlB,EAAAE,EAAAY,GAIA,IAHA,GAAAV,IAAA,EACAlP,EAAA8O,EAAA9O,SAEAkP,EAAAlP,GAAA,CACA,GAAAmD,GAAA2L,EAAAI,GACAwC,EAAA1C,EAAA7L,EAEA,UAAAuO,IAAAic,IAAA3pB,GACA0N,QAAA6iB,GAAA7iB,GACA9B,EAAA8B,EAAAic,IAEA,GAAAA,GAAAjc,EACA1O,EAAAG,EAGA,MAAAH,GAaA,QAAAwxB,IAAA1lB,EAAA3L,EAAAE,EAAA8pB,GACA,GAAAntB,GAAA8O,EAAA9O,MAWA,KATAqD,EAAAoxB,GAAApxB,GACAA,EAAA,IACAA,KAAArD,EAAA,EAAAA,EAAAqD,GAEA8pB,MAAAnpB,IAAAmpB,EAAAntB,IAAAy0B,GAAAtH,GACAA,EAAA,IACAA,GAAAntB,GAEAmtB,EAAA9pB,EAAA8pB,EAAA,EAAAuH,GAAAvH,GACA9pB,EAAA8pB,GACAre,EAAAzL,KAAAF,CAEA,OAAA2L,GAWA,QAAA6lB,IAAA7xB,EAAAwM,GACA,GAAAtM,KAMA,OALAyuB,IAAA3uB,EAAA,SAAAK,EAAA+L,EAAApM,GACAwM,EAAAnM,EAAA+L,EAAApM,IACAE,EAAAV,KAAAa,KAGAH,EAcA,QAAA4xB,IAAA9lB,EAAA+lB,EAAAvlB,EAAAwlB,EAAA9xB,GACA,GAAAkM,IAAA,EACAlP,EAAA8O,EAAA9O,MAKA,KAHAsP,MAAAylB,IACA/xB,YAEAkM,EAAAlP,GAAA,CACA,GAAAmD,GAAA2L,EAAAI,EACA2lB,GAAA,GAAAvlB,EAAAnM,GACA0xB,EAAA,EAEAD,GAAAzxB,EAAA0xB,EAAA,EAAAvlB,EAAAwlB,EAAA9xB,GAEA+M,EAAA/M,EAAAG,GAES2xB,IACT9xB,IAAAhD,QAAAmD,GAGA,MAAAH,GAoCA,QAAAgyB,IAAAz3B,EAAAyR,GACA,MAAAzR,IAAA03B,GAAA13B,EAAAyR,EAAA7J,IAWA,QAAA+vB,IAAA33B,EAAAyR,GACA,MAAAzR,IAAA43B,GAAA53B,EAAAyR,EAAA7J,IAYA,QAAAiwB,IAAA73B,EAAAsU,GACA,MAAAtC,GAAAsC,EAAA,SAAAnM,GACA,MAAAwC,IAAA3K,EAAAmI,MAYA,QAAA2vB,IAAA93B,EAAA+3B,GACAA,EAAAC,GAAAD,EAAA/3B,EAKA,KAHA,GAAA2R,GAAA,EACAlP,EAAAs1B,EAAAt1B,OAEA,MAAAzC,GAAA2R,EAAAlP,GACAzC,IAAAi4B,GAAAF,EAAApmB,MAEA,OAAAA,OAAAlP,EAAAzC,EAAAyG,GAcA,QAAAyxB,IAAAl4B,EAAAi2B,EAAAkC,GACA,GAAA1yB,GAAAwwB,EAAAj2B,EACA,OAAAiuB,IAAAjuB,GAAAyF,EAAA+M,EAAA/M,EAAA0yB,EAAAn4B,IAUA,QAAAo4B,IAAAxyB,GACA,aAAAA,EACAA,IAAAa,GAAA4T,GAAAP,GAEAue,SAAA54B,IAAAmG,GACA0yB,GAAA1yB,GACA2yB,GAAA3yB,GAYA,QAAA4yB,IAAA5yB,EAAA6yB,GACA,MAAA7yB,GAAA6yB,EAWA,QAAAC,IAAA14B,EAAAmI,GACA,aAAAnI,GAAAG,GAAAjB,KAAAc,EAAAmI,GAWA,QAAAwwB,IAAA34B,EAAAmI,GACA,aAAAnI,GAAAmI,IAAA1I,IAAAO,GAYA,QAAA44B,IAAAjE,EAAA7uB,EAAA8pB,GACA,MAAA+E,IAAA3E,GAAAlqB,EAAA8pB,IAAA+E,EAAAkE,GAAA/yB,EAAA8pB,GAaA,QAAAkJ,IAAAC,EAAAtnB,EAAAY,GASA,IARA,GAAAqkB,GAAArkB,EAAAD,EAAAF,EACAzP,EAAAs2B,EAAA,GAAAt2B,OACAu2B,EAAAD,EAAAt2B,OACAw2B,EAAAD,EACAE,EAAA3mB,GAAAymB,GACAG,EAAAC,IACA3zB,KAEAwzB,KAAA,CACA,GAAA1nB,GAAAwnB,EAAAE,EACAA,IAAAxnB,IACAF,EAAAe,EAAAf,EAAAgD,EAAA9C,KAEA0nB,EAAAnJ,GAAAze,EAAA9O,OAAA02B,GACAD,EAAAD,IAAA5mB,IAAAZ,GAAAhP,GAAA,KAAA8O,EAAA9O,QAAA,KACA,GAAAyvB,IAAA+G,GAAA1nB,GACA9K,GAEA8K,EAAAwnB,EAAA,EAEA,IAAApnB,IAAA,EACA0nB,EAAAH,EAAA,EAEAhJ,GACA,OAAAve,EAAAlP,GAAAgD,EAAAhD,OAAA02B,GAAA,CACA,GAAAvzB,GAAA2L,EAAAI,GACAye,EAAA3e,IAAA7L,IAGA,IADAA,EAAAyM,GAAA,IAAAzM,IAAA,IACAyzB,EACA5kB,EAAA4kB,EAAAjJ,GACAsG,EAAAjxB,EAAA2qB,EAAA/d,IACA,CAEA,IADA4mB,EAAAD,IACAC,GAAA,CACA,GAAAvkB,GAAAwkB,EAAAD,EACA,MAAAvkB,EACAD,EAAAC,EAAA0b,GACAsG,EAAAqC,EAAAE,GAAA7I,EAAA/d,IAEA,QAAA6d,GAGAmJ,GACAA,EAAAt0B,KAAAqrB,GAEA3qB,EAAAV,KAAAa,IAGA,MAAAH,GAcA,QAAA6zB,IAAAt5B,EAAAwR,EAAAC,EAAAC,GAIA,MAHA+lB,IAAAz3B,EAAA,SAAA4F,EAAAuC,EAAAnI,GACAwR,EAAAE,EAAAD,EAAA7L,GAAAuC,EAAAnI,KAEA0R,EAaA,QAAA6nB,IAAAv5B,EAAA+3B,EAAA7sB,GACA6sB,EAAAC,GAAAD,EAAA/3B,GACAA,EAAAyL,GAAAzL,EAAA+3B,EACA,IAAA3mB,GAAA,MAAApR,MAAAi4B,GAAAuB,GAAAzB,IACA,cAAA3mB,EAAA3K,GAAA0K,EAAAC,EAAApR,EAAAkL,GAUA,QAAAuuB,IAAA7zB,GACA,MAAAooB,IAAApoB,IAAAwyB,GAAAxyB,IAAAuT,GAUA,QAAAugB,IAAA9zB,GACA,MAAAooB,IAAApoB,IAAAwyB,GAAAxyB,IAAA4U,GAUA,QAAAmf,IAAA/zB,GACA,MAAAooB,IAAApoB,IAAAwyB,GAAAxyB,IAAA2T,GAiBA,QAAAqgB,IAAAh0B,EAAA6yB,EAAA1D,EAAAC,EAAAC,GACA,MAAArvB,KAAA6yB,IAGA,MAAA7yB,GAAA,MAAA6yB,IAAAzK,GAAApoB,KAAAooB,GAAAyK,GACA7yB,OAAA6yB,MAEAoB,GAAAj0B,EAAA6yB,EAAA1D,EAAAC,EAAA4E,GAAA3E,IAiBA,QAAA4E,IAAA75B,EAAAy4B,EAAA1D,EAAAC,EAAA8E,EAAA7E,GACA,GAAA8E,GAAA9L,GAAAjuB,GACAg6B,EAAA/L,GAAAwK,GACAwB,EAAAF,EAAA3gB,GAAAoc,GAAAx1B,GACAk6B,EAAAF,EAAA5gB,GAAAoc,GAAAiD,EAEAwB,MAAA9gB,GAAAY,GAAAkgB,EACAC,KAAA/gB,GAAAY,GAAAmgB,CAEA,IAAAC,GAAAF,GAAAlgB,GACAqgB,EAAAF,GAAAngB,GACAsgB,EAAAJ,GAAAC,CAEA,IAAAG,GAAAnH,GAAAlzB,GAAA,CACA,IAAAkzB,GAAAuF,GACA,QAEAsB,IAAA,EACAI,GAAA,EAEA,GAAAE,IAAAF,EAEA,MADAlF,OAAA,GAAA3C,KACAyH,GAAArM,GAAA1tB,GACAs6B,GAAAt6B,EAAAy4B,EAAA1D,EAAAC,EAAA8E,EAAA7E,GACAsF,GAAAv6B,EAAAy4B,EAAAwB,EAAAlF,EAAAC,EAAA8E,EAAA7E,EAEA,MAAAF,EAAArd,IAAA,CACA,GAAA8iB,GAAAL,GAAAh6B,GAAAjB,KAAAc,EAAA,eACAy6B,EAAAL,GAAAj6B,GAAAjB,KAAAu5B,EAAA,cAEA,IAAA+B,GAAAC,EAAA,CACA,GAAAC,GAAAF,EAAAx6B,EAAA4F,QAAA5F,EACA26B,EAAAF,EAAAhC,EAAA7yB,QAAA6yB,CAGA,OADAxD,OAAA,GAAA3C,KACAwH,EAAAY,EAAAC,EAAA5F,EAAAC,EAAAC,IAGA,QAAAoF,IAGApF,MAAA,GAAA3C,KACAsI,GAAA56B,EAAAy4B,EAAA1D,EAAAC,EAAA8E,EAAA7E,IAUA,QAAA4F,IAAAj1B,GACA,MAAAooB,IAAApoB,IAAA4vB,GAAA5vB,IAAAgU,GAaA,QAAAkhB,IAAA96B,EAAA+H,EAAAgzB,EAAA/F,GACA,GAAArjB,GAAAopB,EAAAt4B,OACAA,EAAAkP,EACAqpB,GAAAhG,CAEA,UAAAh1B,EACA,OAAAyC,CAGA,KADAzC,EAAAP,GAAAO,GACA2R,KAAA,CACA,GAAAiE,GAAAmlB,EAAAppB,EACA,IAAAqpB,GAAAplB,EAAA,GACAA,EAAA,KAAA5V,EAAA4V,EAAA,MACAA,EAAA,IAAA5V,IAEA,SAGA,OAAA2R,EAAAlP,GAAA,CACAmT,EAAAmlB,EAAAppB,EACA,IAAAxJ,GAAAyN,EAAA,GACAoe,EAAAh0B,EAAAmI,GACA8yB,EAAArlB,EAAA,EAEA,IAAAolB,GAAAplB,EAAA,IACA,GAAAoe,IAAAvtB,MAAA0B,IAAAnI,IACA,aAES,CACT,GAAAi1B,GAAA,GAAA3C,GACA,IAAA0C,EACA,GAAAvvB,GAAAuvB,EAAAhB,EAAAiH,EAAA9yB,EAAAnI,EAAA+H,EAAAktB,EAEA,MAAAxvB,IAAAgB,GACAmzB,GAAAqB,EAAAjH,EAAAtc,GAAAC,GAAAqd,EAAAC,GACAxvB,GAEA,UAIA,SAWA,QAAAy1B,IAAAt1B,GACA,SAAAyvB,GAAAzvB,IAAAu1B,GAAAv1B,MAGA+E,GAAA/E,GAAAw1B,GAAAte,IACAvH,KAAA8lB,GAAAz1B,IAUA,QAAA01B,IAAA11B,GACA,MAAAooB,IAAApoB,IAAAwyB,GAAAxyB,IAAAqU,GAUA,QAAAshB,IAAA31B,GACA,MAAAooB,IAAApoB,IAAA4vB,GAAA5vB,IAAAsU,GAUA,QAAAshB,IAAA51B,GACA,MAAAooB,IAAApoB,IACA61B,GAAA71B,EAAAnD,WAAAmc,GAAAwZ,GAAAxyB,IAUA,QAAA81B,IAAA91B,GAGA,wBAAAA,GACAA,EAEA,MAAAA,EACA+1B,GAEA,gBAAA/1B,GACAqoB,GAAAroB,GACAg2B,GAAAh2B,EAAA,GAAAA,EAAA,IACAi2B,GAAAj2B,GAEA3F,GAAA2F,GAUA,QAAAk2B,IAAA97B,GACA,IAAA+7B,GAAA/7B,GACA,MAAAg8B,IAAAh8B,EAEA,IAAAyF,KACA,QAAA0C,KAAA1I,IAAAO,GACAG,GAAAjB,KAAAc,EAAAmI,IAAA,eAAAA,GACA1C,EAAAV,KAAAoD,EAGA,OAAA1C,GAUA,QAAAw2B,IAAAj8B,GACA,IAAAq1B,GAAAr1B,GACA,MAAAk8B,IAAAl8B,EAEA,IAAAm8B,GAAAJ,GAAA/7B,GACAyF,IAEA,QAAA0C,KAAAnI,IACA,eAAAmI,IAAAg0B,GAAAh8B,GAAAjB,KAAAc,EAAAmI,KACA1C,EAAAV,KAAAoD,EAGA,OAAA1C,GAYA,QAAA22B,IAAAx2B,EAAA6yB,GACA,MAAA7yB,GAAA6yB,EAWA,QAAA4D,IAAA92B,EAAAkM,GACA,GAAAE,IAAA,EACAlM,EAAA62B,GAAA/2B,GAAAgN,GAAAhN,EAAA9C,UAKA,OAHAyxB,IAAA3uB,EAAA,SAAAK,EAAAuC,EAAA5C,GACAE,IAAAkM,GAAAF,EAAA7L,EAAAuC,EAAA5C,KAEAE,EAUA,QAAAo2B,IAAA9zB,GACA,GAAAgzB,GAAAwB,GAAAx0B,EACA,WAAAgzB,EAAAt4B,QAAAs4B,EAAA,MACAyB,GAAAzB,EAAA,MAAAA,EAAA,OAEA,SAAA/6B,GACA,MAAAA,KAAA+H,GAAA+yB,GAAA96B,EAAA+H,EAAAgzB,IAYA,QAAAa,IAAA7D,EAAAkD,GACA,MAAAwB,IAAA1E,IAAA2E,GAAAzB,GACAuB,GAAAvE,GAAAF,GAAAkD,GAEA,SAAAj7B,GACA,GAAAg0B,GAAAn0B,GAAAG,EAAA+3B,EACA,OAAA/D,KAAAvtB,IAAAutB,IAAAiH,EACA0B,GAAA38B,EAAA+3B,GACA6B,GAAAqB,EAAAjH,EAAAtc,GAAAC,KAeA,QAAAilB,IAAA58B,EAAA+H,EAAA80B,EAAA7H,EAAAC,GACAj1B,IAAA+H,GAGA2vB,GAAA3vB,EAAA,SAAAkzB,EAAA9yB,GACA,GAAAktB,GAAA4F,GACAhG,MAAA,GAAA3C,KACAwK,GAAA98B,EAAA+H,EAAAI,EAAA00B,EAAAD,GAAA5H,EAAAC,OAEA,CACA,GAAA5lB,GAAA2lB,EACAA,EAAA5e,EAAApW,EAAAmI,GAAA8yB,EAAA9yB,EAAA,GAAAnI,EAAA+H,EAAAktB,GACAxuB,EAEA4I,KAAA5I,KACA4I,EAAA4rB,GAEArH,GAAA5zB,EAAAmI,EAAAkH,KAEOilB,IAkBP,QAAAwI,IAAA98B,EAAA+H,EAAAI,EAAA00B,EAAAE,EAAA/H,EAAAC,GACA,GAAAjB,GAAA5d,EAAApW,EAAAmI,GACA8yB,EAAA7kB,EAAArO,EAAAI,GACA4tB,EAAAd,EAAAp1B,IAAAo7B,EAEA,IAAAlF,EAEA,WADAnC,IAAA5zB,EAAAmI,EAAA4tB,EAGA,IAAA1mB,GAAA2lB,EACAA,EAAAhB,EAAAiH,EAAA9yB,EAAA,GAAAnI,EAAA+H,EAAAktB,GACAxuB,GAEAkwB,EAAAtnB,IAAA5I,EAEA,IAAAkwB,EAAA,CACA,GAAApH,GAAAtB,GAAAgN,GACAhI,GAAA1D,GAAA2D,GAAA+H,GACA+B,GAAAzN,IAAA0D,GAAAvF,GAAAuN,EAEA5rB,GAAA4rB,EACA1L,GAAA0D,GAAA+J,EACA/O,GAAA+F,GACA3kB,EAAA2kB,EAEAiJ,GAAAjJ,GACA3kB,EAAA6f,GAAA8E,GAEAf,GACA0D,GAAA,EACAtnB,EAAAqmB,GAAAuF,GAAA,IAEA+B,GACArG,GAAA,EACAtnB,EAAA6tB,GAAAjC,GAAA,IAGA5rB,KAGA8tB,GAAAlC,IAAAjI,GAAAiI,IACA5rB,EAAA2kB,EACAhB,GAAAgB,GACA3kB,EAAA+tB,GAAApJ,KAEAqB,GAAArB,IAAA6I,GAAAlyB,GAAAqpB,MACA3kB,EAAAsmB,GAAAsF,KAIAtE,GAAA,EAGAA,IAEA1B,EAAA3e,IAAA2kB,EAAA5rB,GACA0tB,EAAA1tB,EAAA4rB,EAAA4B,EAAA7H,EAAAC,GACAA,EAAA,OAAAgG,IAEArH,GAAA5zB,EAAAmI,EAAAkH,GAWA,QAAAguB,IAAA9rB,EAAAzR,GACA,GAAA2C,GAAA8O,EAAA9O,MACA,IAAAA,EAIA,MADA3C,MAAA,EAAA2C,EAAA,EACA4wB,GAAAvzB,EAAA2C,GAAA8O,EAAAzR,GAAA2G,GAYA,QAAA62B,IAAA/3B,EAAAsqB,EAAA0N,GACA,GAAA5rB,IAAA,CAUA,OATAke,GAAAvd,EAAAud,EAAAptB,OAAAotB,GAAA8L,IAAApnB,EAAAipB,OASAxpB,EAPAqoB,GAAA92B,EAAA,SAAAK,EAAAuC,EAAA5C,GAIA,OAAgBk4B,SAHhBnrB,EAAAud,EAAA,SAAApe,GACA,MAAAA,GAAA7L,KAEgB+L,UAAA/L,WAGhB,SAAA5F,EAAAy4B,GACA,MAAAiF,IAAA19B,EAAAy4B,EAAA8E,KAaA,QAAAI,IAAA39B,EAAAy0B,GACA,MAAAmJ,IAAA59B,EAAAy0B,EAAA,SAAA7uB,EAAAmyB,GACA,MAAA4E,IAAA38B,EAAA+3B,KAaA,QAAA6F,IAAA59B,EAAAy0B,EAAA1iB,GAKA,IAJA,GAAAJ,IAAA,EACAlP,EAAAgyB,EAAAhyB,OACAgD,OAEAkM,EAAAlP,GAAA,CACA,GAAAs1B,GAAAtD,EAAA9iB,GACA/L,EAAAkyB,GAAA93B,EAAA+3B,EAEAhmB,GAAAnM,EAAAmyB,IACA8F,GAAAp4B,EAAAuyB,GAAAD,EAAA/3B,GAAA4F,GAGA,MAAAH,GAUA,QAAAq4B,IAAA/F,GACA,gBAAA/3B,GACA,MAAA83B,IAAA93B,EAAA+3B,IAeA,QAAAgG,IAAAxsB,EAAA9E,EAAAgF,EAAAY,GACA,GAAA2rB,GAAA3rB,EAAAoB,EAAAtB,EACAR,GAAA,EACAlP,EAAAgK,EAAAhK,OACA42B,EAAA9nB,CAQA,KANAA,IAAA9E,IACAA,EAAAyiB,GAAAziB,IAEAgF,IACA4nB,EAAA/mB,EAAAf,EAAAgD,EAAA9C,OAEAE,EAAAlP,GAKA,IAJA,GAAA4Q,GAAA,EACAzN,EAAA6G,EAAAkF,GACAye,EAAA3e,IAAA7L,MAEAyN,EAAA2qB,EAAA3E,EAAAjJ,EAAA/c,EAAAhB,KAAA,GACAgnB,IAAA9nB,GACA8f,GAAAnyB,KAAAm6B,EAAAhmB,EAAA,GAEAge,GAAAnyB,KAAAqS,EAAA8B,EAAA,EAGA,OAAA9B,GAYA,QAAA0sB,IAAA1sB,EAAA2sB,GAIA,IAHA,GAAAz7B,GAAA8O,EAAA2sB,EAAAz7B,OAAA,EACAsU,EAAAtU,EAAA,EAEAA,KAAA,CACA,GAAAkP,GAAAusB,EAAAz7B,EACA,IAAAA,GAAAsU,GAAApF,IAAAwsB,EAAA,CACA,GAAAA,GAAAxsB,CACA0hB,IAAA1hB,GACA0f,GAAAnyB,KAAAqS,EAAAI,EAAA,GAEAysB,GAAA7sB,EAAAI,IAIA,MAAAJ,GAYA,QAAAgiB,IAAAqB,EAAAC,GACA,MAAAD,GAAAyJ,GAAAC,MAAAzJ,EAAAD,EAAA,IAcA,QAAA2J,IAAAz4B,EAAA8pB,EAAA4O,EAAAlrB,GAKA,IAJA,GAAA3B,IAAA,EACAlP,EAAAo2B,GAAA4F,IAAA7O,EAAA9pB,IAAA04B,GAAA,OACA/4B,EAAA8M,GAAA9P,GAEAA,KACAgD,EAAA6N,EAAA7Q,IAAAkP,GAAA7L,EACAA,GAAA04B,CAEA,OAAA/4B,GAWA,QAAAi5B,IAAA5rB,EAAAhT,GACA,GAAA2F,GAAA,EACA,KAAAqN,GAAAhT,EAAA,GAAAA,EAAA+Y,GACA,MAAApT,EAIA,IACA3F,EAAA,IACA2F,GAAAqN,IAEAhT,EAAAu+B,GAAAv+B,EAAA,MAEAgT,YAEOhT,EAEP,OAAA2F,GAWA,QAAAk5B,IAAAvtB,EAAAtL,GACA,MAAA84B,IAAAC,GAAAztB,EAAAtL,EAAA61B,IAAAvqB,EAAA,IAUA,QAAA0tB,IAAAv5B,GACA,MAAA+tB,IAAA7mB,GAAAlH,IAWA,QAAAw5B,IAAAx5B,EAAAzF,GACA,GAAAyR,GAAA9E,GAAAlH,EACA,OAAAkuB,IAAAliB,EAAAmiB,GAAA5zB,EAAA,EAAAyR,EAAA9O,SAaA,QAAAo7B,IAAA79B,EAAA+3B,EAAAnyB,EAAAovB,GACA,IAAAK,GAAAr1B,GACA,MAAAA,EAEA+3B,GAAAC,GAAAD,EAAA/3B,EAOA,KALA,GAAA2R,IAAA,EACAlP,EAAAs1B,EAAAt1B,OACAsU,EAAAtU,EAAA,EACAu8B,EAAAh/B,EAEA,MAAAg/B,KAAArtB,EAAAlP,GAAA,CACA,GAAA0F,GAAA8vB,GAAAF,EAAApmB,IACAtC,EAAAzJ,CAEA,IAAA+L,GAAAoF,EAAA,CACA,GAAAid,GAAAgL,EAAA72B,EACAkH,GAAA2lB,IAAAhB,EAAA7rB,EAAA62B,GAAAv4B,GACA4I,IAAA5I,KACA4I,EAAAgmB,GAAArB,GACAA,EACAX,GAAA0E,EAAApmB,EAAA,WAGAoiB,GAAAiL,EAAA72B,EAAAkH,GACA2vB,IAAA72B,GAEA,MAAAnI,GAwCA,QAAAi/B,IAAA15B,GACA,MAAAkuB,IAAAhnB,GAAAlH,IAYA,QAAA25B,IAAA3tB,EAAAzL,EAAA8pB,GACA,GAAAje,IAAA,EACAlP,EAAA8O,EAAA9O,MAEAqD,GAAA,IACAA,KAAArD,EAAA,EAAAA,EAAAqD,GAEA8pB,IAAAntB,IAAAmtB,EACAA,EAAA,IACAA,GAAAntB,GAEAA,EAAAqD,EAAA8pB,EAAA,EAAAA,EAAA9pB,IAAA,EACAA,KAAA,CAGA,KADA,GAAAL,GAAA8M,GAAA9P,KACAkP,EAAAlP,GACAgD,EAAAkM,GAAAJ,EAAAI,EAAA7L,EAEA,OAAAL,GAYA,QAAA05B,IAAA55B,EAAAwM,GACA,GAAAtM,EAMA,OAJAyuB,IAAA3uB,EAAA,SAAAK,EAAA+L,EAAApM,GAEA,QADAE,EAAAsM,EAAAnM,EAAA+L,EAAApM,QAGAE,EAeA,QAAA25B,IAAA7tB,EAAA3L,EAAAy5B,GACA,GAAAC,GAAA,EACAC,EAAA,MAAAhuB,EAAA+tB,EAAA/tB,EAAA9O,MAEA,oBAAAmD,WAAA25B,GAAAtmB,GAAA,CACA,KAAAqmB,EAAAC,GAAA,CACA,GAAAC,GAAAF,EAAAC,IAAA,EACAnP,EAAA7e,EAAAiuB,EAEA,QAAApP,IAAA4G,GAAA5G,KACAiP,EAAAjP,GAAAxqB,EAAAwqB,EAAAxqB,GACA05B,EAAAE,EAAA,EAEAD,EAAAC,EAGA,MAAAD,GAEA,MAAAE,IAAAluB,EAAA3L,EAAA+1B,GAAA0D,GAgBA,QAAAI,IAAAluB,EAAA3L,EAAA6L,EAAA4tB,GACAz5B,EAAA6L,EAAA7L,EASA,KAPA,GAAA05B,GAAA,EACAC,EAAA,MAAAhuB,EAAA,EAAAA,EAAA9O,OACAi9B,EAAA95B,MACA+5B,EAAA,OAAA/5B,EACAg6B,EAAA5I,GAAApxB,GACAi6B,EAAAj6B,IAAAa,GAEA64B,EAAAC,GAAA,CACA,GAAAC,GAAAnB,IAAAiB,EAAAC,GAAA,GACAnP,EAAA3e,EAAAF,EAAAiuB,IACAM,EAAA1P,IAAA3pB,GACAs5B,EAAA,OAAA3P,EACA4P,EAAA5P,MACA6P,EAAAjJ,GAAA5G,EAEA,IAAAsP,EACA,GAAAQ,GAAAb,GAAAW,MAEAE,GADSL,EACTG,IAAAX,GAAAS,GACSH,EACTK,GAAAF,IAAAT,IAAAU,GACSH,EACTI,GAAAF,IAAAC,IAAAV,IAAAY,IACSF,IAAAE,IAGTZ,EAAAjP,GAAAxqB,EAAAwqB,EAAAxqB,EAEAs6B,GACAZ,EAAAE,EAAA,EAEAD,EAAAC,EAGA,MAAAxP,IAAAuP,EAAAvmB,IAYA,QAAAmnB,IAAA5uB,EAAAE,GAMA,IALA,GAAAE,IAAA,EACAlP,EAAA8O,EAAA9O,OACAwP,EAAA,EACAxM,OAEAkM,EAAAlP,GAAA,CACA,GAAAmD,GAAA2L,EAAAI,GACAye,EAAA3e,IAAA7L,IAEA,KAAA+L,IAAAkiB,GAAAzD,EAAAiJ,GAAA,CACA,GAAAA,GAAAjJ,CACA3qB,GAAAwM,KAAA,IAAArM,EAAA,EAAAA,GAGA,MAAAH,GAWA,QAAA26B,IAAAx6B,GACA,sBAAAA,GACAA,EAEAoxB,GAAApxB,GACAgO,IAEAhO,EAWA,QAAAy6B,IAAAz6B,GAEA,mBAAAA,GACA,MAAAA,EAEA,IAAAqoB,GAAAroB,GAEA,MAAA0M,GAAA1M,EAAAy6B,IAAA,EAEA,IAAArJ,GAAApxB,GACA,MAAA06B,OAAAphC,KAAA0G,GAAA,EAEA,IAAAH,GAAAG,EAAA,EACA,YAAAH,GAAA,EAAAG,IAAAgT,GAAA,KAAAnT,EAYA,QAAA86B,IAAAhvB,EAAAE,EAAAY,GACA,GAAAV,IAAA,EACA+kB,EAAAxkB,EACAzP,EAAA8O,EAAA9O,OACAk0B,GAAA,EACAlxB,KACA4zB,EAAA5zB,CAEA,IAAA4M,EACAskB,GAAA,EACAD,EAAAtkB,MAEA,IAAA3P,GAAAyU,GAAA,CACA,GAAAZ,GAAA7E,EAAA,KAAA+uB,GAAAjvB,EACA,IAAA+E,EACA,MAAAD,GAAAC,EAEAqgB,IAAA,EACAD,EAAAjiB,EACA4kB,EAAA,GAAAnH,QAGAmH,GAAA5nB,KAAAhM,CAEAyqB,GACA,OAAAve,EAAAlP,GAAA,CACA,GAAAmD,GAAA2L,EAAAI,GACAye,EAAA3e,IAAA7L,IAGA,IADAA,EAAAyM,GAAA,IAAAzM,IAAA,EACA+wB,GAAAvG,MAAA,CAEA,IADA,GAAAqQ,GAAApH,EAAA52B,OACAg+B,KACA,GAAApH,EAAAoH,KAAArQ,EACA,QAAAF,EAGAze,IACA4nB,EAAAt0B,KAAAqrB,GAEA3qB,EAAAV,KAAAa,OAEA8wB,GAAA2C,EAAAjJ,EAAA/d,KACAgnB,IAAA5zB,GACA4zB,EAAAt0B,KAAAqrB,GAEA3qB,EAAAV,KAAAa,IAGA,MAAAH,GAWA,QAAA24B,IAAAp+B,EAAA+3B,GAGA,MAFAA,GAAAC,GAAAD,EAAA/3B,GAEA,OADAA,EAAAyL,GAAAzL,EAAA+3B,WACA/3B,GAAAi4B,GAAAuB,GAAAzB,KAaA,QAAA2I,IAAA1gC,EAAA+3B,EAAA4I,EAAA3L,GACA,MAAA6I,IAAA79B,EAAA+3B,EAAA4I,EAAA7I,GAAA93B,EAAA+3B,IAAA/C,GAcA,QAAA4L,IAAArvB,EAAAQ,EAAA8uB,EAAAvtB,GAIA,IAHA,GAAA7Q,GAAA8O,EAAA9O,OACAkP,EAAA2B,EAAA7Q,GAAA,GAEA6Q,EAAA3B,QAAAlP,IACAsP,EAAAR,EAAAI,KAAAJ,KAEA,MAAAsvB,GACA3B,GAAA3tB,EAAA+B,EAAA,EAAA3B,EAAA2B,EAAA3B,EAAA,EAAAlP,GACAy8B,GAAA3tB,EAAA+B,EAAA3B,EAAA,IAAA2B,EAAA7Q,EAAAkP,GAaA,QAAAse,IAAArqB,EAAAk7B,GACA,GAAAr7B,GAAAG,CAIA,OAHAH,aAAAyoB,KACAzoB,IAAAG,SAEA6M,EAAAquB,EAAA,SAAAr7B,EAAAs7B,GACA,MAAAA,GAAA3vB,KAAAD,MAAA4vB,EAAA1vB,QAAAmB,GAAA/M,GAAAs7B,EAAA71B,QACOzF,GAaP,QAAAu7B,IAAAjI,EAAAtnB,EAAAY,GACA,GAAA5P,GAAAs2B,EAAAt2B,MACA,IAAAA,EAAA,EACA,MAAAA,GAAA89B,GAAAxH,EAAA,MAKA,KAHA,GAAApnB,IAAA,EACAlM,EAAA8M,GAAA9P,KAEAkP,EAAAlP,GAIA,IAHA,GAAA8O,GAAAwnB,EAAApnB,GACAsnB,GAAA,IAEAA,EAAAx2B,GACAw2B,GAAAtnB,IACAlM,EAAAkM,GAAA8kB,GAAAhxB,EAAAkM,IAAAJ,EAAAwnB,EAAAE,GAAAxnB,EAAAY,GAIA,OAAAkuB,IAAAlJ,GAAA5xB,EAAA,GAAAgM,EAAAY,GAYA,QAAA4uB,IAAA3sB,EAAA7H,EAAAy0B,GAMA,IALA,GAAAvvB,IAAA,EACAlP,EAAA6R,EAAA7R,OACA0+B,EAAA10B,EAAAhK,OACAgD,OAEAkM,EAAAlP,GAAA,CACA,GAAAmD,GAAA+L,EAAAwvB,EAAA10B,EAAAkF,GAAAlL,EACAy6B,GAAAz7B,EAAA6O,EAAA3C,GAAA/L,GAEA,MAAAH,GAUA,QAAA27B,IAAAx7B,GACA,MAAAq3B,IAAAr3B,QAUA,QAAAy7B,IAAAz7B,GACA,wBAAAA,KAAA+1B,GAWA,QAAA3D,IAAApyB,EAAA5F,GACA,MAAAiuB,IAAAroB,GACAA,EAEA62B,GAAA72B,EAAA5F,IAAA4F,GAAA07B,GAAAC,GAAA37B,IAuBA,QAAA47B,IAAAjwB,EAAAzL,EAAA8pB,GACA,GAAAntB,GAAA8O,EAAA9O,MAEA,OADAmtB,OAAAnpB,GAAAhE,EAAAmtB,GACA9pB,GAAA8pB,GAAAntB,EAAA8O,EAAA2tB,GAAA3tB,EAAAzL,EAAA8pB,GAqBA,QAAA8F,IAAA+L,EAAAvM,GACA,GAAAA,EACA,MAAAuM,GAAAC,OAEA,IAAAj/B,GAAAg/B,EAAAh/B,OACAgD,EAAAk8B,MAAAl/B,GAAA,GAAAg/B,GAAAn1B,YAAA7J,EAGA,OADAg/B,GAAAr1B,KAAA3G,GACAA,EAUA,QAAAm8B,IAAAC,GACA,GAAAp8B,GAAA,GAAAo8B,GAAAv1B,YAAAu1B,EAAAC,WAEA,OADA,IAAAC,IAAAt8B,GAAA6Q,IAAA,GAAAyrB,IAAAF,IACAp8B,EAWA,QAAAu8B,IAAAC,EAAA/M,GACA,GAAAuM,GAAAvM,EAAA0M,GAAAK,EAAAR,QAAAQ,EAAAR,MACA,WAAAQ,GAAA31B,YAAAm1B,EAAAQ,EAAAC,WAAAD,EAAAH,YAUA,QAAAK,IAAAC,GACA,GAAA38B,GAAA,GAAA28B,GAAA91B,YAAA81B,EAAAr6B,OAAA4U,GAAA0lB,KAAAD,GAEA,OADA38B,GAAAsR,UAAAqrB,EAAArrB,UACAtR,EAUA,QAAA68B,IAAAC,GACA,MAAAC,IAAA/iC,GAAA+iC,GAAAtjC,KAAAqjC,OAWA,QAAArF,IAAAuF,EAAAvN,GACA,GAAAuM,GAAAvM,EAAA0M,GAAAa,EAAAhB,QAAAgB,EAAAhB,MACA,WAAAgB,GAAAn2B,YAAAm1B,EAAAgB,EAAAP,WAAAO,EAAAhgC,QAWA,QAAAigC,IAAA98B,EAAA6yB,GACA,GAAA7yB,IAAA6yB,EAAA,CACA,GAAAkK,GAAA/8B,IAAAa,GACAk5B,EAAA,OAAA/5B,EACAg9B,EAAAh9B,MACAg6B,EAAA5I,GAAApxB,GAEAk6B,EAAArH,IAAAhyB,GACAs5B,EAAA,OAAAtH,EACAuH,EAAAvH,MACAwH,EAAAjJ,GAAAyB,EAEA,KAAAsH,IAAAE,IAAAL,GAAAh6B,EAAA6yB,GACAmH,GAAAE,GAAAE,IAAAD,IAAAE,GACAN,GAAAG,GAAAE,IACA2C,GAAA3C,IACA4C,EACA,QAEA,KAAAjD,IAAAC,IAAAK,GAAAr6B,EAAA6yB,GACAwH,GAAA0C,GAAAC,IAAAjD,IAAAC,GACAG,GAAA4C,GAAAC,IACA9C,GAAA8C,IACA5C,EACA,SAGA,SAiBA,QAAAtC,IAAA19B,EAAAy4B,EAAA8E,GAOA,IANA,GAAA5rB,IAAA,EACAkxB,EAAA7iC,EAAAy9B,SACAqF,EAAArK,EAAAgF,SACAh7B,EAAAogC,EAAApgC,OACAsgC,EAAAxF,EAAA96B,SAEAkP,EAAAlP,GAAA,CACA,GAAAgD,GAAAi9B,GAAAG,EAAAlxB,GAAAmxB,EAAAnxB,GACA,IAAAlM,EAAA,CACA,GAAAkM,GAAAoxB,EACA,MAAAt9B,EAGA,OAAAA,IAAA,QADA83B,EAAA5rB,IACA,MAUA,MAAA3R,GAAA2R,MAAA8mB,EAAA9mB,MAcA,QAAAqxB,IAAA93B,EAAA+3B,EAAAC,EAAAC,GAUA,IATA,GAAAC,IAAA,EACAC,EAAAn4B,EAAAzI,OACA6gC,EAAAJ,EAAAzgC,OACA8gC,GAAA,EACAC,EAAAP,EAAAxgC,OACAghC,EAAA5K,GAAAwK,EAAAC,EAAA,GACA79B,EAAA8M,GAAAixB,EAAAC,GACAC,GAAAP,IAEAI,EAAAC,GACA/9B,EAAA89B,GAAAN,EAAAM,EAEA,QAAAH,EAAAE,IACAI,GAAAN,EAAAC,KACA59B,EAAAy9B,EAAAE,IAAAl4B,EAAAk4B,GAGA,MAAAK,KACAh+B,EAAA89B,KAAAr4B,EAAAk4B,IAEA,OAAA39B,GAcA,QAAAk+B,IAAAz4B,EAAA+3B,EAAAC,EAAAC,GAWA,IAVA,GAAAC,IAAA,EACAC,EAAAn4B,EAAAzI,OACAmhC,GAAA,EACAN,EAAAJ,EAAAzgC,OACAohC,GAAA,EACAC,EAAAb,EAAAxgC,OACAghC,EAAA5K,GAAAwK,EAAAC,EAAA,GACA79B,EAAA8M,GAAAkxB,EAAAK,GACAJ,GAAAP,IAEAC,EAAAK,GACAh+B,EAAA29B,GAAAl4B,EAAAk4B,EAGA,KADA,GAAAv+B,GAAAu+B,IACAS,EAAAC,GACAr+B,EAAAZ,EAAAg/B,GAAAZ,EAAAY,EAEA,QAAAD,EAAAN,IACAI,GAAAN,EAAAC,KACA59B,EAAAZ,EAAAq+B,EAAAU,IAAA14B,EAAAk4B,KAGA,OAAA39B,GAWA,QAAAypB,IAAAnnB,EAAAwJ,GACA,GAAAI,IAAA,EACAlP,EAAAsF,EAAAtF,MAGA,KADA8O,MAAAgB,GAAA9P,MACAkP,EAAAlP,GACA8O,EAAAI,GAAA5J,EAAA4J,EAEA,OAAAJ,GAaA,QAAA6iB,IAAArsB,EAAAuM,EAAAtU,EAAAg1B,GACA,GAAA+O,IAAA/jC,CACAA,UAKA,KAHA,GAAA2R,IAAA,EACAlP,EAAA6R,EAAA7R,SAEAkP,EAAAlP,GAAA,CACA,GAAA0F,GAAAmM,EAAA3C,GAEAtC,EAAA2lB,EACAA,EAAAh1B,EAAAmI,GAAAJ,EAAAI,KAAAnI,EAAA+H,GACAtB,EAEA4I,KAAA5I,KACA4I,EAAAtH,EAAAI,IAEA47B,EACAjQ,GAAA9zB,EAAAmI,EAAAkH,GAEA0kB,GAAA/zB,EAAAmI,EAAAkH,GAGA,MAAArP,GAWA,QAAA61B,IAAA9tB,EAAA/H,GACA,MAAAo0B,IAAArsB,EAAAi8B,GAAAj8B,GAAA/H,GAWA,QAAA41B,IAAA7tB,EAAA/H,GACA,MAAAo0B,IAAArsB,EAAAk8B,GAAAl8B,GAAA/H,GAWA,QAAAkkC,IAAA1yB,EAAA2yB,GACA,gBAAA5+B,EAAAkM,GACA,GAAAL,GAAA6c,GAAA1oB,GAAA+L,EAAA2iB,GACAviB,EAAAyyB,QAEA,OAAA/yB,GAAA7L,EAAAiM,EAAAgsB,GAAA/rB,EAAA,GAAAC,IAWA,QAAA0yB,IAAAC,GACA,MAAA1F,IAAA,SAAA3+B,EAAA0G,GACA,GAAAiL,IAAA,EACAlP,EAAAiE,EAAAjE,OACAuyB,EAAAvyB,EAAA,EAAAiE,EAAAjE,EAAA,GAAAgE,GACA69B,EAAA7hC,EAAA,EAAAiE,EAAA,GAAAD,EAWA,KATAuuB,EAAAqP,EAAA5hC,OAAA,qBAAAuyB,IACAvyB,IAAAuyB,GACAvuB,GAEA69B,GAAAC,GAAA79B,EAAA,GAAAA,EAAA,GAAA49B,KACAtP,EAAAvyB,EAAA,EAAAgE,GAAAuuB,EACAvyB,EAAA,GAEAzC,EAAAP,GAAAO,KACA2R,EAAAlP,GAAA,CACA,GAAAsF,GAAArB,EAAAiL,EACA5J,IACAs8B,EAAArkC,EAAA+H,EAAA4J,EAAAqjB,GAGA,MAAAh1B,KAYA,QAAAwkC,IAAArxB,EAAAG,GACA,gBAAA/N,EAAAkM,GACA,SAAAlM,EACA,MAAAA,EAEA,KAAA+2B,GAAA/2B,GACA,MAAA4N,GAAA5N,EAAAkM,EAMA,KAJA,GAAAhP,GAAA8C,EAAA9C,OACAkP,EAAA2B,EAAA7Q,GAAA,EACAgiC,EAAAhlC,GAAA8F,IAEA+N,EAAA3B,QAAAlP,KACA,IAAAgP,EAAAgzB,EAAA9yB,KAAA8yB,KAIA,MAAAl/B,IAWA,QAAAm/B,IAAApxB,GACA,gBAAAtT,EAAAyR,EAAAwkB,GAMA,IALA,GAAAtkB,IAAA,EACA8yB,EAAAhlC,GAAAO,GACAsU,EAAA2hB,EAAAj2B,GACAyC,EAAA6R,EAAA7R,OAEAA,KAAA,CACA,GAAA0F,GAAAmM,EAAAhB,EAAA7Q,IAAAkP,EACA,SAAAF,EAAAgzB,EAAAt8B,KAAAs8B,GACA,MAGA,MAAAzkC,IAcA,QAAA2kC,IAAAvzB,EAAA2jB,EAAA1jB,GAIA,QAAAuzB,KAEA,OADAv8B,aAAA+jB,IAAA/jB,eAAAu8B,GAAAC,EAAAzzB,GACAD,MAAA2zB,EAAAzzB,EAAAhJ,KAAAhD,WALA,GAAAy/B,GAAA/P,EAAAnd,GACAitB,EAAAE,GAAA3zB,EAMA,OAAAwzB,GAUA,QAAAI,IAAAC,GACA,gBAAAnyB,GACAA,EAAAyuB,GAAAzuB,EAEA,IAAA8B,GAAAS,EAAAvC,GACA8D,EAAA9D,GACArM,GAEAyO,EAAAN,EACAA,EAAA,GACA9B,EAAAoyB,OAAA,GAEAC,EAAAvwB,EACA4sB,GAAA5sB,EAAA,GAAApN,KAAA,IACAsL,EAAA4uB,MAAA,EAEA,OAAAxsB,GAAA+vB,KAAAE,GAWA,QAAAC,IAAAC,GACA,gBAAAvyB,GACA,MAAAL,GAAA6yB,GAAAC,GAAAzyB,GAAAzC,QAAAkO,GAAA,KAAA8mB,EAAA,KAYA,QAAAN,IAAAF,GACA,kBAIA,GAAA35B,GAAA7F,SACA,QAAA6F,EAAAzI,QACA,iBAAAoiC,EACA,kBAAAA,GAAA35B,EAAA,GACA,kBAAA25B,GAAA35B,EAAA,GAAAA,EAAA,GACA,kBAAA25B,GAAA35B,EAAA,GAAAA,EAAA,GAAAA,EAAA,GACA,kBAAA25B,GAAA35B,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GACA,kBAAA25B,GAAA35B,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GACA,kBAAA25B,GAAA35B,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GACA,kBAAA25B,GAAA35B,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAEA,GAAAs6B,GAAAC,GAAAZ,EAAA3kC,WACAuF,EAAAo/B,EAAA1zB,MAAAq0B,EAAAt6B,EAIA,OAAAmqB,IAAA5vB,KAAA+/B,GAaA,QAAAE,IAAAt0B,EAAA2jB,EAAA4Q,GAGA,QAAAf,KAMA,IALA,GAAAniC,GAAA4C,UAAA5C,OACAyI,EAAAqH,GAAA9P,GACAkP,EAAAlP,EACAuS,EAAA4wB,GAAAhB,GAEAjzB,KACAzG,EAAAyG,GAAAtM,UAAAsM,EAEA,IAAAuxB,GAAAzgC,EAAA,GAAAyI,EAAA,KAAA8J,GAAA9J,EAAAzI,EAAA,KAAAuS,KAEAkB,EAAAhL,EAAA8J,EAGA,QADAvS,GAAAygC,EAAAzgC,QACAkjC,EACAE,GACAz0B,EAAA2jB,EAAA+Q,GAAAlB,EAAA5vB,YAAAvO,GACAyE,EAAAg4B,EAAAz8B,MAAAk/B,EAAAljC,GAGA0O,EADA9I,aAAA+jB,IAAA/jB,eAAAu8B,GAAAC,EAAAzzB,EACA/I,KAAA6C,GAtBA,GAAA25B,GAAAE,GAAA3zB,EAwBA,OAAAwzB,GAUA,QAAAmB,IAAAC,GACA,gBAAAzgC,EAAAwM,EAAAsB,GACA,GAAAoxB,GAAAhlC,GAAA8F,EACA,KAAA+2B,GAAA/2B,GAAA,CACA,GAAAkM,GAAA+rB,GAAAzrB,EAAA,EACAxM,GAAAqC,GAAArC,GACAwM,EAAA,SAAA5J,GAAqC,MAAAsJ,GAAAgzB,EAAAt8B,KAAAs8B,IAErC,GAAA9yB,GAAAq0B,EAAAzgC,EAAAwM,EAAAsB,EACA,OAAA1B,IAAA,EAAA8yB,EAAAhzB,EAAAlM,EAAAoM,MAAAlL,IAWA,QAAAw/B,IAAA3yB,GACA,MAAA4yB,IAAA,SAAAC,GACA,GAAA1jC,GAAA0jC,EAAA1jC,OACAkP,EAAAlP,EACA2jC,EAAAjY,EAAAjuB,UAAAmmC,IAKA,KAHA/yB,GACA6yB,EAAAG,UAEA30B,KAAA,CACA,GAAAP,GAAA+0B,EAAAx0B,EACA,sBAAAP,GACA,SAAAtK,IAAAsQ,GAEA,IAAAgvB,IAAAxB,GAAA,WAAA2B,GAAAn1B,GACA,GAAAwzB,GAAA,GAAAzW,OAAA,GAIA,IADAxc,EAAAizB,EAAAjzB,EAAAlP,IACAkP,EAAAlP,GAAA,CACA2O,EAAA+0B,EAAAx0B,EAEA,IAAA60B,GAAAD,GAAAn1B,GACAwE,EAAA,WAAA4wB,EAAAC,GAAAr1B,GAAA3K,EAMAm+B,GAJAhvB,GAAA8wB,GAAA9wB,EAAA,KACAA,EAAA,KAAAuC,GAAAJ,GAAAE,GAAAG,MACAxC,EAAA,GAAAnT,QAAA,GAAAmT,EAAA,GAEAgvB,EAAA2B,GAAA3wB,EAAA,KAAAzE,MAAAyzB,EAAAhvB,EAAA,IAEA,GAAAxE,EAAA3O,QAAAikC,GAAAt1B,GACAwzB,EAAA4B,KACA5B,EAAAyB,KAAAj1B,GAGA,kBACA,GAAAlG,GAAA7F,UACAO,EAAAsF,EAAA,EAEA,IAAA05B,GAAA,GAAA15B,EAAAzI,QAAAwrB,GAAAroB,GACA,MAAAg/B,GAAA+B,MAAA/gC,UAKA,KAHA,GAAA+L,GAAA,EACAlM,EAAAhD,EAAA0jC,EAAAx0B,GAAAR,MAAA9I,KAAA6C,GAAAtF,IAEA+L,EAAAlP,GACAgD,EAAA0gC,EAAAx0B,GAAAzS,KAAAmJ,KAAA5C,EAEA,OAAAA,MAwBA,QAAAqgC,IAAA10B,EAAA2jB,EAAA1jB,EAAA4xB,EAAAC,EAAA0D,EAAAC,EAAAC,EAAAC,EAAApB,GAQA,QAAAf,KAKA,IAJA,GAAAniC,GAAA4C,UAAA5C,OACAyI,EAAAqH,GAAA9P,GACAkP,EAAAlP,EAEAkP,KACAzG,EAAAyG,GAAAtM,UAAAsM,EAEA,IAAAwxB,EACA,GAAAnuB,GAAA4wB,GAAAhB,GACAoC,EAAAjyB,EAAA7J,EAAA8J,EASA,IAPAiuB,IACA/3B,EAAA83B,GAAA93B,EAAA+3B,EAAAC,EAAAC,IAEAyD,IACA17B,EAAAy4B,GAAAz4B,EAAA07B,EAAAC,EAAA1D,IAEA1gC,GAAAukC,EACA7D,GAAA1gC,EAAAkjC,EAAA,CACA,GAAAsB,GAAA/wB,EAAAhL,EAAA8J,EACA,OAAA6wB,IACAz0B,EAAA2jB,EAAA+Q,GAAAlB,EAAA5vB,YAAA3D,EACAnG,EAAA+7B,EAAAH,EAAAC,EAAApB,EAAAljC,GAGA,GAAA+iC,GAAAV,EAAAzzB,EAAAhJ,KACA7C,EAAA0hC,EAAA1B,EAAAp0B,IAcA,OAZA3O,GAAAyI,EAAAzI,OACAqkC,EACA57B,EAAAi8B,GAAAj8B,EAAA47B,GACSM,GAAA3kC,EAAA,GACTyI,EAAAo7B,UAEAe,GAAAN,EAAAtkC,IACAyI,EAAAzI,OAAAskC,GAEA1+B,aAAA+jB,IAAA/jB,eAAAu8B,KACAp/B,EAAAq/B,GAAAE,GAAAv/B,IAEAA,EAAA2L,MAAAq0B,EAAAt6B,GAhDA,GAAAm8B,GAAAtS,EAAA5c,GACA2sB,EAAA/P,EAAAnd,GACAsvB,EAAAnS,EAAAld,GACAsrB,EAAApO,GAAAhd,GAAAC,IACAovB,EAAArS,EAAA1c,GACAwsB,EAAAqC,EAAAzgC,GAAAs+B,GAAA3zB,EA6CA,OAAAwzB,GAWA,QAAA0C,IAAA91B,EAAA+1B,GACA,gBAAAvnC,EAAAyR,GACA,MAAA6nB,IAAAt5B,EAAAwR,EAAA+1B,EAAA91B,QAYA,QAAA+1B,IAAAC,EAAAC,GACA,gBAAA9hC,EAAA6yB,GACA,GAAAhzB,EACA,IAAAG,IAAAa,IAAAgyB,IAAAhyB,GACA,MAAAihC,EAKA,IAHA9hC,IAAAa,KACAhB,EAAAG,GAEA6yB,IAAAhyB,GAAA,CACA,GAAAhB,IAAAgB,GACA,MAAAgyB,EAEA,iBAAA7yB,IAAA,gBAAA6yB,IACA7yB,EAAAy6B,GAAAz6B,GACA6yB,EAAA4H,GAAA5H,KAEA7yB,EAAAw6B,GAAAx6B,GACA6yB,EAAA2H,GAAA3H,IAEAhzB,EAAAgiC,EAAA7hC,EAAA6yB,GAEA,MAAAhzB,IAWA,QAAAkiC,IAAAC,GACA,MAAA1B,IAAA,SAAArW,GAEA,MADAA,GAAAvd,EAAAud,EAAAtb,EAAAipB,OACAmB,GAAA,SAAAzzB,GACA,GAAAmG,GAAAhJ,IACA,OAAAu/B,GAAA/X,EAAA,SAAApe,GACA,MAAAN,GAAAM,EAAAJ,EAAAnG,SAeA,QAAA28B,IAAAplC,EAAAqlC,GACAA,MAAArhC,GAAA,IAAA45B,GAAAyH,EAEA,IAAAC,GAAAD,EAAArlC,MACA,IAAAslC,EAAA,EACA,MAAAA,GAAArJ,GAAAoJ,EAAArlC,GAAAqlC,CAEA,IAAAriC,GAAAi5B,GAAAoJ,EAAArJ,GAAAh8B,EAAAgU,EAAAqxB,IACA,OAAAzyB,GAAAyyB,GACAtG,GAAA5qB,EAAAnR,GAAA,EAAAhD,GAAA+E,KAAA,IACA/B,EAAAi8B,MAAA,EAAAj/B,GAeA,QAAAulC,IAAA52B,EAAA2jB,EAAA1jB,EAAA4xB,GAIA,QAAA2B,KAQA,IAPA,GAAAxB,IAAA,EACAC,EAAAh+B,UAAA5C,OACA8gC,GAAA,EACAC,EAAAP,EAAAxgC,OACAyI,EAAAqH,GAAAixB,EAAAH,GACA79B,EAAA6C,aAAA+jB,IAAA/jB,eAAAu8B,GAAAC,EAAAzzB,IAEAmyB,EAAAC,GACAt4B,EAAAq4B,GAAAN,EAAAM,EAEA,MAAAF,KACAn4B,EAAAq4B,KAAAl+B,YAAA+9B,EAEA,OAAAjyB,GAAA3L,EAAAs/B,EAAAzzB,EAAAhJ,KAAA6C,GAjBA,GAAA45B,GAAA/P,EAAAnd,GACAitB,EAAAE,GAAA3zB,EAkBA,OAAAwzB,GAUA,QAAAqD,IAAA30B,GACA,gBAAAxN,EAAA8pB,EAAA4O,GAaA,MAZAA,IAAA,gBAAAA,IAAA+F,GAAAz+B,EAAA8pB,EAAA4O,KACA5O,EAAA4O,EAAA/3B,IAGAX,EAAAoiC,GAAApiC,GACA8pB,IAAAnpB,IACAmpB,EAAA9pB,EACAA,EAAA,GAEA8pB,EAAAsY,GAAAtY,GAEA4O,MAAA/3B,GAAAX,EAAA8pB,EAAA,KAAAsY,GAAA1J,GACAD,GAAAz4B,EAAA8pB,EAAA4O,EAAAlrB,IAWA,QAAA60B,IAAAV,GACA,gBAAA7hC,EAAA6yB,GAKA,MAJA,gBAAA7yB,IAAA,gBAAA6yB,KACA7yB,EAAAwiC,GAAAxiC,GACA6yB,EAAA2P,GAAA3P,IAEAgP,EAAA7hC,EAAA6yB,IAqBA,QAAAoN,IAAAz0B,EAAA2jB,EAAAsT,EAAArzB,EAAA3D,EAAA4xB,EAAAC,EAAA4D,EAAAC,EAAApB,GACA,GAAA2C,GAAAvT,EAAAhd,GACAkvB,EAAAqB,EAAApF,EAAAz8B,GACA8hC,EAAAD,EAAA7hC,GAAAy8B,EACAsF,EAAAF,EAAArF,EAAAx8B,GACAgiC,EAAAH,EAAA7hC,GAAAw8B,CAEAlO,IAAAuT,EAAArwB,GAAAC,IACA6c,KAAAuT,EAAApwB,GAAAD,KAEAH,KACAid,KAAAnd,GAAAC,IAEA,IAAA6wB,IACAt3B,EAAA2jB,EAAA1jB,EAAAm3B,EAAAvB,EAAAwB,EACAF,EAAAzB,EAAAC,EAAApB,GAGAlgC,EAAA4iC,EAAAl3B,MAAA1K,GAAAiiC,EAKA,OAJAhC,IAAAt1B,IACAu3B,GAAAljC,EAAAijC,GAEAjjC,EAAAuP,cACA4zB,GAAAnjC,EAAA2L,EAAA2jB,GAUA,QAAA8T,IAAA5D,GACA,GAAA7zB,GAAAjP,GAAA8iC,EACA,iBAAAtQ,EAAAmU,GAGA,GAFAnU,EAAAyT,GAAAzT,GACAmU,EAAA,MAAAA,EAAA,EAAA9Y,GAAAkH,GAAA4R,GAAA,KACA,CAGA,GAAAC,IAAAxH,GAAA5M,GAAA,KAAAjtB,MAAA,IAIA,OADAqhC,IAAAxH,GAFAnwB,EAAA23B,EAAA,SAAAA,EAAA,GAAAD,KAEA,KAAAphC,MAAA,OACAqhC,EAAA,SAAAA,EAAA,GAAAD,IAEA,MAAA13B,GAAAujB,IAsBA,QAAAqU,IAAA/S,GACA,gBAAAj2B,GACA,GAAAu1B,GAAAC,GAAAx1B,EACA,OAAAu1B,IAAA3b,GACA9D,EAAA9V,GAEAu1B,GAAArb,GACA3D,EAAAvW,GAEAqU,EAAArU,EAAAi2B,EAAAj2B,KA6BA,QAAAipC,IAAA73B,EAAA2jB,EAAA1jB,EAAA4xB,EAAAC,EAAA4D,EAAAC,EAAApB,GACA,GAAAuB,GAAAnS,EAAAld,EACA,KAAAqvB,GAAA,kBAAA91B,GACA,SAAAtK,IAAAsQ,GAEA,IAAA3U,GAAAwgC,IAAAxgC,OAAA,CASA,IARAA,IACAsyB,KAAA9c,GAAAC,IACA+qB,EAAAC,EAAAz8B,IAEAsgC,MAAAtgC,GAAAsgC,EAAAlO,GAAA3B,GAAA6P,GAAA,GACApB,MAAAl/B,GAAAk/B,EAAAzO,GAAAyO,GACAljC,GAAAygC,IAAAzgC,OAAA,EAEAsyB,EAAA7c,GAAA,CACA,GAAA0uB,GAAA3D,EACA4D,EAAA3D,CAEAD,GAAAC,EAAAz8B,GAEA,GAAAmP,GAAAsxB,EAAAzgC,GAAAggC,GAAAr1B,GAEAs3B,GACAt3B,EAAA2jB,EAAA1jB,EAAA4xB,EAAAC,EAAA0D,EAAAC,EACAC,EAAAC,EAAApB,EAkBA,IAfA/vB,GACAszB,GAAAR,EAAA9yB,GAEAxE,EAAAs3B,EAAA,GACA3T,EAAA2T,EAAA,GACAr3B,EAAAq3B,EAAA,GACAzF,EAAAyF,EAAA,GACAxF,EAAAwF,EAAA,GACA/C,EAAA+C,EAAA,GAAAA,EAAA,KAAAjiC,GACAygC,EAAA,EAAA91B,EAAA3O,OACAo2B,GAAA6P,EAAA,GAAAjmC,EAAA,IAEAkjC,GAAA5Q,GAAAhd,GAAAC,MACA+c,KAAAhd,GAAAC,KAEA+c,MAAAnd,GAGAnS,EADOsvB,GAAAhd,IAAAgd,GAAA/c,GACP0tB,GAAAt0B,EAAA2jB,EAAA4Q,GACO5Q,GAAA9c,IAAA8c,IAAAnd,GAAAK,KAAAirB,EAAAzgC,OAGPqjC,GAAA30B,MAAA1K,GAAAiiC,GAFAV,GAAA52B,EAAA2jB,EAAA1jB,EAAA4xB,OAJA,IAAAx9B,GAAAk/B,GAAAvzB,EAAA2jB,EAAA1jB,EASA,OAAAu3B,KADAhzB,EAAAuzB,GAAAR,IACAljC,EAAAijC,GAAAt3B,EAAA2jB,GAeA,QAAAqU,IAAApV,EAAAiH,EAAA9yB,EAAAnI,GACA,MAAAg0B,KAAAvtB,IACAotB,GAAAG,EAAAqV,GAAAlhC,MAAAhI,GAAAjB,KAAAc,EAAAmI,GACA8yB,EAEAjH,EAiBA,QAAAsV,IAAAtV,EAAAiH,EAAA9yB,EAAAnI,EAAA+H,EAAAktB,GAOA,MANAI,IAAArB,IAAAqB,GAAA4F,KAEAhG,EAAA3e,IAAA2kB,EAAAjH,GACA4I,GAAA5I,EAAAiH,EAAAx0B,GAAA6iC,GAAArU,GACAA,EAAA,OAAAgG,IAEAjH,EAYA,QAAAuV,IAAA3jC,GACA,MAAAu3B,IAAAv3B,GAAAa,GAAAb,EAgBA,QAAA00B,IAAA/oB,EAAAknB,EAAA1D,EAAAC,EAAA8E,EAAA7E,GACA,GAAAuU,GAAAzU,EAAArd,GACA+X,EAAAle,EAAA9O,OACAu2B,EAAAP,EAAAh2B,MAEA,IAAAgtB,GAAAuJ,KAAAwQ,GAAAxQ,EAAAvJ,GACA,QAGA,IAAAsG,GAAAd,EAAAp1B,IAAA0R,EACA,IAAAwkB,GAAAd,EAAAp1B,IAAA44B,GACA,MAAA1C,IAAA0C,CAEA,IAAA9mB,IAAA,EACAlM,GAAA,EACA4zB,EAAAtE,EAAApd,GAAA,GAAAua,IAAAzrB,EAMA,KAJAwuB,EAAA3e,IAAA/E,EAAAknB,GACAxD,EAAA3e,IAAAmiB,EAAAlnB,KAGAI,EAAA8d,GAAA,CACA,GAAAga,GAAAl4B,EAAAI,GACA+3B,EAAAjR,EAAA9mB,EAEA,IAAAqjB,EACA,GAAA2U,GAAAH,EACAxU,EAAA0U,EAAAD,EAAA93B,EAAA8mB,EAAAlnB,EAAA0jB,GACAD,EAAAyU,EAAAC,EAAA/3B,EAAAJ,EAAAknB,EAAAxD,EAEA,IAAA0U,IAAAljC,GAAA,CACA,GAAAkjC,EACA,QAEAlkC,IAAA,CACA,OAGA,GAAA4zB,GACA,IAAAzmB,EAAA6lB,EAAA,SAAAiR,EAAAzQ,GACA,IAAAxkB,EAAA4kB,EAAAJ,KACAwQ,IAAAC,GAAA5P,EAAA2P,EAAAC,EAAA3U,EAAAC,EAAAC,IACA,MAAAoE,GAAAt0B,KAAAk0B,KAEe,CACfxzB,GAAA,CACA,YAES,IACTgkC,IAAAC,IACA5P,EAAA2P,EAAAC,EAAA3U,EAAAC,EAAAC,GACA,CACAxvB,GAAA,CACA,QAKA,MAFAwvB,GAAA,OAAA1jB,GACA0jB,EAAA,OAAAwD,GACAhzB,EAoBA,QAAA80B,IAAAv6B,EAAAy4B,EAAAlD,EAAAR,EAAAC,EAAA8E,EAAA7E,GACA,OAAAM,GACA,IAAA9a,IACA,GAAAza,EAAA8hC,YAAArJ,EAAAqJ,YACA9hC,EAAAkiC,YAAAzJ,EAAAyJ,WACA,QAEAliC,KAAAyhC,OACAhJ,IAAAgJ,MAEA,KAAAjnB,IACA,QAAAxa,EAAA8hC,YAAArJ,EAAAqJ,aACAhI,EAAA,GAAAiI,IAAA/hC,GAAA,GAAA+hC,IAAAtJ,IAKA,KAAAnf,IACA,IAAAC,IACA,IAAAM,IAGA,MAAAga,KAAA7zB,GAAAy4B,EAEA,KAAAhf,IACA,MAAAzZ,GAAAV,MAAAm5B,EAAAn5B,MAAAU,EAAA4pC,SAAAnR,EAAAmR,OAEA,KAAA3vB,IACA,IAAAE,IAIA,MAAAna,IAAAy4B,EAAA,EAEA,KAAA7e,IACA,GAAAiwB,GAAA/zB,CAEA,KAAAoE,IACA,GAAAsvB,GAAAzU,EAAArd,EAGA,IAFAmyB,MAAAxzB,GAEArW,EAAA+V,MAAA0iB,EAAA1iB,OAAAyzB,EACA,QAGA,IAAAzT,GAAAd,EAAAp1B,IAAAG,EACA,IAAA+1B,EACA,MAAAA,IAAA0C,CAEA1D,IAAApd,GAGAsd,EAAA3e,IAAAtW,EAAAy4B,EACA,IAAAhzB,GAAA60B,GAAAuP,EAAA7pC,GAAA6pC,EAAApR,GAAA1D,EAAAC,EAAA8E,EAAA7E,EAEA,OADAA,GAAA,OAAAj1B,GACAyF,CAEA,KAAA2U,IACA,GAAAooB,GACA,MAAAA,IAAAtjC,KAAAc,IAAAwiC,GAAAtjC,KAAAu5B,GAGA,SAgBA,QAAAmC,IAAA56B,EAAAy4B,EAAA1D,EAAAC,EAAA8E,EAAA7E,GACA,GAAAuU,GAAAzU,EAAArd,GACAoyB,EAAA3T,GAAAn2B,GACA+pC,EAAAD,EAAArnC,MAIA,IAAAsnC,GAHA5T,GAAAsC,GACAh2B,SAEA+mC,EACA,QAGA,KADA,GAAA73B,GAAAo4B,EACAp4B,KAAA,CACA,GAAAxJ,GAAA2hC,EAAAn4B,EACA,MAAA63B,EAAArhC,IAAAswB,GAAAt4B,GAAAjB,KAAAu5B,EAAAtwB,IACA,SAIA,GAAA4tB,GAAAd,EAAAp1B,IAAAG,EACA,IAAA+1B,GAAAd,EAAAp1B,IAAA44B,GACA,MAAA1C,IAAA0C,CAEA,IAAAhzB,IAAA,CACAwvB,GAAA3e,IAAAtW,EAAAy4B,GACAxD,EAAA3e,IAAAmiB,EAAAz4B,EAGA,KADA,GAAAgqC,GAAAR,IACA73B,EAAAo4B,GAAA,CACA5hC,EAAA2hC,EAAAn4B,EACA,IAAAqiB,GAAAh0B,EAAAmI,GACAuhC,EAAAjR,EAAAtwB,EAEA,IAAA6sB,EACA,GAAA2U,GAAAH,EACAxU,EAAA0U,EAAA1V,EAAA7rB,EAAAswB,EAAAz4B,EAAAi1B,GACAD,EAAAhB,EAAA0V,EAAAvhC,EAAAnI,EAAAy4B,EAAAxD,EAGA,MAAA0U,IAAAljC,GACAutB,IAAA0V,GAAA5P,EAAA9F,EAAA0V,EAAA3U,EAAAC,EAAAC,GACA0U,GACA,CACAlkC,GAAA,CACA,OAEAukC,MAAA,eAAA7hC,GAEA,GAAA1C,IAAAukC,EAAA,CACA,GAAAC,GAAAjqC,EAAAsM,YACA49B,EAAAzR,EAAAnsB,WAGA29B,IAAAC,GACA,eAAAlqC,IAAA,eAAAy4B,MACA,kBAAAwR,oBACA,kBAAAC,sBACAzkC,GAAA,GAKA,MAFAwvB,GAAA,OAAAj1B,GACAi1B,EAAA,OAAAwD,GACAhzB,EAUA,QAAAygC,IAAA90B,GACA,MAAAwtB,IAAAC,GAAAztB,EAAA3K,GAAA0jC,IAAA/4B,EAAA,IAUA,QAAA+kB,IAAAn2B,GACA,MAAAk4B,IAAAl4B,EAAA4H,GAAAo8B,IAWA,QAAA9N,IAAAl2B,GACA,MAAAk4B,IAAAl4B,EAAAs0B,GAAA2P,IAqBA,QAAAsC,IAAAn1B,GAKA,IAJA,GAAA3L,GAAA2L,EAAA9R,KAAA,GACAiS,EAAA64B,GAAA3kC,GACAhD,EAAAtC,GAAAjB,KAAAkrC,GAAA3kC,GAAA8L,EAAA9O,OAAA,EAEAA,KAAA,CACA,GAAAmT,GAAArE,EAAA9O,GACA4nC,EAAAz0B,EAAAxE,IACA,UAAAi5B,MAAAj5B,EACA,MAAAwE,GAAAtW,KAGA,MAAAmG,GAUA,QAAAmgC,IAAAx0B,GAEA,OADAjR,GAAAjB,KAAAoB,EAAA,eAAAA,EAAA8Q,GACA4D,YAcA,QAAAwoB,MACA,GAAA/3B,GAAAnF,EAAAmR,YAEA,OADAhM,OAAAgM,GAAAiqB,GAAAj2B,EACAJ,UAAA5C,OAAAgD,EAAAJ,UAAA,GAAAA,UAAA,IAAAI,EAWA,QAAAqsB,IAAAlvB,EAAAuF,GACA,GAAAyN,GAAAhT,EAAA8tB,QACA,OAAA4Z,IAAAniC,GACAyN,EAAA,gBAAAzN,GAAA,iBACAyN,EAAAhT,IAUA,QAAA25B,IAAAv8B,GAIA,IAHA,GAAAyF,GAAAmC,GAAA5H,GACAyC,EAAAgD,EAAAhD,OAEAA,KAAA,CACA,GAAA0F,GAAA1C,EAAAhD,GACAmD,EAAA5F,EAAAmI,EAEA1C,GAAAhD,IAAA0F,EAAAvC,EAAA82B,GAAA92B,IAEA,MAAAH,GAWA,QAAA8kC,IAAAvqC,EAAAmI,GACA,GAAAvC,GAAAwP,EAAApV,EAAAmI,EACA,OAAA+yB,IAAAt1B,KAAAa,GAUA,QAAA6xB,IAAA1yB,GACA,GAAA4kC,GAAArqC,GAAAjB,KAAA0G,EAAAyyB,IACA9C,EAAA3vB,EAAAyyB,GAEA,KACAzyB,EAAAyyB,IAAA5xB,EACA,IAAAgkC,IAAA,EACO,MAAAlqC,IAEP,GAAAkF,GAAAilC,GAAAxrC,KAAA0G,EAQA,OAPA6kC,KACAD,EACA5kC,EAAAyyB,IAAA9C,QAEA3vB,GAAAyyB,KAGA5yB,EA+EA,QAAAkqB,IAAA7pB,EAAA8pB,EAAA+a,GAIA,IAHA,GAAAh5B,IAAA,EACAlP,EAAAkoC,EAAAloC,SAEAkP,EAAAlP,GAAA,CACA,GAAAmT,GAAA+0B,EAAAh5B,GACAoE,EAAAH,EAAAG,IAEA,QAAAH,EAAAhV,MACA,WAAAkF,GAAAiQ,CAA0C,MAC1C,iBAAA6Z,GAAA7Z,CAAwC,MACxC,YAAA6Z,EAAAI,GAAAJ,EAAA9pB,EAAAiQ,EAA+D,MAC/D,iBAAAjQ,EAAA+yB,GAAA/yB,EAAA8pB,EAAA7Z,IAGA,OAAcjQ,QAAA8pB,OAUd,QAAAgb,IAAA7iC,GACA,GAAAiL,GAAAjL,EAAAiL,MAAAuJ,GACA,OAAAvJ,KAAA,GAAAtL,MAAA8U,OAYA,QAAAquB,IAAA7qC,EAAA+3B,EAAA+S,GACA/S,EAAAC,GAAAD,EAAA/3B,EAMA,KAJA,GAAA2R,IAAA,EACAlP,EAAAs1B,EAAAt1B,OACAgD,GAAA,IAEAkM,EAAAlP,GAAA,CACA,GAAA0F,GAAA8vB,GAAAF,EAAApmB,GACA,MAAAlM,EAAA,MAAAzF,GAAA8qC,EAAA9qC,EAAAmI,IACA,KAEAnI,KAAAmI,GAEA,MAAA1C,MAAAkM,GAAAlP,EACAgD,KAEAhD,EAAA,MAAAzC,EAAA,EAAAA,EAAAyC,SACAg5B,GAAAh5B,IAAA4wB,GAAAlrB,EAAA1F,KACAwrB,GAAAjuB,IAAAgzB,GAAAhzB,IAUA,QAAAs1B,IAAA/jB,GACA,GAAA9O,GAAA8O,EAAA9O,OACAgD,EAAA,GAAA8L,GAAAjF,YAAA7J,EAOA,OAJAA,IAAA,gBAAA8O,GAAA,IAAApR,GAAAjB,KAAAqS,EAAA,WACA9L,EAAAkM,MAAAJ,EAAAI,MACAlM,EAAAslC,MAAAx5B,EAAAw5B,OAEAtlC,EAUA,QAAAkwB,IAAA31B,GACA,wBAAAA,GAAAsM,aAAAyvB,GAAA/7B,MACAylC,GAAAuF,GAAAhrC,IAgBA,QAAA81B,IAAA91B,EAAAu1B,EAAAL,GACA,GAAA2P,GAAA7kC,EAAAsM,WACA,QAAAipB,GACA,IAAA/a,IACA,MAAAonB,IAAA5hC,EAEA,KAAAsZ,IACA,IAAAC,IACA,UAAAsrB,IAAA7kC,EAEA,KAAAya,IACA,MAAAunB,IAAAhiC,EAAAk1B,EAEA,KAAAxa,IAAA,IAAAC,IACA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IACA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IACA,MAAAgiB,IAAAl9B,EAAAk1B,EAEA,KAAAtb,IACA,UAAAirB,EAEA,KAAAhrB,IACA,IAAAM,IACA,UAAA0qB,GAAA7kC,EAEA,KAAAia,IACA,MAAAkoB,IAAAniC,EAEA,KAAAka,IACA,UAAA2qB,EAEA,KAAAzqB,IACA,MAAAkoB,IAAAtiC,IAYA,QAAAirC,IAAAljC,EAAAmjC,GACA,GAAAzoC,GAAAyoC,EAAAzoC,MACA,KAAAA,EACA,MAAAsF,EAEA,IAAAgP,GAAAtU,EAAA,CAGA,OAFAyoC,GAAAn0B,IAAAtU,EAAA,WAAAyoC,EAAAn0B,GACAm0B,IAAA1jC,KAAA/E,EAAA,YACAsF,EAAAsI,QAAAiM,GAAA,uBAA6C4uB,EAAA,UAU7C,QAAA1T,IAAA5xB,GACA,MAAAqoB,IAAAroB,IAAAotB,GAAAptB,OACAulC,IAAAvlC,KAAAulC,KAWA,QAAA9X,IAAAztB,EAAAnD,GACA,GAAA7B,SAAAgF,EAGA,UAFAnD,EAAA,MAAAA,EAAAoW,GAAApW,KAGA,UAAA7B,GACA,UAAAA,GAAAoc,GAAAzH,KAAA3P,KACAA,GAAA,GAAAA,EAAA,MAAAA,EAAAnD,EAaA,QAAA8hC,IAAA3+B,EAAA+L,EAAA3R,GACA,IAAAq1B,GAAAr1B,GACA,QAEA,IAAAY,SAAA+Q,EACA,oBAAA/Q,EACA07B,GAAAt8B,IAAAqzB,GAAA1hB,EAAA3R,EAAAyC,QACA,UAAA7B,GAAA+Q,IAAA3R,KAEA6zB,GAAA7zB,EAAA2R,GAAA/L,GAaA,QAAA62B,IAAA72B,EAAA5F,GACA,GAAAiuB,GAAAroB,GACA,QAEA,IAAAhF,SAAAgF,EACA,mBAAAhF,GAAA,UAAAA,GAAA,WAAAA,GACA,MAAAgF,IAAAoxB,GAAApxB,MAGAmW,GAAAxG,KAAA3P,KAAAkW,GAAAvG,KAAA3P,IACA,MAAA5F,GAAA4F,IAAAnG,IAAAO,IAUA,QAAAsqC,IAAA1kC,GACA,GAAAhF,SAAAgF,EACA,iBAAAhF,GAAA,UAAAA,GAAA,UAAAA,GAAA,WAAAA,EACA,cAAAgF,EACA,OAAAA,EAWA,QAAA8gC,IAAAt1B,GACA,GAAAo1B,GAAAD,GAAAn1B,GACAqnB,EAAAn4B,EAAAkmC,EAEA,sBAAA/N,MAAA+N,IAAAtY,GAAAhuB,WACA,QAEA,IAAAkR,IAAAqnB,EACA,QAEA,IAAA7iB,GAAA6wB,GAAAhO,EACA,SAAA7iB,GAAAxE,IAAAwE,EAAA,GAUA,QAAAulB,IAAA/pB,GACA,QAAAg6B,SAAAh6B,GAmBA,QAAA2qB,IAAAn2B,GACA,GAAAi/B,GAAAj/B,KAAA0G,WAGA,OAAA1G,MAFA,kBAAAi/B,MAAA3kC,WAAAmpC,IAaA,QAAA3M,IAAA92B,GACA,MAAAA,SAAAyvB,GAAAzvB,GAYA,QAAA42B,IAAAr0B,EAAA8yB,GACA,gBAAAj7B,GACA,aAAAA,IAGAA,EAAAmI,KAAA8yB,IACAA,IAAAx0B,IAAA0B,IAAA1I,IAAAO,MAwCA,QAAAkpC,IAAAtzB,EAAA7N,GACA,GAAAgtB,GAAAnf,EAAA,GACAy1B,EAAAtjC,EAAA,GACAujC,EAAAvW,EAAAsW,EACA1U,EAAA2U,GAAA1zB,GAAAC,GAAAM,IAEAozB,EACAF,GAAAlzB,IAAA4c,GAAAhd,IACAszB,GAAAlzB,IAAA4c,GAAA3c,IAAAxC,EAAA,GAAAnT,QAAAsF,EAAA,IACAsjC,IAAAlzB,GAAAC,KAAArQ,EAAA,GAAAtF,QAAAsF,EAAA,IAAAgtB,GAAAhd,EAGA,KAAA4e,IAAA4U,EACA,MAAA31B,EAGAy1B,GAAAzzB,KACAhC,EAAA,GAAA7N,EAAA,GAEAujC,GAAAvW,EAAAnd,GAAA,EAAAE,GAGA,IAAAlS,GAAAmC,EAAA,EACA,IAAAnC,EAAA,CACA,GAAAq9B,GAAArtB,EAAA,EACAA,GAAA,GAAAqtB,EAAAD,GAAAC,EAAAr9B,EAAAmC,EAAA,IAAAnC,EACAgQ,EAAA,GAAAqtB,EAAA/sB,EAAAN,EAAA,GAAAO,IAAApO,EAAA,GA0BA,MAvBAnC,GAAAmC,EAAA,GACAnC,IACAq9B,EAAArtB,EAAA,GACAA,EAAA,GAAAqtB,EAAAU,GAAAV,EAAAr9B,EAAAmC,EAAA,IAAAnC,EACAgQ,EAAA,GAAAqtB,EAAA/sB,EAAAN,EAAA,GAAAO,IAAApO,EAAA,IAGAnC,EAAAmC,EAAA,GACAnC,IACAgQ,EAAA,GAAAhQ,GAGAylC,EAAAlzB,KACAvC,EAAA,SAAAA,EAAA,GAAA7N,EAAA,GAAAioB,GAAApa,EAAA,GAAA7N,EAAA,KAGA,MAAA6N,EAAA,KACAA,EAAA,GAAA7N,EAAA,IAGA6N,EAAA,GAAA7N,EAAA,GACA6N,EAAA,GAAA01B,EAEA11B,EAYA,QAAAsmB,IAAAl8B,GACA,GAAAyF,KACA,UAAAzF,EACA,OAAAmI,KAAA1I,IAAAO,GACAyF,EAAAV,KAAAoD,EAGA,OAAA1C,GAUA,QAAA8yB,IAAA3yB,GACA,MAAA8kC,IAAAxrC,KAAA0G,GAYA,QAAAi5B,IAAAztB,EAAAtL,EAAAmQ,GAEA,MADAnQ,GAAA+yB,GAAA/yB,IAAAW,GAAA2K,EAAA3O,OAAA,EAAAqD,EAAA,GACA,WAMA,IALA,GAAAoF,GAAA7F,UACAsM,GAAA,EACAlP,EAAAo2B,GAAA3tB,EAAAzI,OAAAqD,EAAA,GACAyL,EAAAgB,GAAA9P,KAEAkP,EAAAlP,GACA8O,EAAAI,GAAAzG,EAAApF,EAAA6L,EAEAA,IAAA,CAEA,KADA,GAAA65B,GAAAj5B,GAAAzM,EAAA,KACA6L,EAAA7L,GACA0lC,EAAA75B,GAAAzG,EAAAyG,EAGA,OADA65B,GAAA1lC,GAAAmQ,EAAA1E,GACAJ,EAAAC,EAAA/I,KAAAmjC,IAYA,QAAA//B,IAAAzL,EAAA+3B,GACA,MAAAA,GAAAt1B,OAAA,EAAAzC,EAAA83B,GAAA93B,EAAAk/B,GAAAnH,EAAA,OAaA,QAAAoP,IAAA51B,EAAA2sB,GAKA,IAJA,GAAAzO,GAAAle,EAAA9O,OACAA,EAAAutB,GAAAkO,EAAAz7B,OAAAgtB,GACAgc,EAAAvc,GAAA3d,GAEA9O,KAAA,CACA,GAAAkP,GAAAusB,EAAAz7B,EACA8O,GAAA9O,GAAA4wB,GAAA1hB,EAAA8d,GAAAgc,EAAA95B,GAAAlL,GAEA,MAAA8K,GAmDA,QAAAq3B,IAAAhE,EAAA8G,EAAA3W,GACA,GAAAhtB,GAAA2jC,EAAA,EACA,OAAA9M,IAAAgG,EAAAqG,GAAAljC,EAAA4jC,GAAAf,GAAA7iC,GAAAgtB,KAYA,QAAA6W,IAAAx6B,GACA,GAAAy6B,GAAA,EACAC,EAAA,CAEA,mBACA,GAAAC,GAAAC,KACAC,EAAAxzB,IAAAszB,EAAAD,EAGA,IADAA,EAAAC,EACAE,EAAA,GACA,KAAAJ,GAAArzB,GACA,MAAAnT,WAAA,OAGAwmC,GAAA,CAEA,OAAAz6B,GAAAD,MAAA1K,GAAApB,YAYA,QAAAouB,IAAAliB,EAAAwE,GACA,GAAApE,IAAA,EACAlP,EAAA8O,EAAA9O,OACAsU,EAAAtU,EAAA,CAGA,KADAsT,MAAAtP,GAAAhE,EAAAsT,IACApE,EAAAoE,GAAA,CACA,GAAAm2B,GAAA3Y,GAAA5hB,EAAAoF,GACAnR,EAAA2L,EAAA26B,EAEA36B,GAAA26B,GAAA36B,EAAAI,GACAJ,EAAAI,GAAA/L,EAGA,MADA2L,GAAA9O,OAAAsT,EACAxE,EA4BA,QAAA0mB,IAAAryB,GACA,mBAAAA,IAAAoxB,GAAApxB,GACA,MAAAA,EAEA,IAAAH,GAAAG,EAAA,EACA,YAAAH,GAAA,EAAAG,IAAAgT,GAAA,KAAAnT,EAUA,QAAA41B,IAAAjqB,GACA,SAAAA,EAAA,CACA,IACA,MAAA+6B,IAAAjtC,KAAAkS,GACS,MAAA7Q,IACT,IACA,MAAA6Q,GAAA,GACS,MAAA7Q,KAET,SAWA,QAAAorC,IAAAT,EAAAnW,GAOA,MANAnjB,GAAAsH,GAAA,SAAA6vB,GACA,GAAAnjC,GAAA,KAAAmjC,EAAA,EACAhU,GAAAgU,EAAA,KAAA72B,EAAAg5B,EAAAtlC,IACAslC,EAAAnmC,KAAAa,KAGAslC,EAAAh3B,OAUA,QAAAka,IAAAwW,GACA,GAAAA,YAAA1W,GACA,MAAA0W,GAAAxV,OAEA,IAAA3pB,GAAA,GAAA0oB,GAAAyW,EAAArW,YAAAqW,EAAAnW,UAIA,OAHAhpB,GAAA+oB,YAAAU,GAAA0V,EAAApW,aACA/oB,EAAAipB,UAAAkW,EAAAlW,UACAjpB,EAAAkpB,WAAAiW,EAAAjW,WACAlpB,EA0BA,QAAA2mC,IAAA76B,EAAAwE,EAAAuuB,GAEAvuB,GADAuuB,EAAAC,GAAAhzB,EAAAwE,EAAAuuB,GAAAvuB,IAAAtP,IACA,EAEAoyB,GAAA3B,GAAAnhB,GAAA,EAEA,IAAAtT,GAAA,MAAA8O,EAAA,EAAAA,EAAA9O,MACA,KAAAA,GAAAsT,EAAA,EACA,QAMA,KAJA,GAAApE,GAAA,EACAM,EAAA,EACAxM,EAAA8M,GAAAksB,GAAAh8B,EAAAsT,IAEApE,EAAAlP,GACAgD,EAAAwM,KAAAitB,GAAA3tB,EAAAI,KAAAoE,EAEA,OAAAtQ,GAkBA,QAAA4mC,IAAA96B,GAMA,IALA,GAAAI,IAAA,EACAlP,EAAA,MAAA8O,EAAA,EAAAA,EAAA9O,OACAwP,EAAA,EACAxM,OAEAkM,EAAAlP,GAAA,CACA,GAAAmD,GAAA2L,EAAAI,EACA/L,KACAH,EAAAwM,KAAArM,GAGA,MAAAH,GAyBA,QAAA2H,MACA,GAAA3K,GAAA4C,UAAA5C,MACA,KAAAA,EACA,QAMA,KAJA,GAAAyI,GAAAqH,GAAA9P,EAAA,GACA8O,EAAAlM,UAAA,GACAsM,EAAAlP,EAEAkP,KACAzG,EAAAyG,EAAA,GAAAtM,UAAAsM,EAEA,OAAAa,GAAAyb,GAAA1c,GAAA2d,GAAA3d,OAAA8lB,GAAAnsB,EAAA,IA4HA,QAAAohC,IAAA/6B,EAAAzR,EAAAwkC,GACA,GAAA7hC,GAAA,MAAA8O,EAAA,EAAAA,EAAA9O,MACA,OAAAA,IAGA3C,EAAAwkC,GAAAxkC,IAAA2G,GAAA,EAAAywB,GAAAp3B,GACAo/B,GAAA3tB,EAAAzR,EAAA,IAAAA,EAAA2C,OA4BA,QAAA8pC,IAAAh7B,EAAAzR,EAAAwkC,GACA,GAAA7hC,GAAA,MAAA8O,EAAA,EAAAA,EAAA9O,MACA,OAAAA,IAGA3C,EAAAwkC,GAAAxkC,IAAA2G,GAAA,EAAAywB,GAAAp3B,GACAA,EAAA2C,EAAA3C,EACAo/B,GAAA3tB,EAAA,EAAAzR,EAAA,IAAAA,OAsCA,QAAA0sC,IAAAj7B,EAAAQ,GACA,MAAAR,MAAA9O,OACAm+B,GAAArvB,EAAAisB,GAAAzrB,EAAA,aAuCA,QAAA06B,IAAAl7B,EAAAQ,GACA,MAAAR,MAAA9O,OACAm+B,GAAArvB,EAAAisB,GAAAzrB,EAAA,UAiCA,QAAA26B,IAAAn7B,EAAA3L,EAAAE,EAAA8pB,GACA,GAAAntB,GAAA,MAAA8O,EAAA,EAAAA,EAAA9O,MACA,OAAAA,IAGAqD,GAAA,gBAAAA,IAAAy+B,GAAAhzB,EAAA3L,EAAAE,KACAA,EAAA,EACA8pB,EAAAntB,GAEAw0B,GAAA1lB,EAAA3L,EAAAE,EAAA8pB,OAsCA,QAAA+c,IAAAp7B,EAAAQ,EAAAsB,GACA,GAAA5Q,GAAA,MAAA8O,EAAA,EAAAA,EAAA9O,MACA,KAAAA,EACA,QAEA,IAAAkP,GAAA,MAAA0B,EAAA,EAAA6jB,GAAA7jB,EAIA,OAHA1B,GAAA,IACAA,EAAAknB,GAAAp2B,EAAAkP,EAAA,IAEAyB,EAAA7B,EAAAisB,GAAAzrB,EAAA,GAAAJ,GAsCA,QAAAi7B,IAAAr7B,EAAAQ,EAAAsB,GACA,GAAA5Q,GAAA,MAAA8O,EAAA,EAAAA,EAAA9O,MACA,KAAAA,EACA,QAEA,IAAAkP,GAAAlP,EAAA,CAOA,OANA4Q,KAAA5M,KACAkL,EAAAulB,GAAA7jB,GACA1B,EAAA0B,EAAA,EACAwlB,GAAAp2B,EAAAkP,EAAA,GACAqe,GAAAre,EAAAlP,EAAA,IAEA2Q,EAAA7B,EAAAisB,GAAAzrB,EAAA,GAAAJ,GAAA,GAiBA,QAAAw4B,IAAA54B,GAEA,OADA,MAAAA,EAAA,EAAAA,EAAA9O,QACA40B,GAAA9lB,EAAA,MAiBA,QAAAs7B,IAAAt7B,GAEA,OADA,MAAAA,EAAA,EAAAA,EAAA9O,QACA40B,GAAA9lB,EAAAqH,OAuBA,QAAAk0B,IAAAv7B,EAAA+lB,GAEA,OADA,MAAA/lB,EAAA,EAAAA,EAAA9O,SAIA60B,MAAA7wB,GAAA,EAAAywB,GAAAI,GACAD,GAAA9lB,EAAA+lB,OAkBA,QAAAyV,IAAAna,GAKA,IAJA,GAAAjhB,IAAA,EACAlP,EAAA,MAAAmwB,EAAA,EAAAA,EAAAnwB,OACAgD,OAEAkM,EAAAlP,GAAA,CACA,GAAAsmC,GAAAnW,EAAAjhB,EACAlM,GAAAsjC,EAAA,IAAAA,EAAA,GAEA,MAAAtjC,GAqBA,QAAAunC,IAAAz7B,GACA,MAAAA,MAAA9O,OAAA8O,EAAA,GAAA9K,GA0BA,QAAAu3B,IAAAzsB,EAAA3L,EAAAyN,GACA,GAAA5Q,GAAA,MAAA8O,EAAA,EAAAA,EAAA9O,MACA,KAAAA,EACA,QAEA,IAAAkP,GAAA,MAAA0B,EAAA,EAAA6jB,GAAA7jB,EAIA,OAHA1B,GAAA,IACAA,EAAAknB,GAAAp2B,EAAAkP,EAAA,IAEAQ,EAAAZ,EAAA3L,EAAA+L,GAiBA,QAAAs7B,IAAA17B,GAEA,OADA,MAAAA,EAAA,EAAAA,EAAA9O,QACAy8B,GAAA3tB,EAAA,SAiHA,QAAA/J,IAAA+J,EAAA27B,GACA,aAAA37B,EAAA,GAAA47B,GAAAjuC,KAAAqS,EAAA27B,GAiBA,QAAA1T,IAAAjoB,GACA,GAAA9O,GAAA,MAAA8O,EAAA,EAAAA,EAAA9O,MACA,OAAAA,GAAA8O,EAAA9O,EAAA,GAAAgE,GAwBA,QAAA2mC,IAAA77B,EAAA3L,EAAAyN,GACA,GAAA5Q,GAAA,MAAA8O,EAAA,EAAAA,EAAA9O,MACA,KAAAA,EACA,QAEA,IAAAkP,GAAAlP,CAKA,OAJA4Q,KAAA5M,KACAkL,EAAAulB,GAAA7jB,GACA1B,IAAA,EAAAknB,GAAAp2B,EAAAkP,EAAA,GAAAqe,GAAAre,EAAAlP,EAAA,IAEAmD,MACA4Q,EAAAjF,EAAA3L,EAAA+L,GACAyB,EAAA7B,EAAAiC,EAAA7B,GAAA,GAwBA,QAAA07B,IAAA97B,EAAAzR,GACA,MAAAyR,MAAA9O,OAAA46B,GAAA9rB,EAAA2lB,GAAAp3B,IAAA2G,GAgDA,QAAA6mC,IAAA/7B,EAAA9E,GACA,MAAA8E,MAAA9O,QAAAgK,KAAAhK,OACAs7B,GAAAxsB,EAAA9E,GACA8E,EA0BA,QAAAg8B,IAAAh8B,EAAA9E,EAAAgF,GACA,MAAAF,MAAA9O,QAAAgK,KAAAhK,OACAs7B,GAAAxsB,EAAA9E,EAAA+wB,GAAA/rB,EAAA,IACAF,EA0BA,QAAAi8B,IAAAj8B,EAAA9E,EAAA4F,GACA,MAAAd,MAAA9O,QAAAgK,KAAAhK,OACAs7B,GAAAxsB,EAAA9E,EAAAhG,GAAA4L,GACAd,EAkEA,QAAAk8B,IAAAl8B,EAAAQ,GACA,GAAAtM,KACA,KAAA8L,MAAA9O,OACA,MAAAgD,EAEA,IAAAkM,IAAA,EACAusB,KACAz7B,EAAA8O,EAAA9O,MAGA,KADAsP,EAAAyrB,GAAAzrB,EAAA,KACAJ,EAAAlP,GAAA,CACA,GAAAmD,GAAA2L,EAAAI,EACAI,GAAAnM,EAAA+L,EAAAJ,KACA9L,EAAAV,KAAAa,GACAs4B,EAAAn5B,KAAA4M,IAIA,MADAssB,IAAA1sB,EAAA2sB,GACAz4B,EA0BA,QAAA6gC,IAAA/0B,GACA,aAAAA,IAAAm8B,GAAAxuC,KAAAqS,GAmBA,QAAAmwB,IAAAnwB,EAAAzL,EAAA8pB,GACA,GAAAntB,GAAA,MAAA8O,EAAA,EAAAA,EAAA9O,MACA,OAAAA,IAGAmtB,GAAA,gBAAAA,IAAA2U,GAAAhzB,EAAAzL,EAAA8pB,IACA9pB,EAAA,EACA8pB,EAAAntB,IAGAqD,EAAA,MAAAA,EAAA,EAAAoxB,GAAApxB,GACA8pB,MAAAnpB,GAAAhE,EAAAy0B,GAAAtH,IAEAsP,GAAA3tB,EAAAzL,EAAA8pB,OAoBA,QAAA+d,IAAAp8B,EAAA3L,GACA,MAAAw5B,IAAA7tB,EAAA3L,GA4BA,QAAAgoC,IAAAr8B,EAAA3L,EAAA6L,GACA,MAAAguB,IAAAluB,EAAA3L,EAAA43B,GAAA/rB,EAAA,IAmBA,QAAAo8B,IAAAt8B,EAAA3L,GACA,GAAAnD,GAAA,MAAA8O,EAAA,EAAAA,EAAA9O,MACA,IAAAA,EAAA,CACA,GAAAkP,GAAAytB,GAAA7tB,EAAA3L,EACA,IAAA+L,EAAAlP,GAAAoxB,GAAAtiB,EAAAI,GAAA/L,GACA,MAAA+L,GAGA,SAqBA,QAAAm8B,IAAAv8B,EAAA3L,GACA,MAAAw5B,IAAA7tB,EAAA3L,GAAA,GA4BA,QAAAmoC,IAAAx8B,EAAA3L,EAAA6L,GACA,MAAAguB,IAAAluB,EAAA3L,EAAA43B,GAAA/rB,EAAA,OAmBA,QAAAu8B,IAAAz8B,EAAA3L,GAEA,GADA,MAAA2L,EAAA,EAAAA,EAAA9O,OACA,CACA,GAAAkP,GAAAytB,GAAA7tB,EAAA3L,GAAA,IACA,IAAAiuB,GAAAtiB,EAAAI,GAAA/L,GACA,MAAA+L,GAGA,SAkBA,QAAAs8B,IAAA18B,GACA,MAAAA,MAAA9O,OACA09B,GAAA5uB,MAoBA,QAAA28B,IAAA38B,EAAAE,GACA,MAAAF,MAAA9O,OACA09B,GAAA5uB,EAAAisB,GAAA/rB,EAAA,OAkBA,QAAA08B,IAAA58B,GACA,GAAA9O,GAAA,MAAA8O,EAAA,EAAAA,EAAA9O,MACA,OAAAA,GAAAy8B,GAAA3tB,EAAA,EAAA9O,MA4BA,QAAA2rC,IAAA78B,EAAAzR,EAAAwkC,GACA,MAAA/yB,MAAA9O,QAGA3C,EAAAwkC,GAAAxkC,IAAA2G,GAAA,EAAAywB,GAAAp3B,GACAo/B,GAAA3tB,EAAA,EAAAzR,EAAA,IAAAA,OA4BA,QAAAuuC,IAAA98B,EAAAzR,EAAAwkC,GACA,GAAA7hC,GAAA,MAAA8O,EAAA,EAAAA,EAAA9O,MACA,OAAAA,IAGA3C,EAAAwkC,GAAAxkC,IAAA2G,GAAA,EAAAywB,GAAAp3B,GACAA,EAAA2C,EAAA3C,EACAo/B,GAAA3tB,EAAAzR,EAAA,IAAAA,EAAA2C,OAsCA,QAAA6rC,IAAA/8B,EAAAQ,GACA,MAAAR,MAAA9O,OACAm+B,GAAArvB,EAAAisB,GAAAzrB,EAAA,aAuCA,QAAAw8B,IAAAh9B,EAAAQ,GACA,MAAAR,MAAA9O,OACAm+B,GAAArvB,EAAAisB,GAAAzrB,EAAA,OAoGA,QAAAy8B,IAAAj9B,GACA,MAAAA,MAAA9O,OAAA89B,GAAAhvB,MA0BA,QAAAk9B,IAAAl9B,EAAAE,GACA,MAAAF,MAAA9O,OAAA89B,GAAAhvB,EAAAisB,GAAA/rB,EAAA,OAuBA,QAAAi9B,IAAAn9B,EAAAc,GAEA,MADAA,GAAA,kBAAAA,KAAA5L,GACA8K,KAAA9O,OAAA89B,GAAAhvB,EAAA9K,GAAA4L,MAsBA,QAAAs8B,IAAAp9B,GACA,IAAAA,MAAA9O,OACA,QAEA,IAAAA,GAAA,CAOA,OANA8O,GAAAS,EAAAT,EAAA,SAAAq9B,GACA,GAAA3R,GAAA2R,GAEA,MADAnsC,GAAAo2B,GAAA+V,EAAAnsC,WACA,IAGA2R,EAAA3R,EAAA,SAAAkP,GACA,MAAAW,GAAAf,EAAAsC,EAAAlC,MAyBA,QAAAk9B,IAAAt9B,EAAAE,GACA,IAAAF,MAAA9O,OACA,QAEA,IAAAgD,GAAAkpC,GAAAp9B,EACA,cAAAE,EACAhM,EAEA6M,EAAA7M,EAAA,SAAAmpC,GACA,MAAAz9B,GAAAM,EAAAhL,GAAAmoC,KAgJA,QAAA7rC,IAAAuR,EAAA7H,GACA,MAAAw0B,IAAA3sB,MAAA7H,MAAAsnB,IAkBA,QAAA+a,IAAAx6B,EAAA7H,GACA,MAAAw0B,IAAA3sB,MAAA7H,MAAAoxB,IA8DA,QAAAkR,IAAAnpC,GACA,GAAAH,GAAAnF,EAAAsF,EAEA,OADAH,GAAAgpB,WAAA,EACAhpB,EA0BA,QAAAupC,IAAAppC,EAAAqpC,GAEA,MADAA,GAAArpC,GACAA,EA0BA,QAAAygC,IAAAzgC,EAAAqpC,GACA,MAAAA,GAAArpC,GAsEA,QAAAspC,MACA,MAAAH,IAAA1mC,MA6BA,QAAA8mC,MACA,UAAAhhB,GAAA9lB,KAAAzC,QAAAyC,KAAAomB,WAyBA,QAAA2gB,MACA/mC,KAAAsmB,aAAAloB,KACA4B,KAAAsmB,WAAA0gB,GAAAhnC,KAAAzC,SAEA,IAAA6J,GAAApH,KAAAqmB,WAAArmB,KAAAsmB,WAAAlsB,MAGA,QAAcgN,OAAA7J,MAFd6J,EAAAhJ,GAAA4B,KAAAsmB,WAAAtmB,KAAAqmB,cAuBA,QAAA4gB,MACA,MAAAjnC,MA2BA,QAAAknC,IAAA3pC,GAIA,IAHA,GAAAH,GACAgG,EAAApD,KAEAoD,YAAA4iB,IAAA,CACA,GAAAe,GAAAhB,GAAA3iB,EACA2jB,GAAAV,UAAA,EACAU,EAAAT,WAAAloB,GACAhB,EACA04B,EAAA5P,YAAAa,EAEA3pB,EAAA2pB,CAEA,IAAA+O,GAAA/O,CACA3jB,KAAA8iB,YAGA,MADA4P,GAAA5P,YAAA3oB,EACAH,EAuBA,QAAA+pC,MACA,GAAA5pC,GAAAyC,KAAAkmB,WACA,IAAA3oB,YAAAsoB,GAAA,CACA,GAAAuhB,GAAA7pC,CAUA,OATAyC,MAAAmmB,YAAA/rB,SACAgtC,EAAA,GAAAvhB,GAAA7lB,OAEAonC,IAAAnJ,UACAmJ,EAAAjhB,YAAAzpB,MACAqM,KAAAi1B,GACAn7B,MAAAo7B,IACAj1B,QAAA5K,KAEA,GAAA0nB,GAAAshB,EAAApnC,KAAAomB,WAEA,MAAApmB,MAAAg+B,KAAAC,IAiBA,QAAAoJ,MACA,MAAAzf,IAAA5nB,KAAAkmB,YAAAlmB,KAAAmmB,aA4EA,QAAAmhB,IAAApqC,EAAAwM,EAAAuyB,GACA,GAAAlzB,GAAA6c,GAAA1oB,GAAAuM,EAAAglB,EAIA,OAHAwN,IAAAC,GAAAh/B,EAAAwM,EAAAuyB,KACAvyB,EAAAtL,IAEA2K,EAAA7L,EAAAi4B,GAAAzrB,EAAA,IAwCA,QAAAjH,IAAAvF,EAAAwM,GAEA,OADAkc,GAAA1oB,GAAAyM,EAAAolB,IACA7xB,EAAAi4B,GAAAzrB,EAAA,IAmFA,QAAA69B,IAAArqC,EAAAkM,GACA,MAAA4lB,IAAAz0B,GAAA2C,EAAAkM,GAAA,GAuBA,QAAAo+B,IAAAtqC,EAAAkM,GACA,MAAA4lB,IAAAz0B,GAAA2C,EAAAkM,GAAAmH,IAwBA,QAAAk3B,IAAAvqC,EAAAkM,EAAA6lB,GAEA,MADAA,OAAA7wB,GAAA,EAAAywB,GAAAI,GACAD,GAAAz0B,GAAA2C,EAAAkM,GAAA6lB,GAiCA,QAAA91B,IAAA+D,EAAAkM,GAEA,OADAwc,GAAA1oB,GAAAqM,EAAAsiB,IACA3uB,EAAAi4B,GAAA/rB,EAAA,IAuBA,QAAAs+B,IAAAxqC,EAAAkM,GAEA,OADAwc,GAAA1oB,GAAAsM,EAAAm+B,IACAzqC,EAAAi4B,GAAA/rB,EAAA,IAgEA,QAAAilB,IAAAnxB,EAAAK,EAAAyN,EAAAixB,GACA/+B,EAAA+2B,GAAA/2B,KAAAkH,GAAAlH,GACA8N,MAAAixB,EAAApN,GAAA7jB,GAAA,CAEA,IAAA5Q,GAAA8C,EAAA9C,MAIA,OAHA4Q,GAAA,IACAA,EAAAwlB,GAAAp2B,EAAA4Q,EAAA,IAEA48B,GAAA1qC,GACA8N,GAAA5Q,GAAA8C,EAAAy4B,QAAAp4B,EAAAyN,IAAA,IACA5Q,GAAA0P,EAAA5M,EAAAK,EAAAyN,IAAA,EA+GA,QAAAzQ,IAAA2C,EAAAkM,GAEA,OADAwc,GAAA1oB,GAAA+M,EAAA+pB,IACA92B,EAAAi4B,GAAA/rB,EAAA,IAgCA,QAAAy+B,IAAA3qC,EAAAsqB,EAAA0N,EAAA+G,GACA,aAAA/+B,MAGA0oB,GAAA4B,KACAA,EAAA,MAAAA,UAEA0N,EAAA+G,EAAA79B,GAAA82B,EACAtP,GAAAsP,KACAA,EAAA,MAAAA,UAEAD,GAAA/3B,EAAAsqB,EAAA0N,IAgFA,QAAA5wB,IAAApH,EAAAkM,EAAAC,GACA,GAAAN,GAAA6c,GAAA1oB,GAAAkN,EAAAsB,EACArB,EAAArN,UAAA5C,OAAA,CAEA,OAAA2O,GAAA7L,EAAAi4B,GAAA/rB,EAAA,GAAAC,EAAAgB,EAAAwhB,IAyBA,QAAAic,IAAA5qC,EAAAkM,EAAAC,GACA,GAAAN,GAAA6c,GAAA1oB,GAAAoN,EAAAoB,EACArB,EAAArN,UAAA5C,OAAA,CAEA,OAAA2O,GAAA7L,EAAAi4B,GAAA/rB,EAAA,GAAAC,EAAAgB,EAAAs9B,IAqCA,QAAAthC,IAAAnJ,EAAAwM,GAEA,OADAkc,GAAA1oB,GAAAyM,EAAAolB,IACA7xB,EAAA6qC,GAAA5S,GAAAzrB,EAAA,KAiBA,QAAAs+B,IAAA9qC,GAEA,OADA0oB,GAAA1oB,GAAA+tB,GAAAwL,IACAv5B,GAuBA,QAAA+qC,IAAA/qC,EAAAzF,EAAAwkC,GAOA,MALAxkC,IADAwkC,EAAAC,GAAAh/B,EAAAzF,EAAAwkC,GAAAxkC,IAAA2G,IACA,EAEAywB,GAAAp3B,IAEAmuB,GAAA1oB,GAAAiuB,GAAAuL,IACAx5B,EAAAzF,GAkBA,QAAAywC,IAAAhrC,GAEA,OADA0oB,GAAA1oB,GAAAouB,GAAAsL,IACA15B,GAwBA,QAAAwQ,IAAAxQ,GACA,SAAAA,EACA,QAEA,IAAA+2B,GAAA/2B,GACA,MAAA0qC,IAAA1qC,GAAAkR,EAAAlR,KAAA9C,MAEA,IAAA8yB,GAAAC,GAAAjwB,EACA,OAAAgwB,IAAA3b,IAAA2b,GAAArb,GACA3U,EAAAwQ,KAEA+lB,GAAAv2B,GAAA9C,OAuCA,QAAA+tC,IAAAjrC,EAAAwM,EAAAuyB,GACA,GAAAlzB,GAAA6c,GAAA1oB,GAAAqN,EAAAusB,EAIA,OAHAmF,IAAAC,GAAAh/B,EAAAwM,EAAAuyB,KACAvyB,EAAAtL,IAEA2K,EAAA7L,EAAAi4B,GAAAzrB,EAAA,IA6FA,QAAA0+B,IAAA3wC,EAAAsR,GACA,qBAAAA,GACA,SAAAtK,IAAAsQ,GAGA,OADAtX,GAAAo3B,GAAAp3B,GACA,WACA,KAAAA,EAAA,EACA,MAAAsR,GAAAD,MAAA9I,KAAAhD,YAsBA,QAAA0hC,IAAA31B,EAAAtR,EAAAwkC,GAGA,MAFAxkC,GAAAwkC,EAAA79B,GAAA3G,EACAA,EAAAsR,GAAA,MAAAtR,EAAAsR,EAAA3O,OAAA3C,EACAmpC,GAAA73B,EAAA+G,GAAA1R,YAAA3G,GAoBA,QAAA4wC,IAAA5wC,EAAAsR,GACA,GAAA3L,EACA,sBAAA2L,GACA,SAAAtK,IAAAsQ,GAGA,OADAtX,GAAAo3B,GAAAp3B,GACA,WAOA,QANAA,EAAA,IACA2F,EAAA2L,EAAAD,MAAA9I,KAAAhD,YAEAvF,GAAA,IACAsR,EAAA3K,IAEAhB,GA+IA,QAAAkrC,IAAAv/B,EAAAu0B,EAAArB,GACAqB,EAAArB,EAAA79B,GAAAk/B,CACA,IAAAlgC,GAAAwjC,GAAA73B,EAAA2G,GAAAtR,eAAAk/B,EAEA,OADAlgC,GAAAuP,YAAA27B,GAAA37B,YACAvP,EAyCA,QAAAmrC,IAAAx/B,EAAAu0B,EAAArB,GACAqB,EAAArB,EAAA79B,GAAAk/B,CACA,IAAAlgC,GAAAwjC,GAAA73B,EAAA4G,GAAAvR,eAAAk/B,EAEA,OADAlgC,GAAAuP,YAAA47B,GAAA57B,YACAvP,EAyDA,QAAAorC,IAAAz/B,EAAAmlB,EAAAua,GAuBA,QAAAC,GAAAlrC,GACA,GAAAqF,GAAA8lC,EACA3/B,EAAA4/B,CAKA,OAHAD,GAAAC,EAAAxqC,GACAyqC,EAAArrC,EACAJ,EAAA2L,EAAAD,MAAAE,EAAAnG,GAIA,QAAAimC,GAAAtrC,GAMA,MAJAqrC,GAAArrC,EAEAurC,EAAA5a,GAAA6a,EAAA9a,GAEA+a,EAAAP,EAAAlrC,GAAAJ,EAGA,QAAA8rC,GAAA1rC,GACA,GAAA2rC,GAAA3rC,EAAA4rC,EACAC,EAAA7rC,EAAAqrC,EACAS,EAAApb,EAAAib,CAEA,OAAAI,GACA5hB,GAAA2hB,EAAAE,EAAAH,GACAC,EAGA,QAAAG,GAAAjsC,GACA,GAAA2rC,GAAA3rC,EAAA4rC,EACAC,EAAA7rC,EAAAqrC,CAKA,OAAAO,KAAAhrC,IAAA+qC,GAAAjb,GACAib,EAAA,GAAAI,GAAAF,GAAAG,EAGA,QAAAR,KACA,GAAAxrC,GAAAE,IACA,IAAA+rC,EAAAjsC,GACA,MAAAksC,GAAAlsC,EAGAurC,GAAA5a,GAAA6a,EAAAE,EAAA1rC,IAGA,QAAAksC,GAAAlsC,GAKA,MAJAurC,GAAA3qC,GAIA0+B,GAAA6L,EACAD,EAAAlrC,IAEAmrC,EAAAC,EAAAxqC,GACAhB,GAGA,QAAAusC,KACAZ,IAAA3qC,IACAwrC,GAAAb,GAEAF,EAAA,EACAF,EAAAS,EAAAR,EAAAG,EAAA3qC,GAGA,QAAAyrC,KACA,MAAAd,KAAA3qC,GAAAhB,EAAAssC,EAAAhsC,MAGA,QAAAosC,KACA,GAAAtsC,GAAAE,KACAqsC,EAAAN,EAAAjsC,EAMA,IAJAmrC,EAAA3rC,UACA4rC,EAAA5oC,KACAopC,EAAA5rC,EAEAusC,EAAA,CACA,GAAAhB,IAAA3qC,GACA,MAAA0qC,GAAAM,EAEA,IAAAG,EAGA,MADAR,GAAA5a,GAAA6a,EAAA9a,GACAwa,EAAAU,GAMA,MAHAL,KAAA3qC,KACA2qC,EAAA5a,GAAA6a,EAAA9a,IAEA9wB,EApHA,GAAAurC,GACAC,EACAY,EACApsC,EACA2rC,EACAK,EACAP,EAAA,EACAI,GAAA,EACAM,GAAA,EACAzM,GAAA,CAEA,sBAAA/zB,GACA,SAAAtK,IAAAsQ,GA4GA,OA1GAmf,GAAA6R,GAAA7R,IAAA,EACAlB,GAAAyb,KACAQ,IAAAR,EAAAQ,QACAM,EAAA,WAAAd,GACAe,EAAAD,EAAA/Y,GAAAuP,GAAA0I,EAAAe,UAAA,EAAAtb,GAAAsb,EACA1M,EAAA,YAAA2L,OAAA3L,YAmGAgN,EAAAH,SACAG,EAAAD,QACAC,EAkEA,QAAAE,IAAAjhC,GACA,MAAA63B,IAAA73B,EAAAiH,IA+CA,QAAAi6B,IAAAlhC,EAAAmhC,GACA,qBAAAnhC,IAAA,MAAAmhC,GAAA,kBAAAA,GACA,SAAAzrC,IAAAsQ,GAEA,IAAAo7B,GAAA,WACA,GAAAtnC,GAAA7F,UACA8C,EAAAoqC,IAAAphC,MAAA9I,KAAA6C,KAAA,GACAwJ,EAAA89B,EAAA99B,KAEA,IAAAA,EAAA/P,IAAAwD,GACA,MAAAuM,GAAA7U,IAAAsI,EAEA,IAAA1C,GAAA2L,EAAAD,MAAA9I,KAAA6C,EAEA,OADAsnC,GAAA99B,QAAA4B,IAAAnO,EAAA1C,IAAAiP,EACAjP,EAGA,OADA+sC,GAAA99B,MAAA,IAAA49B,GAAAG,OAAAhhB,IACA+gB,EA0BA,QAAApC,IAAAr+B,GACA,qBAAAA,GACA,SAAAjL,IAAAsQ,GAEA,mBACA,GAAAlM,GAAA7F,SACA,QAAA6F,EAAAzI,QACA,cAAAsP,EAAA7S,KAAAmJ,KACA,eAAA0J,EAAA7S,KAAAmJ,KAAA6C,EAAA,GACA,eAAA6G,EAAA7S,KAAAmJ,KAAA6C,EAAA,GAAAA,EAAA,GACA,eAAA6G,EAAA7S,KAAAmJ,KAAA6C,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAEA,OAAA6G,EAAAZ,MAAA9I,KAAA6C,IAsBA,QAAAwnC,IAAAthC,GACA,MAAAs/B,IAAA,EAAAt/B,GAiLA,QAAAuhC,IAAAvhC,EAAAtL,GACA,qBAAAsL,GACA,SAAAtK,IAAAsQ,GAGA,OADAtR,OAAAW,GAAAX,EAAAoxB,GAAApxB,GACA64B,GAAAvtB,EAAAtL,GAqCA,QAAA8sC,IAAAxhC,EAAAtL,GACA,qBAAAsL,GACA,SAAAtK,IAAAsQ,GAGA,OADAtR,GAAA,MAAAA,EAAA,EAAA+yB,GAAA3B,GAAApxB,GAAA,GACA64B,GAAA,SAAAzzB,GACA,GAAAqG,GAAArG,EAAApF,GACA0lC,EAAAhK,GAAAt2B,EAAA,EAAApF,EAKA,OAHAyL,IACAiB,EAAAg5B,EAAAj6B,GAEAJ,EAAAC,EAAA/I,KAAAmjC,KAgDA,QAAAqH,IAAAzhC,EAAAmlB,EAAAua,GACA,GAAAQ,IAAA,EACAnM,GAAA,CAEA,sBAAA/zB,GACA,SAAAtK,IAAAsQ,GAMA,OAJAie,IAAAyb,KACAQ,EAAA,WAAAR,OAAAQ,UACAnM,EAAA,YAAA2L,OAAA3L,YAEA0L,GAAAz/B,EAAAmlB,GACA+a,UACAO,QAAAtb,EACA4O,aAmBA,QAAA2N,IAAA1hC,GACA,MAAA21B,IAAA31B,EAAA,GAyBA,QAAA2hC,IAAAntC,EAAAg/B,GACA,MAAAoO,IAAA3R,GAAAuD,GAAAh/B,GAsCA,QAAAqtC,MACA,IAAA5tC,UAAA5C,OACA,QAEA,IAAAmD,GAAAP,UAAA,EACA,OAAA4oB,IAAAroB,SA6BA,QAAAwpB,IAAAxpB,GACA,MAAAkvB,IAAAlvB,EAAA6R,IAkCA,QAAAy7B,IAAAttC,EAAAovB,GAEA,MADAA,GAAA,kBAAAA,KAAAvuB,GACAquB,GAAAlvB,EAAA6R,GAAAud,GAqBA,QAAAme,IAAAvtC,GACA,MAAAkvB,IAAAlvB,EAAA2R,GAAAE,IA+BA,QAAA27B,IAAAxtC,EAAAovB,GAEA,MADAA,GAAA,kBAAAA,KAAAvuB,GACAquB,GAAAlvB,EAAA2R,GAAAE,GAAAud,GA2BA,QAAAqe,IAAArzC,EAAA+H,GACA,aAAAA,GAAAsuB,GAAAr2B,EAAA+H,EAAAH,GAAAG,IAmCA,QAAA8rB,IAAAjuB,EAAA6yB,GACA,MAAA7yB,KAAA6yB,GAAA7yB,OAAA6yB,MAmJA,QAAA6D,IAAA12B,GACA,aAAAA,GAAA61B,GAAA71B,EAAAnD,UAAAkI,GAAA/E,GA4BA,QAAAq3B,IAAAr3B,GACA,MAAAooB,IAAApoB,IAAA02B,GAAA12B,GAoBA,QAAA0tC,IAAA1tC,GACA,WAAAA,IAAA,IAAAA,GACAooB,GAAApoB,IAAAwyB,GAAAxyB,IAAA0T,GA0DA,QAAAi6B,IAAA3tC,GACA,MAAAooB,IAAApoB,IAAA,IAAAA,EAAA0mB,WAAA6Q,GAAAv3B,GAoCA,QAAAmF,IAAAnF,GACA,SAAAA,EACA,QAEA,IAAA02B,GAAA12B,KACAqoB,GAAAroB,IAAA,gBAAAA,IAAA,kBAAAA,GAAAyrB,QACA6B,GAAAttB,IAAA8nB,GAAA9nB,IAAAotB,GAAAptB,IACA,OAAAA,EAAAnD,MAEA,IAAA8yB,GAAAC,GAAA5vB,EACA,IAAA2vB,GAAA3b,IAAA2b,GAAArb,GACA,OAAAtU,EAAAmQ,IAEA,IAAAgmB,GAAAn2B,GACA,OAAAk2B,GAAAl2B,GAAAnD,MAEA,QAAA0F,KAAAvC,GACA,GAAAzF,GAAAjB,KAAA0G,EAAAuC,GACA,QAGA,UA+BA,QAAAqrC,IAAA5tC,EAAA6yB,GACA,MAAAmB,IAAAh0B,EAAA6yB,GAmCA,QAAAgb,IAAA7tC,EAAA6yB,EAAAzD,GACAA,EAAA,kBAAAA,KAAAvuB,EACA,IAAAhB,GAAAuvB,IAAApvB,EAAA6yB,GAAAhyB,EACA,OAAAhB,KAAAgB,GAAAmzB,GAAAh0B,EAAA6yB,EAAAhyB,GAAAuuB,KAAAvvB,EAqBA,QAAAiuC,IAAA9tC,GACA,IAAAooB,GAAApoB,GACA,QAEA,IAAA2vB,GAAA6C,GAAAxyB,EACA,OAAA2vB,IAAA9b,IAAA8b,GAAA/b,IACA,gBAAA5T,GAAAgkC,SAAA,gBAAAhkC,GAAAtG,OAAA69B,GAAAv3B,GA6BA,QAAA+tC,IAAA/tC,GACA,sBAAAA,IAAAguC,GAAAhuC,GAoBA,QAAA+E,IAAA/E,GACA,IAAAyvB,GAAAzvB,GACA,QAIA,IAAA2vB,GAAA6C,GAAAxyB,EACA,OAAA2vB,IAAA7b,IAAA6b,GAAA5b,IAAA4b,GAAAlc,IAAAkc,GAAAvb,GA6BA,QAAA65B,IAAAjuC,GACA,sBAAAA,OAAAsxB,GAAAtxB,GA6BA,QAAA61B,IAAA71B,GACA,sBAAAA,IACAA,GAAA,GAAAA,EAAA,MAAAA,GAAAiT,GA4BA,QAAAwc,IAAAzvB,GACA,GAAAhF,SAAAgF,EACA,cAAAA,IAAA,UAAAhF,GAAA,YAAAA,GA2BA,QAAAotB,IAAApoB,GACA,aAAAA,GAAA,gBAAAA,GAkDA,QAAAkuC,IAAA9zC,EAAA+H,GACA,MAAA/H,KAAA+H,GAAA+yB,GAAA96B,EAAA+H,EAAAw0B,GAAAx0B,IAmCA,QAAAgsC,IAAA/zC,EAAA+H,EAAAitB,GAEA,MADAA,GAAA,kBAAAA,KAAAvuB,GACAq0B,GAAA96B,EAAA+H,EAAAw0B,GAAAx0B,GAAAitB,GA+BA,QAAAgf,IAAApuC,GAIA,MAAAquC,IAAAruC,UA6BA,QAAAsuC,IAAAtuC,GACA,GAAAuuC,GAAAvuC,GACA,SAAA/B,IAAAsT,GAEA,OAAA+jB,IAAAt1B,GAoBA,QAAAwuC,IAAAxuC,GACA,cAAAA,EAuBA,QAAAyuC,IAAAzuC,GACA,aAAAA,EA6BA,QAAAquC,IAAAruC,GACA,sBAAAA,IACAooB,GAAApoB,IAAAwyB,GAAAxyB,IAAAiU,GA+BA,QAAAsjB,IAAAv3B,GACA,IAAAooB,GAAApoB,IAAAwyB,GAAAxyB,IAAAmU,GACA,QAEA,IAAAu6B,GAAAtJ,GAAAplC,EACA,WAAA0uC,EACA,QAEA,IAAAzP,GAAA1kC,GAAAjB,KAAAo1C,EAAA,gBAAAA,EAAAhoC,WACA,yBAAAu4B,oBACAsH,GAAAjtC,KAAA2lC,IAAA0P,GAiDA,QAAAC,IAAA5uC,GACA,MAAAiuC,IAAAjuC,QAAAiT,IAAAjT,GAAAiT,GAuCA,QAAAo3B,IAAArqC,GACA,sBAAAA,KACAqoB,GAAAroB,IAAAooB,GAAApoB,IAAAwyB,GAAAxyB,IAAAuU,GAoBA,QAAA6c,IAAApxB,GACA,sBAAAA,IACAooB,GAAApoB,IAAAwyB,GAAAxyB,IAAAwU,GAuCA,QAAA9V,IAAAsB,GACA,MAAAA,KAAAa,GAoBA,QAAAguC,IAAA7uC,GACA,MAAAooB,IAAApoB,IAAA4vB,GAAA5vB,IAAA0U,GAoBA,QAAAo6B,IAAA9uC,GACA,MAAAooB,IAAApoB,IAAAwyB,GAAAxyB,IAAA2U,GA8EA,QAAA80B,IAAAzpC,GACA,IAAAA,EACA,QAEA,IAAA02B,GAAA12B,GACA,MAAAqqC,IAAArqC,GAAAgR,EAAAhR,GAAAspB,GAAAtpB,EAEA,IAAA+uC,IAAA/uC,EAAA+uC,IACA,MAAAj/B,GAAA9P,EAAA+uC,MAEA,IAAApf,GAAAC,GAAA5vB,EAGA,QAFA2vB,GAAA3b,GAAA9D,EAAAyf,GAAArb,GAAA7D,EAAA5J,IAEA7G,GA0BA,QAAAsiC,IAAAtiC,GACA,IAAAA,EACA,WAAAA,IAAA,CAGA,KADAA,EAAAwiC,GAAAxiC,MACAgT,IAAAhT,KAAAgT,GAAA,CAEA,OADAhT,EAAA,QACAkT,GAEA,MAAAlT,SAAA,EA6BA,QAAAsxB,IAAAtxB,GACA,GAAAH,GAAAyiC,GAAAtiC,GACAgvC,EAAAnvC,EAAA,CAEA,OAAAA,OAAAmvC,EAAAnvC,EAAAmvC,EAAAnvC,EAAA,EA8BA,QAAA0xB,IAAAvxB,GACA,MAAAA,GAAA8tB,GAAAwD,GAAAtxB,GAAA,EAAAmT,IAAA,EA0BA,QAAAqvB,IAAAxiC,GACA,mBAAAA,GACA,MAAAA,EAEA,IAAAoxB,GAAApxB,GACA,MAAAgO,GAEA,IAAAyhB,GAAAzvB,GAAA,CACA,GAAA6yB,GAAA,kBAAA7yB,GAAAivC,QAAAjvC,EAAAivC,UAAAjvC,CACAA,GAAAyvB,GAAAoD,KAAA,GAAAA,EAEA,mBAAA7yB,GACA,WAAAA,MAEAA,KAAAyK,QAAA8L,GAAA,GACA,IAAA24B,GAAAj4B,GAAAtH,KAAA3P,EACA,OAAAkvC,IAAA/3B,GAAAxH,KAAA3P,GACAomB,GAAApmB,EAAA87B,MAAA,GAAAoT,EAAA,KACAl4B,GAAArH,KAAA3P,GAAAgO,IAAAhO,EA2BA,QAAAw3B,IAAAx3B,GACA,MAAAwuB,IAAAxuB,EAAA0uB,GAAA1uB,IA2BA,QAAAmvC,IAAAnvC,GACA,MAAAA,GACA8tB,GAAAwD,GAAAtxB,IAAAiT,OACA,IAAAjT,IAAA,EAwBA,QAAA27B,IAAA37B,GACA,aAAAA,EAAA,GAAAy6B,GAAAz6B,GA0MA,QAAAovC,IAAA90C,EAAA+0C,GACA,GAAAxvC,GAAAggC,GAAAvlC,EACA,cAAA+0C,EAAAxvC,EAAA0uB,GAAA1uB,EAAAwvC,GAkHA,QAAAC,IAAAl1C,EAAA+R,GACA,MAAAmB,GAAAlT,EAAAw9B,GAAAzrB,EAAA,GAAA0lB,IAsCA,QAAA0d,IAAAn1C,EAAA+R,GACA,MAAAmB,GAAAlT,EAAAw9B,GAAAzrB,EAAA,GAAA4lB,IA+BA,QAAAyd,IAAAp1C,EAAAyR,GACA,aAAAzR,EACAA,EACA03B,GAAA13B,EAAAw9B,GAAA/rB,EAAA,GAAA6iB,IA6BA,QAAA+gB,IAAAr1C,EAAAyR,GACA,aAAAzR,EACAA,EACA43B,GAAA53B,EAAAw9B,GAAA/rB,EAAA,GAAA6iB,IA+BA,QAAAghB,IAAAt1C,EAAAyR,GACA,MAAAzR,IAAAy3B,GAAAz3B,EAAAw9B,GAAA/rB,EAAA,IA6BA,QAAA8jC,IAAAv1C,EAAAyR,GACA,MAAAzR,IAAA23B,GAAA33B,EAAAw9B,GAAA/rB,EAAA,IA0BA,QAAA+jC,IAAAx1C,GACA,aAAAA,KAAA63B,GAAA73B,EAAA4H,GAAA5H,IA0BA,QAAAy1C,IAAAz1C,GACA,aAAAA,KAAA63B,GAAA73B,EAAAs0B,GAAAt0B,IA4BA,QAAAH,IAAAG,EAAA+3B,EAAA2P,GACA,GAAAjiC,GAAA,MAAAzF,EAAAyG,GAAAqxB,GAAA93B,EAAA+3B,EACA,OAAAtyB,KAAAgB,GAAAihC,EAAAjiC,EA8BA,QAAAd,IAAA3E,EAAA+3B,GACA,aAAA/3B,GAAA6qC,GAAA7qC,EAAA+3B,EAAAW,IA6BA,QAAAiE,IAAA38B,EAAA+3B,GACA,aAAA/3B,GAAA6qC,GAAA7qC,EAAA+3B,EAAAY,IAqHA,QAAA/wB,IAAA5H,GACA,MAAAs8B,IAAAt8B,GAAA6yB,GAAA7yB,GAAA87B,GAAA97B,GA0BA,QAAAs0B,IAAAt0B,GACA,MAAAs8B,IAAAt8B,GAAA6yB,GAAA7yB,GAAA,GAAAi8B,GAAAj8B,GAwBA,QAAA01C,IAAA11C,EAAAyR,GACA,GAAAhM,KAMA,OALAgM,GAAA+rB,GAAA/rB,EAAA,GAEAgmB,GAAAz3B,EAAA,SAAA4F,EAAAuC,EAAAnI,GACA8zB,GAAAruB,EAAAgM,EAAA7L,EAAAuC,EAAAnI,GAAA4F,KAEAH,EA+BA,QAAAkwC,IAAA31C,EAAAyR,GACA,GAAAhM,KAMA,OALAgM,GAAA+rB,GAAA/rB,EAAA,GAEAgmB,GAAAz3B,EAAA,SAAA4F,EAAAuC,EAAAnI,GACA8zB,GAAAruB,EAAA0C,EAAAsJ,EAAA7L,EAAAuC,EAAAnI,MAEAyF,EAuIA,QAAAmwC,IAAA51C,EAAA+R,GACA,MAAA8jC,IAAA71C,EAAAowC,GAAA5S,GAAAzrB,KA0CA,QAAA8jC,IAAA71C,EAAA+R,GACA,SAAA/R,EACA,QAEA,IAAAsU,GAAAhC,EAAA4jB,GAAAl2B,GAAA,SAAA81C,GACA,OAAAA,IAGA,OADA/jC,GAAAyrB,GAAAzrB,GACA6rB,GAAA59B,EAAAsU,EAAA,SAAA1O,EAAAmyB,GACA,MAAAhmB,GAAAnM,EAAAmyB,EAAA,MAiCA,QAAAtyB,IAAAzF,EAAA+3B,EAAA2P,GACA3P,EAAAC,GAAAD,EAAA/3B,EAEA,IAAA2R,IAAA,EACAlP,EAAAs1B,EAAAt1B,MAOA,KAJAA,IACAA,EAAA,EACAzC,EAAAyG,MAEAkL,EAAAlP,GAAA,CACA,GAAAmD,GAAA,MAAA5F,EAAAyG,GAAAzG,EAAAi4B,GAAAF,EAAApmB,IACA/L,KAAAa,KACAkL,EAAAlP,EACAmD,EAAA8hC,GAEA1nC,EAAA2K,GAAA/E,KAAA1G,KAAAc,GAAA4F,EAEA,MAAA5F,GA+BA,QAAAsW,IAAAtW,EAAA+3B,EAAAnyB,GACA,aAAA5F,IAAA69B,GAAA79B,EAAA+3B,EAAAnyB,GA2BA,QAAAmwC,IAAA/1C,EAAA+3B,EAAAnyB,EAAAovB,GAEA,MADAA,GAAA,kBAAAA,KAAAvuB,GACA,MAAAzG,IAAA69B,GAAA79B,EAAA+3B,EAAAnyB,EAAAovB,GAqFA,QAAA/e,IAAAjW,EAAAyR,EAAAC,GACA,GAAA6d,GAAAtB,GAAAjuB,GACAg2C,EAAAzmB,GAAA2D,GAAAlzB,IAAA0tB,GAAA1tB,EAGA,IADAyR,EAAA+rB,GAAA/rB,EAAA,GACA,MAAAC,EAAA,CACA,GAAAmzB,GAAA7kC,KAAAsM,WAEAoF,GADAskC,EACAzmB,EAAA,GAAAsV,MAEAxP,GAAAr1B,IACA2K,GAAAk6B,GAAAY,GAAAuF,GAAAhrC,OASA,OAHAg2C,EAAApkC,EAAA6lB,IAAAz3B,EAAA,SAAA4F,EAAA+L,EAAA3R,GACA,MAAAyR,GAAAC,EAAA9L,EAAA+L,EAAA3R,KAEA0R,EA8BA,QAAAukC,IAAAj2C,EAAA+3B,GACA,aAAA/3B,GAAAo+B,GAAAp+B,EAAA+3B,GA8BA,QAAAme,IAAAl2C,EAAA+3B,EAAA4I,GACA,aAAA3gC,IAAA0gC,GAAA1gC,EAAA+3B,EAAAsJ,GAAAV,IA2BA,QAAAwV,IAAAn2C,EAAA+3B,EAAA4I,EAAA3L,GAEA,MADAA,GAAA,kBAAAA,KAAAvuB,GACA,MAAAzG,IAAA0gC,GAAA1gC,EAAA+3B,EAAAsJ,GAAAV,GAAA3L,GA6BA,QAAAvoB,IAAAzM,GACA,aAAAA,KAAAwU,EAAAxU,EAAA4H,GAAA5H,IA2BA,QAAAo2C,IAAAp2C,GACA,aAAAA,KAAAwU,EAAAxU,EAAAs0B,GAAAt0B,IAwBA,QAAAq2C,IAAA1hB,EAAAC,EAAAC,GAaA,MAZAA,KAAApuB,KACAouB,EAAAD,EACAA,EAAAnuB,IAEAouB,IAAApuB,KACAouB,EAAAuT,GAAAvT,GACAA,UAAA,GAEAD,IAAAnuB,KACAmuB,EAAAwT,GAAAxT,GACAA,UAAA,GAEAlB,GAAA0U,GAAAzT,GAAAC,EAAAC,GAyCA,QAAAyhB,IAAA3hB,EAAA7uB,EAAA8pB,GASA,MARA9pB,GAAAoiC,GAAApiC,GACA8pB,IAAAnpB,IACAmpB,EAAA9pB,EACAA,EAAA,GAEA8pB,EAAAsY,GAAAtY,GAEA+E,EAAAyT,GAAAzT,GACAiE,GAAAjE,EAAA7uB,EAAA8pB,GAkCA,QAAA2mB,IAAA3hB,EAAAC,EAAA2hB,GA2BA,GA1BAA,GAAA,iBAAAA,IAAAjS,GAAA3P,EAAAC,EAAA2hB,KACA3hB,EAAA2hB,EAAA/vC,IAEA+vC,IAAA/vC,KACA,iBAAAouB,IACA2hB,EAAA3hB,EACAA,EAAApuB,IAEA,iBAAAmuB,KACA4hB,EAAA5hB,EACAA,EAAAnuB,KAGAmuB,IAAAnuB,IAAAouB,IAAApuB,IACAmuB,EAAA,EACAC,EAAA,IAGAD,EAAAsT,GAAAtT,GACAC,IAAApuB,IACAouB,EAAAD,EACAA,EAAA,GAEAC,EAAAqT,GAAArT,IAGAD,EAAAC,EAAA,CACA,GAAA4hB,GAAA7hB,CACAA,GAAAC,EACAA,EAAA4hB,EAEA,GAAAD,GAAA5hB,EAAA,GAAAC,EAAA,GACA,GAAAqX,GAAA5N,IACA,OAAAtO,IAAA4E,EAAAsX,GAAArX,EAAAD,EAAA9I,GAAA,QAAAogB,EAAA,IAAAzpC,OAAA,KAAAoyB,GAEA,MAAAtB,IAAAqB,EAAAC,GA6CA,QAAA6hB,IAAA5jC,GACA,MAAA6jC,IAAApV,GAAAzuB,GAAA8jC,eAqBA,QAAArR,IAAAzyB,GAEA,OADAA,EAAAyuB,GAAAzuB,KACAA,EAAAzC,QAAA4M,GAAA0Q,IAAAtd,QAAAmO,GAAA,IA0BA,QAAAq4B,IAAA/jC,EAAAhL,EAAAgvC,GACAhkC,EAAAyuB,GAAAzuB,GACAhL,EAAAu4B,GAAAv4B,EAEA,IAAArF,GAAAqQ,EAAArQ,MACAq0C,OAAArwC,GACAhE,EACAixB,GAAAwD,GAAA4f,GAAA,EAAAr0C,EAEA,IAAAmtB,GAAAknB,CAEA,QADAA,GAAAhvC,EAAArF,SACA,GAAAqQ,EAAA4uB,MAAAoV,EAAAlnB,IAAA9nB,EA+BA,QAAAivC,IAAAjkC,GAEA,MADAA,GAAAyuB,GAAAzuB,GACAA,GAAA4I,GAAAnG,KAAAzC,GACAA,EAAAzC,QAAAkL,GAAAqS,IACA9a,EAkBA,QAAAkkC,IAAAlkC,GAEA,MADAA,GAAAyuB,GAAAzuB,GACAA,GAAAoJ,GAAA3G,KAAAzC,GACAA,EAAAzC,QAAA4L,GAAA,QACAnJ,EA8FA,QAAAmkC,IAAAnkC,EAAArQ,EAAAqlC,GACAh1B,EAAAyuB,GAAAzuB,GACArQ,EAAAy0B,GAAAz0B,EAEA,IAAAy0C,GAAAz0C,EAAAgU,EAAA3D,GAAA,CACA,KAAArQ,GAAAy0C,GAAAz0C,EACA,MAAAqQ,EAEA,IAAA0sB,IAAA/8B,EAAAy0C,GAAA,CACA,OACArP,IAAAxJ,GAAAmB,GAAAsI,GACAh1B,EACA+0B,GAAApJ,GAAAe,GAAAsI,GA2BA,QAAAqP,IAAArkC,EAAArQ,EAAAqlC,GACAh1B,EAAAyuB,GAAAzuB,GACArQ,EAAAy0B,GAAAz0B,EAEA,IAAAy0C,GAAAz0C,EAAAgU,EAAA3D,GAAA,CACA,OAAArQ,IAAAy0C,EAAAz0C,EACAqQ,EAAA+0B,GAAAplC,EAAAy0C,EAAApP,GACAh1B,EA0BA,QAAAskC,IAAAtkC,EAAArQ,EAAAqlC,GACAh1B,EAAAyuB,GAAAzuB,GACArQ,EAAAy0B,GAAAz0B,EAEA,IAAAy0C,GAAAz0C,EAAAgU,EAAA3D,GAAA,CACA,OAAArQ,IAAAy0C,EAAAz0C,EACAolC,GAAAplC,EAAAy0C,EAAApP,GAAAh1B,EACAA,EA2BA,QAAAmZ,IAAAnZ,EAAAukC,EAAA/S,GAMA,MALAA,IAAA,MAAA+S,EACAA,EAAA,EACOA,IACPA,MAEAC,GAAA/V,GAAAzuB,GAAAzC,QAAA+L,GAAA,IAAAi7B,GAAA,GAyBA,QAAAE,IAAAzkC,EAAAhT,EAAAwkC,GAMA,MAJAxkC,IADAwkC,EAAAC,GAAAzxB,EAAAhT,EAAAwkC,GAAAxkC,IAAA2G,IACA,EAEAywB,GAAAp3B,GAEA4+B,GAAA6C,GAAAzuB,GAAAhT,GAsBA,QAAAuQ,MACA,GAAAnF,GAAA7F,UACAyN,EAAAyuB,GAAAr2B,EAAA,GAEA,OAAAA,GAAAzI,OAAA,EAAAqQ,IAAAzC,QAAAnF,EAAA,GAAAA,EAAA,IA+CA,QAAAxD,IAAAoL,EAAAo6B,EAAAsK,GAKA,MAJAA,IAAA,gBAAAA,IAAAjT,GAAAzxB,EAAAo6B,EAAAsK,KACAtK,EAAAsK,EAAA/wC,KAEA+wC,MAAA/wC,GAAAsS,GAAAy+B,IAAA,IAIA1kC,EAAAyuB,GAAAzuB,GACAA,IACA,gBAAAo6B,IACA,MAAAA,IAAA5f,GAAA4f,OAEAA,EAAA7M,GAAA6M,KACA73B,EAAAvC,GACA0uB,GAAA5qB,EAAA9D,GAAA,EAAA0kC,GAGA1kC,EAAApL,MAAAwlC,EAAAsK,OAmDA,QAAAC,IAAA3kC,EAAAhL,EAAAgvC,GAOA,MANAhkC,GAAAyuB,GAAAzuB,GACAgkC,EAAA,MAAAA,EACA,EACApjB,GAAAwD,GAAA4f,GAAA,EAAAhkC,EAAArQ,QAEAqF,EAAAu4B,GAAAv4B,GACAgL,EAAA4uB,MAAAoV,IAAAhvC,EAAArF,SAAAqF,EA2GA,QAAA4vC,IAAA5kC,EAAAg+B,EAAAxM,GAIA,GAAAqT,GAAAr3C,EAAAs3C,gBAEAtT,IAAAC,GAAAzxB,EAAAg+B,EAAAxM,KACAwM,EAAArqC,IAEAqM,EAAAyuB,GAAAzuB,GACAg+B,EAAA+G,MAA+B/G,EAAA6G,EAAAvO,GAE/B,IAIA0O,GACAC,EALAC,EAAAH,MAAmC/G,EAAAkH,QAAAL,EAAAK,QAAA5O,IACnC6O,EAAArwC,GAAAowC,GACAE,EAAA1jC,EAAAwjC,EAAAC,GAIAtmC,EAAA,EACAwmC,EAAArH,EAAAqH,aAAAj7B,GACAnV,EAAA,WAGAqwC,EAAA38B,IACAq1B,EAAAiG,QAAA75B,IAAAnV,OAAA,IACAowC,EAAApwC,OAAA,KACAowC,IAAAt8B,GAAAa,GAAAQ,IAAAnV,OAAA,KACA+oC,EAAAuH,UAAAn7B,IAAAnV,OAAA,KACA,KAGAuwC,EAAA,kBACA,aAAAxH,GACAA,EAAAwH,UACA,6BAAA35B,GAAA,KACA,IAEA7L,GAAAzC,QAAA+nC,EAAA,SAAAplC,EAAAulC,EAAAC,EAAAC,EAAAC,EAAA7zC,GAsBA,MArBA2zC,OAAAC,GAGA1wC,GAAA+K,EAAA4uB,MAAA/vB,EAAA9M,GAAAwL,QAAA8M,GAAAlI,GAGAsjC,IACAT,GAAA,EACA/vC,GAAA,YAAAwwC,EAAA,UAEAG,IACAX,GAAA,EACAhwC,GAAA,OAAuB2wC,EAAA,eAEvBF,IACAzwC,GAAA,iBAAAywC,EAAA,+BAEA7mC,EAAA9M,EAAAmO,EAAAvQ,OAIAuQ,IAGAjL,GAAA,MAIA,IAAA4wC,GAAA7H,EAAA6H,QACAA,KACA5wC,EAAA,iBAA8BA,EAAA,SAG9BA,GAAAgwC,EAAAhwC,EAAAsI,QAAA8K,GAAA,IAAApT,GACAsI,QAAA+K,GAAA,MACA/K,QAAAgL,GAAA,OAGAtT,EAAA,aAAA4wC,GAAA,gBACAA,EACA,GACA,wBAEA,qBACAb,EACA,mBACA,KAEAC,EACA,uFAEA,OAEAhwC,EACA,eAEA,IAAAtC,GAAAmzC,GAAA,WACA,MAAAhpC,IAAAqoC,EAAAK,EAAA,UAAAvwC,GACAoJ,MAAA1K,GAAAyxC,IAMA,IADAzyC,EAAAsC,SACA2rC,GAAAjuC,GACA,KAAAA,EAEA,OAAAA,GAwBA,QAAAozC,IAAAjzC,GACA,MAAA27B,IAAA37B,GAAAgxC,cAwBA,QAAAkC,IAAAlzC,GACA,MAAA27B,IAAA37B,GAAAmzC,cAyBA,QAAAC,IAAAlmC,EAAAg1B,EAAAxD,GAEA,IADAxxB,EAAAyuB,GAAAzuB,MACAwxB,GAAAwD,IAAArhC,IACA,MAAAqM,GAAAzC,QAAA8L,GAAA,GAEA,KAAArJ,KAAAg1B,EAAAzH,GAAAyH,IACA,MAAAh1B,EAEA,IAAA8B,GAAAgC,EAAA9D,GACA+B,EAAA+B,EAAAkxB,EAIA,OAAAtG,IAAA5sB,EAHAD,EAAAC,EAAAC,GACAC,EAAAF,EAAAC,GAAA,GAEArN,KAAA,IAsBA,QAAAyxC,IAAAnmC,EAAAg1B,EAAAxD,GAEA,IADAxxB,EAAAyuB,GAAAzuB,MACAwxB,GAAAwD,IAAArhC,IACA,MAAAqM,GAAAzC,QAAAgM,GAAA,GAEA,KAAAvJ,KAAAg1B,EAAAzH,GAAAyH,IACA,MAAAh1B,EAEA,IAAA8B,GAAAgC,EAAA9D,EAGA,OAAA0uB,IAAA5sB,EAAA,EAFAE,EAAAF,EAAAgC,EAAAkxB,IAAA,GAEAtgC,KAAA,IAsBA,QAAA0xC,IAAApmC,EAAAg1B,EAAAxD,GAEA,IADAxxB,EAAAyuB,GAAAzuB,MACAwxB,GAAAwD,IAAArhC,IACA,MAAAqM,GAAAzC,QAAA+L,GAAA,GAEA,KAAAtJ,KAAAg1B,EAAAzH,GAAAyH,IACA,MAAAh1B,EAEA,IAAA8B,GAAAgC,EAAA9D,EAGA,OAAA0uB,IAAA5sB,EAFAD,EAAAC,EAAAgC,EAAAkxB,KAEAtgC,KAAA,IAwCA,QAAA2xC,IAAArmC,EAAAg+B,GACA,GAAAruC,GAAA6V,GACA8gC,EAAA7gC,EAEA,IAAA8c,GAAAyb,GAAA,CACA,GAAA5D,GAAA,aAAA4D,KAAA5D,WACAzqC,GAAA,UAAAquC,GAAA5Z,GAAA4Z,EAAAruC,UACA22C,EAAA,YAAAtI,GAAAzQ,GAAAyQ,EAAAsI,YAEAtmC,EAAAyuB,GAAAzuB,EAEA,IAAAokC,GAAApkC,EAAArQ,MACA,IAAA4S,EAAAvC,GAAA,CACA,GAAA8B,GAAAgC,EAAA9D,EACAokC,GAAAtiC,EAAAnS,OAEA,GAAAA,GAAAy0C,EACA,MAAApkC,EAEA,IAAA8c,GAAAntB,EAAAgU,EAAA2iC,EACA,IAAAxpB,EAAA,EACA,MAAAwpB,EAEA,IAAA3zC,GAAAmP,EACA4sB,GAAA5sB,EAAA,EAAAgb,GAAApoB,KAAA,IACAsL,EAAA4uB,MAAA,EAAA9R,EAEA,IAAAsd,IAAAzmC,GACA,MAAAhB,GAAA2zC,CAKA,IAHAxkC,IACAgb,GAAAnqB,EAAAhD,OAAAmtB,GAEAtC,GAAA4f,IACA,GAAAp6B,EAAA4uB,MAAA9R,GAAAypB,OAAAnM,GAAA,CACA,GAAAl6B,GACAsmC,EAAA7zC,CAMA,KAJAynC,EAAAj8B,SACAi8B,EAAAzxB,GAAAyxB,EAAAnlC,OAAAw5B,GAAA5kB,GAAA0lB,KAAA6K,IAAA,MAEAA,EAAAn2B,UAAA,EACA/D,EAAAk6B,EAAA7K,KAAAiX,IACA,GAAAC,GAAAvmC,EAAArB,KAEAlM,KAAAi8B,MAAA,EAAA6X,IAAA9yC,GAAAmpB,EAAA2pB,QAEO,IAAAzmC,EAAAkrB,QAAAqC,GAAA6M,GAAAtd,MAAA,CACP,GAAAje,GAAAlM,EAAA2nC,YAAAF,EACAv7B,IAAA,IACAlM,IAAAi8B,MAAA,EAAA/vB,IAGA,MAAAlM,GAAA2zC,EAsBA,QAAAI,IAAA1mC,GAEA,MADAA,GAAAyuB,GAAAzuB,GACAA,GAAA0I,GAAAjG,KAAAzC,GACAA,EAAAzC,QAAAiL,GAAAuS,IACA/a,EAiEA,QAAAwyB,IAAAxyB,EAAA2mC,EAAAnV,GAIA,MAHAxxB,GAAAyuB,GAAAzuB,GACA2mC,EAAAnV,EAAA79B,GAAAgzC,EAEAA,IAAAhzC,GACA+O,EAAA1C,GAAAkE,GAAAlE,GAAAC,EAAAD,GAEAA,EAAAE,MAAAymC,OAkGA,QAAAC,IAAA9mB,GACA,GAAAnwB,GAAA,MAAAmwB,EAAA,EAAAA,EAAAnwB,OACA8kC,EAAA/J,IASA,OAPA5K,GAAAnwB,EAAA6P,EAAAsgB,EAAA,SAAAmW,GACA,qBAAAA,GAAA,GACA,SAAAjiC,IAAAsQ,GAEA,QAAAmwB,EAAAwB,EAAA,IAAAA,EAAA,SAGApK,GAAA,SAAAzzB,GAEA,IADA,GAAAyG,IAAA,IACAA,EAAAlP,GAAA,CACA,GAAAsmC,GAAAnW,EAAAjhB,EACA,IAAAR,EAAA43B,EAAA,GAAA1gC,KAAA6C,GACA,MAAAiG,GAAA43B,EAAA,GAAA1gC,KAAA6C,MA8BA,QAAAyuC,IAAA5xC,GACA,MAAAquB,IAAAtB,GAAA/sB,EAAAwP,KAsBA,QAAA1O,IAAAjD,GACA,kBACA,MAAAA,IAwBA,QAAAg0C,IAAAh0C,EAAA8hC,GACA,aAAA9hC,SAAA8hC,EAAA9hC,EAkEA,QAAA+1B,IAAA/1B,GACA,MAAAA,GA6CA,QAAA6L,IAAAL,GACA,MAAAsqB,IAAA,kBAAAtqB,KAAA0jB,GAAA1jB,EAAAmG,KA+BA,QAAAsiC,IAAA9xC,GACA,MAAA8zB,IAAA/G,GAAA/sB,EAAAwP,KA6BA,QAAAuiC,IAAA/hB,EAAAkD,GACA,MAAAW,IAAA7D,EAAAjD,GAAAmG,EAAA1jB,KAkGA,QAAAwiC,IAAA/5C,EAAA+H,EAAA+oC,GACA,GAAAx8B,GAAA1M,GAAAG,GACAiyC,EAAAniB,GAAA9vB,EAAAuM,EAEA,OAAAw8B,GACAzb,GAAAttB,KAAAiyC,EAAAv3C,SAAA6R,EAAA7R,UACAquC,EAAA/oC,EACAA,EAAA/H,EACAA,EAAAqI,KACA2xC,EAAAniB,GAAA9vB,EAAAH,GAAAG,IAEA,IAAAgnC,KAAA1Z,GAAAyb,IAAA,SAAAA,SAAA/B,MACAtZ,EAAA9qB,GAAA3K,EAqBA,OAnBA4R,GAAAooC,EAAA,SAAA/U,GACA,GAAA7zB,GAAArJ,EAAAk9B,EACAjlC,GAAAilC,GAAA7zB,EACAqkB,IACAz1B,EAAAE,UAAA+kC,GAAA,WACA,GAAA3W,GAAAjmB,KAAAomB,SACA,IAAAsgB,GAAAzgB,EAAA,CACA,GAAA7oB,GAAAzF,EAAAqI,KAAAkmB,YAKA,QAJA9oB,EAAA+oB,YAAAU,GAAA7mB,KAAAmmB,cAEAzpB,MAA4BqM,OAAAlG,KAAA7F,UAAAgM,QAAArR,IAC5ByF,EAAAgpB,UAAAH,EACA7oB,EAEA,MAAA2L,GAAAD,MAAAnR,EAAAwS,GAAAnK,KAAAzC,SAAAP,gBAKArF,EAgBA,QAAAi6C,MAIA,MAHA7tB,IAAA3rB,IAAA4H,OACA+jB,GAAA3rB,EAAAy5C,IAEA7xC,KAeA,QAAAgF,OAwBA,QAAA8sC,IAAAr6C,GAEA,MADAA,GAAAo3B,GAAAp3B,GACA6+B,GAAA,SAAAzzB,GACA,MAAAmyB,IAAAnyB,EAAApL,KAkGA,QAAAG,IAAA83B,GACA,MAAA0E,IAAA1E,GAAAlkB,EAAAokB,GAAAF,IAAA+F,GAAA/F,GAwBA,QAAAqiB,IAAAp6C,GACA,gBAAA+3B,GACA,aAAA/3B,EAAAyG,GAAAqxB,GAAA93B,EAAA+3B,IAuGA,QAAAsiB,MACA,SAgBA,QAAAC,MACA,SAqBA,QAAAC,MACA,SAgBA,QAAAC,MACA,SAgBA,QAAAC,MACA,SAsBA,QAAAC,IAAA56C,EAAA2R,GAEA,IADA3R,EAAAo3B,GAAAp3B,IACA,GAAAA,EAAA+Y,GACA,QAEA,IAAAlH,GAAAoH,GACAtW,EAAAutB,GAAAlwB,EAAAiZ,GAEAtH,GAAA+rB,GAAA/rB,GACA3R,GAAAiZ,EAGA,KADA,GAAAtT,GAAA2O,EAAA3R,EAAAgP,KACAE,EAAA7R,GACA2R,EAAAE,EAEA,OAAAlM,GAoBA,QAAAk1C,IAAA/0C,GACA,MAAAqoB,IAAAroB,GACA0M,EAAA1M,EAAAqyB,IAEAjB,GAAApxB,OAAAspB,GAAAoS,GAAAC,GAAA37B,KAoBA,QAAA7E,IAAAqE,GACA,GAAAw1C,KAAAC,EACA,OAAAtZ,IAAAn8B,GAAAw1C,EA2GA,QAAAx4C,IAAAmP,GACA,MAAAA,MAAA9O,OACAs0B,GAAAxlB,EAAAoqB,GAAAnD,IACA/xB,GA0BA,QAAAq0C,IAAAvpC,EAAAE,GACA,MAAAF,MAAA9O,OACAs0B,GAAAxlB,EAAAisB,GAAA/rB,EAAA,GAAA+mB,IACA/xB,GAiBA,QAAAs0C,IAAAxpC,GACA,MAAAmC,GAAAnC,EAAAoqB,IA0BA,QAAAqf,IAAAzpC,EAAAE,GACA,MAAAiC,GAAAnC,EAAAisB,GAAA/rB,EAAA,IAqBA,QAAAhN,IAAA8M,GACA,MAAAA,MAAA9O,OACAs0B,GAAAxlB,EAAAoqB,GAAAS,IACA31B,GA0BA,QAAA/B,IAAA6M,EAAAE,GACA,MAAAF,MAAA9O,OACAs0B,GAAAxlB,EAAAisB,GAAA/rB,EAAA,GAAA2qB,IACA31B,GA8EA,QAAAw0C,IAAA1pC,GACA,MAAAA,MAAA9O,OACAkR,EAAApC,EAAAoqB,IACA,EA0BA,QAAAuf,IAAA3pC,EAAAE,GACA,MAAAF,MAAA9O,OACAkR,EAAApC,EAAAisB,GAAA/rB,EAAA,IACA,EApvdAsc,EAAA,MAAAA,EAAA3B,GAAA3rB,GAAA06C,SAAA/uB,GAAA3sB,SAAAsuB,EAAAttB,GAAA26C,KAAAhvB,GAAA1N,IAGA,IAAAnM,IAAAwb,EAAAxb,MACA8oC,GAAAttB,EAAAstB,KACAx3C,GAAAkqB,EAAAlqB,MACA+L,GAAAme,EAAAne,SACAzN,GAAA4rB,EAAA5rB,KACA1C,GAAAsuB,EAAAtuB,OACAgc,GAAAsS,EAAAtS,OACArU,GAAA2mB,EAAA3mB,OACAN,GAAAinB,EAAAjnB,UAGAw0C,GAAA/oC,GAAArS,UACAq7C,GAAA3rC,GAAA1P,UACAmpC,GAAA5pC,GAAAS,UAGAs7C,GAAAztB,EAAA,sBAGAoe,GAAAoP,GAAAha,SAGAphC,GAAAkpC,GAAAlpC,eAGA06C,GAAA,EAGAzP,GAAA,WACA,GAAAqQ,GAAA,SAAApZ,KAAAmZ,OAAA5zC,MAAA4zC,GAAA5zC,KAAA8zC,UAAA,GACA,OAAAD,GAAA,iBAAAA,EAAA,MAQA/Q,GAAArB,GAAA9H,SAGAgT,GAAApI,GAAAjtC,KAAAO,IAGAy6C,GAAA9tB,GAAA3rB,EAGA26B,GAAA3f,GAAA,IACA0wB,GAAAjtC,KAAAiB,IAAAkQ,QAAA4L,GAAA,QACA5L,QAAA,uEAIAsrC,GAAAnvB,GAAAuB,EAAA4tB,OAAAl1C,GACAm1C,GAAA7tB,EAAA6tB,OACA7Z,GAAAhU,EAAAgU,WACAJ,GAAAga,MAAAha,YAAAl7B,GACAukC,GAAAh1B,EAAAvW,GAAAo8C,eAAAp8C,IACAq8C,GAAAr8C,GAAAu1C,OACA/tC,GAAAoiC,GAAApiC,qBACAoqB,GAAAiqB,GAAAjqB,OACA8Z,GAAAyQ,MAAAG,mBAAAt1C,GACAkuC,GAAAiH,MAAAjmC,SAAAlP,GACA4xB,GAAAujB,MAAAI,YAAAv1C,GAEA/G,GAAA,WACA,IACA,GAAA0R,GAAAm5B,GAAA9qC,GAAA,iBAEA,OADA2R,MAAe,OACfA,EACO,MAAA7Q,QAIP07C,GAAAluB,EAAAkkB,eAAA7lB,GAAA6lB,cAAAlkB,EAAAkkB,aACAiK,GAAAb,OAAAt1C,MAAAqmB,GAAAivB,KAAAt1C,KAAAs1C,GAAAt1C,IACAo2C,GAAApuB,EAAAyI,aAAApK,GAAAoK,YAAAzI,EAAAyI,WAGAiI,GAAAt8B,GAAAi6C,KACA/d,GAAAl8B,GAAAk6C,MACAC,GAAA78C,GAAAsH,sBACAw1C,GAAAZ,MAAAzoB,SAAAzsB,GACAmtC,GAAA7lB,EAAA4lB,SACAxG,GAAAmO,GAAA9zC,KACAw0B,GAAAhmB,EAAAvW,GAAAmI,KAAAnI,IACAo5B,GAAA12B,GAAAC,IACA4tB,GAAA7tB,GAAAsC,IACAunC,GAAAqP,GAAAt1C,IACAuxC,GAAAvpB,EAAA9B,SACAqS,GAAAn8B,GAAAo0C,OACA7I,GAAA4N,GAAAhV,QAGAkW,GAAAjS,GAAAxc,EAAA,YACA6D,GAAA2Y,GAAAxc,EAAA,OACA/f,GAAAu8B,GAAAxc,EAAA,WACA0uB,GAAAlS,GAAAxc,EAAA,OACA2uB,GAAAnS,GAAAxc,EAAA,WACA4C,GAAA4Z,GAAA9qC,GAAA,UAGAk9C,GAAAD,IAAA,GAAAA,IAGAtS,MAGAwS,GAAAvhB,GAAAmhB,IACAK,GAAAxhB,GAAAzJ,IACAkrB,GAAAzhB,GAAArtB,IACA+uC,GAAA1hB,GAAAohB,IACAO,GAAA3hB,GAAAqhB,IAGAO,GAAArB,MAAA17C,UAAAuG,GACA+7B,GAAAya,MAAApI,QAAApuC,GACA65B,GAAA2c,MAAA1b,SAAA96B,GA6IAg/B,GAAA,WACA,QAAAzlC,MACA,gBAAAs0C,GACA,IAAAjf,GAAAif,GACA,QAEA,IAAAwH,GACA,MAAAA,IAAAxH,EAEAt0C,GAAAE,UAAAo0C,CACA,IAAA7uC,GAAA,GAAAzF,EAEA,OADAA,GAAAE,UAAAuG,GACAhB,KAqCAnF,GAAAs3C,kBAQAb,OAAAp7B,GAQA08B,SAAAz8B,GAQAu8B,YAAAt8B,GAQA88B,SAAA,GAQAX,SAQAv3C,EAAAH,IAKAA,EAAAJ,UAAAmuB,EAAAnuB,UACAI,EAAAJ,UAAAoM,YAAAhM,EAEA6tB,EAAAjuB,UAAAulC,GAAApX,EAAAnuB,WACAiuB,EAAAjuB,UAAAoM,YAAA6hB,EAsHAD,EAAAhuB,UAAAulC,GAAApX,EAAAnuB,WACAguB,EAAAhuB,UAAAoM,YAAA4hB,EAoGAmC,GAAAnwB,UAAAqwB,MAAAE,GACAJ,GAAAnwB,UAAA,OAAA0wB,GACAP,GAAAnwB,UAAAL,IAAAgxB,GACAR,GAAAnwB,UAAAyE,IAAAmsB,GACAT,GAAAnwB,UAAAoW,IAAAya,GAiHAC,GAAA9wB,UAAAqwB,MAAAU,GACAD,GAAA9wB,UAAA,OAAAgxB,GACAF,GAAA9wB,UAAAL,IAAAyxB,GACAN,GAAA9wB,UAAAyE,IAAA4sB,GACAP,GAAA9wB,UAAAoW,IAAAkb,GAmGAC,GAAAvxB,UAAAqwB,MAAAmB,GACAD,GAAAvxB,UAAA,OAAA2xB,GACAJ,GAAAvxB,UAAAL,IAAAkyB,GACAN,GAAAvxB,UAAAyE,IAAAqtB,GACAP,GAAAvxB,UAAAoW,IAAA2b,GAmDAC,GAAAhyB,UAAAiyB,IAAAD,GAAAhyB,UAAA6E,KAAAqtB,GACAF,GAAAhyB,UAAAyE,IAAA0tB,GAkGAC,GAAApyB,UAAAqwB,MAAAgC,GACAD,GAAApyB,UAAA,OAAAsyB,GACAF,GAAApyB,UAAAL,IAAA4yB,GACAH,GAAApyB,UAAAyE,IAAA+tB,GACAJ,GAAApyB,UAAAoW,IAAAqc,EAocA,IAAAuB,IAAAsQ,GAAA/M,IAUAuY,GAAAxL,GAAA7M,IAAA,GA4IAD,GAAAgN,KAYA9M,GAAA8M,IAAA,GAggCAyE,GAAAwT,GAAA,SAAAvrC,EAAAwE,GAEA,MADA+mC,IAAArmC,IAAAlF,EAAAwE,GACAxE,GAFAuqB,GAaAuhB,GAAAx9C,GAAA,SAAA0R,EAAA0B,GACA,MAAApT,IAAA0R,EAAA,YACAzR,cAAA,EACAC,YAAA,EACAgG,MAAAiD,GAAAiK,GACAyhB,UAAA,KALAoH,GAucAwhB,GAAAxe,GAuBAsT,GAAAgK,IAAA,SAAArB,GACA,MAAAxuB,IAAA6lB,aAAA2I,IAg7BApa,GAAAic,IAAA,EAAApmC,EAAA,GAAAomC,KAAA,WAAA7jC,GAAA,SAAAnM,GACA,UAAAgwC,IAAAhwC,IADAY,GAmbAo5B,GAAAkW,GAAA,SAAAvrC,GACA,MAAAurC,IAAA98C,IAAAuR,IADA/D,GAyIA22B,GAAAsY,GAAA,SAAAt8C,GACA,aAAAA,MAGAA,EAAAP,GAAAO,GACAgS,EAAAsqC,GAAAt8C,GAAA,SAAAuiC,GACA,MAAAt7B,IAAA/H,KAAAc,EAAAuiC,OANA8X,GAiBApW,GAAAqY,GAAA,SAAAt8C,GAEA,IADA,GAAAyF,MACAzF,GACAwS,EAAA/M,EAAAu+B,GAAAhkC,IACAA,EAAAgrC,GAAAhrC,EAEA,OAAAyF,IANA40C,GAgBA7kB,GAAA4C,IAGAokB,IAAAhnB,GAAA,GAAAgnB,IAAA,GAAAY,aAAA,MAAA3iC,IACAmX,IAAA4D,GAAA,GAAA5D,MAAAhY,IACA5L,IA50LA,oBA40LAwnB,GAAAxnB,GAAAS,YACAguC,IAAAjnB,GAAA,GAAAinB,MAAAviC,IACAwiC,IAAAlnB,GAAA,GAAAknB,MAAApiC,MACAkb,GAAA,SAAA5vB,GACA,GAAAH,GAAA2yB,GAAAxyB,GACAi/B,EAAAp/B,GAAAsU,GAAAnU,EAAA0G,YAAA7F,GACA42C,EAAAxY,EAAAxJ,GAAAwJ,GAAA,EAEA,IAAAwY,EACA,OAAAA,GACA,IAAAT,IAAA,MAAAniC,GACA,KAAAoiC,IAAA,MAAAjjC,GACA,KAAAkjC,IAAA,MAx1LA,kBAy1LA,KAAAC,IAAA,MAAA7iC,GACA,KAAA8iC,IAAA,MAAA1iC,IAGA,MAAA7U,IA+SA,IAAA0uC,IAAAqH,GAAA7wC,GAAA2vC,GAsPA3R,GAAAiD,GAAAzC,IAUA3S,GAAA2lB,IAAA,SAAA/qC,EAAAmlB,GACA,MAAAnK,IAAAoK,WAAAplB,EAAAmlB,IAWAqI,GAAAgN,GAAAsR,IA8EA5b,GAnSA,SAAAlwB,GACA,GAAA3L,GAAA6sC,GAAAlhC,EAAA,SAAAjJ,GAIA,MAHAuM,GAAAqB,OAAAuB,IACA5C,EAAA6b,QAEApoB,IAGAuM,EAAAjP,EAAAiP,KACA,OAAAjP,IA0RA,SAAAqN,GACA,GAAArN,KAOA,OANA,MAAAqN,EAAAwqC,WAAA,IACA73C,EAAAV,KAAA,IAEA+N,EAAAzC,QAAA2L,GAAA,SAAAhJ,EAAA2hB,EAAA4oB,EAAAC,GACA/3C,EAAAV,KAAAw4C,EAAAC,EAAAntC,QAAAoM,GAAA,MAAAkY,GAAA3hB,KAEAvN,IA4MAg4C,GAAA9e,GAAA,SAAAptB,EAAA9E,GACA,MAAAwwB,IAAA1rB,GACAklB,GAAAllB,EAAA8lB,GAAA5qB,EAAA,EAAAwwB,IAAA,SA8BAygB,GAAA/e,GAAA,SAAAptB,EAAA9E,GACA,GAAAgF,GAAA+nB,GAAA/sB,EAIA,OAHAwwB,IAAAxrB,KACAA,EAAAhL,IAEAw2B,GAAA1rB,GACAklB,GAAAllB,EAAA8lB,GAAA5qB,EAAA,EAAAwwB,IAAA,GAAAO,GAAA/rB,EAAA,SA2BAksC,GAAAhf,GAAA,SAAAptB,EAAA9E,GACA,GAAA4F,GAAAmnB,GAAA/sB,EAIA,OAHAwwB,IAAA5qB,KACAA,EAAA5L,IAEAw2B,GAAA1rB,GACAklB,GAAAllB,EAAA8lB,GAAA5qB,EAAA,EAAAwwB,IAAA,GAAAx2B,GAAA4L,QAgeAurC,GAAAjf,GAAA,SAAA5F,GACA,GAAA8kB,GAAAvrC,EAAAymB,EAAAqI,GACA,OAAAyc,GAAAp7C,QAAAo7C,EAAA,KAAA9kB,EAAA,GACAD,GAAA+kB,QA2BAC,GAAAnf,GAAA,SAAA5F,GACA,GAAAtnB,GAAA+nB,GAAAT,GACA8kB,EAAAvrC,EAAAymB,EAAAqI,GAOA,OALA3vB,KAAA+nB,GAAAqkB,GACApsC,EAAAhL,GAEAo3C,EAAAzsB,MAEAysB,EAAAp7C,QAAAo7C,EAAA,KAAA9kB,EAAA,GACAD,GAAA+kB,EAAArgB,GAAA/rB,EAAA,SAyBAssC,GAAApf,GAAA,SAAA5F,GACA,GAAA1mB,GAAAmnB,GAAAT,GACA8kB,EAAAvrC,EAAAymB,EAAAqI,GAMA,OAJA/uB,GAAA,kBAAAA,KAAA5L,GACA4L,GACAwrC,EAAAzsB,MAEAysB,EAAAp7C,QAAAo7C,EAAA,KAAA9kB,EAAA,GACAD,GAAA+kB,EAAAp3C,GAAA4L,QA8HA2rC,GAAArf,GAAA2O,IA8GA2Q,GAAA/X,GAAA,SAAA30B,EAAA2sB,GACA,GAAAz7B,GAAA,MAAA8O,EAAA,EAAAA,EAAA9O,OACAgD,EAAA+uB,GAAAjjB,EAAA2sB,EAMA,OAJAD,IAAA1sB,EAAAe,EAAA4rB,EAAA,SAAAvsB,GACA,MAAA0hB,IAAA1hB,EAAAlP,IAAAkP,MACOuC,KAAAwuB,KAEPj9B,IA8eAuG,GAAA2yB,GAAA,SAAA5F,GACA,MAAAwH,IAAAlJ,GAAA0B,EAAA,EAAAkE,IAAA,MA0BAihB,GAAAvf,GAAA,SAAA5F,GACA,GAAAtnB,GAAA+nB,GAAAT,EAIA,OAHAkE,IAAAxrB,KACAA,EAAAhL,IAEA85B,GAAAlJ,GAAA0B,EAAA,EAAAkE,IAAA,GAAAO,GAAA/rB,EAAA,MAwBA0sC,GAAAxf,GAAA,SAAA5F,GACA,GAAA1mB,GAAAmnB,GAAAT,EAEA,OADA1mB,GAAA,kBAAAA,KAAA5L,GACA85B,GAAAlJ,GAAA0B,EAAA,EAAAkE,IAAA,GAAAx2B,GAAA4L,KAsKA+rC,GAAAzf,GAAA,SAAAptB,EAAA9E,GACA,MAAAwwB,IAAA1rB,GACAklB,GAAAllB,EAAA9E,QAsBA4xC,GAAA1f,GAAA,SAAA5F,GACA,MAAAiI,IAAAhvB,EAAA+mB,EAAAkE,OA0BAqhB,GAAA3f,GAAA,SAAA5F,GACA,GAAAtnB,GAAA+nB,GAAAT,EAIA,OAHAkE,IAAAxrB,KACAA,EAAAhL,IAEAu6B,GAAAhvB,EAAA+mB,EAAAkE,IAAAO,GAAA/rB,EAAA,MAwBA8sC,GAAA5f,GAAA,SAAA5F,GACA,GAAA1mB,GAAAmnB,GAAAT,EAEA,OADA1mB,GAAA,kBAAAA,KAAA5L,GACAu6B,GAAAhvB,EAAA+mB,EAAAkE,IAAAx2B,GAAA4L,KAmBAmsC,GAAA7f,GAAAgQ,IA6DA8P,GAAA9f,GAAA,SAAA5F,GACA,GAAAt2B,GAAAs2B,EAAAt2B,OACAgP,EAAAhP,EAAA,EAAAs2B,EAAAt2B,EAAA,GAAAgE,EAGA,OADAgL,GAAA,kBAAAA,IAAAsnB,EAAA3H,MAAA3f,GAAAhL,GACAooC,GAAA9V,EAAAtnB,KA+GAitC,GAAAxY,GAAA,SAAAzR,GACA,GAAAhyB,GAAAgyB,EAAAhyB,OACAqD,EAAArD,EAAAgyB,EAAA,KACA7uB,EAAAyC,KAAAkmB,YACA0gB,EAAA,SAAAjvC,GAA0C,MAAAw0B,IAAAx0B,EAAAy0B,GAE1C,SAAAhyB,EAAA,GAAA4F,KAAAmmB,YAAA/rB,SACAmD,YAAAsoB,IAAAmF,GAAAvtB,IAGAF,IAAA87B,MAAA57B,MAAArD,EAAA,MACAmD,EAAA4oB,YAAAzpB,MACAqM,KAAAi1B,GACAn7B,MAAA+jC,GACA59B,QAAA5K,KAEA,GAAA0nB,GAAAvoB,EAAAyC,KAAAomB,WAAA4X,KAAA,SAAA90B,GAIA,MAHA9O,KAAA8O,EAAA9O,QACA8O,EAAAxM,KAAA0B,IAEA8K,KAZAlJ,KAAAg+B,KAAA4I,KA+PA0P,GAAAza,GAAA,SAAAz+B,EAAAG,EAAAuC,GACAhI,GAAAjB,KAAAuG,EAAA0C,KACA1C,EAAA0C,GAEA2rB,GAAAruB,EAAA0C,EAAA,KAmIAy2C,GAAA7Y,GAAA4G,IAqBAkS,GAAA9Y,GAAA6G,IAgKAkS,GAAA5a,GAAA,SAAAz+B,EAAAG,EAAAuC,GACAhI,GAAAjB,KAAAuG,EAAA0C,GACA1C,EAAA0C,GAAApD,KAAAa,GAEAkuB,GAAAruB,EAAA0C,GAAAvC,MAsEAm5C,GAAApgB,GAAA,SAAAp5B,EAAAwyB,EAAA7sB,GACA,GAAAyG,IAAA,EACA8jB,EAAA,kBAAAsC,GACAtyB,EAAA62B,GAAA/2B,GAAAgN,GAAAhN,EAAA9C,UAKA,OAHAyxB,IAAA3uB,EAAA,SAAAK,GACAH,IAAAkM,GAAA8jB,EAAAtkB,EAAA4mB,EAAAnyB,EAAAsF,GAAAquB,GAAA3zB,EAAAmyB,EAAA7sB,KAEAzF,IA+BAu5C,GAAA9a,GAAA,SAAAz+B,EAAAG,EAAAuC,GACA2rB,GAAAruB,EAAA0C,EAAAvC,KAiIAN,GAAA4+B,GAAA,SAAAz+B,EAAAG,EAAAuC,GACA1C,EAAA0C,EAAA,KAAApD,KAAAa,IACK,WAAc,gBAmSnBq5C,GAAAtgB,GAAA,SAAAp5B,EAAAsqB,GACA,SAAAtqB,EACA,QAEA,IAAA9C,GAAAotB,EAAAptB,MAMA,OALAA,GAAA,GAAA8hC,GAAAh/B,EAAAsqB,EAAA,GAAAA,EAAA,IACAA,KACOptB,EAAA,GAAA8hC,GAAA1U,EAAA,GAAAA,EAAA,GAAAA,EAAA,MACPA,KAAA,KAEAyN,GAAA/3B,EAAA8xB,GAAAxH,EAAA,SAqBA9pB,GAAAm2C,IAAA,WACA,MAAA9vB,IAAAivB,KAAAt1C,OAqIAwJ,GAAAovB,GAAA,SAAAvtB,EAAAC,EAAA4xB,GACA,GAAAlO,GAAAnd,EACA,IAAAqrB,EAAAxgC,OAAA,CACA,GAAAygC,GAAAhtB,EAAA+sB,EAAA2C,GAAAr2B,IACAwlB,IAAA9c,GAEA,MAAAgxB,IAAA73B,EAAA2jB,EAAA1jB,EAAA4xB,EAAAC,KAgDAgc,GAAAvgB,GAAA,SAAA3+B,EAAAmI,EAAA86B,GACA,GAAAlO,GAAAnd,GAAAC,EACA,IAAAorB,EAAAxgC,OAAA,CACA,GAAAygC,GAAAhtB,EAAA+sB,EAAA2C,GAAAsZ,IACAnqB,IAAA9c,GAEA,MAAAgxB,IAAA9gC,EAAA4sB,EAAA/0B,EAAAijC,EAAAC,KAoSAic,GAAAxgB,GAAA,SAAAvtB,EAAAlG,GACA,MAAAorB,IAAAllB,EAAA,EAAAlG,KAsBAk0C,GAAAzgB,GAAA,SAAAvtB,EAAAmlB,EAAArrB,GACA,MAAAorB,IAAAllB,EAAAg3B,GAAA7R,IAAA,EAAArrB,IA0FAonC,IAAAG,MAAAhhB,EA2FA,IAAA4tB,IAAAlC,GAAA,SAAA/rC,EAAAu5B,GACAA,EAAA,GAAAA,EAAAloC,QAAAwrB,GAAA0c,EAAA,IACAr4B,EAAAq4B,EAAA,GAAAp2B,EAAAipB,OACAlrB,EAAA+kB,GAAAsT,EAAA,GAAAp2B,EAAAipB,MAEA,IAAA8hB,GAAA3U,EAAAloC,MACA,OAAAk8B,IAAA,SAAAzzB,GAIA,IAHA,GAAAyG,IAAA,EACAlP,EAAAutB,GAAA9kB,EAAAzI,OAAA68C,KAEA3tC,EAAAlP,GACAyI,EAAAyG,GAAAg5B,EAAAh5B,GAAAzS,KAAAmJ,KAAA6C,EAAAyG,GAEA,OAAAR,GAAAC,EAAA/I,KAAA6C,OAqCA8nC,GAAArU,GAAA,SAAAvtB,EAAA6xB,GACA,GAAAC,GAAAhtB,EAAA+sB,EAAA2C,GAAAoN,IACA,OAAA/J,IAAA73B,EAAA6G,GAAAxR,GAAAw8B,EAAAC,KAmCAqc,GAAA5gB,GAAA,SAAAvtB,EAAA6xB,GACA,GAAAC,GAAAhtB,EAAA+sB,EAAA2C,GAAA2Z,IACA,OAAAtW,IAAA73B,EAAA8G,GAAAzR,GAAAw8B,EAAAC,KAyBAsc,GAAAtZ,GAAA,SAAA90B,EAAA8sB,GACA,MAAA+K,IAAA73B,EAAAgH,GAAA3R,SAAAy3B,KA4bAuhB,GAAAtX,GAAA3P,IAyBAknB,GAAAvX,GAAA,SAAAviC,EAAA6yB,GACA,MAAA7yB,IAAA6yB,IAqBAzF,GAAAyG,GAAA,WAAkD,MAAAp0B,eAAoBo0B,GAAA,SAAA7zB,GACtE,MAAAooB,IAAApoB,IAAAzF,GAAAjB,KAAA0G,EAAA,YACAqB,GAAA/H,KAAA0G,EAAA,WA0BAqoB,GAAA1b,GAAA0b,QAmBAjB,GAAAD,GAAAxY,EAAAwY,IAAA2M,GAmGAxG,GAAAqpB,IAAAjC,GAmBAptB,GAAAD,GAAA1Y,EAAA0Y,IAAA0M,GAkXAvM,GAAAD,GAAA5Y,EAAA4Y,IAAA0N,GAiRAvN,GAAAD,GAAA9Y,EAAA8Y,IAAAiO,GAkDA9N,GAAAD,GAAAhZ,EAAAgZ,IAAAgO,GA+DA7N,GAAAD,GAAAlZ,EAAAkZ,IAAA+N,GAwFAmkB,GAAAxX,GAAA/L,IAyBAwjB,GAAAzX,GAAA,SAAAviC,EAAA6yB,GACA,MAAA7yB,IAAA6yB,IA8SAvxB,GAAAk9B,GAAA,SAAApkC,EAAA+H,GACA,GAAAg0B,GAAAh0B,IAAAu0B,GAAAv0B,GAEA,WADAqsB,IAAArsB,EAAAH,GAAAG,GAAA/H,EAGA,QAAAmI,KAAAJ,GACA5H,GAAAjB,KAAA6I,EAAAI,IACA4rB,GAAA/zB,EAAAmI,EAAAJ,EAAAI,MAoCA03C,GAAAzb,GAAA,SAAApkC,EAAA+H,GACAqsB,GAAArsB,EAAAusB,GAAAvsB,GAAA/H,KAgCA63C,GAAAzT,GAAA,SAAApkC,EAAA+H,EAAA80B,EAAA7H,GACAZ,GAAArsB,EAAAusB,GAAAvsB,GAAA/H,EAAAg1B,KA+BA8qB,GAAA1b,GAAA,SAAApkC,EAAA+H,EAAA80B,EAAA7H,GACAZ,GAAArsB,EAAAH,GAAAG,GAAA/H,EAAAg1B,KAoBA+qB,GAAA7Z,GAAA1R,IA8DA2mB,GAAAxc,GAAA,SAAA3+B,EAAA0G,GACA1G,EAAAP,GAAAO,EAEA,IAAA2R,IAAA,EACAlP,EAAAiE,EAAAjE,OACA6hC,EAAA7hC,EAAA,EAAAiE,EAAA,GAAAD,EAMA,KAJA69B,GAAAC,GAAA79B,EAAA,GAAAA,EAAA,GAAA49B,KACA7hC,EAAA,KAGAkP,EAAAlP,GAMA,IALA,GAAAsF,GAAArB,EAAAiL,GACA2C,EAAAggB,GAAAvsB,GACAi4C,GAAA,EACAC,EAAA3rC,EAAA7R,SAEAu9C,EAAAC,GAAA,CACA,GAAA93C,GAAAmM,EAAA0rC,GACAp6C,EAAA5F,EAAAmI,IAEAvC,IAAAa,IACAotB,GAAAjuB,EAAAyjC,GAAAlhC,MAAAhI,GAAAjB,KAAAc,EAAAmI,MACAnI,EAAAmI,GAAAJ,EAAAI,IAKA,MAAAnI,KAsBAkgD,GAAAvhB,GAAA,SAAAzzB,GAEA,MADAA,GAAAnG,KAAA0B,GAAA6iC,IACAn4B,EAAAgvC,GAAA15C,GAAAyE,KAoXAk1C,GAAA9Y,GAAA,SAAA7hC,EAAAG,EAAAuC,GACA,MAAAvC,GACA,kBAAAA,GAAA27B,WACA37B,EAAA8kC,GAAAxrC,KAAA0G,IAGAH,EAAAG,GAAAuC,GACKU,GAAA8yB,KA4BL0kB,GAAA/Y,GAAA,SAAA7hC,EAAAG,EAAAuC,GACA,MAAAvC,GACA,kBAAAA,GAAA27B,WACA37B,EAAA8kC,GAAAxrC,KAAA0G,IAGAzF,GAAAjB,KAAAuG,EAAAG,GACAH,EAAAG,GAAAb,KAAAoD,GAEA1C,EAAAG,IAAAuC,IAEKq1B,IAoBL8iB,GAAA3hB,GAAApF,IAiKAgnB,GAAAnc,GAAA,SAAApkC,EAAA+H,EAAA80B,GACAD,GAAA58B,EAAA+H,EAAA80B,KAkCAsjB,GAAA/b,GAAA,SAAApkC,EAAA+H,EAAA80B,EAAA7H,GACA4H,GAAA58B,EAAA+H,EAAA80B,EAAA7H,KAuBAwrB,GAAAta,GAAA,SAAAlmC,EAAAy0B,GACA,GAAAhvB,KACA,UAAAzF,EACA,MAAAyF,EAEA,IAAAyvB,IAAA,CACAT,GAAAniB,EAAAmiB,EAAA,SAAAsD,GAGA,MAFAA,GAAAC,GAAAD,EAAA/3B,GACAk1B,MAAA6C,EAAAt1B,OAAA,GACAs1B,IAEA3D,GAAAp0B,EAAAk2B,GAAAl2B,GAAAyF,GACAyvB,IACAzvB,EAAAqvB,GAAArvB,EAAA8R,GAAAC,GAAAC,GAAA8xB,IAGA,KADA,GAAA9mC,GAAAgyB,EAAAhyB,OACAA,KACA27B,GAAA34B,EAAAgvB,EAAAhyB,GAEA,OAAAgD,KA4CA21C,GAAAlV,GAAA,SAAAlmC,EAAAy0B,GACA,aAAAz0B,KAAgC29B,GAAA39B,EAAAy0B,KA0KhCgsB,GAAAzX,GAAAphC,IA0BA84C,GAAA1X,GAAA1U,IA+XAqsB,GAAAvb,GAAA,SAAA3/B,EAAAm7C,EAAAjvC,GAEA,MADAivC,KAAAhK,cACAnxC,GAAAkM,EAAA+kC,GAAAkK,QAgKAC,GAAAzb,GAAA,SAAA3/B,EAAAm7C,EAAAjvC,GACA,MAAAlM,IAAAkM,EAAA,QAAAivC,EAAAhK,gBAuBAkK,GAAA1b,GAAA,SAAA3/B,EAAAm7C,EAAAjvC,GACA,MAAAlM,IAAAkM,EAAA,QAAAivC,EAAAhK,gBAoBAmK,GAAA/b,GAAA,eA0NAgc,GAAA5b,GAAA,SAAA3/B,EAAAm7C,EAAAjvC,GACA,MAAAlM,IAAAkM,EAAA,QAAAivC,EAAAhK,gBAgEAqK,GAAA7b,GAAA,SAAA3/B,EAAAm7C,EAAAjvC,GACA,MAAAlM,IAAAkM,EAAA,QAAAglC,GAAAiK,KA6hBAM,GAAA9b,GAAA,SAAA3/B,EAAAm7C,EAAAjvC,GACA,MAAAlM,IAAAkM,EAAA,QAAAivC,EAAA7H,gBAoBApC,GAAA3R,GAAA,eAuDA4T,GAAAja,GAAA,SAAAvtB,EAAAlG,GACA,IACA,MAAAiG,GAAAC,EAAA3K,GAAAyE,GACO,MAAA3K,GACP,MAAAmzC,IAAAnzC,KAAA,GAAAsD,IAAAtD,MA8BA4gD,GAAAjb,GAAA,SAAAlmC,EAAAg6C,GAKA,MAJApoC,GAAAooC,EAAA,SAAA7xC,GACAA,EAAA8vB,GAAA9vB,GACA2rB,GAAA9zB,EAAAmI,EAAAoH,GAAAvP,EAAAmI,GAAAnI,MAEAA,IAyJAohD,GAAAnb,KAuBAob,GAAApb,IAAA,GA0JAqb,GAAA3iB,GAAA,SAAA5G,EAAA7sB,GACA,gBAAAlL,GACA,MAAAu5B,IAAAv5B,EAAA+3B,EAAA7sB,MA2BAq2C,GAAA5iB,GAAA,SAAA3+B,EAAAkL,GACA,gBAAA6sB,GACA,MAAAwB,IAAAv5B,EAAA+3B,EAAA7sB,MA6JAs2C,GAAA7Z,GAAAr1B,GA0BAmvC,GAAA9Z,GAAA71B,GA0BA4vC,GAAA/Z,GAAA/0B,GAgGAzO,GAAA8jC,KAsCA0Z,GAAA1Z,IAAA,GAqMA9V,GAAAqV,GAAA,SAAAoa,EAAAC,GACA,MAAAD,GAAAC,GACK,GAuBLzF,GAAAvT,GAAA,QAiBAiZ,GAAAta,GAAA,SAAAua,EAAAC,GACA,MAAAD,GAAAC,GACK,GAuBL3F,GAAAxT,GAAA,SAwKAoZ,GAAAza,GAAA,SAAA0a,EAAAC,GACA,MAAAD,GAAAC,GACK,GAuBLC,GAAAvZ,GAAA,SAiBAwZ,GAAA7a,GAAA,SAAA8a,EAAAC,GACA,MAAAD,GAAAC,GACK,EA+lBL,OAziBAjiD,GAAAmwC,SACAnwC,EAAAymC,OACAzmC,EAAA4G,UACA5G,EAAAu/C,YACAv/C,EAAAu3C,gBACAv3C,EAAAw/C,cACAx/C,EAAAy/C,MACAz/C,EAAAowC,UACApwC,EAAAiP,QACAjP,EAAA6gD,WACA7gD,EAAA4+C,WACA5+C,EAAA2yC,aACA3yC,EAAAyuC,SACAzuC,EAAA8rC,SACA9rC,EAAA+rC,WACA/rC,EAAA8M,UACA9M,EAAAo5C,QACAp5C,EAAAq5C,YACAr5C,EAAAuI,YACAvI,EAAAq+C,WACAr+C,EAAA00C,UACA10C,EAAAqwC,SACArwC,EAAAswC,cACAtwC,EAAAuwC,YACAvwC,EAAA66C,YACA76C,EAAA4/C,gBACA5/C,EAAA6+C,SACA7+C,EAAA8+C,SACA9+C,EAAAm9C,cACAn9C,EAAAo9C,gBACAp9C,EAAAq9C,kBACAr9C,EAAAgsC,QACAhsC,EAAAisC,aACAjsC,EAAAksC,kBACAlsC,EAAAmsC,aACAnsC,EAAAosC,QACApsC,EAAAwK,UACAxK,EAAAsvC,WACAtvC,EAAAuvC,eACAvvC,EAAAwvC,gBACAxvC,EAAA6pC,WACA7pC,EAAAusC,eACAvsC,EAAAwsC,gBACAxsC,EAAA+xC,QACA/xC,EAAA8gD,QACA9gD,EAAA+gD,aACA/gD,EAAAysC,aACAzsC,EAAAk1C,aACAl1C,EAAAm1C,eACAn1C,EAAAw+C,WACAx+C,EAAA2sC,WACA3sC,EAAAs9C,gBACAt9C,EAAAw9C,kBACAx9C,EAAAy9C,oBACAz9C,EAAA8/C,UACA9/C,EAAA+/C,YACA//C,EAAAy+C,aACAz+C,EAAAmR,YACAnR,EAAA0+C,SACA1+C,EAAAsH,QACAtH,EAAAg0B,UACAh0B,EAAAsC,OACAtC,EAAAo1C,WACAp1C,EAAAq1C,aACAr1C,EAAAu5C,WACAv5C,EAAAw5C,mBACAx5C,EAAAgyC,WACAhyC,EAAAigD,SACAjgD,EAAA6/C,aACA7/C,EAAAghD,UACAhhD,EAAAihD,YACAjhD,EAAAy5C,SACAz5C,EAAA8vC,UACA9vC,EAAA65C,UACA75C,EAAAkgD,QACAlgD,EAAAs1C,UACAt1C,EAAAoyC,QACApyC,EAAA4vC,WACA5vC,EAAAkhD,QACAlhD,EAAA++C,YACA/+C,EAAAmhD,aACAnhD,EAAAohD,YACAphD,EAAA0yC,WACA1yC,EAAAi/C,gBACAj/C,EAAAgF,aACAhF,EAAA86C,QACA96C,EAAAu1C,UACAv1C,EAAAL,YACAK,EAAA85C,cACA95C,EAAA09C,QACA19C,EAAAgtC,WACAhtC,EAAAitC,aACAjtC,EAAAktC,eACAltC,EAAA29C,UACA39C,EAAA6D,SACA7D,EAAAqhD,cACArhD,EAAAk/C,SACAl/C,EAAAoO,UACApO,EAAAmtC,UACAntC,EAAAqyC,QACAryC,EAAAgmC,WACAhmC,EAAAgwC,cACAhwC,EAAAgW,OACAhW,EAAAy1C,WACAz1C,EAAAiwC,WACAjwC,EAAAohC,SACAphC,EAAA2+C,UACA3+C,EAAA2tC,cACA3tC,EAAA4tC,gBACA5tC,EAAAoH,SACApH,EAAAsyC,UACAtyC,EAAA6tC,QACA7tC,EAAA8tC,QACA9tC,EAAA+tC,aACA/tC,EAAAguC,kBACAhuC,EAAAiuC,aACAjuC,EAAA0uC,OACA1uC,EAAAuyC,YACAvyC,EAAA+lC,QACA/lC,EAAA+uC,WACA/uC,EAAAmgD,WACAngD,EAAAogD,aACApgD,EAAAq6C,UACAr6C,EAAA88B,iBACA98B,EAAA2V,aACA3V,EAAAwyC,SACAxyC,EAAA0L,SACA1L,EAAA49C,WACA59C,EAAA69C,aACA79C,EAAAkuC,QACAluC,EAAAmuC,UACAnuC,EAAAouC,YACApuC,EAAA21C,SACA31C,EAAAquC,SACAruC,EAAAuuC,aACAvuC,EAAA41C,UACA51C,EAAA61C,cACA71C,EAAAmM,UACAnM,EAAA81C,YACA91C,EAAA89C,WACA99C,EAAAglC,SACAhlC,EAAAyyC,QACAzyC,EAAA+9C,OACA/9C,EAAAg+C,SACAh+C,EAAAi+C,WACAj+C,EAAAk+C,OACAl+C,EAAAyC,aACAzC,EAAAwuC,iBACAxuC,EAAAm+C,WAGAn+C,EAAAgwB,QAAAmwB,GACAngD,EAAAkiD,UAAA9B,GACApgD,EAAAmiD,OAAA5C,GACAv/C,EAAAoiD,WAAA7K,GAGAkC,GAAAz5C,KAKAA,EAAA6xB,OACA7xB,EAAAs4C,WACAt4C,EAAAqgD,aACArgD,EAAAo2C,cACAp2C,EAAA87C,QACA97C,EAAA+1C,SACA/1C,EAAA8uB,SACA9uB,EAAA6yC,aACA7yC,EAAA8yC,iBACA9yC,EAAA4yC,aACA5yC,EAAA+yC,cACA/yC,EAAAilC,UACAjlC,EAAAs5C,aACAt5C,EAAAwhD,UACAxhD,EAAAu2C,YACAv2C,EAAAuzB,MACAvzB,EAAAy2C,UACAz2C,EAAA02C,gBACA12C,EAAAqvC,SACArvC,EAAAs+C,QACAt+C,EAAAqsC,aACArsC,EAAA40C,WACA50C,EAAAu+C,YACAv+C,EAAAssC,iBACAtsC,EAAA60C,eACA70C,EAAA+7C,SACA/7C,EAAAkB,WACAlB,EAAAyvC,gBACAzvC,EAAA80C,SACA90C,EAAA+0C,cACA/0C,EAAAg1C,UACAh1C,EAAAi1C,eACAj1C,EAAAT,OACAS,EAAAm/C,MACAn/C,EAAAo/C,OACAp/C,EAAAqE,OACArE,EAAAq8B,SACAr8B,EAAA0sC,QACA1sC,EAAAq7B,YACAr7B,EAAAo2B,YACAp2B,EAAA09B,WACA19B,EAAAg2C,WACAh2C,EAAAggD,UACAhgD,EAAA0yB,eACA1yB,EAAA2tB,WACA3tB,EAAA0sB,iBACA1sB,EAAAg8B,eACAh8B,EAAA28B,qBA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","file":"static/js/main.8eed4433.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"./\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 20);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* global window */\n\nvar lodash;\n\nif (true) {\n  try {\n    lodash = __webpack_require__(13);\n  } catch (e) {}\n}\n\nif (!lodash) {\n  lodash = window._;\n}\n\nmodule.exports = lodash;\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _ = __webpack_require__(0),\n    Graph = __webpack_require__(3).Graph;\n\nmodule.exports = {\n  addDummyNode: addDummyNode,\n  simplify: simplify,\n  asNonCompoundGraph: asNonCompoundGraph,\n  successorWeights: successorWeights,\n  predecessorWeights: predecessorWeights,\n  intersectRect: intersectRect,\n  buildLayerMatrix: buildLayerMatrix,\n  normalizeRanks: normalizeRanks,\n  removeEmptyRanks: removeEmptyRanks,\n  addBorderNode: addBorderNode,\n  maxRank: maxRank,\n  partition: partition,\n  time: time,\n  notime: notime\n};\n\n/*\n * Adds a dummy node to the graph and return v.\n */\nfunction addDummyNode(g, type, attrs, name) {\n  var v;\n  do {\n    v = _.uniqueId(name);\n  } while (g.hasNode(v));\n\n  attrs.dummy = type;\n  g.setNode(v, attrs);\n  return v;\n}\n\n/*\n * Returns a new graph with only simple edges. Handles aggregation of data\n * associated with multi-edges.\n */\nfunction simplify(g) {\n  var simplified = new Graph().setGraph(g.graph());\n  _.forEach(g.nodes(), function(v) { simplified.setNode(v, g.node(v)); });\n  _.forEach(g.edges(), function(e) {\n    var simpleLabel = simplified.edge(e.v, e.w) || { weight: 0, minlen: 1 },\n        label = g.edge(e);\n    simplified.setEdge(e.v, e.w, {\n      weight: simpleLabel.weight + label.weight,\n      minlen: Math.max(simpleLabel.minlen, label.minlen)\n    });\n  });\n  return simplified;\n}\n\nfunction asNonCompoundGraph(g) {\n  var simplified = new Graph({ multigraph: g.isMultigraph() }).setGraph(g.graph());\n  _.forEach(g.nodes(), function(v) {\n    if (!g.children(v).length) {\n      simplified.setNode(v, g.node(v));\n    }\n  });\n  _.forEach(g.edges(), function(e) {\n    simplified.setEdge(e, g.edge(e));\n  });\n  return simplified;\n}\n\nfunction successorWeights(g) {\n  var weightMap = _.map(g.nodes(), function(v) {\n    var sucs = {};\n    _.forEach(g.outEdges(v), function(e) {\n      sucs[e.w] = (sucs[e.w] || 0) + g.edge(e).weight;\n    });\n    return sucs;\n  });\n  return _.zipObject(g.nodes(), weightMap);\n}\n\nfunction predecessorWeights(g) {\n  var weightMap = _.map(g.nodes(), function(v) {\n    var preds = {};\n    _.forEach(g.inEdges(v), function(e) {\n      preds[e.v] = (preds[e.v] || 0) + g.edge(e).weight;\n    });\n    return preds;\n  });\n  return _.zipObject(g.nodes(), weightMap);\n}\n\n/*\n * Finds where a line starting at point ({x, y}) would intersect a rectangle\n * ({x, y, width, height}) if it were pointing at the rectangle's center.\n */\nfunction intersectRect(rect, point) {\n  var x = rect.x;\n  var y = rect.y;\n\n  // Rectangle intersection algorithm from:\n  // http://math.stackexchange.com/questions/108113/find-edge-between-two-boxes\n  var dx = point.x - x;\n  var dy = point.y - y;\n  var w = rect.width / 2;\n  var h = rect.height / 2;\n\n  if (!dx && !dy) {\n    throw new Error(\"Not possible to find intersection inside of the rectangle\");\n  }\n\n  var sx, sy;\n  if (Math.abs(dy) * w > Math.abs(dx) * h) {\n    // Intersection is top or bottom of rect.\n    if (dy < 0) {\n      h = -h;\n    }\n    sx = h * dx / dy;\n    sy = h;\n  } else {\n    // Intersection is left or right of rect.\n    if (dx < 0) {\n      w = -w;\n    }\n    sx = w;\n    sy = w * dy / dx;\n  }\n\n  return { x: x + sx, y: y + sy };\n}\n\n/*\n * Given a DAG with each node assigned \"rank\" and \"order\" properties, this\n * function will produce a matrix with the ids of each node.\n */\nfunction buildLayerMatrix(g) {\n  var layering = _.map(_.range(maxRank(g) + 1), function() { return []; });\n  _.forEach(g.nodes(), function(v) {\n    var node = g.node(v),\n        rank = node.rank;\n    if (!_.isUndefined(rank)) {\n      layering[rank][node.order] = v;\n    }\n  });\n  return layering;\n}\n\n/*\n * Adjusts the ranks for all nodes in the graph such that all nodes v have\n * rank(v) >= 0 and at least one node w has rank(w) = 0.\n */\nfunction normalizeRanks(g) {\n  var min = _.minBy(_.map(g.nodes(), function(v) { return g.node(v).rank; }));\n  _.forEach(g.nodes(), function(v) {\n    var node = g.node(v);\n    if (_.has(node, \"rank\")) {\n      node.rank -= min;\n    }\n  });\n}\n\nfunction removeEmptyRanks(g) {\n  // Ranks may not start at 0, so we need to offset them\n  var offset = _.minBy(_.map(g.nodes(), function(v) { return g.node(v).rank; }));\n\n  var layers = [];\n  _.forEach(g.nodes(), function(v) {\n    var rank = g.node(v).rank - offset;\n    if (!layers[rank]) {\n      layers[rank] = [];\n    }\n    layers[rank].push(v);\n  });\n\n  var delta = 0,\n      nodeRankFactor = g.graph().nodeRankFactor;\n  _.forEach(layers, function(vs, i) {\n    if (_.isUndefined(vs) && i % nodeRankFactor !== 0) {\n      --delta;\n    } else if (delta) {\n      _.forEach(vs, function(v) { g.node(v).rank += delta; });\n    }\n  });\n}\n\nfunction addBorderNode(g, prefix, rank, order) {\n  var node = {\n    width: 0,\n    height: 0\n  };\n  if (arguments.length >= 4) {\n    node.rank = rank;\n    node.order = order;\n  }\n  return addDummyNode(g, \"border\", node, prefix);\n}\n\nfunction maxRank(g) {\n  return _.max(_.map(g.nodes(), function(v) {\n    var rank = g.node(v).rank;\n    if (!_.isUndefined(rank)) {\n      return rank;\n    }\n  }));\n}\n\n/*\n * Partition a collection into two groups: `lhs` and `rhs`. If the supplied\n * function returns true for an entry it goes into `lhs`. Otherwise it goes\n * into `rhs.\n */\nfunction partition(collection, fn) {\n  var result = { lhs: [], rhs: [] };\n  _.forEach(collection, function(value) {\n    if (fn(value)) {\n      result.lhs.push(value);\n    } else {\n      result.rhs.push(value);\n    }\n  });\n  return result;\n}\n\n/*\n * Returns a new function that wraps `fn` with a timer. The wrapper logs the\n * time it takes to execute the function.\n */\nfunction time(name, fn) {\n  var start = _.now();\n  try {\n    return fn();\n  } finally {\n    console.log(name + \" time: \" + (_.now() - start) + \"ms\");\n  }\n}\n\nfunction notime(name, fn) {\n  return fn();\n}\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* global window */\n\nvar lodash;\n\nif (true) {\n  try {\n    lodash = __webpack_require__(13);\n  } catch (e) {}\n}\n\nif (!lodash) {\n  lodash = window._;\n}\n\nmodule.exports = lodash;\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* global window */\n\nvar graphlib;\n\nif (true) {\n  try {\n    graphlib = __webpack_require__(40);\n  } catch (e) {}\n}\n\nif (!graphlib) {\n  graphlib = window.graphlib;\n}\n\nmodule.exports = graphlib;\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _ = __webpack_require__(0);\n\nmodule.exports = {\n  longestPath: longestPath,\n  slack: slack\n};\n\n/*\n * Initializes ranks for the input graph using the longest path algorithm. This\n * algorithm scales well and is fast in practice, it yields rather poor\n * solutions. Nodes are pushed to the lowest layer possible, leaving the bottom\n * ranks wide and leaving edges longer than necessary. However, due to its\n * speed, this algorithm is good for getting an initial ranking that can be fed\n * into other algorithms.\n *\n * This algorithm does not normalize layers because it will be used by other\n * algorithms in most cases. If using this algorithm directly, be sure to\n * run normalize at the end.\n *\n * Pre-conditions:\n *\n *    1. Input graph is a DAG.\n *    2. Input graph node labels can be assigned properties.\n *\n * Post-conditions:\n *\n *    1. Each node will be assign an (unnormalized) \"rank\" property.\n */\nfunction longestPath(g) {\n  var visited = {};\n\n  function dfs(v) {\n    var label = g.node(v);\n    if (_.has(visited, v)) {\n      return label.rank;\n    }\n    visited[v] = true;\n\n    var rank = _.minBy(_.map(g.outEdges(v), function(e) {\n      return dfs(e.w) - g.edge(e).minlen;\n    }));\n\n    if (rank === Number.POSITIVE_INFINITY || // return value of _.map([]) for Lodash 3\n        rank === undefined || // return value of _.map([]) for Lodash 4\n        rank === null) { // return value of _.map([null])\n      rank = 0;\n    }\n\n    return (label.rank = rank);\n  }\n\n  _.forEach(g.sources(), dfs);\n}\n\n/*\n * Returns the amount of slack for the given edge. The slack is defined as the\n * difference between the length of the edge and its minimum length.\n */\nfunction slack(g, e) {\n  return g.node(e.w).rank - g.node(e.v).rank - g.edge(e).minlen;\n}\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nif (true) {\n  module.exports = __webpack_require__(27);\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _ = __webpack_require__(2);\n\nmodule.exports = Graph;\n\nvar DEFAULT_EDGE_NAME = \"\\x00\",\n    GRAPH_NODE = \"\\x00\",\n    EDGE_KEY_DELIM = \"\\x01\";\n\n// Implementation notes:\n//\n//  * Node id query functions should return string ids for the nodes\n//  * Edge id query functions should return an \"edgeObj\", edge object, that is\n//    composed of enough information to uniquely identify an edge: {v, w, name}.\n//  * Internally we use an \"edgeId\", a stringified form of the edgeObj, to\n//    reference edges. This is because we need a performant way to look these\n//    edges up and, object properties, which have string keys, are the closest\n//    we're going to get to a performant hashtable in JavaScript.\n\nfunction Graph(opts) {\n  this._isDirected = _.has(opts, \"directed\") ? opts.directed : true;\n  this._isMultigraph = _.has(opts, \"multigraph\") ? opts.multigraph : false;\n  this._isCompound = _.has(opts, \"compound\") ? opts.compound : false;\n\n  // Label for the graph itself\n  this._label = undefined;\n\n  // Defaults to be set when creating a new node\n  this._defaultNodeLabelFn = _.constant(undefined);\n\n  // Defaults to be set when creating a new edge\n  this._defaultEdgeLabelFn = _.constant(undefined);\n\n  // v -> label\n  this._nodes = {};\n\n  if (this._isCompound) {\n    // v -> parent\n    this._parent = {};\n\n    // v -> children\n    this._children = {};\n    this._children[GRAPH_NODE] = {};\n  }\n\n  // v -> edgeObj\n  this._in = {};\n\n  // u -> v -> Number\n  this._preds = {};\n\n  // v -> edgeObj\n  this._out = {};\n\n  // v -> w -> Number\n  this._sucs = {};\n\n  // e -> edgeObj\n  this._edgeObjs = {};\n\n  // e -> label\n  this._edgeLabels = {};\n}\n\n/* Number of nodes in the graph. Should only be changed by the implementation. */\nGraph.prototype._nodeCount = 0;\n\n/* Number of edges in the graph. Should only be changed by the implementation. */\nGraph.prototype._edgeCount = 0;\n\n\n/* === Graph functions ========= */\n\nGraph.prototype.isDirected = function() {\n  return this._isDirected;\n};\n\nGraph.prototype.isMultigraph = function() {\n  return this._isMultigraph;\n};\n\nGraph.prototype.isCompound = function() {\n  return this._isCompound;\n};\n\nGraph.prototype.setGraph = function(label) {\n  this._label = label;\n  return this;\n};\n\nGraph.prototype.graph = function() {\n  return this._label;\n};\n\n\n/* === Node functions ========== */\n\nGraph.prototype.setDefaultNodeLabel = function(newDefault) {\n  if (!_.isFunction(newDefault)) {\n    newDefault = _.constant(newDefault);\n  }\n  this._defaultNodeLabelFn = newDefault;\n  return this;\n};\n\nGraph.prototype.nodeCount = function() {\n  return this._nodeCount;\n};\n\nGraph.prototype.nodes = function() {\n  return _.keys(this._nodes);\n};\n\nGraph.prototype.sources = function() {\n  var self = this;\n  return _.filter(this.nodes(), function(v) {\n    return _.isEmpty(self._in[v]);\n  });\n};\n\nGraph.prototype.sinks = function() {\n  var self = this;\n  return _.filter(this.nodes(), function(v) {\n    return _.isEmpty(self._out[v]);\n  });\n};\n\nGraph.prototype.setNodes = function(vs, value) {\n  var args = arguments;\n  var self = this;\n  _.each(vs, function(v) {\n    if (args.length > 1) {\n      self.setNode(v, value);\n    } else {\n      self.setNode(v);\n    }\n  });\n  return this;\n};\n\nGraph.prototype.setNode = function(v, value) {\n  if (_.has(this._nodes, v)) {\n    if (arguments.length > 1) {\n      this._nodes[v] = value;\n    }\n    return this;\n  }\n\n  this._nodes[v] = arguments.length > 1 ? value : this._defaultNodeLabelFn(v);\n  if (this._isCompound) {\n    this._parent[v] = GRAPH_NODE;\n    this._children[v] = {};\n    this._children[GRAPH_NODE][v] = true;\n  }\n  this._in[v] = {};\n  this._preds[v] = {};\n  this._out[v] = {};\n  this._sucs[v] = {};\n  ++this._nodeCount;\n  return this;\n};\n\nGraph.prototype.node = function(v) {\n  return this._nodes[v];\n};\n\nGraph.prototype.hasNode = function(v) {\n  return _.has(this._nodes, v);\n};\n\nGraph.prototype.removeNode =  function(v) {\n  var self = this;\n  if (_.has(this._nodes, v)) {\n    var removeEdge = function(e) { self.removeEdge(self._edgeObjs[e]); };\n    delete this._nodes[v];\n    if (this._isCompound) {\n      this._removeFromParentsChildList(v);\n      delete this._parent[v];\n      _.each(this.children(v), function(child) {\n        self.setParent(child);\n      });\n      delete this._children[v];\n    }\n    _.each(_.keys(this._in[v]), removeEdge);\n    delete this._in[v];\n    delete this._preds[v];\n    _.each(_.keys(this._out[v]), removeEdge);\n    delete this._out[v];\n    delete this._sucs[v];\n    --this._nodeCount;\n  }\n  return this;\n};\n\nGraph.prototype.setParent = function(v, parent) {\n  if (!this._isCompound) {\n    throw new Error(\"Cannot set parent in a non-compound graph\");\n  }\n\n  if (_.isUndefined(parent)) {\n    parent = GRAPH_NODE;\n  } else {\n    // Coerce parent to string\n    parent += \"\";\n    for (var ancestor = parent;\n         !_.isUndefined(ancestor);\n         ancestor = this.parent(ancestor)) {\n      if (ancestor === v) {\n        throw new Error(\"Setting \" + parent+ \" as parent of \" + v +\n                        \" would create a cycle\");\n      }\n    }\n\n    this.setNode(parent);\n  }\n\n  this.setNode(v);\n  this._removeFromParentsChildList(v);\n  this._parent[v] = parent;\n  this._children[parent][v] = true;\n  return this;\n};\n\nGraph.prototype._removeFromParentsChildList = function(v) {\n  delete this._children[this._parent[v]][v];\n};\n\nGraph.prototype.parent = function(v) {\n  if (this._isCompound) {\n    var parent = this._parent[v];\n    if (parent !== GRAPH_NODE) {\n      return parent;\n    }\n  }\n};\n\nGraph.prototype.children = function(v) {\n  if (_.isUndefined(v)) {\n    v = GRAPH_NODE;\n  }\n\n  if (this._isCompound) {\n    var children = this._children[v];\n    if (children) {\n      return _.keys(children);\n    }\n  } else if (v === GRAPH_NODE) {\n    return this.nodes();\n  } else if (this.hasNode(v)) {\n    return [];\n  }\n};\n\nGraph.prototype.predecessors = function(v) {\n  var predsV = this._preds[v];\n  if (predsV) {\n    return _.keys(predsV);\n  }\n};\n\nGraph.prototype.successors = function(v) {\n  var sucsV = this._sucs[v];\n  if (sucsV) {\n    return _.keys(sucsV);\n  }\n};\n\nGraph.prototype.neighbors = function(v) {\n  var preds = this.predecessors(v);\n  if (preds) {\n    return _.union(preds, this.successors(v));\n  }\n};\n\nGraph.prototype.isLeaf = function (v) {\n  var neighbors;\n  if (this.isDirected()) {\n    neighbors = this.successors(v);\n  } else {\n    neighbors = this.neighbors(v);\n  }\n  return neighbors.length === 0;\n};\n\nGraph.prototype.filterNodes = function(filter) {\n  var copy = new this.constructor({\n    directed: this._isDirected,\n    multigraph: this._isMultigraph,\n    compound: this._isCompound\n  });\n\n  copy.setGraph(this.graph());\n\n  var self = this;\n  _.each(this._nodes, function(value, v) {\n    if (filter(v)) {\n      copy.setNode(v, value);\n    }\n  });\n\n  _.each(this._edgeObjs, function(e) {\n    if (copy.hasNode(e.v) && copy.hasNode(e.w)) {\n      copy.setEdge(e, self.edge(e));\n    }\n  });\n\n  var parents = {};\n  function findParent(v) {\n    var parent = self.parent(v);\n    if (parent === undefined || copy.hasNode(parent)) {\n      parents[v] = parent;\n      return parent;\n    } else if (parent in parents) {\n      return parents[parent];\n    } else {\n      return findParent(parent);\n    }\n  }\n\n  if (this._isCompound) {\n    _.each(copy.nodes(), function(v) {\n      copy.setParent(v, findParent(v));\n    });\n  }\n\n  return copy;\n};\n\n/* === Edge functions ========== */\n\nGraph.prototype.setDefaultEdgeLabel = function(newDefault) {\n  if (!_.isFunction(newDefault)) {\n    newDefault = _.constant(newDefault);\n  }\n  this._defaultEdgeLabelFn = newDefault;\n  return this;\n};\n\nGraph.prototype.edgeCount = function() {\n  return this._edgeCount;\n};\n\nGraph.prototype.edges = function() {\n  return _.values(this._edgeObjs);\n};\n\nGraph.prototype.setPath = function(vs, value) {\n  var self = this,\n      args = arguments;\n  _.reduce(vs, function(v, w) {\n    if (args.length > 1) {\n      self.setEdge(v, w, value);\n    } else {\n      self.setEdge(v, w);\n    }\n    return w;\n  });\n  return this;\n};\n\n/*\n * setEdge(v, w, [value, [name]])\n * setEdge({ v, w, [name] }, [value])\n */\nGraph.prototype.setEdge = function() {\n  var v, w, name, value,\n      valueSpecified = false,\n      arg0 = arguments[0];\n\n  if (typeof arg0 === \"object\" && arg0 !== null && \"v\" in arg0) {\n    v = arg0.v;\n    w = arg0.w;\n    name = arg0.name;\n    if (arguments.length === 2) {\n      value = arguments[1];\n      valueSpecified = true;\n    }\n  } else {\n    v = arg0;\n    w = arguments[1];\n    name = arguments[3];\n    if (arguments.length > 2) {\n      value = arguments[2];\n      valueSpecified = true;\n    }\n  }\n\n  v = \"\" + v;\n  w = \"\" + w;\n  if (!_.isUndefined(name)) {\n    name = \"\" + name;\n  }\n\n  var e = edgeArgsToId(this._isDirected, v, w, name);\n  if (_.has(this._edgeLabels, e)) {\n    if (valueSpecified) {\n      this._edgeLabels[e] = value;\n    }\n    return this;\n  }\n\n  if (!_.isUndefined(name) && !this._isMultigraph) {\n    throw new Error(\"Cannot set a named edge when isMultigraph = false\");\n  }\n\n  // It didn't exist, so we need to create it.\n  // First ensure the nodes exist.\n  this.setNode(v);\n  this.setNode(w);\n\n  this._edgeLabels[e] = valueSpecified ? value : this._defaultEdgeLabelFn(v, w, name);\n\n  var edgeObj = edgeArgsToObj(this._isDirected, v, w, name);\n  // Ensure we add undirected edges in a consistent way.\n  v = edgeObj.v;\n  w = edgeObj.w;\n\n  Object.freeze(edgeObj);\n  this._edgeObjs[e] = edgeObj;\n  incrementOrInitEntry(this._preds[w], v);\n  incrementOrInitEntry(this._sucs[v], w);\n  this._in[w][e] = edgeObj;\n  this._out[v][e] = edgeObj;\n  this._edgeCount++;\n  return this;\n};\n\nGraph.prototype.edge = function(v, w, name) {\n  var e = (arguments.length === 1\n            ? edgeObjToId(this._isDirected, arguments[0])\n            : edgeArgsToId(this._isDirected, v, w, name));\n  return this._edgeLabels[e];\n};\n\nGraph.prototype.hasEdge = function(v, w, name) {\n  var e = (arguments.length === 1\n            ? edgeObjToId(this._isDirected, arguments[0])\n            : edgeArgsToId(this._isDirected, v, w, name));\n  return _.has(this._edgeLabels, e);\n};\n\nGraph.prototype.removeEdge = function(v, w, name) {\n  var e = (arguments.length === 1\n            ? edgeObjToId(this._isDirected, arguments[0])\n            : edgeArgsToId(this._isDirected, v, w, name)),\n      edge = this._edgeObjs[e];\n  if (edge) {\n    v = edge.v;\n    w = edge.w;\n    delete this._edgeLabels[e];\n    delete this._edgeObjs[e];\n    decrementOrRemoveEntry(this._preds[w], v);\n    decrementOrRemoveEntry(this._sucs[v], w);\n    delete this._in[w][e];\n    delete this._out[v][e];\n    this._edgeCount--;\n  }\n  return this;\n};\n\nGraph.prototype.inEdges = function(v, u) {\n  var inV = this._in[v];\n  if (inV) {\n    var edges = _.values(inV);\n    if (!u) {\n      return edges;\n    }\n    return _.filter(edges, function(edge) { return edge.v === u; });\n  }\n};\n\nGraph.prototype.outEdges = function(v, w) {\n  var outV = this._out[v];\n  if (outV) {\n    var edges = _.values(outV);\n    if (!w) {\n      return edges;\n    }\n    return _.filter(edges, function(edge) { return edge.w === w; });\n  }\n};\n\nGraph.prototype.nodeEdges = function(v, w) {\n  var inEdges = this.inEdges(v, w);\n  if (inEdges) {\n    return inEdges.concat(this.outEdges(v, w));\n  }\n};\n\nfunction incrementOrInitEntry(map, k) {\n  if (map[k]) {\n    map[k]++;\n  } else {\n    map[k] = 1;\n  }\n}\n\nfunction decrementOrRemoveEntry(map, k) {\n  if (!--map[k]) { delete map[k]; }\n}\n\nfunction edgeArgsToId(isDirected, v_, w_, name) {\n  var v = \"\" + v_;\n  var w = \"\" + w_;\n  if (!isDirected && v > w) {\n    var tmp = v;\n    v = w;\n    w = tmp;\n  }\n  return v + EDGE_KEY_DELIM + w + EDGE_KEY_DELIM +\n             (_.isUndefined(name) ? DEFAULT_EDGE_NAME : name);\n}\n\nfunction edgeArgsToObj(isDirected, v_, w_, name) {\n  var v = \"\" + v_;\n  var w = \"\" + w_;\n  if (!isDirected && v > w) {\n    var tmp = v;\n    v = w;\n    w = tmp;\n  }\n  var edgeObj =  { v: v, w: w };\n  if (name) {\n    edgeObj.name = name;\n  }\n  return edgeObj;\n}\n\nfunction edgeObjToId(isDirected, edgeObj) {\n  return edgeArgsToId(isDirected, edgeObj.v, edgeObj.w, edgeObj.name);\n}\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar asap = __webpack_require__(23);\n\nfunction noop() {}\n\n// States:\n//\n// 0 - pending\n// 1 - fulfilled with _value\n// 2 - rejected with _value\n// 3 - adopted the state of another promise, _value\n//\n// once the state is no longer pending (0) it is immutable\n\n// All `_` prefixed properties will be reduced to `_{random number}`\n// at build time to obfuscate them and discourage their use.\n// We don't use symbols or Object.defineProperty to fully hide them\n// because the performance isn't good enough.\n\n\n// to avoid using try/catch inside critical functions, we\n// extract them to here.\nvar LAST_ERROR = null;\nvar IS_ERROR = {};\nfunction getThen(obj) {\n  try {\n    return obj.then;\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nfunction tryCallOne(fn, a) {\n  try {\n    return fn(a);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\nfunction tryCallTwo(fn, a, b) {\n  try {\n    fn(a, b);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nmodule.exports = Promise;\n\nfunction Promise(fn) {\n  if (typeof this !== 'object') {\n    throw new TypeError('Promises must be constructed via new');\n  }\n  if (typeof fn !== 'function') {\n    throw new TypeError('Promise constructor\\'s argument is not a function');\n  }\n  this._75 = 0;\n  this._83 = 0;\n  this._18 = null;\n  this._38 = null;\n  if (fn === noop) return;\n  doResolve(fn, this);\n}\nPromise._47 = null;\nPromise._71 = null;\nPromise._44 = noop;\n\nPromise.prototype.then = function(onFulfilled, onRejected) {\n  if (this.constructor !== Promise) {\n    return safeThen(this, onFulfilled, onRejected);\n  }\n  var res = new Promise(noop);\n  handle(this, new Handler(onFulfilled, onRejected, res));\n  return res;\n};\n\nfunction safeThen(self, onFulfilled, onRejected) {\n  return new self.constructor(function (resolve, reject) {\n    var res = new Promise(noop);\n    res.then(resolve, reject);\n    handle(self, new Handler(onFulfilled, onRejected, res));\n  });\n}\nfunction handle(self, deferred) {\n  while (self._83 === 3) {\n    self = self._18;\n  }\n  if (Promise._47) {\n    Promise._47(self);\n  }\n  if (self._83 === 0) {\n    if (self._75 === 0) {\n      self._75 = 1;\n      self._38 = deferred;\n      return;\n    }\n    if (self._75 === 1) {\n      self._75 = 2;\n      self._38 = [self._38, deferred];\n      return;\n    }\n    self._38.push(deferred);\n    return;\n  }\n  handleResolved(self, deferred);\n}\n\nfunction handleResolved(self, deferred) {\n  asap(function() {\n    var cb = self._83 === 1 ? deferred.onFulfilled : deferred.onRejected;\n    if (cb === null) {\n      if (self._83 === 1) {\n        resolve(deferred.promise, self._18);\n      } else {\n        reject(deferred.promise, self._18);\n      }\n      return;\n    }\n    var ret = tryCallOne(cb, self._18);\n    if (ret === IS_ERROR) {\n      reject(deferred.promise, LAST_ERROR);\n    } else {\n      resolve(deferred.promise, ret);\n    }\n  });\n}\nfunction resolve(self, newValue) {\n  // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n  if (newValue === self) {\n    return reject(\n      self,\n      new TypeError('A promise cannot be resolved with itself.')\n    );\n  }\n  if (\n    newValue &&\n    (typeof newValue === 'object' || typeof newValue === 'function')\n  ) {\n    var then = getThen(newValue);\n    if (then === IS_ERROR) {\n      return reject(self, LAST_ERROR);\n    }\n    if (\n      then === self.then &&\n      newValue instanceof Promise\n    ) {\n      self._83 = 3;\n      self._18 = newValue;\n      finale(self);\n      return;\n    } else if (typeof then === 'function') {\n      doResolve(then.bind(newValue), self);\n      return;\n    }\n  }\n  self._83 = 1;\n  self._18 = newValue;\n  finale(self);\n}\n\nfunction reject(self, newValue) {\n  self._83 = 2;\n  self._18 = newValue;\n  if (Promise._71) {\n    Promise._71(self, newValue);\n  }\n  finale(self);\n}\nfunction finale(self) {\n  if (self._75 === 1) {\n    handle(self, self._38);\n    self._38 = null;\n  }\n  if (self._75 === 2) {\n    for (var i = 0; i < self._38.length; i++) {\n      handle(self, self._38[i]);\n    }\n    self._38 = null;\n  }\n}\n\nfunction Handler(onFulfilled, onRejected, promise){\n  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n  this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n  this.promise = promise;\n}\n\n/**\n * Take a potentially misbehaving resolver function and make sure\n * onFulfilled and onRejected are only called once.\n *\n * Makes no guarantees about asynchrony.\n */\nfunction doResolve(fn, promise) {\n  var done = false;\n  var res = tryCallTwo(fn, function (value) {\n    if (done) return;\n    done = true;\n    resolve(promise, value);\n  }, function (reason) {\n    if (done) return;\n    done = true;\n    reject(promise, reason);\n  });\n  if (!done && res === IS_ERROR) {\n    done = true;\n    reject(promise, LAST_ERROR);\n  }\n}\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports) {\n\nvar g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\n} catch(e) {\n\t// This works if the window reference is available\n\tif(typeof window === \"object\")\n\t\tg = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar validateFormat = function validateFormat(format) {};\n\nif (false) {\n  validateFormat = function validateFormat(format) {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  };\n}\n\nfunction invariant(condition, format, a, b, c, d, e, f) {\n  validateFormat(format);\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(format.replace(/%s/g, function () {\n        return args[argIndex++];\n      }));\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n}\n\nmodule.exports = invariant;\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n\n\nvar emptyObject = {};\n\nif (false) {\n  Object.freeze(emptyObject);\n}\n\nmodule.exports = emptyObject;\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nfunction makeEmptyFunction(arg) {\n  return function () {\n    return arg;\n  };\n}\n\n/**\n * This function accepts and discards inputs; it has no side effects. This is\n * primarily useful idiomatically for overridable function endpoints which\n * always need to be callable, since JS lacks a null-call idiom ala Cocoa.\n */\nvar emptyFunction = function emptyFunction() {};\n\nemptyFunction.thatReturns = makeEmptyFunction;\nemptyFunction.thatReturnsFalse = makeEmptyFunction(false);\nemptyFunction.thatReturnsTrue = makeEmptyFunction(true);\nemptyFunction.thatReturnsNull = makeEmptyFunction(null);\nemptyFunction.thatReturnsThis = function () {\n  return this;\n};\nemptyFunction.thatReturnsArgument = function (arg) {\n  return arg;\n};\n\nmodule.exports = emptyFunction;\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global, module) {var __WEBPACK_AMD_DEFINE_RESULT__;/**\n * @license\n * Lodash <https://lodash.com/>\n * Copyright JS Foundation and other contributors <https://js.foundation/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '4.17.10';\n\n  /** Used as the size to enable large array optimizations. */\n  var LARGE_ARRAY_SIZE = 200;\n\n  /** Error message constants. */\n  var CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://npms.io/search?q=ponyfill.',\n      FUNC_ERROR_TEXT = 'Expected a function';\n\n  /** Used to stand-in for `undefined` hash values. */\n  var HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n  /** Used as the maximum memoize cache size. */\n  var MAX_MEMOIZE_SIZE = 500;\n\n  /** Used as the internal argument placeholder. */\n  var PLACEHOLDER = '__lodash_placeholder__';\n\n  /** Used to compose bitmasks for cloning. */\n  var CLONE_DEEP_FLAG = 1,\n      CLONE_FLAT_FLAG = 2,\n      CLONE_SYMBOLS_FLAG = 4;\n\n  /** Used to compose bitmasks for value comparisons. */\n  var COMPARE_PARTIAL_FLAG = 1,\n      COMPARE_UNORDERED_FLAG = 2;\n\n  /** Used to compose bitmasks for function metadata. */\n  var WRAP_BIND_FLAG = 1,\n      WRAP_BIND_KEY_FLAG = 2,\n      WRAP_CURRY_BOUND_FLAG = 4,\n      WRAP_CURRY_FLAG = 8,\n      WRAP_CURRY_RIGHT_FLAG = 16,\n      WRAP_PARTIAL_FLAG = 32,\n      WRAP_PARTIAL_RIGHT_FLAG = 64,\n      WRAP_ARY_FLAG = 128,\n      WRAP_REARG_FLAG = 256,\n      WRAP_FLIP_FLAG = 512;\n\n  /** Used as default options for `_.truncate`. */\n  var DEFAULT_TRUNC_LENGTH = 30,\n      DEFAULT_TRUNC_OMISSION = '...';\n\n  /** Used to detect hot functions by number of calls within a span of milliseconds. */\n  var HOT_COUNT = 800,\n      HOT_SPAN = 16;\n\n  /** Used to indicate the type of lazy iteratees. */\n  var LAZY_FILTER_FLAG = 1,\n      LAZY_MAP_FLAG = 2,\n      LAZY_WHILE_FLAG = 3;\n\n  /** Used as references for various `Number` constants. */\n  var INFINITY = 1 / 0,\n      MAX_SAFE_INTEGER = 9007199254740991,\n      MAX_INTEGER = 1.7976931348623157e+308,\n      NAN = 0 / 0;\n\n  /** Used as references for the maximum length and index of an array. */\n  var MAX_ARRAY_LENGTH = 4294967295,\n      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\n  /** Used to associate wrap methods with their bit flags. */\n  var wrapFlags = [\n    ['ary', WRAP_ARY_FLAG],\n    ['bind', WRAP_BIND_FLAG],\n    ['bindKey', WRAP_BIND_KEY_FLAG],\n    ['curry', WRAP_CURRY_FLAG],\n    ['curryRight', WRAP_CURRY_RIGHT_FLAG],\n    ['flip', WRAP_FLIP_FLAG],\n    ['partial', WRAP_PARTIAL_FLAG],\n    ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],\n    ['rearg', WRAP_REARG_FLAG]\n  ];\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      asyncTag = '[object AsyncFunction]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      domExcTag = '[object DOMException]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      genTag = '[object GeneratorFunction]',\n      mapTag = '[object Map]',\n      numberTag = '[object Number]',\n      nullTag = '[object Null]',\n      objectTag = '[object Object]',\n      promiseTag = '[object Promise]',\n      proxyTag = '[object Proxy]',\n      regexpTag = '[object RegExp]',\n      setTag = '[object Set]',\n      stringTag = '[object String]',\n      symbolTag = '[object Symbol]',\n      undefinedTag = '[object Undefined]',\n      weakMapTag = '[object WeakMap]',\n      weakSetTag = '[object WeakSet]';\n\n  var arrayBufferTag = '[object ArrayBuffer]',\n      dataViewTag = '[object DataView]',\n      float32Tag = '[object Float32Array]',\n      float64Tag = '[object Float64Array]',\n      int8Tag = '[object Int8Array]',\n      int16Tag = '[object Int16Array]',\n      int32Tag = '[object Int32Array]',\n      uint8Tag = '[object Uint8Array]',\n      uint8ClampedTag = '[object Uint8ClampedArray]',\n      uint16Tag = '[object Uint16Array]',\n      uint32Tag = '[object Uint32Array]';\n\n  /** Used to match empty string literals in compiled template source. */\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n  /** Used to match HTML entities and HTML characters. */\n  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,\n      reUnescapedHtml = /[&<>\"']/g,\n      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n  /** Used to match template delimiters. */\n  var reEscape = /<%-([\\s\\S]+?)%>/g,\n      reEvaluate = /<%([\\s\\S]+?)%>/g,\n      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n  /** Used to match property names within property paths. */\n  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n      reIsPlainProp = /^\\w*$/,\n      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n  /**\n   * Used to match `RegExp`\n   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n   */\n  var reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n      reHasRegExpChar = RegExp(reRegExpChar.source);\n\n  /** Used to match leading and trailing whitespace. */\n  var reTrim = /^\\s+|\\s+$/g,\n      reTrimStart = /^\\s+/,\n      reTrimEnd = /\\s+$/;\n\n  /** Used to match wrap detail comments. */\n  var reWrapComment = /\\{(?:\\n\\/\\* \\[wrapped with .+\\] \\*\\/)?\\n?/,\n      reWrapDetails = /\\{\\n\\/\\* \\[wrapped with (.+)\\] \\*/,\n      reSplitDetails = /,? & /;\n\n  /** Used to match words composed of alphanumeric characters. */\n  var reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n\n  /** Used to match backslashes in property paths. */\n  var reEscapeChar = /\\\\(\\\\)?/g;\n\n  /**\n   * Used to match\n   * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).\n   */\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n  /** Used to match `RegExp` flags from their coerced string values. */\n  var reFlags = /\\w*$/;\n\n  /** Used to detect bad signed hexadecimal string values. */\n  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n  /** Used to detect binary string values. */\n  var reIsBinary = /^0b[01]+$/i;\n\n  /** Used to detect host constructors (Safari). */\n  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n  /** Used to detect octal string values. */\n  var reIsOctal = /^0o[0-7]+$/i;\n\n  /** Used to detect unsigned integer values. */\n  var reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n  /** Used to match Latin Unicode letters (excluding mathematical operators). */\n  var reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n\n  /** Used to ensure capturing order of template delimiters. */\n  var reNoMatch = /($^)/;\n\n  /** Used to match unescaped characters in compiled string literals. */\n  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\n  /** Used to compose unicode character classes. */\n  var rsAstralRange = '\\\\ud800-\\\\udfff',\n      rsComboMarksRange = '\\\\u0300-\\\\u036f',\n      reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n      rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n      rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n      rsDingbatRange = '\\\\u2700-\\\\u27bf',\n      rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n      rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n      rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n      rsPunctuationRange = '\\\\u2000-\\\\u206f',\n      rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n      rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n      rsVarRange = '\\\\ufe0e\\\\ufe0f',\n      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\n  /** Used to compose unicode capture groups. */\n  var rsApos = \"['\\u2019]\",\n      rsAstral = '[' + rsAstralRange + ']',\n      rsBreak = '[' + rsBreakRange + ']',\n      rsCombo = '[' + rsComboRange + ']',\n      rsDigits = '\\\\d+',\n      rsDingbat = '[' + rsDingbatRange + ']',\n      rsLower = '[' + rsLowerRange + ']',\n      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n      rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n      rsNonAstral = '[^' + rsAstralRange + ']',\n      rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n      rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n      rsUpper = '[' + rsUpperRange + ']',\n      rsZWJ = '\\\\u200d';\n\n  /** Used to compose unicode regexes. */\n  var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',\n      rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',\n      rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n      rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n      reOptMod = rsModifier + '?',\n      rsOptVar = '[' + rsVarRange + ']?',\n      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n      rsOrdLower = '\\\\d*(?:1st|2nd|3rd|(?![123])\\\\dth)(?=\\\\b|[A-Z_])',\n      rsOrdUpper = '\\\\d*(?:1ST|2ND|3RD|(?![123])\\\\dTH)(?=\\\\b|[a-z_])',\n      rsSeq = rsOptVar + reOptMod + rsOptJoin,\n      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,\n      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n  /** Used to match apostrophes. */\n  var reApos = RegExp(rsApos, 'g');\n\n  /**\n   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n   */\n  var reComboMark = RegExp(rsCombo, 'g');\n\n  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\n  var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n  /** Used to match complex or compound words. */\n  var reUnicodeWord = RegExp([\n    rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n    rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',\n    rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,\n    rsUpper + '+' + rsOptContrUpper,\n    rsOrdUpper,\n    rsOrdLower,\n    rsDigits,\n    rsEmoji\n  ].join('|'), 'g');\n\n  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\n  var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\n  /** Used to detect strings that need a more robust regexp to match words. */\n  var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n  /** Used to assign default `context` object properties. */\n  var contextProps = [\n    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',\n    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',\n    'Promise', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array',\n    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',\n    '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'\n  ];\n\n  /** Used to make template sourceURLs easier to identify. */\n  var templateCounter = -1;\n\n  /** Used to identify `toStringTag` values of typed arrays. */\n  var typedArrayTags = {};\n  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n  typedArrayTags[uint32Tag] = true;\n  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\n  typedArrayTags[errorTag] = typedArrayTags[funcTag] =\n  typedArrayTags[mapTag] = typedArrayTags[numberTag] =\n  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =\n  typedArrayTags[setTag] = typedArrayTags[stringTag] =\n  typedArrayTags[weakMapTag] = false;\n\n  /** Used to identify `toStringTag` values supported by `_.clone`. */\n  var cloneableTags = {};\n  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\n  cloneableTags[boolTag] = cloneableTags[dateTag] =\n  cloneableTags[float32Tag] = cloneableTags[float64Tag] =\n  cloneableTags[int8Tag] = cloneableTags[int16Tag] =\n  cloneableTags[int32Tag] = cloneableTags[mapTag] =\n  cloneableTags[numberTag] = cloneableTags[objectTag] =\n  cloneableTags[regexpTag] = cloneableTags[setTag] =\n  cloneableTags[stringTag] = cloneableTags[symbolTag] =\n  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n  cloneableTags[errorTag] = cloneableTags[funcTag] =\n  cloneableTags[weakMapTag] = false;\n\n  /** Used to map Latin Unicode letters to basic Latin letters. */\n  var deburredLetters = {\n    // Latin-1 Supplement block.\n    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n    '\\xc7': 'C',  '\\xe7': 'c',\n    '\\xd0': 'D',  '\\xf0': 'd',\n    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n    '\\xcc': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n    '\\xec': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n    '\\xd1': 'N',  '\\xf1': 'n',\n    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n    '\\xc6': 'Ae', '\\xe6': 'ae',\n    '\\xde': 'Th', '\\xfe': 'th',\n    '\\xdf': 'ss',\n    // Latin Extended-A block.\n    '\\u0100': 'A',  '\\u0102': 'A', '\\u0104': 'A',\n    '\\u0101': 'a',  '\\u0103': 'a', '\\u0105': 'a',\n    '\\u0106': 'C',  '\\u0108': 'C', '\\u010a': 'C', '\\u010c': 'C',\n    '\\u0107': 'c',  '\\u0109': 'c', '\\u010b': 'c', '\\u010d': 'c',\n    '\\u010e': 'D',  '\\u0110': 'D', '\\u010f': 'd', '\\u0111': 'd',\n    '\\u0112': 'E',  '\\u0114': 'E', '\\u0116': 'E', '\\u0118': 'E', '\\u011a': 'E',\n    '\\u0113': 'e',  '\\u0115': 'e', '\\u0117': 'e', '\\u0119': 'e', '\\u011b': 'e',\n    '\\u011c': 'G',  '\\u011e': 'G', '\\u0120': 'G', '\\u0122': 'G',\n    '\\u011d': 'g',  '\\u011f': 'g', '\\u0121': 'g', '\\u0123': 'g',\n    '\\u0124': 'H',  '\\u0126': 'H', '\\u0125': 'h', '\\u0127': 'h',\n    '\\u0128': 'I',  '\\u012a': 'I', '\\u012c': 'I', '\\u012e': 'I', '\\u0130': 'I',\n    '\\u0129': 'i',  '\\u012b': 'i', '\\u012d': 'i', '\\u012f': 'i', '\\u0131': 'i',\n    '\\u0134': 'J',  '\\u0135': 'j',\n    '\\u0136': 'K',  '\\u0137': 'k', '\\u0138': 'k',\n    '\\u0139': 'L',  '\\u013b': 'L', '\\u013d': 'L', '\\u013f': 'L', '\\u0141': 'L',\n    '\\u013a': 'l',  '\\u013c': 'l', '\\u013e': 'l', '\\u0140': 'l', '\\u0142': 'l',\n    '\\u0143': 'N',  '\\u0145': 'N', '\\u0147': 'N', '\\u014a': 'N',\n    '\\u0144': 'n',  '\\u0146': 'n', '\\u0148': 'n', '\\u014b': 'n',\n    '\\u014c': 'O',  '\\u014e': 'O', '\\u0150': 'O',\n    '\\u014d': 'o',  '\\u014f': 'o', '\\u0151': 'o',\n    '\\u0154': 'R',  '\\u0156': 'R', '\\u0158': 'R',\n    '\\u0155': 'r',  '\\u0157': 'r', '\\u0159': 'r',\n    '\\u015a': 'S',  '\\u015c': 'S', '\\u015e': 'S', '\\u0160': 'S',\n    '\\u015b': 's',  '\\u015d': 's', '\\u015f': 's', '\\u0161': 's',\n    '\\u0162': 'T',  '\\u0164': 'T', '\\u0166': 'T',\n    '\\u0163': 't',  '\\u0165': 't', '\\u0167': 't',\n    '\\u0168': 'U',  '\\u016a': 'U', '\\u016c': 'U', '\\u016e': 'U', '\\u0170': 'U', '\\u0172': 'U',\n    '\\u0169': 'u',  '\\u016b': 'u', '\\u016d': 'u', '\\u016f': 'u', '\\u0171': 'u', '\\u0173': 'u',\n    '\\u0174': 'W',  '\\u0175': 'w',\n    '\\u0176': 'Y',  '\\u0177': 'y', '\\u0178': 'Y',\n    '\\u0179': 'Z',  '\\u017b': 'Z', '\\u017d': 'Z',\n    '\\u017a': 'z',  '\\u017c': 'z', '\\u017e': 'z',\n    '\\u0132': 'IJ', '\\u0133': 'ij',\n    '\\u0152': 'Oe', '\\u0153': 'oe',\n    '\\u0149': \"'n\", '\\u017f': 's'\n  };\n\n  /** Used to map characters to HTML entities. */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n\n  /** Used to map HTML entities to characters. */\n  var htmlUnescapes = {\n    '&amp;': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&#39;': \"'\"\n  };\n\n  /** Used to escape characters for inclusion in compiled string literals. */\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  /** Built-in method references without a dependency on `root`. */\n  var freeParseFloat = parseFloat,\n      freeParseInt = parseInt;\n\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n  /** Detect free variable `self`. */\n  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n  /** Used as a reference to the global object. */\n  var root = freeGlobal || freeSelf || Function('return this')();\n\n  /** Detect free variable `exports`. */\n  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n  /** Detect the popular CommonJS extension `module.exports`. */\n  var moduleExports = freeModule && freeModule.exports === freeExports;\n\n  /** Detect free variable `process` from Node.js. */\n  var freeProcess = moduleExports && freeGlobal.process;\n\n  /** Used to access faster Node.js helpers. */\n  var nodeUtil = (function() {\n    try {\n      // Use `util.types` for Node.js 10+.\n      var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n      if (types) {\n        return types;\n      }\n\n      // Legacy `process.binding('util')` for Node.js < 10.\n      return freeProcess && freeProcess.binding && freeProcess.binding('util');\n    } catch (e) {}\n  }());\n\n  /* Node.js helper references. */\n  var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,\n      nodeIsDate = nodeUtil && nodeUtil.isDate,\n      nodeIsMap = nodeUtil && nodeUtil.isMap,\n      nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,\n      nodeIsSet = nodeUtil && nodeUtil.isSet,\n      nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * A faster alternative to `Function#apply`, this function invokes `func`\n   * with the `this` binding of `thisArg` and the arguments of `args`.\n   *\n   * @private\n   * @param {Function} func The function to invoke.\n   * @param {*} thisArg The `this` binding of `func`.\n   * @param {Array} args The arguments to invoke `func` with.\n   * @returns {*} Returns the result of `func`.\n   */\n  function apply(func, thisArg, args) {\n    switch (args.length) {\n      case 0: return func.call(thisArg);\n      case 1: return func.call(thisArg, args[0]);\n      case 2: return func.call(thisArg, args[0], args[1]);\n      case 3: return func.call(thisArg, args[0], args[1], args[2]);\n    }\n    return func.apply(thisArg, args);\n  }\n\n  /**\n   * A specialized version of `baseAggregator` for arrays.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} setter The function to set `accumulator` values.\n   * @param {Function} iteratee The iteratee to transform keys.\n   * @param {Object} accumulator The initial aggregated object.\n   * @returns {Function} Returns `accumulator`.\n   */\n  function arrayAggregator(array, setter, iteratee, accumulator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      var value = array[index];\n      setter(accumulator, value, iteratee(value), array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.forEach` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEach(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (iteratee(array[index], index, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.forEachRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEachRight(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n\n    while (length--) {\n      if (iteratee(array[length], length, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.every` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if all elements pass the predicate check,\n   *  else `false`.\n   */\n  function arrayEvery(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (!predicate(array[index], index, array)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * A specialized version of `_.filter` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {Array} Returns the new filtered array.\n   */\n  function arrayFilter(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (predicate(value, index, array)) {\n        result[resIndex++] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.includes` for arrays without support for\n   * specifying an index to search from.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludes(array, value) {\n    var length = array == null ? 0 : array.length;\n    return !!length && baseIndexOf(array, value, 0) > -1;\n  }\n\n  /**\n   * This function is like `arrayIncludes` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludesWith(array, value, comparator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (comparator(value, array[index])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * A specialized version of `_.map` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the new mapped array.\n   */\n  function arrayMap(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        result = Array(length);\n\n    while (++index < length) {\n      result[index] = iteratee(array[index], index, array);\n    }\n    return result;\n  }\n\n  /**\n   * Appends the elements of `values` to `array`.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {Array} values The values to append.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayPush(array, values) {\n    var index = -1,\n        length = values.length,\n        offset = array.length;\n\n    while (++index < length) {\n      array[offset + index] = values[index];\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.reduce` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the first element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduce(array, iteratee, accumulator, initAccum) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    if (initAccum && length) {\n      accumulator = array[++index];\n    }\n    while (++index < length) {\n      accumulator = iteratee(accumulator, array[index], index, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.reduceRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the last element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduceRight(array, iteratee, accumulator, initAccum) {\n    var length = array == null ? 0 : array.length;\n    if (initAccum && length) {\n      accumulator = array[--length];\n    }\n    while (length--) {\n      accumulator = iteratee(accumulator, array[length], length, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.some` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if any element passes the predicate check,\n   *  else `false`.\n   */\n  function arraySome(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (predicate(array[index], index, array)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Gets the size of an ASCII `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  var asciiSize = baseProperty('length');\n\n  /**\n   * Converts an ASCII `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function asciiToArray(string) {\n    return string.split('');\n  }\n\n  /**\n   * Splits an ASCII `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function asciiWords(string) {\n    return string.match(reAsciiWord) || [];\n  }\n\n  /**\n   * The base implementation of methods like `_.findKey` and `_.findLastKey`,\n   * without support for iteratee shorthands, which iterates over `collection`\n   * using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the found element or its key, else `undefined`.\n   */\n  function baseFindKey(collection, predicate, eachFunc) {\n    var result;\n    eachFunc(collection, function(value, key, collection) {\n      if (predicate(value, key, collection)) {\n        result = key;\n        return false;\n      }\n    });\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n   * support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseFindIndex(array, predicate, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 1 : -1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (predicate(array[index], index, array)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOf(array, value, fromIndex) {\n    return value === value\n      ? strictIndexOf(array, value, fromIndex)\n      : baseFindIndex(array, baseIsNaN, fromIndex);\n  }\n\n  /**\n   * This function is like `baseIndexOf` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOfWith(array, value, fromIndex, comparator) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (comparator(array[index], value)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.isNaN` without support for number objects.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n   */\n  function baseIsNaN(value) {\n    return value !== value;\n  }\n\n  /**\n   * The base implementation of `_.mean` and `_.meanBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the mean.\n   */\n  function baseMean(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n    return length ? (baseSum(array, iteratee) / length) : NAN;\n  }\n\n  /**\n   * The base implementation of `_.property` without support for deep paths.\n   *\n   * @private\n   * @param {string} key The key of the property to get.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function baseProperty(key) {\n    return function(object) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.propertyOf` without support for deep paths.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function basePropertyOf(object) {\n    return function(key) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.reduce` and `_.reduceRight`, without support\n   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} accumulator The initial value.\n   * @param {boolean} initAccum Specify using the first or last element of\n   *  `collection` as the initial value.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the accumulated value.\n   */\n  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n    eachFunc(collection, function(value, index, collection) {\n      accumulator = initAccum\n        ? (initAccum = false, value)\n        : iteratee(accumulator, value, index, collection);\n    });\n    return accumulator;\n  }\n\n  /**\n   * The base implementation of `_.sortBy` which uses `comparer` to define the\n   * sort order of `array` and replaces criteria objects with their corresponding\n   * values.\n   *\n   * @private\n   * @param {Array} array The array to sort.\n   * @param {Function} comparer The function to define sort order.\n   * @returns {Array} Returns `array`.\n   */\n  function baseSortBy(array, comparer) {\n    var length = array.length;\n\n    array.sort(comparer);\n    while (length--) {\n      array[length] = array[length].value;\n    }\n    return array;\n  }\n\n  /**\n   * The base implementation of `_.sum` and `_.sumBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the sum.\n   */\n  function baseSum(array, iteratee) {\n    var result,\n        index = -1,\n        length = array.length;\n\n    while (++index < length) {\n      var current = iteratee(array[index]);\n      if (current !== undefined) {\n        result = result === undefined ? current : (result + current);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.times` without support for iteratee shorthands\n   * or max array length checks.\n   *\n   * @private\n   * @param {number} n The number of times to invoke `iteratee`.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the array of results.\n   */\n  function baseTimes(n, iteratee) {\n    var index = -1,\n        result = Array(n);\n\n    while (++index < n) {\n      result[index] = iteratee(index);\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array\n   * of key-value pairs for `object` corresponding to the property names of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the key-value pairs.\n   */\n  function baseToPairs(object, props) {\n    return arrayMap(props, function(key) {\n      return [key, object[key]];\n    });\n  }\n\n  /**\n   * The base implementation of `_.unary` without support for storing metadata.\n   *\n   * @private\n   * @param {Function} func The function to cap arguments for.\n   * @returns {Function} Returns the new capped function.\n   */\n  function baseUnary(func) {\n    return function(value) {\n      return func(value);\n    };\n  }\n\n  /**\n   * The base implementation of `_.values` and `_.valuesIn` which creates an\n   * array of `object` property values corresponding to the property names\n   * of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the array of property values.\n   */\n  function baseValues(object, props) {\n    return arrayMap(props, function(key) {\n      return object[key];\n    });\n  }\n\n  /**\n   * Checks if a `cache` value for `key` exists.\n   *\n   * @private\n   * @param {Object} cache The cache to query.\n   * @param {string} key The key of the entry to check.\n   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n   */\n  function cacheHas(cache, key) {\n    return cache.has(key);\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the first unmatched string symbol.\n   */\n  function charsStartIndex(strSymbols, chrSymbols) {\n    var index = -1,\n        length = strSymbols.length;\n\n    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the last unmatched string symbol.\n   */\n  function charsEndIndex(strSymbols, chrSymbols) {\n    var index = strSymbols.length;\n\n    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Gets the number of `placeholder` occurrences in `array`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} placeholder The placeholder to search for.\n   * @returns {number} Returns the placeholder count.\n   */\n  function countHolders(array, placeholder) {\n    var length = array.length,\n        result = 0;\n\n    while (length--) {\n      if (array[length] === placeholder) {\n        ++result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n   * letters to basic Latin letters.\n   *\n   * @private\n   * @param {string} letter The matched letter to deburr.\n   * @returns {string} Returns the deburred letter.\n   */\n  var deburrLetter = basePropertyOf(deburredLetters);\n\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  var escapeHtmlChar = basePropertyOf(htmlEscapes);\n\n  /**\n   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeStringChar(chr) {\n    return '\\\\' + stringEscapes[chr];\n  }\n\n  /**\n   * Gets the value at `key` of `object`.\n   *\n   * @private\n   * @param {Object} [object] The object to query.\n   * @param {string} key The key of the property to get.\n   * @returns {*} Returns the property value.\n   */\n  function getValue(object, key) {\n    return object == null ? undefined : object[key];\n  }\n\n  /**\n   * Checks if `string` contains Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n   */\n  function hasUnicode(string) {\n    return reHasUnicode.test(string);\n  }\n\n  /**\n   * Checks if `string` contains a word composed of Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a word is found, else `false`.\n   */\n  function hasUnicodeWord(string) {\n    return reHasUnicodeWord.test(string);\n  }\n\n  /**\n   * Converts `iterator` to an array.\n   *\n   * @private\n   * @param {Object} iterator The iterator to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function iteratorToArray(iterator) {\n    var data,\n        result = [];\n\n    while (!(data = iterator.next()).done) {\n      result.push(data.value);\n    }\n    return result;\n  }\n\n  /**\n   * Converts `map` to its key-value pairs.\n   *\n   * @private\n   * @param {Object} map The map to convert.\n   * @returns {Array} Returns the key-value pairs.\n   */\n  function mapToArray(map) {\n    var index = -1,\n        result = Array(map.size);\n\n    map.forEach(function(value, key) {\n      result[++index] = [key, value];\n    });\n    return result;\n  }\n\n  /**\n   * Creates a unary function that invokes `func` with its argument transformed.\n   *\n   * @private\n   * @param {Function} func The function to wrap.\n   * @param {Function} transform The argument transform.\n   * @returns {Function} Returns the new function.\n   */\n  function overArg(func, transform) {\n    return function(arg) {\n      return func(transform(arg));\n    };\n  }\n\n  /**\n   * Replaces all `placeholder` elements in `array` with an internal placeholder\n   * and returns an array of their indexes.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {*} placeholder The placeholder to replace.\n   * @returns {Array} Returns the new array of placeholder indexes.\n   */\n  function replaceHolders(array, placeholder) {\n    var index = -1,\n        length = array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (value === placeholder || value === PLACEHOLDER) {\n        array[index] = PLACEHOLDER;\n        result[resIndex++] = index;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Gets the value at `key`, unless `key` is \"__proto__\".\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {string} key The key of the property to get.\n   * @returns {*} Returns the property value.\n   */\n  function safeGet(object, key) {\n    return key == '__proto__'\n      ? undefined\n      : object[key];\n  }\n\n  /**\n   * Converts `set` to an array of its values.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the values.\n   */\n  function setToArray(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = value;\n    });\n    return result;\n  }\n\n  /**\n   * Converts `set` to its value-value pairs.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the value-value pairs.\n   */\n  function setToPairs(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = [value, value];\n    });\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.indexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictIndexOf(array, value, fromIndex) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * A specialized version of `_.lastIndexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictLastIndexOf(array, value, fromIndex) {\n    var index = fromIndex + 1;\n    while (index--) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return index;\n  }\n\n  /**\n   * Gets the number of symbols in `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the string size.\n   */\n  function stringSize(string) {\n    return hasUnicode(string)\n      ? unicodeSize(string)\n      : asciiSize(string);\n  }\n\n  /**\n   * Converts `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function stringToArray(string) {\n    return hasUnicode(string)\n      ? unicodeToArray(string)\n      : asciiToArray(string);\n  }\n\n  /**\n   * Used by `_.unescape` to convert HTML entities to characters.\n   *\n   * @private\n   * @param {string} chr The matched character to unescape.\n   * @returns {string} Returns the unescaped character.\n   */\n  var unescapeHtmlChar = basePropertyOf(htmlUnescapes);\n\n  /**\n   * Gets the size of a Unicode `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  function unicodeSize(string) {\n    var result = reUnicode.lastIndex = 0;\n    while (reUnicode.test(string)) {\n      ++result;\n    }\n    return result;\n  }\n\n  /**\n   * Converts a Unicode `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function unicodeToArray(string) {\n    return string.match(reUnicode) || [];\n  }\n\n  /**\n   * Splits a Unicode `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function unicodeWords(string) {\n    return string.match(reUnicodeWord) || [];\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new pristine `lodash` function using the `context` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 1.1.0\n   * @category Util\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns a new `lodash` function.\n   * @example\n   *\n   * _.mixin({ 'foo': _.constant('foo') });\n   *\n   * var lodash = _.runInContext();\n   * lodash.mixin({ 'bar': lodash.constant('bar') });\n   *\n   * _.isFunction(_.foo);\n   * // => true\n   * _.isFunction(_.bar);\n   * // => false\n   *\n   * lodash.isFunction(lodash.foo);\n   * // => false\n   * lodash.isFunction(lodash.bar);\n   * // => true\n   *\n   * // Create a suped-up `defer` in Node.js.\n   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n   */\n  var runInContext = (function runInContext(context) {\n    context = context == null ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));\n\n    /** Built-in constructor references. */\n    var Array = context.Array,\n        Date = context.Date,\n        Error = context.Error,\n        Function = context.Function,\n        Math = context.Math,\n        Object = context.Object,\n        RegExp = context.RegExp,\n        String = context.String,\n        TypeError = context.TypeError;\n\n    /** Used for built-in method references. */\n    var arrayProto = Array.prototype,\n        funcProto = Function.prototype,\n        objectProto = Object.prototype;\n\n    /** Used to detect overreaching core-js shims. */\n    var coreJsData = context['__core-js_shared__'];\n\n    /** Used to resolve the decompiled source of functions. */\n    var funcToString = funcProto.toString;\n\n    /** Used to check objects for own properties. */\n    var hasOwnProperty = objectProto.hasOwnProperty;\n\n    /** Used to generate unique IDs. */\n    var idCounter = 0;\n\n    /** Used to detect methods masquerading as native. */\n    var maskSrcKey = (function() {\n      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n      return uid ? ('Symbol(src)_1.' + uid) : '';\n    }());\n\n    /**\n     * Used to resolve the\n     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n     * of values.\n     */\n    var nativeObjectToString = objectProto.toString;\n\n    /** Used to infer the `Object` constructor. */\n    var objectCtorString = funcToString.call(Object);\n\n    /** Used to restore the original `_` reference in `_.noConflict`. */\n    var oldDash = root._;\n\n    /** Used to detect if a method is native. */\n    var reIsNative = RegExp('^' +\n      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n    );\n\n    /** Built-in value references. */\n    var Buffer = moduleExports ? context.Buffer : undefined,\n        Symbol = context.Symbol,\n        Uint8Array = context.Uint8Array,\n        allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,\n        getPrototype = overArg(Object.getPrototypeOf, Object),\n        objectCreate = Object.create,\n        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n        splice = arrayProto.splice,\n        spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined,\n        symIterator = Symbol ? Symbol.iterator : undefined,\n        symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n    var defineProperty = (function() {\n      try {\n        var func = getNative(Object, 'defineProperty');\n        func({}, '', {});\n        return func;\n      } catch (e) {}\n    }());\n\n    /** Mocked built-ins. */\n    var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout,\n        ctxNow = Date && Date.now !== root.Date.now && Date.now,\n        ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;\n\n    /* Built-in method references for those with the same name as other `lodash` methods. */\n    var nativeCeil = Math.ceil,\n        nativeFloor = Math.floor,\n        nativeGetSymbols = Object.getOwnPropertySymbols,\n        nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n        nativeIsFinite = context.isFinite,\n        nativeJoin = arrayProto.join,\n        nativeKeys = overArg(Object.keys, Object),\n        nativeMax = Math.max,\n        nativeMin = Math.min,\n        nativeNow = Date.now,\n        nativeParseInt = context.parseInt,\n        nativeRandom = Math.random,\n        nativeReverse = arrayProto.reverse;\n\n    /* Built-in method references that are verified to be native. */\n    var DataView = getNative(context, 'DataView'),\n        Map = getNative(context, 'Map'),\n        Promise = getNative(context, 'Promise'),\n        Set = getNative(context, 'Set'),\n        WeakMap = getNative(context, 'WeakMap'),\n        nativeCreate = getNative(Object, 'create');\n\n    /** Used to store function metadata. */\n    var metaMap = WeakMap && new WeakMap;\n\n    /** Used to lookup unminified function names. */\n    var realNames = {};\n\n    /** Used to detect maps, sets, and weakmaps. */\n    var dataViewCtorString = toSource(DataView),\n        mapCtorString = toSource(Map),\n        promiseCtorString = toSource(Promise),\n        setCtorString = toSource(Set),\n        weakMapCtorString = toSource(WeakMap);\n\n    /** Used to convert symbols to primitives and strings. */\n    var symbolProto = Symbol ? Symbol.prototype : undefined,\n        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,\n        symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object which wraps `value` to enable implicit method\n     * chain sequences. Methods that operate on and return arrays, collections,\n     * and functions can be chained together. Methods that retrieve a single value\n     * or may return a primitive value will automatically end the chain sequence\n     * and return the unwrapped value. Otherwise, the value must be unwrapped\n     * with `_#value`.\n     *\n     * Explicit chain sequences, which must be unwrapped with `_#value`, may be\n     * enabled using `_.chain`.\n     *\n     * The execution of chained methods is lazy, that is, it's deferred until\n     * `_#value` is implicitly or explicitly called.\n     *\n     * Lazy evaluation allows several methods to support shortcut fusion.\n     * Shortcut fusion is an optimization to merge iteratee calls; this avoids\n     * the creation of intermediate arrays and can greatly reduce the number of\n     * iteratee executions. Sections of a chain sequence qualify for shortcut\n     * fusion if the section is applied to an array and iteratees accept only\n     * one argument. The heuristic for whether a section qualifies for shortcut\n     * fusion is subject to change.\n     *\n     * Chaining is supported in custom builds as long as the `_#value` method is\n     * directly or indirectly included in the build.\n     *\n     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n     *\n     * The wrapper `Array` methods are:\n     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n     *\n     * The wrapper `String` methods are:\n     * `replace` and `split`\n     *\n     * The wrapper methods that support shortcut fusion are:\n     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n     *\n     * The chainable wrapper methods are:\n     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\n     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\n     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\n     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\n     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\n     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\n     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,\n     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,\n     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,\n     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,\n     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\n     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,\n     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,\n     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,\n     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,\n     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,\n     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,\n     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,\n     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,\n     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,\n     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,\n     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,\n     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,\n     * `zipObject`, `zipObjectDeep`, and `zipWith`\n     *\n     * The wrapper methods that are **not** chainable by default are:\n     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,\n     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,\n     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,\n     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,\n     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,\n     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,\n     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,\n     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,\n     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,\n     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,\n     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,\n     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,\n     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,\n     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,\n     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,\n     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,\n     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,\n     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,\n     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,\n     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,\n     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,\n     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,\n     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,\n     * `upperFirst`, `value`, and `words`\n     *\n     * @name _\n     * @constructor\n     * @category Seq\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2, 3]);\n     *\n     * // Returns an unwrapped value.\n     * wrapped.reduce(_.add);\n     * // => 6\n     *\n     * // Returns a wrapped value.\n     * var squares = wrapped.map(square);\n     *\n     * _.isArray(squares);\n     * // => false\n     *\n     * _.isArray(squares.value());\n     * // => true\n     */\n    function lodash(value) {\n      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n        if (value instanceof LodashWrapper) {\n          return value;\n        }\n        if (hasOwnProperty.call(value, '__wrapped__')) {\n          return wrapperClone(value);\n        }\n      }\n      return new LodashWrapper(value);\n    }\n\n    /**\n     * The base implementation of `_.create` without support for assigning\n     * properties to the created object.\n     *\n     * @private\n     * @param {Object} proto The object to inherit from.\n     * @returns {Object} Returns the new object.\n     */\n    var baseCreate = (function() {\n      function object() {}\n      return function(proto) {\n        if (!isObject(proto)) {\n          return {};\n        }\n        if (objectCreate) {\n          return objectCreate(proto);\n        }\n        object.prototype = proto;\n        var result = new object;\n        object.prototype = undefined;\n        return result;\n      };\n    }());\n\n    /**\n     * The function whose prototype chain sequence wrappers inherit from.\n     *\n     * @private\n     */\n    function baseLodash() {\n      // No operation performed.\n    }\n\n    /**\n     * The base constructor for creating `lodash` wrapper objects.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     * @param {boolean} [chainAll] Enable explicit method chain sequences.\n     */\n    function LodashWrapper(value, chainAll) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__chain__ = !!chainAll;\n      this.__index__ = 0;\n      this.__values__ = undefined;\n    }\n\n    /**\n     * By default, the template delimiters used by lodash are like those in\n     * embedded Ruby (ERB) as well as ES2015 template strings. Change the\n     * following template settings to use alternative delimiters.\n     *\n     * @static\n     * @memberOf _\n     * @type {Object}\n     */\n    lodash.templateSettings = {\n\n      /**\n       * Used to detect `data` property values to be HTML-escaped.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'escape': reEscape,\n\n      /**\n       * Used to detect code to be evaluated.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'evaluate': reEvaluate,\n\n      /**\n       * Used to detect `data` property values to inject.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'interpolate': reInterpolate,\n\n      /**\n       * Used to reference the data object in the template text.\n       *\n       * @memberOf _.templateSettings\n       * @type {string}\n       */\n      'variable': '',\n\n      /**\n       * Used to import variables into the compiled template.\n       *\n       * @memberOf _.templateSettings\n       * @type {Object}\n       */\n      'imports': {\n\n        /**\n         * A reference to the `lodash` function.\n         *\n         * @memberOf _.templateSettings.imports\n         * @type {Function}\n         */\n        '_': lodash\n      }\n    };\n\n    // Ensure wrappers are instances of `baseLodash`.\n    lodash.prototype = baseLodash.prototype;\n    lodash.prototype.constructor = lodash;\n\n    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n    LodashWrapper.prototype.constructor = LodashWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n     *\n     * @private\n     * @constructor\n     * @param {*} value The value to wrap.\n     */\n    function LazyWrapper(value) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__dir__ = 1;\n      this.__filtered__ = false;\n      this.__iteratees__ = [];\n      this.__takeCount__ = MAX_ARRAY_LENGTH;\n      this.__views__ = [];\n    }\n\n    /**\n     * Creates a clone of the lazy wrapper object.\n     *\n     * @private\n     * @name clone\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the cloned `LazyWrapper` object.\n     */\n    function lazyClone() {\n      var result = new LazyWrapper(this.__wrapped__);\n      result.__actions__ = copyArray(this.__actions__);\n      result.__dir__ = this.__dir__;\n      result.__filtered__ = this.__filtered__;\n      result.__iteratees__ = copyArray(this.__iteratees__);\n      result.__takeCount__ = this.__takeCount__;\n      result.__views__ = copyArray(this.__views__);\n      return result;\n    }\n\n    /**\n     * Reverses the direction of lazy iteration.\n     *\n     * @private\n     * @name reverse\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n     */\n    function lazyReverse() {\n      if (this.__filtered__) {\n        var result = new LazyWrapper(this);\n        result.__dir__ = -1;\n        result.__filtered__ = true;\n      } else {\n        result = this.clone();\n        result.__dir__ *= -1;\n      }\n      return result;\n    }\n\n    /**\n     * Extracts the unwrapped value from its lazy wrapper.\n     *\n     * @private\n     * @name value\n     * @memberOf LazyWrapper\n     * @returns {*} Returns the unwrapped value.\n     */\n    function lazyValue() {\n      var array = this.__wrapped__.value(),\n          dir = this.__dir__,\n          isArr = isArray(array),\n          isRight = dir < 0,\n          arrLength = isArr ? array.length : 0,\n          view = getView(0, arrLength, this.__views__),\n          start = view.start,\n          end = view.end,\n          length = end - start,\n          index = isRight ? end : (start - 1),\n          iteratees = this.__iteratees__,\n          iterLength = iteratees.length,\n          resIndex = 0,\n          takeCount = nativeMin(length, this.__takeCount__);\n\n      if (!isArr || (!isRight && arrLength == length && takeCount == length)) {\n        return baseWrapperValue(array, this.__actions__);\n      }\n      var result = [];\n\n      outer:\n      while (length-- && resIndex < takeCount) {\n        index += dir;\n\n        var iterIndex = -1,\n            value = array[index];\n\n        while (++iterIndex < iterLength) {\n          var data = iteratees[iterIndex],\n              iteratee = data.iteratee,\n              type = data.type,\n              computed = iteratee(value);\n\n          if (type == LAZY_MAP_FLAG) {\n            value = computed;\n          } else if (!computed) {\n            if (type == LAZY_FILTER_FLAG) {\n              continue outer;\n            } else {\n              break outer;\n            }\n          }\n        }\n        result[resIndex++] = value;\n      }\n      return result;\n    }\n\n    // Ensure `LazyWrapper` is an instance of `baseLodash`.\n    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n    LazyWrapper.prototype.constructor = LazyWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a hash object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Hash(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the hash.\n     *\n     * @private\n     * @name clear\n     * @memberOf Hash\n     */\n    function hashClear() {\n      this.__data__ = nativeCreate ? nativeCreate(null) : {};\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the hash.\n     *\n     * @private\n     * @name delete\n     * @memberOf Hash\n     * @param {Object} hash The hash to modify.\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function hashDelete(key) {\n      var result = this.has(key) && delete this.__data__[key];\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the hash value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Hash\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function hashGet(key) {\n      var data = this.__data__;\n      if (nativeCreate) {\n        var result = data[key];\n        return result === HASH_UNDEFINED ? undefined : result;\n      }\n      return hasOwnProperty.call(data, key) ? data[key] : undefined;\n    }\n\n    /**\n     * Checks if a hash value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Hash\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function hashHas(key) {\n      var data = this.__data__;\n      return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n    }\n\n    /**\n     * Sets the hash `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Hash\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the hash instance.\n     */\n    function hashSet(key, value) {\n      var data = this.__data__;\n      this.size += this.has(key) ? 0 : 1;\n      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n      return this;\n    }\n\n    // Add methods to `Hash`.\n    Hash.prototype.clear = hashClear;\n    Hash.prototype['delete'] = hashDelete;\n    Hash.prototype.get = hashGet;\n    Hash.prototype.has = hashHas;\n    Hash.prototype.set = hashSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an list cache object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function ListCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the list cache.\n     *\n     * @private\n     * @name clear\n     * @memberOf ListCache\n     */\n    function listCacheClear() {\n      this.__data__ = [];\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the list cache.\n     *\n     * @private\n     * @name delete\n     * @memberOf ListCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function listCacheDelete(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        return false;\n      }\n      var lastIndex = data.length - 1;\n      if (index == lastIndex) {\n        data.pop();\n      } else {\n        splice.call(data, index, 1);\n      }\n      --this.size;\n      return true;\n    }\n\n    /**\n     * Gets the list cache value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf ListCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function listCacheGet(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      return index < 0 ? undefined : data[index][1];\n    }\n\n    /**\n     * Checks if a list cache value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf ListCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function listCacheHas(key) {\n      return assocIndexOf(this.__data__, key) > -1;\n    }\n\n    /**\n     * Sets the list cache `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf ListCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the list cache instance.\n     */\n    function listCacheSet(key, value) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        ++this.size;\n        data.push([key, value]);\n      } else {\n        data[index][1] = value;\n      }\n      return this;\n    }\n\n    // Add methods to `ListCache`.\n    ListCache.prototype.clear = listCacheClear;\n    ListCache.prototype['delete'] = listCacheDelete;\n    ListCache.prototype.get = listCacheGet;\n    ListCache.prototype.has = listCacheHas;\n    ListCache.prototype.set = listCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a map cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function MapCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the map.\n     *\n     * @private\n     * @name clear\n     * @memberOf MapCache\n     */\n    function mapCacheClear() {\n      this.size = 0;\n      this.__data__ = {\n        'hash': new Hash,\n        'map': new (Map || ListCache),\n        'string': new Hash\n      };\n    }\n\n    /**\n     * Removes `key` and its value from the map.\n     *\n     * @private\n     * @name delete\n     * @memberOf MapCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function mapCacheDelete(key) {\n      var result = getMapData(this, key)['delete'](key);\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the map value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf MapCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function mapCacheGet(key) {\n      return getMapData(this, key).get(key);\n    }\n\n    /**\n     * Checks if a map value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf MapCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function mapCacheHas(key) {\n      return getMapData(this, key).has(key);\n    }\n\n    /**\n     * Sets the map `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf MapCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the map cache instance.\n     */\n    function mapCacheSet(key, value) {\n      var data = getMapData(this, key),\n          size = data.size;\n\n      data.set(key, value);\n      this.size += data.size == size ? 0 : 1;\n      return this;\n    }\n\n    // Add methods to `MapCache`.\n    MapCache.prototype.clear = mapCacheClear;\n    MapCache.prototype['delete'] = mapCacheDelete;\n    MapCache.prototype.get = mapCacheGet;\n    MapCache.prototype.has = mapCacheHas;\n    MapCache.prototype.set = mapCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     *\n     * Creates an array cache object to store unique values.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [values] The values to cache.\n     */\n    function SetCache(values) {\n      var index = -1,\n          length = values == null ? 0 : values.length;\n\n      this.__data__ = new MapCache;\n      while (++index < length) {\n        this.add(values[index]);\n      }\n    }\n\n    /**\n     * Adds `value` to the array cache.\n     *\n     * @private\n     * @name add\n     * @memberOf SetCache\n     * @alias push\n     * @param {*} value The value to cache.\n     * @returns {Object} Returns the cache instance.\n     */\n    function setCacheAdd(value) {\n      this.__data__.set(value, HASH_UNDEFINED);\n      return this;\n    }\n\n    /**\n     * Checks if `value` is in the array cache.\n     *\n     * @private\n     * @name has\n     * @memberOf SetCache\n     * @param {*} value The value to search for.\n     * @returns {number} Returns `true` if `value` is found, else `false`.\n     */\n    function setCacheHas(value) {\n      return this.__data__.has(value);\n    }\n\n    // Add methods to `SetCache`.\n    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\n    SetCache.prototype.has = setCacheHas;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a stack cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Stack(entries) {\n      var data = this.__data__ = new ListCache(entries);\n      this.size = data.size;\n    }\n\n    /**\n     * Removes all key-value entries from the stack.\n     *\n     * @private\n     * @name clear\n     * @memberOf Stack\n     */\n    function stackClear() {\n      this.__data__ = new ListCache;\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the stack.\n     *\n     * @private\n     * @name delete\n     * @memberOf Stack\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function stackDelete(key) {\n      var data = this.__data__,\n          result = data['delete'](key);\n\n      this.size = data.size;\n      return result;\n    }\n\n    /**\n     * Gets the stack value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Stack\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function stackGet(key) {\n      return this.__data__.get(key);\n    }\n\n    /**\n     * Checks if a stack value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Stack\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function stackHas(key) {\n      return this.__data__.has(key);\n    }\n\n    /**\n     * Sets the stack `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Stack\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the stack cache instance.\n     */\n    function stackSet(key, value) {\n      var data = this.__data__;\n      if (data instanceof ListCache) {\n        var pairs = data.__data__;\n        if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n          pairs.push([key, value]);\n          this.size = ++data.size;\n          return this;\n        }\n        data = this.__data__ = new MapCache(pairs);\n      }\n      data.set(key, value);\n      this.size = data.size;\n      return this;\n    }\n\n    // Add methods to `Stack`.\n    Stack.prototype.clear = stackClear;\n    Stack.prototype['delete'] = stackDelete;\n    Stack.prototype.get = stackGet;\n    Stack.prototype.has = stackHas;\n    Stack.prototype.set = stackSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of the enumerable property names of the array-like `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @param {boolean} inherited Specify returning inherited property names.\n     * @returns {Array} Returns the array of property names.\n     */\n    function arrayLikeKeys(value, inherited) {\n      var isArr = isArray(value),\n          isArg = !isArr && isArguments(value),\n          isBuff = !isArr && !isArg && isBuffer(value),\n          isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n          skipIndexes = isArr || isArg || isBuff || isType,\n          result = skipIndexes ? baseTimes(value.length, String) : [],\n          length = result.length;\n\n      for (var key in value) {\n        if ((inherited || hasOwnProperty.call(value, key)) &&\n            !(skipIndexes && (\n               // Safari 9 has enumerable `arguments.length` in strict mode.\n               key == 'length' ||\n               // Node.js 0.10 has enumerable non-index properties on buffers.\n               (isBuff && (key == 'offset' || key == 'parent')) ||\n               // PhantomJS 2 has enumerable non-index properties on typed arrays.\n               (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n               // Skip index properties.\n               isIndex(key, length)\n            ))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.sample` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @returns {*} Returns the random element.\n     */\n    function arraySample(array) {\n      var length = array.length;\n      return length ? array[baseRandom(0, length - 1)] : undefined;\n    }\n\n    /**\n     * A specialized version of `_.sampleSize` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function arraySampleSize(array, n) {\n      return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * A specialized version of `_.shuffle` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function arrayShuffle(array) {\n      return shuffleSelf(copyArray(array));\n    }\n\n    /**\n     * This function is like `assignValue` except that it doesn't assign\n     * `undefined` values.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignMergeValue(object, key, value) {\n      if ((value !== undefined && !eq(object[key], value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Assigns `value` to `key` of `object` if the existing value is not equivalent\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignValue(object, key, value) {\n      var objValue = object[key];\n      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Gets the index at which the `key` is found in `array` of key-value pairs.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {*} key The key to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     */\n    function assocIndexOf(array, key) {\n      var length = array.length;\n      while (length--) {\n        if (eq(array[length][0], key)) {\n          return length;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Aggregates elements of `collection` on `accumulator` with keys transformed\n     * by `iteratee` and values set by `setter`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform keys.\n     * @param {Object} accumulator The initial aggregated object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseAggregator(collection, setter, iteratee, accumulator) {\n      baseEach(collection, function(value, key, collection) {\n        setter(accumulator, value, iteratee(value), collection);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.assign` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssign(object, source) {\n      return object && copyObject(source, keys(source), object);\n    }\n\n    /**\n     * The base implementation of `_.assignIn` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssignIn(object, source) {\n      return object && copyObject(source, keysIn(source), object);\n    }\n\n    /**\n     * The base implementation of `assignValue` and `assignMergeValue` without\n     * value checks.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function baseAssignValue(object, key, value) {\n      if (key == '__proto__' && defineProperty) {\n        defineProperty(object, key, {\n          'configurable': true,\n          'enumerable': true,\n          'value': value,\n          'writable': true\n        });\n      } else {\n        object[key] = value;\n      }\n    }\n\n    /**\n     * The base implementation of `_.at` without support for individual paths.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Array} Returns the picked elements.\n     */\n    function baseAt(object, paths) {\n      var index = -1,\n          length = paths.length,\n          result = Array(length),\n          skip = object == null;\n\n      while (++index < length) {\n        result[index] = skip ? undefined : get(object, paths[index]);\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.clamp` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     */\n    function baseClamp(number, lower, upper) {\n      if (number === number) {\n        if (upper !== undefined) {\n          number = number <= upper ? number : upper;\n        }\n        if (lower !== undefined) {\n          number = number >= lower ? number : lower;\n        }\n      }\n      return number;\n    }\n\n    /**\n     * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n     * traversed objects.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Deep clone\n     *  2 - Flatten inherited properties\n     *  4 - Clone symbols\n     * @param {Function} [customizer] The function to customize cloning.\n     * @param {string} [key] The key of `value`.\n     * @param {Object} [object] The parent object of `value`.\n     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n     * @returns {*} Returns the cloned value.\n     */\n    function baseClone(value, bitmask, customizer, key, object, stack) {\n      var result,\n          isDeep = bitmask & CLONE_DEEP_FLAG,\n          isFlat = bitmask & CLONE_FLAT_FLAG,\n          isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n      if (customizer) {\n        result = object ? customizer(value, key, object, stack) : customizer(value);\n      }\n      if (result !== undefined) {\n        return result;\n      }\n      if (!isObject(value)) {\n        return value;\n      }\n      var isArr = isArray(value);\n      if (isArr) {\n        result = initCloneArray(value);\n        if (!isDeep) {\n          return copyArray(value, result);\n        }\n      } else {\n        var tag = getTag(value),\n            isFunc = tag == funcTag || tag == genTag;\n\n        if (isBuffer(value)) {\n          return cloneBuffer(value, isDeep);\n        }\n        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n          result = (isFlat || isFunc) ? {} : initCloneObject(value);\n          if (!isDeep) {\n            return isFlat\n              ? copySymbolsIn(value, baseAssignIn(result, value))\n              : copySymbols(value, baseAssign(result, value));\n          }\n        } else {\n          if (!cloneableTags[tag]) {\n            return object ? value : {};\n          }\n          result = initCloneByTag(value, tag, isDeep);\n        }\n      }\n      // Check for circular references and return its corresponding clone.\n      stack || (stack = new Stack);\n      var stacked = stack.get(value);\n      if (stacked) {\n        return stacked;\n      }\n      stack.set(value, result);\n\n      if (isSet(value)) {\n        value.forEach(function(subValue) {\n          result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n        });\n\n        return result;\n      }\n\n      if (isMap(value)) {\n        value.forEach(function(subValue, key) {\n          result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n        });\n\n        return result;\n      }\n\n      var keysFunc = isFull\n        ? (isFlat ? getAllKeysIn : getAllKeys)\n        : (isFlat ? keysIn : keys);\n\n      var props = isArr ? undefined : keysFunc(value);\n      arrayEach(props || value, function(subValue, key) {\n        if (props) {\n          key = subValue;\n          subValue = value[key];\n        }\n        // Recursively populate clone (susceptible to call stack limits).\n        assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.conforms` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseConforms(source) {\n      var props = keys(source);\n      return function(object) {\n        return baseConformsTo(object, source, props);\n      };\n    }\n\n    /**\n     * The base implementation of `_.conformsTo` which accepts `props` to check.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     */\n    function baseConformsTo(object, source, props) {\n      var length = props.length;\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (length--) {\n        var key = props[length],\n            predicate = source[key],\n            value = object[key];\n\n        if ((value === undefined && !(key in object)) || !predicate(value)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.delay` and `_.defer` which accepts `args`\n     * to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {Array} args The arguments to provide to `func`.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    function baseDelay(func, wait, args) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return setTimeout(function() { func.apply(undefined, args); }, wait);\n    }\n\n    /**\n     * The base implementation of methods like `_.difference` without support\n     * for excluding multiple arrays or iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Array} values The values to exclude.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     */\n    function baseDifference(array, values, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          isCommon = true,\n          length = array.length,\n          result = [],\n          valuesLength = values.length;\n\n      if (!length) {\n        return result;\n      }\n      if (iteratee) {\n        values = arrayMap(values, baseUnary(iteratee));\n      }\n      if (comparator) {\n        includes = arrayIncludesWith;\n        isCommon = false;\n      }\n      else if (values.length >= LARGE_ARRAY_SIZE) {\n        includes = cacheHas;\n        isCommon = false;\n        values = new SetCache(values);\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee == null ? value : iteratee(value);\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var valuesIndex = valuesLength;\n          while (valuesIndex--) {\n            if (values[valuesIndex] === computed) {\n              continue outer;\n            }\n          }\n          result.push(value);\n        }\n        else if (!includes(values, computed, comparator)) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.forEach` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEach = createBaseEach(baseForOwn);\n\n    /**\n     * The base implementation of `_.forEachRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\n    /**\n     * The base implementation of `_.every` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`\n     */\n    function baseEvery(collection, predicate) {\n      var result = true;\n      baseEach(collection, function(value, index, collection) {\n        result = !!predicate(value, index, collection);\n        return result;\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of methods like `_.max` and `_.min` which accepts a\n     * `comparator` to determine the extremum value.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The iteratee invoked per iteration.\n     * @param {Function} comparator The comparator used to compare values.\n     * @returns {*} Returns the extremum value.\n     */\n    function baseExtremum(array, iteratee, comparator) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        var value = array[index],\n            current = iteratee(value);\n\n        if (current != null && (computed === undefined\n              ? (current === current && !isSymbol(current))\n              : comparator(current, computed)\n            )) {\n          var computed = current,\n              result = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.fill` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     */\n    function baseFill(array, value, start, end) {\n      var length = array.length;\n\n      start = toInteger(start);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : toInteger(end);\n      if (end < 0) {\n        end += length;\n      }\n      end = start > end ? 0 : toLength(end);\n      while (start < end) {\n        array[start++] = value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.filter` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function baseFilter(collection, predicate) {\n      var result = [];\n      baseEach(collection, function(value, index, collection) {\n        if (predicate(value, index, collection)) {\n          result.push(value);\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.flatten` with support for restricting flattening.\n     *\n     * @private\n     * @param {Array} array The array to flatten.\n     * @param {number} depth The maximum recursion depth.\n     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n     * @param {Array} [result=[]] The initial result value.\n     * @returns {Array} Returns the new flattened array.\n     */\n    function baseFlatten(array, depth, predicate, isStrict, result) {\n      var index = -1,\n          length = array.length;\n\n      predicate || (predicate = isFlattenable);\n      result || (result = []);\n\n      while (++index < length) {\n        var value = array[index];\n        if (depth > 0 && predicate(value)) {\n          if (depth > 1) {\n            // Recursively flatten arrays (susceptible to call stack limits).\n            baseFlatten(value, depth - 1, predicate, isStrict, result);\n          } else {\n            arrayPush(result, value);\n          }\n        } else if (!isStrict) {\n          result[result.length] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `baseForOwn` which iterates over `object`\n     * properties returned by `keysFunc` and invokes `iteratee` for each property.\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseFor = createBaseFor();\n\n    /**\n     * This function is like `baseFor` except that it iterates over properties\n     * in the opposite order.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseForRight = createBaseFor(true);\n\n    /**\n     * The base implementation of `_.forOwn` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwn(object, iteratee) {\n      return object && baseFor(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwnRight(object, iteratee) {\n      return object && baseForRight(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.functions` which creates an array of\n     * `object` function property names filtered from `props`.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} props The property names to filter.\n     * @returns {Array} Returns the function names.\n     */\n    function baseFunctions(object, props) {\n      return arrayFilter(props, function(key) {\n        return isFunction(object[key]);\n      });\n    }\n\n    /**\n     * The base implementation of `_.get` without support for default values.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseGet(object, path) {\n      path = castPath(path, object);\n\n      var index = 0,\n          length = path.length;\n\n      while (object != null && index < length) {\n        object = object[toKey(path[index++])];\n      }\n      return (index && index == length) ? object : undefined;\n    }\n\n    /**\n     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n     * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @param {Function} symbolsFunc The function to get the symbols of `object`.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function baseGetAllKeys(object, keysFunc, symbolsFunc) {\n      var result = keysFunc(object);\n      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n    }\n\n    /**\n     * The base implementation of `getTag` without fallbacks for buggy environments.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    function baseGetTag(value) {\n      if (value == null) {\n        return value === undefined ? undefinedTag : nullTag;\n      }\n      return (symToStringTag && symToStringTag in Object(value))\n        ? getRawTag(value)\n        : objectToString(value);\n    }\n\n    /**\n     * The base implementation of `_.gt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     */\n    function baseGt(value, other) {\n      return value > other;\n    }\n\n    /**\n     * The base implementation of `_.has` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHas(object, key) {\n      return object != null && hasOwnProperty.call(object, key);\n    }\n\n    /**\n     * The base implementation of `_.hasIn` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHasIn(object, key) {\n      return object != null && key in Object(object);\n    }\n\n    /**\n     * The base implementation of `_.inRange` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to check.\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     */\n    function baseInRange(number, start, end) {\n      return number >= nativeMin(start, end) && number < nativeMax(start, end);\n    }\n\n    /**\n     * The base implementation of methods like `_.intersection`, without support\n     * for iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of shared values.\n     */\n    function baseIntersection(arrays, iteratee, comparator) {\n      var includes = comparator ? arrayIncludesWith : arrayIncludes,\n          length = arrays[0].length,\n          othLength = arrays.length,\n          othIndex = othLength,\n          caches = Array(othLength),\n          maxLength = Infinity,\n          result = [];\n\n      while (othIndex--) {\n        var array = arrays[othIndex];\n        if (othIndex && iteratee) {\n          array = arrayMap(array, baseUnary(iteratee));\n        }\n        maxLength = nativeMin(array.length, maxLength);\n        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))\n          ? new SetCache(othIndex && array)\n          : undefined;\n      }\n      array = arrays[0];\n\n      var index = -1,\n          seen = caches[0];\n\n      outer:\n      while (++index < length && result.length < maxLength) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (!(seen\n              ? cacheHas(seen, computed)\n              : includes(result, computed, comparator)\n            )) {\n          othIndex = othLength;\n          while (--othIndex) {\n            var cache = caches[othIndex];\n            if (!(cache\n                  ? cacheHas(cache, computed)\n                  : includes(arrays[othIndex], computed, comparator))\n                ) {\n              continue outer;\n            }\n          }\n          if (seen) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.invert` and `_.invertBy` which inverts\n     * `object` with values transformed by `iteratee` and set by `setter`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform values.\n     * @param {Object} accumulator The initial inverted object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseInverter(object, setter, iteratee, accumulator) {\n      baseForOwn(object, function(value, key, object) {\n        setter(accumulator, iteratee(value), key, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.invoke` without support for individual\n     * method arguments.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {Array} args The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     */\n    function baseInvoke(object, path, args) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      var func = object == null ? object : object[toKey(last(path))];\n      return func == null ? undefined : apply(func, object, args);\n    }\n\n    /**\n     * The base implementation of `_.isArguments`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     */\n    function baseIsArguments(value) {\n      return isObjectLike(value) && baseGetTag(value) == argsTag;\n    }\n\n    /**\n     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     */\n    function baseIsArrayBuffer(value) {\n      return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;\n    }\n\n    /**\n     * The base implementation of `_.isDate` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     */\n    function baseIsDate(value) {\n      return isObjectLike(value) && baseGetTag(value) == dateTag;\n    }\n\n    /**\n     * The base implementation of `_.isEqual` which supports partial comparisons\n     * and tracks traversed objects.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Unordered comparison\n     *  2 - Partial comparison\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     */\n    function baseIsEqual(value, other, bitmask, customizer, stack) {\n      if (value === other) {\n        return true;\n      }\n      if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n        return value !== value && other !== other;\n      }\n      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n    }\n\n    /**\n     * A specialized version of `baseIsEqual` for arrays and objects which performs\n     * deep comparisons and tracks traversed objects enabling objects with circular\n     * references to be compared.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n      var objIsArr = isArray(object),\n          othIsArr = isArray(other),\n          objTag = objIsArr ? arrayTag : getTag(object),\n          othTag = othIsArr ? arrayTag : getTag(other);\n\n      objTag = objTag == argsTag ? objectTag : objTag;\n      othTag = othTag == argsTag ? objectTag : othTag;\n\n      var objIsObj = objTag == objectTag,\n          othIsObj = othTag == objectTag,\n          isSameTag = objTag == othTag;\n\n      if (isSameTag && isBuffer(object)) {\n        if (!isBuffer(other)) {\n          return false;\n        }\n        objIsArr = true;\n        objIsObj = false;\n      }\n      if (isSameTag && !objIsObj) {\n        stack || (stack = new Stack);\n        return (objIsArr || isTypedArray(object))\n          ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n          : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n      }\n      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n        if (objIsWrapped || othIsWrapped) {\n          var objUnwrapped = objIsWrapped ? object.value() : object,\n              othUnwrapped = othIsWrapped ? other.value() : other;\n\n          stack || (stack = new Stack);\n          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n        }\n      }\n      if (!isSameTag) {\n        return false;\n      }\n      stack || (stack = new Stack);\n      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n    }\n\n    /**\n     * The base implementation of `_.isMap` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     */\n    function baseIsMap(value) {\n      return isObjectLike(value) && getTag(value) == mapTag;\n    }\n\n    /**\n     * The base implementation of `_.isMatch` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Array} matchData The property names, values, and compare flags to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     */\n    function baseIsMatch(object, source, matchData, customizer) {\n      var index = matchData.length,\n          length = index,\n          noCustomizer = !customizer;\n\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (index--) {\n        var data = matchData[index];\n        if ((noCustomizer && data[2])\n              ? data[1] !== object[data[0]]\n              : !(data[0] in object)\n            ) {\n          return false;\n        }\n      }\n      while (++index < length) {\n        data = matchData[index];\n        var key = data[0],\n            objValue = object[key],\n            srcValue = data[1];\n\n        if (noCustomizer && data[2]) {\n          if (objValue === undefined && !(key in object)) {\n            return false;\n          }\n        } else {\n          var stack = new Stack;\n          if (customizer) {\n            var result = customizer(objValue, srcValue, key, object, source, stack);\n          }\n          if (!(result === undefined\n                ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n                : result\n              )) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.isNative` without bad shim checks.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     */\n    function baseIsNative(value) {\n      if (!isObject(value) || isMasked(value)) {\n        return false;\n      }\n      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n      return pattern.test(toSource(value));\n    }\n\n    /**\n     * The base implementation of `_.isRegExp` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     */\n    function baseIsRegExp(value) {\n      return isObjectLike(value) && baseGetTag(value) == regexpTag;\n    }\n\n    /**\n     * The base implementation of `_.isSet` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     */\n    function baseIsSet(value) {\n      return isObjectLike(value) && getTag(value) == setTag;\n    }\n\n    /**\n     * The base implementation of `_.isTypedArray` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     */\n    function baseIsTypedArray(value) {\n      return isObjectLike(value) &&\n        isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n    }\n\n    /**\n     * The base implementation of `_.iteratee`.\n     *\n     * @private\n     * @param {*} [value=_.identity] The value to convert to an iteratee.\n     * @returns {Function} Returns the iteratee.\n     */\n    function baseIteratee(value) {\n      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n      if (typeof value == 'function') {\n        return value;\n      }\n      if (value == null) {\n        return identity;\n      }\n      if (typeof value == 'object') {\n        return isArray(value)\n          ? baseMatchesProperty(value[0], value[1])\n          : baseMatches(value);\n      }\n      return property(value);\n    }\n\n    /**\n     * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeys(object) {\n      if (!isPrototype(object)) {\n        return nativeKeys(object);\n      }\n      var result = [];\n      for (var key in Object(object)) {\n        if (hasOwnProperty.call(object, key) && key != 'constructor') {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeysIn(object) {\n      if (!isObject(object)) {\n        return nativeKeysIn(object);\n      }\n      var isProto = isPrototype(object),\n          result = [];\n\n      for (var key in object) {\n        if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.lt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     */\n    function baseLt(value, other) {\n      return value < other;\n    }\n\n    /**\n     * The base implementation of `_.map` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function baseMap(collection, iteratee) {\n      var index = -1,\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value, key, collection) {\n        result[++index] = iteratee(value, key, collection);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.matches` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatches(source) {\n      var matchData = getMatchData(source);\n      if (matchData.length == 1 && matchData[0][2]) {\n        return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n      }\n      return function(object) {\n        return object === source || baseIsMatch(object, source, matchData);\n      };\n    }\n\n    /**\n     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n     *\n     * @private\n     * @param {string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatchesProperty(path, srcValue) {\n      if (isKey(path) && isStrictComparable(srcValue)) {\n        return matchesStrictComparable(toKey(path), srcValue);\n      }\n      return function(object) {\n        var objValue = get(object, path);\n        return (objValue === undefined && objValue === srcValue)\n          ? hasIn(object, path)\n          : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n      };\n    }\n\n    /**\n     * The base implementation of `_.merge` without support for multiple sources.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMerge(object, source, srcIndex, customizer, stack) {\n      if (object === source) {\n        return;\n      }\n      baseFor(source, function(srcValue, key) {\n        if (isObject(srcValue)) {\n          stack || (stack = new Stack);\n          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n        }\n        else {\n          var newValue = customizer\n            ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)\n            : undefined;\n\n          if (newValue === undefined) {\n            newValue = srcValue;\n          }\n          assignMergeValue(object, key, newValue);\n        }\n      }, keysIn);\n    }\n\n    /**\n     * A specialized version of `baseMerge` for arrays and objects which performs\n     * deep merges and tracks traversed objects enabling objects with circular\n     * references to be merged.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {string} key The key of the value to merge.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} mergeFunc The function to merge values.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n      var objValue = safeGet(object, key),\n          srcValue = safeGet(source, key),\n          stacked = stack.get(srcValue);\n\n      if (stacked) {\n        assignMergeValue(object, key, stacked);\n        return;\n      }\n      var newValue = customizer\n        ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      var isCommon = newValue === undefined;\n\n      if (isCommon) {\n        var isArr = isArray(srcValue),\n            isBuff = !isArr && isBuffer(srcValue),\n            isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n\n        newValue = srcValue;\n        if (isArr || isBuff || isTyped) {\n          if (isArray(objValue)) {\n            newValue = objValue;\n          }\n          else if (isArrayLikeObject(objValue)) {\n            newValue = copyArray(objValue);\n          }\n          else if (isBuff) {\n            isCommon = false;\n            newValue = cloneBuffer(srcValue, true);\n          }\n          else if (isTyped) {\n            isCommon = false;\n            newValue = cloneTypedArray(srcValue, true);\n          }\n          else {\n            newValue = [];\n          }\n        }\n        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n          newValue = objValue;\n          if (isArguments(objValue)) {\n            newValue = toPlainObject(objValue);\n          }\n          else if (!isObject(objValue) || (srcIndex && isFunction(objValue))) {\n            newValue = initCloneObject(srcValue);\n          }\n        }\n        else {\n          isCommon = false;\n        }\n      }\n      if (isCommon) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, newValue);\n        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n        stack['delete'](srcValue);\n      }\n      assignMergeValue(object, key, newValue);\n    }\n\n    /**\n     * The base implementation of `_.nth` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {number} n The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     */\n    function baseNth(array, n) {\n      var length = array.length;\n      if (!length) {\n        return;\n      }\n      n += n < 0 ? length : 0;\n      return isIndex(n, length) ? array[n] : undefined;\n    }\n\n    /**\n     * The base implementation of `_.orderBy` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {string[]} orders The sort orders of `iteratees`.\n     * @returns {Array} Returns the new sorted array.\n     */\n    function baseOrderBy(collection, iteratees, orders) {\n      var index = -1;\n      iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(getIteratee()));\n\n      var result = baseMap(collection, function(value, key, collection) {\n        var criteria = arrayMap(iteratees, function(iteratee) {\n          return iteratee(value);\n        });\n        return { 'criteria': criteria, 'index': ++index, 'value': value };\n      });\n\n      return baseSortBy(result, function(object, other) {\n        return compareMultiple(object, other, orders);\n      });\n    }\n\n    /**\n     * The base implementation of `_.pick` without support for individual\n     * property identifiers.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Object} Returns the new object.\n     */\n    function basePick(object, paths) {\n      return basePickBy(object, paths, function(value, path) {\n        return hasIn(object, path);\n      });\n    }\n\n    /**\n     * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @param {Function} predicate The function invoked per property.\n     * @returns {Object} Returns the new object.\n     */\n    function basePickBy(object, paths, predicate) {\n      var index = -1,\n          length = paths.length,\n          result = {};\n\n      while (++index < length) {\n        var path = paths[index],\n            value = baseGet(object, path);\n\n        if (predicate(value, path)) {\n          baseSet(result, castPath(path, object), value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseProperty` which supports deep paths.\n     *\n     * @private\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     */\n    function basePropertyDeep(path) {\n      return function(object) {\n        return baseGet(object, path);\n      };\n    }\n\n    /**\n     * The base implementation of `_.pullAllBy` without support for iteratee\n     * shorthands.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAll(array, values, iteratee, comparator) {\n      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,\n          index = -1,\n          length = values.length,\n          seen = array;\n\n      if (array === values) {\n        values = copyArray(values);\n      }\n      if (iteratee) {\n        seen = arrayMap(array, baseUnary(iteratee));\n      }\n      while (++index < length) {\n        var fromIndex = 0,\n            value = values[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {\n          if (seen !== array) {\n            splice.call(seen, fromIndex, 1);\n          }\n          splice.call(array, fromIndex, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.pullAt` without support for individual\n     * indexes or capturing the removed elements.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {number[]} indexes The indexes of elements to remove.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAt(array, indexes) {\n      var length = array ? indexes.length : 0,\n          lastIndex = length - 1;\n\n      while (length--) {\n        var index = indexes[length];\n        if (length == lastIndex || index !== previous) {\n          var previous = index;\n          if (isIndex(index)) {\n            splice.call(array, index, 1);\n          } else {\n            baseUnset(array, index);\n          }\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.random` without support for returning\n     * floating-point numbers.\n     *\n     * @private\n     * @param {number} lower The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the random number.\n     */\n    function baseRandom(lower, upper) {\n      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n    }\n\n    /**\n     * The base implementation of `_.range` and `_.rangeRight` which doesn't\n     * coerce arguments.\n     *\n     * @private\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} step The value to increment or decrement by.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the range of numbers.\n     */\n    function baseRange(start, end, step, fromRight) {\n      var index = -1,\n          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n          result = Array(length);\n\n      while (length--) {\n        result[fromRight ? length : ++index] = start;\n        start += step;\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.repeat` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {string} string The string to repeat.\n     * @param {number} n The number of times to repeat the string.\n     * @returns {string} Returns the repeated string.\n     */\n    function baseRepeat(string, n) {\n      var result = '';\n      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {\n        return result;\n      }\n      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n      do {\n        if (n % 2) {\n          result += string;\n        }\n        n = nativeFloor(n / 2);\n        if (n) {\n          string += string;\n        }\n      } while (n);\n\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     */\n    function baseRest(func, start) {\n      return setToString(overRest(func, start, identity), func + '');\n    }\n\n    /**\n     * The base implementation of `_.sample`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     */\n    function baseSample(collection) {\n      return arraySample(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.sampleSize` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function baseSampleSize(collection, n) {\n      var array = values(collection);\n      return shuffleSelf(array, baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * The base implementation of `_.set`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseSet(object, path, value, customizer) {\n      if (!isObject(object)) {\n        return object;\n      }\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          lastIndex = length - 1,\n          nested = object;\n\n      while (nested != null && ++index < length) {\n        var key = toKey(path[index]),\n            newValue = value;\n\n        if (index != lastIndex) {\n          var objValue = nested[key];\n          newValue = customizer ? customizer(objValue, key, nested) : undefined;\n          if (newValue === undefined) {\n            newValue = isObject(objValue)\n              ? objValue\n              : (isIndex(path[index + 1]) ? [] : {});\n          }\n        }\n        assignValue(nested, key, newValue);\n        nested = nested[key];\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `setData` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetData = !metaMap ? identity : function(func, data) {\n      metaMap.set(func, data);\n      return func;\n    };\n\n    /**\n     * The base implementation of `setToString` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetToString = !defineProperty ? identity : function(func, string) {\n      return defineProperty(func, 'toString', {\n        'configurable': true,\n        'enumerable': false,\n        'value': constant(string),\n        'writable': true\n      });\n    };\n\n    /**\n     * The base implementation of `_.shuffle`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function baseShuffle(collection) {\n      return shuffleSelf(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.slice` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseSlice(array, start, end) {\n      var index = -1,\n          length = array.length;\n\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = end > length ? length : end;\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : ((end - start) >>> 0);\n      start >>>= 0;\n\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = array[index + start];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.some` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function baseSome(collection, predicate) {\n      var result;\n\n      baseEach(collection, function(value, index, collection) {\n        result = predicate(value, index, collection);\n        return !result;\n      });\n      return !!result;\n    }\n\n    /**\n     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which\n     * performs a binary search of `array` to determine the index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndex(array, value, retHighest) {\n      var low = 0,\n          high = array == null ? low : array.length;\n\n      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n        while (low < high) {\n          var mid = (low + high) >>> 1,\n              computed = array[mid];\n\n          if (computed !== null && !isSymbol(computed) &&\n              (retHighest ? (computed <= value) : (computed < value))) {\n            low = mid + 1;\n          } else {\n            high = mid;\n          }\n        }\n        return high;\n      }\n      return baseSortedIndexBy(array, value, identity, retHighest);\n    }\n\n    /**\n     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`\n     * which invokes `iteratee` for `value` and each element of `array` to compute\n     * their sort ranking. The iteratee is invoked with one argument; (value).\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} iteratee The iteratee invoked per element.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndexBy(array, value, iteratee, retHighest) {\n      value = iteratee(value);\n\n      var low = 0,\n          high = array == null ? 0 : array.length,\n          valIsNaN = value !== value,\n          valIsNull = value === null,\n          valIsSymbol = isSymbol(value),\n          valIsUndefined = value === undefined;\n\n      while (low < high) {\n        var mid = nativeFloor((low + high) / 2),\n            computed = iteratee(array[mid]),\n            othIsDefined = computed !== undefined,\n            othIsNull = computed === null,\n            othIsReflexive = computed === computed,\n            othIsSymbol = isSymbol(computed);\n\n        if (valIsNaN) {\n          var setLow = retHighest || othIsReflexive;\n        } else if (valIsUndefined) {\n          setLow = othIsReflexive && (retHighest || othIsDefined);\n        } else if (valIsNull) {\n          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);\n        } else if (valIsSymbol) {\n          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);\n        } else if (othIsNull || othIsSymbol) {\n          setLow = false;\n        } else {\n          setLow = retHighest ? (computed <= value) : (computed < value);\n        }\n        if (setLow) {\n          low = mid + 1;\n        } else {\n          high = mid;\n        }\n      }\n      return nativeMin(high, MAX_ARRAY_INDEX);\n    }\n\n    /**\n     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without\n     * support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseSortedUniq(array, iteratee) {\n      var index = -1,\n          length = array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        if (!index || !eq(computed, seen)) {\n          var seen = computed;\n          result[resIndex++] = value === 0 ? 0 : value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.toNumber` which doesn't ensure correct\n     * conversions of binary, hexadecimal, or octal string values.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     */\n    function baseToNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      return +value;\n    }\n\n    /**\n     * The base implementation of `_.toString` which doesn't convert nullish\n     * values to empty strings.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {string} Returns the string.\n     */\n    function baseToString(value) {\n      // Exit early for strings to avoid a performance hit in some environments.\n      if (typeof value == 'string') {\n        return value;\n      }\n      if (isArray(value)) {\n        // Recursively convert values (susceptible to call stack limits).\n        return arrayMap(value, baseToString) + '';\n      }\n      if (isSymbol(value)) {\n        return symbolToString ? symbolToString.call(value) : '';\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseUniq(array, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          length = array.length,\n          isCommon = true,\n          result = [],\n          seen = result;\n\n      if (comparator) {\n        isCommon = false;\n        includes = arrayIncludesWith;\n      }\n      else if (length >= LARGE_ARRAY_SIZE) {\n        var set = iteratee ? null : createSet(array);\n        if (set) {\n          return setToArray(set);\n        }\n        isCommon = false;\n        includes = cacheHas;\n        seen = new SetCache;\n      }\n      else {\n        seen = iteratee ? [] : result;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var seenIndex = seen.length;\n          while (seenIndex--) {\n            if (seen[seenIndex] === computed) {\n              continue outer;\n            }\n          }\n          if (iteratee) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n        else if (!includes(seen, computed, comparator)) {\n          if (seen !== result) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.unset`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The property path to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     */\n    function baseUnset(object, path) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      return object == null || delete object[toKey(last(path))];\n    }\n\n    /**\n     * The base implementation of `_.update`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to update.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseUpdate(object, path, updater, customizer) {\n      return baseSet(object, path, updater(baseGet(object, path)), customizer);\n    }\n\n    /**\n     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`\n     * without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseWhile(array, predicate, isDrop, fromRight) {\n      var length = array.length,\n          index = fromRight ? length : -1;\n\n      while ((fromRight ? index-- : ++index < length) &&\n        predicate(array[index], index, array)) {}\n\n      return isDrop\n        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n    }\n\n    /**\n     * The base implementation of `wrapperValue` which returns the result of\n     * performing a sequence of actions on the unwrapped `value`, where each\n     * successive action is supplied the return value of the previous.\n     *\n     * @private\n     * @param {*} value The unwrapped value.\n     * @param {Array} actions Actions to perform to resolve the unwrapped value.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseWrapperValue(value, actions) {\n      var result = value;\n      if (result instanceof LazyWrapper) {\n        result = result.value();\n      }\n      return arrayReduce(actions, function(result, action) {\n        return action.func.apply(action.thisArg, arrayPush([result], action.args));\n      }, result);\n    }\n\n    /**\n     * The base implementation of methods like `_.xor`, without support for\n     * iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of values.\n     */\n    function baseXor(arrays, iteratee, comparator) {\n      var length = arrays.length;\n      if (length < 2) {\n        return length ? baseUniq(arrays[0]) : [];\n      }\n      var index = -1,\n          result = Array(length);\n\n      while (++index < length) {\n        var array = arrays[index],\n            othIndex = -1;\n\n        while (++othIndex < length) {\n          if (othIndex != index) {\n            result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);\n          }\n        }\n      }\n      return baseUniq(baseFlatten(result, 1), iteratee, comparator);\n    }\n\n    /**\n     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.\n     *\n     * @private\n     * @param {Array} props The property identifiers.\n     * @param {Array} values The property values.\n     * @param {Function} assignFunc The function to assign values.\n     * @returns {Object} Returns the new object.\n     */\n    function baseZipObject(props, values, assignFunc) {\n      var index = -1,\n          length = props.length,\n          valsLength = values.length,\n          result = {};\n\n      while (++index < length) {\n        var value = index < valsLength ? values[index] : undefined;\n        assignFunc(result, props[index], value);\n      }\n      return result;\n    }\n\n    /**\n     * Casts `value` to an empty array if it's not an array like object.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Array|Object} Returns the cast array-like object.\n     */\n    function castArrayLikeObject(value) {\n      return isArrayLikeObject(value) ? value : [];\n    }\n\n    /**\n     * Casts `value` to `identity` if it's not a function.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Function} Returns cast function.\n     */\n    function castFunction(value) {\n      return typeof value == 'function' ? value : identity;\n    }\n\n    /**\n     * Casts `value` to a path array if it's not one.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {Array} Returns the cast property path array.\n     */\n    function castPath(value, object) {\n      if (isArray(value)) {\n        return value;\n      }\n      return isKey(value, object) ? [value] : stringToPath(toString(value));\n    }\n\n    /**\n     * A `baseRest` alias which can be replaced with `identity` by module\n     * replacement plugins.\n     *\n     * @private\n     * @type {Function}\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    var castRest = baseRest;\n\n    /**\n     * Casts `array` to a slice if it's needed.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {number} start The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the cast slice.\n     */\n    function castSlice(array, start, end) {\n      var length = array.length;\n      end = end === undefined ? length : end;\n      return (!start && end >= length) ? array : baseSlice(array, start, end);\n    }\n\n    /**\n     * A simple wrapper around the global [`clearTimeout`](https://mdn.io/clearTimeout).\n     *\n     * @private\n     * @param {number|Object} id The timer id or timeout object of the timer to clear.\n     */\n    var clearTimeout = ctxClearTimeout || function(id) {\n      return root.clearTimeout(id);\n    };\n\n    /**\n     * Creates a clone of  `buffer`.\n     *\n     * @private\n     * @param {Buffer} buffer The buffer to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Buffer} Returns the cloned buffer.\n     */\n    function cloneBuffer(buffer, isDeep) {\n      if (isDeep) {\n        return buffer.slice();\n      }\n      var length = buffer.length,\n          result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n      buffer.copy(result);\n      return result;\n    }\n\n    /**\n     * Creates a clone of `arrayBuffer`.\n     *\n     * @private\n     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n     * @returns {ArrayBuffer} Returns the cloned array buffer.\n     */\n    function cloneArrayBuffer(arrayBuffer) {\n      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n      new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n      return result;\n    }\n\n    /**\n     * Creates a clone of `dataView`.\n     *\n     * @private\n     * @param {Object} dataView The data view to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned data view.\n     */\n    function cloneDataView(dataView, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n    }\n\n    /**\n     * Creates a clone of `regexp`.\n     *\n     * @private\n     * @param {Object} regexp The regexp to clone.\n     * @returns {Object} Returns the cloned regexp.\n     */\n    function cloneRegExp(regexp) {\n      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n      result.lastIndex = regexp.lastIndex;\n      return result;\n    }\n\n    /**\n     * Creates a clone of the `symbol` object.\n     *\n     * @private\n     * @param {Object} symbol The symbol object to clone.\n     * @returns {Object} Returns the cloned symbol object.\n     */\n    function cloneSymbol(symbol) {\n      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n    }\n\n    /**\n     * Creates a clone of `typedArray`.\n     *\n     * @private\n     * @param {Object} typedArray The typed array to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned typed array.\n     */\n    function cloneTypedArray(typedArray, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n    }\n\n    /**\n     * Compares values to sort them in ascending order.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {number} Returns the sort order indicator for `value`.\n     */\n    function compareAscending(value, other) {\n      if (value !== other) {\n        var valIsDefined = value !== undefined,\n            valIsNull = value === null,\n            valIsReflexive = value === value,\n            valIsSymbol = isSymbol(value);\n\n        var othIsDefined = other !== undefined,\n            othIsNull = other === null,\n            othIsReflexive = other === other,\n            othIsSymbol = isSymbol(other);\n\n        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n            (valIsNull && othIsDefined && othIsReflexive) ||\n            (!valIsDefined && othIsReflexive) ||\n            !valIsReflexive) {\n          return 1;\n        }\n        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n            (othIsNull && valIsDefined && valIsReflexive) ||\n            (!othIsDefined && valIsReflexive) ||\n            !othIsReflexive) {\n          return -1;\n        }\n      }\n      return 0;\n    }\n\n    /**\n     * Used by `_.orderBy` to compare multiple properties of a value to another\n     * and stable sort them.\n     *\n     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n     * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n     * of corresponding values.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {boolean[]|string[]} orders The order to sort by for each property.\n     * @returns {number} Returns the sort order indicator for `object`.\n     */\n    function compareMultiple(object, other, orders) {\n      var index = -1,\n          objCriteria = object.criteria,\n          othCriteria = other.criteria,\n          length = objCriteria.length,\n          ordersLength = orders.length;\n\n      while (++index < length) {\n        var result = compareAscending(objCriteria[index], othCriteria[index]);\n        if (result) {\n          if (index >= ordersLength) {\n            return result;\n          }\n          var order = orders[index];\n          return result * (order == 'desc' ? -1 : 1);\n        }\n      }\n      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n      // that causes it, under certain circumstances, to provide the same value for\n      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n      // for more details.\n      //\n      // This also ensures a stable sort in V8 and other engines.\n      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n      return object.index - other.index;\n    }\n\n    /**\n     * Creates an array that is the composition of partially applied arguments,\n     * placeholders, and provided arguments into a single array of arguments.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to prepend to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgs(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersLength = holders.length,\n          leftIndex = -1,\n          leftLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(leftLength + rangeLength),\n          isUncurried = !isCurried;\n\n      while (++leftIndex < leftLength) {\n        result[leftIndex] = partials[leftIndex];\n      }\n      while (++argsIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[holders[argsIndex]] = args[argsIndex];\n        }\n      }\n      while (rangeLength--) {\n        result[leftIndex++] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * This function is like `composeArgs` except that the arguments composition\n     * is tailored for `_.partialRight`.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to append to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgsRight(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersIndex = -1,\n          holdersLength = holders.length,\n          rightIndex = -1,\n          rightLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(rangeLength + rightLength),\n          isUncurried = !isCurried;\n\n      while (++argsIndex < rangeLength) {\n        result[argsIndex] = args[argsIndex];\n      }\n      var offset = argsIndex;\n      while (++rightIndex < rightLength) {\n        result[offset + rightIndex] = partials[rightIndex];\n      }\n      while (++holdersIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[offset + holders[holdersIndex]] = args[argsIndex++];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Copies the values of `source` to `array`.\n     *\n     * @private\n     * @param {Array} source The array to copy values from.\n     * @param {Array} [array=[]] The array to copy values to.\n     * @returns {Array} Returns `array`.\n     */\n    function copyArray(source, array) {\n      var index = -1,\n          length = source.length;\n\n      array || (array = Array(length));\n      while (++index < length) {\n        array[index] = source[index];\n      }\n      return array;\n    }\n\n    /**\n     * Copies properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy properties from.\n     * @param {Array} props The property identifiers to copy.\n     * @param {Object} [object={}] The object to copy properties to.\n     * @param {Function} [customizer] The function to customize copied values.\n     * @returns {Object} Returns `object`.\n     */\n    function copyObject(source, props, object, customizer) {\n      var isNew = !object;\n      object || (object = {});\n\n      var index = -1,\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index];\n\n        var newValue = customizer\n          ? customizer(object[key], source[key], key, object, source)\n          : undefined;\n\n        if (newValue === undefined) {\n          newValue = source[key];\n        }\n        if (isNew) {\n          baseAssignValue(object, key, newValue);\n        } else {\n          assignValue(object, key, newValue);\n        }\n      }\n      return object;\n    }\n\n    /**\n     * Copies own symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbols(source, object) {\n      return copyObject(source, getSymbols(source), object);\n    }\n\n    /**\n     * Copies own and inherited symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbolsIn(source, object) {\n      return copyObject(source, getSymbolsIn(source), object);\n    }\n\n    /**\n     * Creates a function like `_.groupBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} [initializer] The accumulator object initializer.\n     * @returns {Function} Returns the new aggregator function.\n     */\n    function createAggregator(setter, initializer) {\n      return function(collection, iteratee) {\n        var func = isArray(collection) ? arrayAggregator : baseAggregator,\n            accumulator = initializer ? initializer() : {};\n\n        return func(collection, setter, getIteratee(iteratee, 2), accumulator);\n      };\n    }\n\n    /**\n     * Creates a function like `_.assign`.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @returns {Function} Returns the new assigner function.\n     */\n    function createAssigner(assigner) {\n      return baseRest(function(object, sources) {\n        var index = -1,\n            length = sources.length,\n            customizer = length > 1 ? sources[length - 1] : undefined,\n            guard = length > 2 ? sources[2] : undefined;\n\n        customizer = (assigner.length > 3 && typeof customizer == 'function')\n          ? (length--, customizer)\n          : undefined;\n\n        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n          customizer = length < 3 ? undefined : customizer;\n          length = 1;\n        }\n        object = Object(object);\n        while (++index < length) {\n          var source = sources[index];\n          if (source) {\n            assigner(object, source, index, customizer);\n          }\n        }\n        return object;\n      });\n    }\n\n    /**\n     * Creates a `baseEach` or `baseEachRight` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseEach(eachFunc, fromRight) {\n      return function(collection, iteratee) {\n        if (collection == null) {\n          return collection;\n        }\n        if (!isArrayLike(collection)) {\n          return eachFunc(collection, iteratee);\n        }\n        var length = collection.length,\n            index = fromRight ? length : -1,\n            iterable = Object(collection);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          if (iteratee(iterable[index], index, iterable) === false) {\n            break;\n          }\n        }\n        return collection;\n      };\n    }\n\n    /**\n     * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseFor(fromRight) {\n      return function(object, iteratee, keysFunc) {\n        var index = -1,\n            iterable = Object(object),\n            props = keysFunc(object),\n            length = props.length;\n\n        while (length--) {\n          var key = props[fromRight ? length : ++index];\n          if (iteratee(iterable[key], key, iterable) === false) {\n            break;\n          }\n        }\n        return object;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the optional `this`\n     * binding of `thisArg`.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createBind(func, bitmask, thisArg) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(isBind ? thisArg : this, arguments);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.lowerFirst`.\n     *\n     * @private\n     * @param {string} methodName The name of the `String` case method to use.\n     * @returns {Function} Returns the new case function.\n     */\n    function createCaseFirst(methodName) {\n      return function(string) {\n        string = toString(string);\n\n        var strSymbols = hasUnicode(string)\n          ? stringToArray(string)\n          : undefined;\n\n        var chr = strSymbols\n          ? strSymbols[0]\n          : string.charAt(0);\n\n        var trailing = strSymbols\n          ? castSlice(strSymbols, 1).join('')\n          : string.slice(1);\n\n        return chr[methodName]() + trailing;\n      };\n    }\n\n    /**\n     * Creates a function like `_.camelCase`.\n     *\n     * @private\n     * @param {Function} callback The function to combine each word.\n     * @returns {Function} Returns the new compounder function.\n     */\n    function createCompounder(callback) {\n      return function(string) {\n        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n      };\n    }\n\n    /**\n     * Creates a function that produces an instance of `Ctor` regardless of\n     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n     *\n     * @private\n     * @param {Function} Ctor The constructor to wrap.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCtor(Ctor) {\n      return function() {\n        // Use a `switch` statement to work with class constructors. See\n        // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n        // for more details.\n        var args = arguments;\n        switch (args.length) {\n          case 0: return new Ctor;\n          case 1: return new Ctor(args[0]);\n          case 2: return new Ctor(args[0], args[1]);\n          case 3: return new Ctor(args[0], args[1], args[2]);\n          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n        }\n        var thisBinding = baseCreate(Ctor.prototype),\n            result = Ctor.apply(thisBinding, args);\n\n        // Mimic the constructor's `return` behavior.\n        // See https://es5.github.io/#x13.2.2 for more details.\n        return isObject(result) ? result : thisBinding;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to enable currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {number} arity The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCurry(func, bitmask, arity) {\n      var Ctor = createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length,\n            placeholder = getHolder(wrapper);\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)\n          ? []\n          : replaceHolders(args, placeholder);\n\n        length -= holders.length;\n        if (length < arity) {\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, undefined,\n            args, holders, undefined, undefined, arity - length);\n        }\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return apply(fn, this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.find` or `_.findLast` function.\n     *\n     * @private\n     * @param {Function} findIndexFunc The function to find the collection index.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFind(findIndexFunc) {\n      return function(collection, predicate, fromIndex) {\n        var iterable = Object(collection);\n        if (!isArrayLike(collection)) {\n          var iteratee = getIteratee(predicate, 3);\n          collection = keys(collection);\n          predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n        }\n        var index = findIndexFunc(collection, predicate, fromIndex);\n        return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n      };\n    }\n\n    /**\n     * Creates a `_.flow` or `_.flowRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new flow function.\n     */\n    function createFlow(fromRight) {\n      return flatRest(function(funcs) {\n        var length = funcs.length,\n            index = length,\n            prereq = LodashWrapper.prototype.thru;\n\n        if (fromRight) {\n          funcs.reverse();\n        }\n        while (index--) {\n          var func = funcs[index];\n          if (typeof func != 'function') {\n            throw new TypeError(FUNC_ERROR_TEXT);\n          }\n          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {\n            var wrapper = new LodashWrapper([], true);\n          }\n        }\n        index = wrapper ? index : length;\n        while (++index < length) {\n          func = funcs[index];\n\n          var funcName = getFuncName(func),\n              data = funcName == 'wrapper' ? getData(func) : undefined;\n\n          if (data && isLaziable(data[0]) &&\n                data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) &&\n                !data[4].length && data[9] == 1\n              ) {\n            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n          } else {\n            wrapper = (func.length == 1 && isLaziable(func))\n              ? wrapper[funcName]()\n              : wrapper.thru(func);\n          }\n        }\n        return function() {\n          var args = arguments,\n              value = args[0];\n\n          if (wrapper && args.length == 1 && isArray(value)) {\n            return wrapper.plant(value).value();\n          }\n          var index = 0,\n              result = length ? funcs[index].apply(this, args) : value;\n\n          while (++index < length) {\n            result = funcs[index].call(this, result);\n          }\n          return result;\n        };\n      });\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with optional `this`\n     * binding of `thisArg`, partial application, and currying.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [partialsRight] The arguments to append to those provided\n     *  to the new function.\n     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n      var isAry = bitmask & WRAP_ARY_FLAG,\n          isBind = bitmask & WRAP_BIND_FLAG,\n          isBindKey = bitmask & WRAP_BIND_KEY_FLAG,\n          isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),\n          isFlip = bitmask & WRAP_FLIP_FLAG,\n          Ctor = isBindKey ? undefined : createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length;\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        if (isCurried) {\n          var placeholder = getHolder(wrapper),\n              holdersCount = countHolders(args, placeholder);\n        }\n        if (partials) {\n          args = composeArgs(args, partials, holders, isCurried);\n        }\n        if (partialsRight) {\n          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);\n        }\n        length -= holdersCount;\n        if (isCurried && length < arity) {\n          var newHolders = replaceHolders(args, placeholder);\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, thisArg,\n            args, newHolders, argPos, ary, arity - length\n          );\n        }\n        var thisBinding = isBind ? thisArg : this,\n            fn = isBindKey ? thisBinding[func] : func;\n\n        length = args.length;\n        if (argPos) {\n          args = reorder(args, argPos);\n        } else if (isFlip && length > 1) {\n          args.reverse();\n        }\n        if (isAry && ary < length) {\n          args.length = ary;\n        }\n        if (this && this !== root && this instanceof wrapper) {\n          fn = Ctor || createCtor(fn);\n        }\n        return fn.apply(thisBinding, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.invertBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} toIteratee The function to resolve iteratees.\n     * @returns {Function} Returns the new inverter function.\n     */\n    function createInverter(setter, toIteratee) {\n      return function(object, iteratee) {\n        return baseInverter(object, setter, toIteratee(iteratee), {});\n      };\n    }\n\n    /**\n     * Creates a function that performs a mathematical operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @param {number} [defaultValue] The value used for `undefined` arguments.\n     * @returns {Function} Returns the new mathematical operation function.\n     */\n    function createMathOperation(operator, defaultValue) {\n      return function(value, other) {\n        var result;\n        if (value === undefined && other === undefined) {\n          return defaultValue;\n        }\n        if (value !== undefined) {\n          result = value;\n        }\n        if (other !== undefined) {\n          if (result === undefined) {\n            return other;\n          }\n          if (typeof value == 'string' || typeof other == 'string') {\n            value = baseToString(value);\n            other = baseToString(other);\n          } else {\n            value = baseToNumber(value);\n            other = baseToNumber(other);\n          }\n          result = operator(value, other);\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function like `_.over`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over iteratees.\n     * @returns {Function} Returns the new over function.\n     */\n    function createOver(arrayFunc) {\n      return flatRest(function(iteratees) {\n        iteratees = arrayMap(iteratees, baseUnary(getIteratee()));\n        return baseRest(function(args) {\n          var thisArg = this;\n          return arrayFunc(iteratees, function(iteratee) {\n            return apply(iteratee, thisArg, args);\n          });\n        });\n      });\n    }\n\n    /**\n     * Creates the padding for `string` based on `length`. The `chars` string\n     * is truncated if the number of characters exceeds `length`.\n     *\n     * @private\n     * @param {number} length The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padding for `string`.\n     */\n    function createPadding(length, chars) {\n      chars = chars === undefined ? ' ' : baseToString(chars);\n\n      var charsLength = chars.length;\n      if (charsLength < 2) {\n        return charsLength ? baseRepeat(chars, length) : chars;\n      }\n      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));\n      return hasUnicode(chars)\n        ? castSlice(stringToArray(result), 0, length).join('')\n        : result.slice(0, length);\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the `this` binding\n     * of `thisArg` and `partials` prepended to the arguments it receives.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {Array} partials The arguments to prepend to those provided to\n     *  the new function.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createPartial(func, bitmask, thisArg, partials) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var argsIndex = -1,\n            argsLength = arguments.length,\n            leftIndex = -1,\n            leftLength = partials.length,\n            args = Array(leftLength + argsLength),\n            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\n        while (++leftIndex < leftLength) {\n          args[leftIndex] = partials[leftIndex];\n        }\n        while (argsLength--) {\n          args[leftIndex++] = arguments[++argsIndex];\n        }\n        return apply(fn, isBind ? thisArg : this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.range` or `_.rangeRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new range function.\n     */\n    function createRange(fromRight) {\n      return function(start, end, step) {\n        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n          end = step = undefined;\n        }\n        // Ensure the sign of `-0` is preserved.\n        start = toFinite(start);\n        if (end === undefined) {\n          end = start;\n          start = 0;\n        } else {\n          end = toFinite(end);\n        }\n        step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);\n        return baseRange(start, end, step, fromRight);\n      };\n    }\n\n    /**\n     * Creates a function that performs a relational operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @returns {Function} Returns the new relational operation function.\n     */\n    function createRelationalOperation(operator) {\n      return function(value, other) {\n        if (!(typeof value == 'string' && typeof other == 'string')) {\n          value = toNumber(value);\n          other = toNumber(other);\n        }\n        return operator(value, other);\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to continue currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {Function} wrapFunc The function to create the `func` wrapper.\n     * @param {*} placeholder The placeholder value.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {\n      var isCurry = bitmask & WRAP_CURRY_FLAG,\n          newHolders = isCurry ? holders : undefined,\n          newHoldersRight = isCurry ? undefined : holders,\n          newPartials = isCurry ? partials : undefined,\n          newPartialsRight = isCurry ? undefined : partials;\n\n      bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);\n      bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);\n\n      if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {\n        bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);\n      }\n      var newData = [\n        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,\n        newHoldersRight, argPos, ary, arity\n      ];\n\n      var result = wrapFunc.apply(undefined, newData);\n      if (isLaziable(func)) {\n        setData(result, newData);\n      }\n      result.placeholder = placeholder;\n      return setWrapToString(result, func, bitmask);\n    }\n\n    /**\n     * Creates a function like `_.round`.\n     *\n     * @private\n     * @param {string} methodName The name of the `Math` method to use when rounding.\n     * @returns {Function} Returns the new round function.\n     */\n    function createRound(methodName) {\n      var func = Math[methodName];\n      return function(number, precision) {\n        number = toNumber(number);\n        precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);\n        if (precision) {\n          // Shift with exponential notation to avoid floating-point issues.\n          // See [MDN](https://mdn.io/round#Examples) for more details.\n          var pair = (toString(number) + 'e').split('e'),\n              value = func(pair[0] + 'e' + (+pair[1] + precision));\n\n          pair = (toString(value) + 'e').split('e');\n          return +(pair[0] + 'e' + (+pair[1] - precision));\n        }\n        return func(number);\n      };\n    }\n\n    /**\n     * Creates a set object of `values`.\n     *\n     * @private\n     * @param {Array} values The values to add to the set.\n     * @returns {Object} Returns the new set.\n     */\n    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n      return new Set(values);\n    };\n\n    /**\n     * Creates a `_.toPairs` or `_.toPairsIn` function.\n     *\n     * @private\n     * @param {Function} keysFunc The function to get the keys of a given object.\n     * @returns {Function} Returns the new pairs function.\n     */\n    function createToPairs(keysFunc) {\n      return function(object) {\n        var tag = getTag(object);\n        if (tag == mapTag) {\n          return mapToArray(object);\n        }\n        if (tag == setTag) {\n          return setToPairs(object);\n        }\n        return baseToPairs(object, keysFunc(object));\n      };\n    }\n\n    /**\n     * Creates a function that either curries or invokes `func` with optional\n     * `this` binding and partially applied arguments.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags.\n     *    1 - `_.bind`\n     *    2 - `_.bindKey`\n     *    4 - `_.curry` or `_.curryRight` of a bound function\n     *    8 - `_.curry`\n     *   16 - `_.curryRight`\n     *   32 - `_.partial`\n     *   64 - `_.partialRight`\n     *  128 - `_.rearg`\n     *  256 - `_.ary`\n     *  512 - `_.flip`\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to be partially applied.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n      var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;\n      if (!isBindKey && typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = partials ? partials.length : 0;\n      if (!length) {\n        bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);\n        partials = holders = undefined;\n      }\n      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);\n      arity = arity === undefined ? arity : toInteger(arity);\n      length -= holders ? holders.length : 0;\n\n      if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {\n        var partialsRight = partials,\n            holdersRight = holders;\n\n        partials = holders = undefined;\n      }\n      var data = isBindKey ? undefined : getData(func);\n\n      var newData = [\n        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,\n        argPos, ary, arity\n      ];\n\n      if (data) {\n        mergeData(newData, data);\n      }\n      func = newData[0];\n      bitmask = newData[1];\n      thisArg = newData[2];\n      partials = newData[3];\n      holders = newData[4];\n      arity = newData[9] = newData[9] === undefined\n        ? (isBindKey ? 0 : func.length)\n        : nativeMax(newData[9] - length, 0);\n\n      if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {\n        bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);\n      }\n      if (!bitmask || bitmask == WRAP_BIND_FLAG) {\n        var result = createBind(func, bitmask, thisArg);\n      } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {\n        result = createCurry(func, bitmask, arity);\n      } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {\n        result = createPartial(func, bitmask, thisArg, partials);\n      } else {\n        result = createHybrid.apply(undefined, newData);\n      }\n      var setter = data ? baseSetData : setData;\n      return setWrapToString(setter(result, newData), func, bitmask);\n    }\n\n    /**\n     * Used by `_.defaults` to customize its `_.assignIn` use to assign properties\n     * of source objects to the destination object for all destination properties\n     * that resolve to `undefined`.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to assign.\n     * @param {Object} object The parent object of `objValue`.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsAssignIn(objValue, srcValue, key, object) {\n      if (objValue === undefined ||\n          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n        return srcValue;\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.defaultsDeep` to customize its `_.merge` use to merge source\n     * objects into destination objects that are passed thru.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to merge.\n     * @param {Object} object The parent object of `objValue`.\n     * @param {Object} source The parent object of `srcValue`.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {\n      if (isObject(objValue) && isObject(srcValue)) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, objValue);\n        baseMerge(objValue, srcValue, undefined, customDefaultsMerge, stack);\n        stack['delete'](srcValue);\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain\n     * objects.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {string} key The key of the property to inspect.\n     * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.\n     */\n    function customOmitClone(value) {\n      return isPlainObject(value) ? undefined : value;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for arrays with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Array} array The array to compare.\n     * @param {Array} other The other array to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `array` and `other` objects.\n     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n     */\n    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          arrLength = array.length,\n          othLength = other.length;\n\n      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(array);\n      if (stacked && stack.get(other)) {\n        return stacked == other;\n      }\n      var index = -1,\n          result = true,\n          seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n      stack.set(array, other);\n      stack.set(other, array);\n\n      // Ignore non-index properties.\n      while (++index < arrLength) {\n        var arrValue = array[index],\n            othValue = other[index];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, arrValue, index, other, array, stack)\n            : customizer(arrValue, othValue, index, array, other, stack);\n        }\n        if (compared !== undefined) {\n          if (compared) {\n            continue;\n          }\n          result = false;\n          break;\n        }\n        // Recursively compare arrays (susceptible to call stack limits).\n        if (seen) {\n          if (!arraySome(other, function(othValue, othIndex) {\n                if (!cacheHas(seen, othIndex) &&\n                    (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n                  return seen.push(othIndex);\n                }\n              })) {\n            result = false;\n            break;\n          }\n        } else if (!(\n              arrValue === othValue ||\n                equalFunc(arrValue, othValue, bitmask, customizer, stack)\n            )) {\n          result = false;\n          break;\n        }\n      }\n      stack['delete'](array);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for comparing objects of\n     * the same `toStringTag`.\n     *\n     * **Note:** This function only supports comparing values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {string} tag The `toStringTag` of the objects to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n      switch (tag) {\n        case dataViewTag:\n          if ((object.byteLength != other.byteLength) ||\n              (object.byteOffset != other.byteOffset)) {\n            return false;\n          }\n          object = object.buffer;\n          other = other.buffer;\n\n        case arrayBufferTag:\n          if ((object.byteLength != other.byteLength) ||\n              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n            return false;\n          }\n          return true;\n\n        case boolTag:\n        case dateTag:\n        case numberTag:\n          // Coerce booleans to `1` or `0` and dates to milliseconds.\n          // Invalid dates are coerced to `NaN`.\n          return eq(+object, +other);\n\n        case errorTag:\n          return object.name == other.name && object.message == other.message;\n\n        case regexpTag:\n        case stringTag:\n          // Coerce regexes to strings and treat strings, primitives and objects,\n          // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n          // for more details.\n          return object == (other + '');\n\n        case mapTag:\n          var convert = mapToArray;\n\n        case setTag:\n          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n          convert || (convert = setToArray);\n\n          if (object.size != other.size && !isPartial) {\n            return false;\n          }\n          // Assume cyclic values are equal.\n          var stacked = stack.get(object);\n          if (stacked) {\n            return stacked == other;\n          }\n          bitmask |= COMPARE_UNORDERED_FLAG;\n\n          // Recursively compare objects (susceptible to call stack limits).\n          stack.set(object, other);\n          var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n          stack['delete'](object);\n          return result;\n\n        case symbolTag:\n          if (symbolValueOf) {\n            return symbolValueOf.call(object) == symbolValueOf.call(other);\n          }\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for objects with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          objProps = getAllKeys(object),\n          objLength = objProps.length,\n          othProps = getAllKeys(other),\n          othLength = othProps.length;\n\n      if (objLength != othLength && !isPartial) {\n        return false;\n      }\n      var index = objLength;\n      while (index--) {\n        var key = objProps[index];\n        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n          return false;\n        }\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked && stack.get(other)) {\n        return stacked == other;\n      }\n      var result = true;\n      stack.set(object, other);\n      stack.set(other, object);\n\n      var skipCtor = isPartial;\n      while (++index < objLength) {\n        key = objProps[index];\n        var objValue = object[key],\n            othValue = other[key];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, objValue, key, other, object, stack)\n            : customizer(objValue, othValue, key, object, other, stack);\n        }\n        // Recursively compare objects (susceptible to call stack limits).\n        if (!(compared === undefined\n              ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n              : compared\n            )) {\n          result = false;\n          break;\n        }\n        skipCtor || (skipCtor = key == 'constructor');\n      }\n      if (result && !skipCtor) {\n        var objCtor = object.constructor,\n            othCtor = other.constructor;\n\n        // Non `Object` object instances with different constructors are not equal.\n        if (objCtor != othCtor &&\n            ('constructor' in object && 'constructor' in other) &&\n            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n          result = false;\n        }\n      }\n      stack['delete'](object);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseRest` which flattens the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    function flatRest(func) {\n      return setToString(overRest(func, undefined, flatten), func + '');\n    }\n\n    /**\n     * Creates an array of own enumerable property names and symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeys(object) {\n      return baseGetAllKeys(object, keys, getSymbols);\n    }\n\n    /**\n     * Creates an array of own and inherited enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeysIn(object) {\n      return baseGetAllKeys(object, keysIn, getSymbolsIn);\n    }\n\n    /**\n     * Gets metadata for `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {*} Returns the metadata for `func`.\n     */\n    var getData = !metaMap ? noop : function(func) {\n      return metaMap.get(func);\n    };\n\n    /**\n     * Gets the name of `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {string} Returns the function name.\n     */\n    function getFuncName(func) {\n      var result = (func.name + ''),\n          array = realNames[result],\n          length = hasOwnProperty.call(realNames, result) ? array.length : 0;\n\n      while (length--) {\n        var data = array[length],\n            otherFunc = data.func;\n        if (otherFunc == null || otherFunc == func) {\n          return data.name;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Gets the argument placeholder value for `func`.\n     *\n     * @private\n     * @param {Function} func The function to inspect.\n     * @returns {*} Returns the placeholder value.\n     */\n    function getHolder(func) {\n      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;\n      return object.placeholder;\n    }\n\n    /**\n     * Gets the appropriate \"iteratee\" function. If `_.iteratee` is customized,\n     * this function returns the custom method, otherwise it returns `baseIteratee`.\n     * If arguments are provided, the chosen function is invoked with them and\n     * its result is returned.\n     *\n     * @private\n     * @param {*} [value] The value to convert to an iteratee.\n     * @param {number} [arity] The arity of the created iteratee.\n     * @returns {Function} Returns the chosen function or its result.\n     */\n    function getIteratee() {\n      var result = lodash.iteratee || iteratee;\n      result = result === iteratee ? baseIteratee : result;\n      return arguments.length ? result(arguments[0], arguments[1]) : result;\n    }\n\n    /**\n     * Gets the data for `map`.\n     *\n     * @private\n     * @param {Object} map The map to query.\n     * @param {string} key The reference key.\n     * @returns {*} Returns the map data.\n     */\n    function getMapData(map, key) {\n      var data = map.__data__;\n      return isKeyable(key)\n        ? data[typeof key == 'string' ? 'string' : 'hash']\n        : data.map;\n    }\n\n    /**\n     * Gets the property names, values, and compare flags of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the match data of `object`.\n     */\n    function getMatchData(object) {\n      var result = keys(object),\n          length = result.length;\n\n      while (length--) {\n        var key = result[length],\n            value = object[key];\n\n        result[length] = [key, value, isStrictComparable(value)];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the native function at `key` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the method to get.\n     * @returns {*} Returns the function if it's native, else `undefined`.\n     */\n    function getNative(object, key) {\n      var value = getValue(object, key);\n      return baseIsNative(value) ? value : undefined;\n    }\n\n    /**\n     * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the raw `toStringTag`.\n     */\n    function getRawTag(value) {\n      var isOwn = hasOwnProperty.call(value, symToStringTag),\n          tag = value[symToStringTag];\n\n      try {\n        value[symToStringTag] = undefined;\n        var unmasked = true;\n      } catch (e) {}\n\n      var result = nativeObjectToString.call(value);\n      if (unmasked) {\n        if (isOwn) {\n          value[symToStringTag] = tag;\n        } else {\n          delete value[symToStringTag];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of the own enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n      if (object == null) {\n        return [];\n      }\n      object = Object(object);\n      return arrayFilter(nativeGetSymbols(object), function(symbol) {\n        return propertyIsEnumerable.call(object, symbol);\n      });\n    };\n\n    /**\n     * Creates an array of the own and inherited enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n      var result = [];\n      while (object) {\n        arrayPush(result, getSymbols(object));\n        object = getPrototype(object);\n      }\n      return result;\n    };\n\n    /**\n     * Gets the `toStringTag` of `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    var getTag = baseGetTag;\n\n    // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\n    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n        (Map && getTag(new Map) != mapTag) ||\n        (Promise && getTag(Promise.resolve()) != promiseTag) ||\n        (Set && getTag(new Set) != setTag) ||\n        (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n      getTag = function(value) {\n        var result = baseGetTag(value),\n            Ctor = result == objectTag ? value.constructor : undefined,\n            ctorString = Ctor ? toSource(Ctor) : '';\n\n        if (ctorString) {\n          switch (ctorString) {\n            case dataViewCtorString: return dataViewTag;\n            case mapCtorString: return mapTag;\n            case promiseCtorString: return promiseTag;\n            case setCtorString: return setTag;\n            case weakMapCtorString: return weakMapTag;\n          }\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n     *\n     * @private\n     * @param {number} start The start of the view.\n     * @param {number} end The end of the view.\n     * @param {Array} transforms The transformations to apply to the view.\n     * @returns {Object} Returns an object containing the `start` and `end`\n     *  positions of the view.\n     */\n    function getView(start, end, transforms) {\n      var index = -1,\n          length = transforms.length;\n\n      while (++index < length) {\n        var data = transforms[index],\n            size = data.size;\n\n        switch (data.type) {\n          case 'drop':      start += size; break;\n          case 'dropRight': end -= size; break;\n          case 'take':      end = nativeMin(end, start + size); break;\n          case 'takeRight': start = nativeMax(start, end - size); break;\n        }\n      }\n      return { 'start': start, 'end': end };\n    }\n\n    /**\n     * Extracts wrapper details from the `source` body comment.\n     *\n     * @private\n     * @param {string} source The source to inspect.\n     * @returns {Array} Returns the wrapper details.\n     */\n    function getWrapDetails(source) {\n      var match = source.match(reWrapDetails);\n      return match ? match[1].split(reSplitDetails) : [];\n    }\n\n    /**\n     * Checks if `path` exists on `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @param {Function} hasFunc The function to check properties.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     */\n    function hasPath(object, path, hasFunc) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          result = false;\n\n      while (++index < length) {\n        var key = toKey(path[index]);\n        if (!(result = object != null && hasFunc(object, key))) {\n          break;\n        }\n        object = object[key];\n      }\n      if (result || ++index != length) {\n        return result;\n      }\n      length = object == null ? 0 : object.length;\n      return !!length && isLength(length) && isIndex(key, length) &&\n        (isArray(object) || isArguments(object));\n    }\n\n    /**\n     * Initializes an array clone.\n     *\n     * @private\n     * @param {Array} array The array to clone.\n     * @returns {Array} Returns the initialized clone.\n     */\n    function initCloneArray(array) {\n      var length = array.length,\n          result = new array.constructor(length);\n\n      // Add properties assigned by `RegExp#exec`.\n      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n        result.index = array.index;\n        result.input = array.input;\n      }\n      return result;\n    }\n\n    /**\n     * Initializes an object clone.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneObject(object) {\n      return (typeof object.constructor == 'function' && !isPrototype(object))\n        ? baseCreate(getPrototype(object))\n        : {};\n    }\n\n    /**\n     * Initializes an object clone based on its `toStringTag`.\n     *\n     * **Note:** This function only supports cloning values with tags of\n     * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @param {string} tag The `toStringTag` of the object to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneByTag(object, tag, isDeep) {\n      var Ctor = object.constructor;\n      switch (tag) {\n        case arrayBufferTag:\n          return cloneArrayBuffer(object);\n\n        case boolTag:\n        case dateTag:\n          return new Ctor(+object);\n\n        case dataViewTag:\n          return cloneDataView(object, isDeep);\n\n        case float32Tag: case float64Tag:\n        case int8Tag: case int16Tag: case int32Tag:\n        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n          return cloneTypedArray(object, isDeep);\n\n        case mapTag:\n          return new Ctor;\n\n        case numberTag:\n        case stringTag:\n          return new Ctor(object);\n\n        case regexpTag:\n          return cloneRegExp(object);\n\n        case setTag:\n          return new Ctor;\n\n        case symbolTag:\n          return cloneSymbol(object);\n      }\n    }\n\n    /**\n     * Inserts wrapper `details` in a comment at the top of the `source` body.\n     *\n     * @private\n     * @param {string} source The source to modify.\n     * @returns {Array} details The details to insert.\n     * @returns {string} Returns the modified source.\n     */\n    function insertWrapDetails(source, details) {\n      var length = details.length;\n      if (!length) {\n        return source;\n      }\n      var lastIndex = length - 1;\n      details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];\n      details = details.join(length > 2 ? ', ' : ' ');\n      return source.replace(reWrapComment, '{\\n/* [wrapped with ' + details + '] */\\n');\n    }\n\n    /**\n     * Checks if `value` is a flattenable `arguments` object or array.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n     */\n    function isFlattenable(value) {\n      return isArray(value) || isArguments(value) ||\n        !!(spreadableSymbol && value && value[spreadableSymbol]);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like index.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n     */\n    function isIndex(value, length) {\n      var type = typeof value;\n      length = length == null ? MAX_SAFE_INTEGER : length;\n\n      return !!length &&\n        (type == 'number' ||\n          (type != 'symbol' && reIsUint.test(value))) &&\n            (value > -1 && value % 1 == 0 && value < length);\n    }\n\n    /**\n     * Checks if the given arguments are from an iteratee call.\n     *\n     * @private\n     * @param {*} value The potential iteratee value argument.\n     * @param {*} index The potential iteratee index or key argument.\n     * @param {*} object The potential iteratee object argument.\n     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n     *  else `false`.\n     */\n    function isIterateeCall(value, index, object) {\n      if (!isObject(object)) {\n        return false;\n      }\n      var type = typeof index;\n      if (type == 'number'\n            ? (isArrayLike(object) && isIndex(index, object.length))\n            : (type == 'string' && index in object)\n          ) {\n        return eq(object[index], value);\n      }\n      return false;\n    }\n\n    /**\n     * Checks if `value` is a property name and not a property path.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n     */\n    function isKey(value, object) {\n      if (isArray(value)) {\n        return false;\n      }\n      var type = typeof value;\n      if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n          value == null || isSymbol(value)) {\n        return true;\n      }\n      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n        (object != null && value in Object(object));\n    }\n\n    /**\n     * Checks if `value` is suitable for use as unique object key.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n     */\n    function isKeyable(value) {\n      var type = typeof value;\n      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n        ? (value !== '__proto__')\n        : (value === null);\n    }\n\n    /**\n     * Checks if `func` has a lazy counterpart.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,\n     *  else `false`.\n     */\n    function isLaziable(func) {\n      var funcName = getFuncName(func),\n          other = lodash[funcName];\n\n      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {\n        return false;\n      }\n      if (func === other) {\n        return true;\n      }\n      var data = getData(other);\n      return !!data && func === data[0];\n    }\n\n    /**\n     * Checks if `func` has its source masked.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n     */\n    function isMasked(func) {\n      return !!maskSrcKey && (maskSrcKey in func);\n    }\n\n    /**\n     * Checks if `func` is capable of being masked.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.\n     */\n    var isMaskable = coreJsData ? isFunction : stubFalse;\n\n    /**\n     * Checks if `value` is likely a prototype object.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n     */\n    function isPrototype(value) {\n      var Ctor = value && value.constructor,\n          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n      return value === proto;\n    }\n\n    /**\n     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` if suitable for strict\n     *  equality comparisons, else `false`.\n     */\n    function isStrictComparable(value) {\n      return value === value && !isObject(value);\n    }\n\n    /**\n     * A specialized version of `matchesProperty` for source values suitable\n     * for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function matchesStrictComparable(key, srcValue) {\n      return function(object) {\n        if (object == null) {\n          return false;\n        }\n        return object[key] === srcValue &&\n          (srcValue !== undefined || (key in Object(object)));\n      };\n    }\n\n    /**\n     * A specialized version of `_.memoize` which clears the memoized function's\n     * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n     *\n     * @private\n     * @param {Function} func The function to have its output memoized.\n     * @returns {Function} Returns the new memoized function.\n     */\n    function memoizeCapped(func) {\n      var result = memoize(func, function(key) {\n        if (cache.size === MAX_MEMOIZE_SIZE) {\n          cache.clear();\n        }\n        return key;\n      });\n\n      var cache = result.cache;\n      return result;\n    }\n\n    /**\n     * Merges the function metadata of `source` into `data`.\n     *\n     * Merging metadata reduces the number of wrappers used to invoke a function.\n     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n     * may be applied regardless of execution order. Methods like `_.ary` and\n     * `_.rearg` modify function arguments, making the order in which they are\n     * executed important, preventing the merging of metadata. However, we make\n     * an exception for a safe combined case where curried functions have `_.ary`\n     * and or `_.rearg` applied.\n     *\n     * @private\n     * @param {Array} data The destination metadata.\n     * @param {Array} source The source metadata.\n     * @returns {Array} Returns `data`.\n     */\n    function mergeData(data, source) {\n      var bitmask = data[1],\n          srcBitmask = source[1],\n          newBitmask = bitmask | srcBitmask,\n          isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);\n\n      var isCombo =\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_CURRY_FLAG)) ||\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||\n        ((srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG));\n\n      // Exit early if metadata can't be merged.\n      if (!(isCommon || isCombo)) {\n        return data;\n      }\n      // Use source `thisArg` if available.\n      if (srcBitmask & WRAP_BIND_FLAG) {\n        data[2] = source[2];\n        // Set when currying a bound function.\n        newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;\n      }\n      // Compose partial arguments.\n      var value = source[3];\n      if (value) {\n        var partials = data[3];\n        data[3] = partials ? composeArgs(partials, value, source[4]) : value;\n        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];\n      }\n      // Compose partial right arguments.\n      value = source[5];\n      if (value) {\n        partials = data[5];\n        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;\n        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];\n      }\n      // Use source `argPos` if available.\n      value = source[7];\n      if (value) {\n        data[7] = value;\n      }\n      // Use source `ary` if it's smaller.\n      if (srcBitmask & WRAP_ARY_FLAG) {\n        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n      }\n      // Use source `arity` if one is not provided.\n      if (data[9] == null) {\n        data[9] = source[9];\n      }\n      // Use source `func` and merge bitmasks.\n      data[0] = source[0];\n      data[1] = newBitmask;\n\n      return data;\n    }\n\n    /**\n     * This function is like\n     * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * except that it includes inherited enumerable properties.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function nativeKeysIn(object) {\n      var result = [];\n      if (object != null) {\n        for (var key in Object(object)) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a string using `Object.prototype.toString`.\n     *\n     * @private\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     */\n    function objectToString(value) {\n      return nativeObjectToString.call(value);\n    }\n\n    /**\n     * A specialized version of `baseRest` which transforms the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @param {Function} transform The rest array transform.\n     * @returns {Function} Returns the new function.\n     */\n    function overRest(func, start, transform) {\n      start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n      return function() {\n        var args = arguments,\n            index = -1,\n            length = nativeMax(args.length - start, 0),\n            array = Array(length);\n\n        while (++index < length) {\n          array[index] = args[start + index];\n        }\n        index = -1;\n        var otherArgs = Array(start + 1);\n        while (++index < start) {\n          otherArgs[index] = args[index];\n        }\n        otherArgs[start] = transform(array);\n        return apply(func, this, otherArgs);\n      };\n    }\n\n    /**\n     * Gets the parent value at `path` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} path The path to get the parent value of.\n     * @returns {*} Returns the parent value.\n     */\n    function parent(object, path) {\n      return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));\n    }\n\n    /**\n     * Reorder `array` according to the specified indexes where the element at\n     * the first index is assigned as the first element, the element at\n     * the second index is assigned as the second element, and so on.\n     *\n     * @private\n     * @param {Array} array The array to reorder.\n     * @param {Array} indexes The arranged array indexes.\n     * @returns {Array} Returns `array`.\n     */\n    function reorder(array, indexes) {\n      var arrLength = array.length,\n          length = nativeMin(indexes.length, arrLength),\n          oldArray = copyArray(array);\n\n      while (length--) {\n        var index = indexes[length];\n        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n      }\n      return array;\n    }\n\n    /**\n     * Sets metadata for `func`.\n     *\n     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n     * period of time, it will trip its breaker and transition to an identity\n     * function to avoid garbage collection pauses in V8. See\n     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)\n     * for more details.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var setData = shortOut(baseSetData);\n\n    /**\n     * A simple wrapper around the global [`setTimeout`](https://mdn.io/setTimeout).\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    var setTimeout = ctxSetTimeout || function(func, wait) {\n      return root.setTimeout(func, wait);\n    };\n\n    /**\n     * Sets the `toString` method of `func` to return `string`.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var setToString = shortOut(baseSetToString);\n\n    /**\n     * Sets the `toString` method of `wrapper` to mimic the source of `reference`\n     * with wrapper details in a comment at the top of the source body.\n     *\n     * @private\n     * @param {Function} wrapper The function to modify.\n     * @param {Function} reference The reference function.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Function} Returns `wrapper`.\n     */\n    function setWrapToString(wrapper, reference, bitmask) {\n      var source = (reference + '');\n      return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));\n    }\n\n    /**\n     * Creates a function that'll short out and invoke `identity` instead\n     * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n     * milliseconds.\n     *\n     * @private\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new shortable function.\n     */\n    function shortOut(func) {\n      var count = 0,\n          lastCalled = 0;\n\n      return function() {\n        var stamp = nativeNow(),\n            remaining = HOT_SPAN - (stamp - lastCalled);\n\n        lastCalled = stamp;\n        if (remaining > 0) {\n          if (++count >= HOT_COUNT) {\n            return arguments[0];\n          }\n        } else {\n          count = 0;\n        }\n        return func.apply(undefined, arguments);\n      };\n    }\n\n    /**\n     * A specialized version of `_.shuffle` which mutates and sets the size of `array`.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @param {number} [size=array.length] The size of `array`.\n     * @returns {Array} Returns `array`.\n     */\n    function shuffleSelf(array, size) {\n      var index = -1,\n          length = array.length,\n          lastIndex = length - 1;\n\n      size = size === undefined ? length : size;\n      while (++index < size) {\n        var rand = baseRandom(index, lastIndex),\n            value = array[rand];\n\n        array[rand] = array[index];\n        array[index] = value;\n      }\n      array.length = size;\n      return array;\n    }\n\n    /**\n     * Converts `string` to a property path array.\n     *\n     * @private\n     * @param {string} string The string to convert.\n     * @returns {Array} Returns the property path array.\n     */\n    var stringToPath = memoizeCapped(function(string) {\n      var result = [];\n      if (string.charCodeAt(0) === 46 /* . */) {\n        result.push('');\n      }\n      string.replace(rePropName, function(match, number, quote, subString) {\n        result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));\n      });\n      return result;\n    });\n\n    /**\n     * Converts `value` to a string key if it's not a string or symbol.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {string|symbol} Returns the key.\n     */\n    function toKey(value) {\n      if (typeof value == 'string' || isSymbol(value)) {\n        return value;\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * Converts `func` to its source code.\n     *\n     * @private\n     * @param {Function} func The function to convert.\n     * @returns {string} Returns the source code.\n     */\n    function toSource(func) {\n      if (func != null) {\n        try {\n          return funcToString.call(func);\n        } catch (e) {}\n        try {\n          return (func + '');\n        } catch (e) {}\n      }\n      return '';\n    }\n\n    /**\n     * Updates wrapper `details` based on `bitmask` flags.\n     *\n     * @private\n     * @returns {Array} details The details to modify.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Array} Returns `details`.\n     */\n    function updateWrapDetails(details, bitmask) {\n      arrayEach(wrapFlags, function(pair) {\n        var value = '_.' + pair[0];\n        if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {\n          details.push(value);\n        }\n      });\n      return details.sort();\n    }\n\n    /**\n     * Creates a clone of `wrapper`.\n     *\n     * @private\n     * @param {Object} wrapper The wrapper to clone.\n     * @returns {Object} Returns the cloned wrapper.\n     */\n    function wrapperClone(wrapper) {\n      if (wrapper instanceof LazyWrapper) {\n        return wrapper.clone();\n      }\n      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);\n      result.__actions__ = copyArray(wrapper.__actions__);\n      result.__index__  = wrapper.__index__;\n      result.__values__ = wrapper.__values__;\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements split into groups the length of `size`.\n     * If `array` can't be split evenly, the final chunk will be the remaining\n     * elements.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to process.\n     * @param {number} [size=1] The length of each chunk\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the new array of chunks.\n     * @example\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 2);\n     * // => [['a', 'b'], ['c', 'd']]\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 3);\n     * // => [['a', 'b', 'c'], ['d']]\n     */\n    function chunk(array, size, guard) {\n      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {\n        size = 1;\n      } else {\n        size = nativeMax(toInteger(size), 0);\n      }\n      var length = array == null ? 0 : array.length;\n      if (!length || size < 1) {\n        return [];\n      }\n      var index = 0,\n          resIndex = 0,\n          result = Array(nativeCeil(length / size));\n\n      while (index < length) {\n        result[resIndex++] = baseSlice(array, index, (index += size));\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array with all falsey values removed. The values `false`, `null`,\n     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to compact.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.compact([0, 1, false, 2, '', 3]);\n     * // => [1, 2, 3]\n     */\n    function compact(array) {\n      var index = -1,\n          length = array == null ? 0 : array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (value) {\n          result[resIndex++] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates a new array concatenating `array` with any additional arrays\n     * and/or values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to concatenate.\n     * @param {...*} [values] The values to concatenate.\n     * @returns {Array} Returns the new concatenated array.\n     * @example\n     *\n     * var array = [1];\n     * var other = _.concat(array, 2, [3], [[4]]);\n     *\n     * console.log(other);\n     * // => [1, 2, 3, [4]]\n     *\n     * console.log(array);\n     * // => [1]\n     */\n    function concat() {\n      var length = arguments.length;\n      if (!length) {\n        return [];\n      }\n      var args = Array(length - 1),\n          array = arguments[0],\n          index = length;\n\n      while (index--) {\n        args[index - 1] = arguments[index];\n      }\n      return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));\n    }\n\n    /**\n     * Creates an array of `array` values not included in the other given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * **Note:** Unlike `_.pullAll`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.without, _.xor\n     * @example\n     *\n     * _.difference([2, 1], [2, 3]);\n     * // => [1]\n     */\n    var difference = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `iteratee` which\n     * is invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var differenceBy = baseRest(function(array, values) {\n      var iteratee = last(values);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `comparator`\n     * which is invoked to compare elements of `array` to `values`. The order and\n     * references of result values are determined by the first array. The comparator\n     * is invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     *\n     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }]\n     */\n    var differenceWith = baseRest(function(array, values) {\n      var comparator = last(values);\n      if (isArrayLikeObject(comparator)) {\n        comparator = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.drop([1, 2, 3]);\n     * // => [2, 3]\n     *\n     * _.drop([1, 2, 3], 2);\n     * // => [3]\n     *\n     * _.drop([1, 2, 3], 5);\n     * // => []\n     *\n     * _.drop([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function drop(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRight([1, 2, 3]);\n     * // => [1, 2]\n     *\n     * _.dropRight([1, 2, 3], 2);\n     * // => [1]\n     *\n     * _.dropRight([1, 2, 3], 5);\n     * // => []\n     *\n     * _.dropRight([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function dropRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the end.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.dropRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropRightWhile(users, ['active', false]);\n     * // => objects for ['barney']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropRightWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the beginning.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.dropWhile(users, function(o) { return !o.active; });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropWhile(users, ['active', false]);\n     * // => objects for ['pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true)\n        : [];\n    }\n\n    /**\n     * Fills elements of `array` with `value` from `start` up to, but not\n     * including, `end`.\n     *\n     * **Note:** This method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Array\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.fill(array, 'a');\n     * console.log(array);\n     * // => ['a', 'a', 'a']\n     *\n     * _.fill(Array(3), 2);\n     * // => [2, 2, 2]\n     *\n     * _.fill([4, 6, 8, 10], '*', 1, 3);\n     * // => [4, '*', '*', 10]\n     */\n    function fill(array, value, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n        start = 0;\n        end = length;\n      }\n      return baseFill(array, value, start, end);\n    }\n\n    /**\n     * This method is like `_.find` except that it returns the index of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.findIndex(users, function(o) { return o.user == 'barney'; });\n     * // => 0\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findIndex(users, { 'user': 'fred', 'active': false });\n     * // => 1\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findIndex(users, ['active', false]);\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findIndex(users, 'active');\n     * // => 2\n     */\n    function findIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index);\n    }\n\n    /**\n     * This method is like `_.findIndex` except that it iterates over elements\n     * of `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\n     * // => 2\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n     * // => 0\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastIndex(users, ['active', false]);\n     * // => 2\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastIndex(users, 'active');\n     * // => 0\n     */\n    function findLastIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length - 1;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = fromIndex < 0\n          ? nativeMax(length + index, 0)\n          : nativeMin(index, length - 1);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index, true);\n    }\n\n    /**\n     * Flattens `array` a single level deep.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flatten([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, [3, [4]], 5]\n     */\n    function flatten(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, 1) : [];\n    }\n\n    /**\n     * Recursively flattens `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flattenDeep([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, 3, 4, 5]\n     */\n    function flattenDeep(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, INFINITY) : [];\n    }\n\n    /**\n     * Recursively flatten `array` up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * var array = [1, [2, [3, [4]], 5]];\n     *\n     * _.flattenDepth(array, 1);\n     * // => [1, 2, [3, [4]], 5]\n     *\n     * _.flattenDepth(array, 2);\n     * // => [1, 2, 3, [4], 5]\n     */\n    function flattenDepth(array, depth) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(array, depth);\n    }\n\n    /**\n     * The inverse of `_.toPairs`; this method returns an object composed\n     * from key-value `pairs`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} pairs The key-value pairs.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.fromPairs([['a', 1], ['b', 2]]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function fromPairs(pairs) {\n      var index = -1,\n          length = pairs == null ? 0 : pairs.length,\n          result = {};\n\n      while (++index < length) {\n        var pair = pairs[index];\n        result[pair[0]] = pair[1];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias first\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the first element of `array`.\n     * @example\n     *\n     * _.head([1, 2, 3]);\n     * // => 1\n     *\n     * _.head([]);\n     * // => undefined\n     */\n    function head(array) {\n      return (array && array.length) ? array[0] : undefined;\n    }\n\n    /**\n     * Gets the index at which the first occurrence of `value` is found in `array`\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it's used as the\n     * offset from the end of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.indexOf([1, 2, 1, 2], 2);\n     * // => 1\n     *\n     * // Search from the `fromIndex`.\n     * _.indexOf([1, 2, 1, 2], 2, 2);\n     * // => 3\n     */\n    function indexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseIndexOf(array, value, index);\n    }\n\n    /**\n     * Gets all but the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.initial([1, 2, 3]);\n     * // => [1, 2]\n     */\n    function initial(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 0, -1) : [];\n    }\n\n    /**\n     * Creates an array of unique values that are included in all given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersection([2, 1], [2, 3]);\n     * // => [2]\n     */\n    var intersection = baseRest(function(arrays) {\n      var mapped = arrayMap(arrays, castArrayLikeObject);\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped)\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `iteratee`\n     * which is invoked for each element of each `arrays` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [2.1]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }]\n     */\n    var intersectionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      if (iteratee === last(mapped)) {\n        iteratee = undefined;\n      } else {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `comparator`\n     * which is invoked to compare elements of `arrays`. The order and references\n     * of result values are determined by the first array. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.intersectionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }]\n     */\n    var intersectionWith = baseRest(function(arrays) {\n      var comparator = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      if (comparator) {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Converts all elements in `array` into a string separated by `separator`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to convert.\n     * @param {string} [separator=','] The element separator.\n     * @returns {string} Returns the joined string.\n     * @example\n     *\n     * _.join(['a', 'b', 'c'], '~');\n     * // => 'a~b~c'\n     */\n    function join(array, separator) {\n      return array == null ? '' : nativeJoin.call(array, separator);\n    }\n\n    /**\n     * Gets the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the last element of `array`.\n     * @example\n     *\n     * _.last([1, 2, 3]);\n     * // => 3\n     */\n    function last(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? array[length - 1] : undefined;\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it iterates over elements of\n     * `array` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.lastIndexOf([1, 2, 1, 2], 2);\n     * // => 3\n     *\n     * // Search from the `fromIndex`.\n     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n     * // => 1\n     */\n    function lastIndexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);\n      }\n      return value === value\n        ? strictLastIndexOf(array, value, index)\n        : baseFindIndex(array, baseIsNaN, index, true);\n    }\n\n    /**\n     * Gets the element at index `n` of `array`. If `n` is negative, the nth\n     * element from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.11.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=0] The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     *\n     * _.nth(array, 1);\n     * // => 'b'\n     *\n     * _.nth(array, -2);\n     * // => 'c';\n     */\n    function nth(array, n) {\n      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;\n    }\n\n    /**\n     * Removes all given values from `array` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`\n     * to remove elements from an array by predicate.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...*} [values] The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pull(array, 'a', 'c');\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    var pull = baseRest(pullAll);\n\n    /**\n     * This method is like `_.pull` except that it accepts an array of values to remove.\n     *\n     * **Note:** Unlike `_.difference`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pullAll(array, ['a', 'c']);\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    function pullAll(array, values) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values)\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `iteratee` which is\n     * invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The iteratee is invoked with one argument: (value).\n     *\n     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];\n     *\n     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');\n     * console.log(array);\n     * // => [{ 'x': 2 }]\n     */\n    function pullAllBy(array, values, iteratee) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, getIteratee(iteratee, 2))\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `comparator` which\n     * is invoked to compare elements of `array` to `values`. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];\n     *\n     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);\n     * console.log(array);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]\n     */\n    function pullAllWith(array, values, comparator) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, undefined, comparator)\n        : array;\n    }\n\n    /**\n     * Removes elements from `array` corresponding to `indexes` and returns an\n     * array of removed elements.\n     *\n     * **Note:** Unlike `_.at`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...(number|number[])} [indexes] The indexes of elements to remove.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     * var pulled = _.pullAt(array, [1, 3]);\n     *\n     * console.log(array);\n     * // => ['a', 'c']\n     *\n     * console.log(pulled);\n     * // => ['b', 'd']\n     */\n    var pullAt = flatRest(function(array, indexes) {\n      var length = array == null ? 0 : array.length,\n          result = baseAt(array, indexes);\n\n      basePullAt(array, arrayMap(indexes, function(index) {\n        return isIndex(index, length) ? +index : index;\n      }).sort(compareAscending));\n\n      return result;\n    });\n\n    /**\n     * Removes all elements from `array` that `predicate` returns truthy for\n     * and returns an array of the removed elements. The predicate is invoked\n     * with three arguments: (value, index, array).\n     *\n     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`\n     * to pull elements from an array by value.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [1, 2, 3, 4];\n     * var evens = _.remove(array, function(n) {\n     *   return n % 2 == 0;\n     * });\n     *\n     * console.log(array);\n     * // => [1, 3]\n     *\n     * console.log(evens);\n     * // => [2, 4]\n     */\n    function remove(array, predicate) {\n      var result = [];\n      if (!(array && array.length)) {\n        return result;\n      }\n      var index = -1,\n          indexes = [],\n          length = array.length;\n\n      predicate = getIteratee(predicate, 3);\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result.push(value);\n          indexes.push(index);\n        }\n      }\n      basePullAt(array, indexes);\n      return result;\n    }\n\n    /**\n     * Reverses `array` so that the first element becomes the last, the second\n     * element becomes the second to last, and so on.\n     *\n     * **Note:** This method mutates `array` and is based on\n     * [`Array#reverse`](https://mdn.io/Array/reverse).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.reverse(array);\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function reverse(array) {\n      return array == null ? array : nativeReverse.call(array);\n    }\n\n    /**\n     * Creates a slice of `array` from `start` up to, but not including, `end`.\n     *\n     * **Note:** This method is used instead of\n     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are\n     * returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function slice(array, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n        start = 0;\n        end = length;\n      }\n      else {\n        start = start == null ? 0 : toInteger(start);\n        end = end === undefined ? length : toInteger(end);\n      }\n      return baseSlice(array, start, end);\n    }\n\n    /**\n     * Uses a binary search to determine the lowest index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedIndex([30, 50], 40);\n     * // => 1\n     */\n    function sortedIndex(array, value) {\n      return baseSortedIndex(array, value);\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 0\n     */\n    function sortedIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 1\n     */\n    function sortedIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value);\n        if (index < length && eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it returns the highest\n     * index at which `value` should be inserted into `array` in order to\n     * maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);\n     * // => 4\n     */\n    function sortedLastIndex(array, value) {\n      return baseSortedIndex(array, value, true);\n    }\n\n    /**\n     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 1\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 1\n     */\n    function sortedLastIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);\n    }\n\n    /**\n     * This method is like `_.lastIndexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 3\n     */\n    function sortedLastIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value, true) - 1;\n        if (eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.uniq` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniq([1, 1, 2]);\n     * // => [1, 2]\n     */\n    function sortedUniq(array) {\n      return (array && array.length)\n        ? baseSortedUniq(array)\n        : [];\n    }\n\n    /**\n     * This method is like `_.uniqBy` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);\n     * // => [1.1, 2.3]\n     */\n    function sortedUniqBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSortedUniq(array, getIteratee(iteratee, 2))\n        : [];\n    }\n\n    /**\n     * Gets all but the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.tail([1, 2, 3]);\n     * // => [2, 3]\n     */\n    function tail(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 1, length) : [];\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.take([1, 2, 3]);\n     * // => [1]\n     *\n     * _.take([1, 2, 3], 2);\n     * // => [1, 2]\n     *\n     * _.take([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.take([1, 2, 3], 0);\n     * // => []\n     */\n    function take(array, n, guard) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRight([1, 2, 3]);\n     * // => [3]\n     *\n     * _.takeRight([1, 2, 3], 2);\n     * // => [2, 3]\n     *\n     * _.takeRight([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.takeRight([1, 2, 3], 0);\n     * // => []\n     */\n    function takeRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the end. Elements are\n     * taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.takeRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeRightWhile(users, ['active', false]);\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeRightWhile(users, 'active');\n     * // => []\n     */\n    function takeRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), false, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the beginning. Elements\n     * are taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.takeWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeWhile(users, ['active', false]);\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeWhile(users, 'active');\n     * // => []\n     */\n    function takeWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3))\n        : [];\n    }\n\n    /**\n     * Creates an array of unique values, in order, from all given arrays using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.union([2], [1, 2]);\n     * // => [2, 1]\n     */\n    var union = baseRest(function(arrays) {\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which uniqueness is computed. Result values are chosen from the first\n     * array in which the value occurs. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.unionBy([2.1], [1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    var unionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `comparator` which\n     * is invoked to compare elements of `arrays`. Result values are chosen from\n     * the first array in which the value occurs. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.unionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var unionWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);\n    });\n\n    /**\n     * Creates a duplicate-free version of an array, using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons, in which only the first occurrence of each element\n     * is kept. The order of result values is determined by the order they occur\n     * in the array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniq([2, 1, 2]);\n     * // => [2, 1]\n     */\n    function uniq(array) {\n      return (array && array.length) ? baseUniq(array) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * uniqueness is computed. The order of result values is determined by the\n     * order they occur in the array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    function uniqBy(array, iteratee) {\n      return (array && array.length) ? baseUniq(array, getIteratee(iteratee, 2)) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `comparator` which\n     * is invoked to compare elements of `array`. The order of result values is\n     * determined by the order they occur in the array.The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.uniqWith(objects, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]\n     */\n    function uniqWith(array, comparator) {\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return (array && array.length) ? baseUniq(array, undefined, comparator) : [];\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an array of grouped\n     * elements and creates an array regrouping the elements to their pre-zip\n     * configuration.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.2.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     *\n     * _.unzip(zipped);\n     * // => [['a', 'b'], [1, 2], [true, false]]\n     */\n    function unzip(array) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var length = 0;\n      array = arrayFilter(array, function(group) {\n        if (isArrayLikeObject(group)) {\n          length = nativeMax(group.length, length);\n          return true;\n        }\n      });\n      return baseTimes(length, function(index) {\n        return arrayMap(array, baseProperty(index));\n      });\n    }\n\n    /**\n     * This method is like `_.unzip` except that it accepts `iteratee` to specify\n     * how regrouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  regrouped values.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n     * // => [[1, 10, 100], [2, 20, 200]]\n     *\n     * _.unzipWith(zipped, _.add);\n     * // => [3, 30, 300]\n     */\n    function unzipWith(array, iteratee) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var result = unzip(array);\n      if (iteratee == null) {\n        return result;\n      }\n      return arrayMap(result, function(group) {\n        return apply(iteratee, undefined, group);\n      });\n    }\n\n    /**\n     * Creates an array excluding all given values using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.pull`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...*} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.xor\n     * @example\n     *\n     * _.without([2, 1, 2, 3], 1, 2);\n     * // => [3]\n     */\n    var without = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, values)\n        : [];\n    });\n\n    /**\n     * Creates an array of unique values that is the\n     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n     * of the given arrays. The order of result values is determined by the order\n     * they occur in the arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.without\n     * @example\n     *\n     * _.xor([2, 1], [2, 3]);\n     * // => [1, 3]\n     */\n    var xor = baseRest(function(arrays) {\n      return baseXor(arrayFilter(arrays, isArrayLikeObject));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which by which they're compared. The order of result values is determined\n     * by the order they occur in the arrays. The iteratee is invoked with one\n     * argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2, 3.4]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var xorBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `comparator` which is\n     * invoked to compare elements of `arrays`. The order of result values is\n     * determined by the order they occur in the arrays. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.xorWith(objects, others, _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var xorWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);\n    });\n\n    /**\n     * Creates an array of grouped elements, the first of which contains the\n     * first elements of the given arrays, the second of which contains the\n     * second elements of the given arrays, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     */\n    var zip = baseRest(unzip);\n\n    /**\n     * This method is like `_.fromPairs` except that it accepts two arrays,\n     * one of property identifiers and one of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.4.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObject(['a', 'b'], [1, 2]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function zipObject(props, values) {\n      return baseZipObject(props || [], values || [], assignValue);\n    }\n\n    /**\n     * This method is like `_.zipObject` except that it supports property paths.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);\n     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }\n     */\n    function zipObjectDeep(props, values) {\n      return baseZipObject(props || [], values || [], baseSet);\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts `iteratee` to specify\n     * how grouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  grouped values.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {\n     *   return a + b + c;\n     * });\n     * // => [111, 222]\n     */\n    var zipWith = baseRest(function(arrays) {\n      var length = arrays.length,\n          iteratee = length > 1 ? arrays[length - 1] : undefined;\n\n      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;\n      return unzipWith(arrays, iteratee);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` wrapper instance that wraps `value` with explicit method\n     * chain sequences enabled. The result of such sequences must be unwrapped\n     * with `_#value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Seq\n     * @param {*} value The value to wrap.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36 },\n     *   { 'user': 'fred',    'age': 40 },\n     *   { 'user': 'pebbles', 'age': 1 }\n     * ];\n     *\n     * var youngest = _\n     *   .chain(users)\n     *   .sortBy('age')\n     *   .map(function(o) {\n     *     return o.user + ' is ' + o.age;\n     *   })\n     *   .head()\n     *   .value();\n     * // => 'pebbles is 1'\n     */\n    function chain(value) {\n      var result = lodash(value);\n      result.__chain__ = true;\n      return result;\n    }\n\n    /**\n     * This method invokes `interceptor` and returns `value`. The interceptor\n     * is invoked with one argument; (value). The purpose of this method is to\n     * \"tap into\" a method chain sequence in order to modify intermediate results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * _([1, 2, 3])\n     *  .tap(function(array) {\n     *    // Mutate input array.\n     *    array.pop();\n     *  })\n     *  .reverse()\n     *  .value();\n     * // => [2, 1]\n     */\n    function tap(value, interceptor) {\n      interceptor(value);\n      return value;\n    }\n\n    /**\n     * This method is like `_.tap` except that it returns the result of `interceptor`.\n     * The purpose of this method is to \"pass thru\" values replacing intermediate\n     * results in a method chain sequence.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns the result of `interceptor`.\n     * @example\n     *\n     * _('  abc  ')\n     *  .chain()\n     *  .trim()\n     *  .thru(function(value) {\n     *    return [value];\n     *  })\n     *  .value();\n     * // => ['abc']\n     */\n    function thru(value, interceptor) {\n      return interceptor(value);\n    }\n\n    /**\n     * This method is the wrapper version of `_.at`.\n     *\n     * @name at\n     * @memberOf _\n     * @since 1.0.0\n     * @category Seq\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _(object).at(['a[0].b.c', 'a[1]']).value();\n     * // => [3, 4]\n     */\n    var wrapperAt = flatRest(function(paths) {\n      var length = paths.length,\n          start = length ? paths[0] : 0,\n          value = this.__wrapped__,\n          interceptor = function(object) { return baseAt(object, paths); };\n\n      if (length > 1 || this.__actions__.length ||\n          !(value instanceof LazyWrapper) || !isIndex(start)) {\n        return this.thru(interceptor);\n      }\n      value = value.slice(start, +start + (length ? 1 : 0));\n      value.__actions__.push({\n        'func': thru,\n        'args': [interceptor],\n        'thisArg': undefined\n      });\n      return new LodashWrapper(value, this.__chain__).thru(function(array) {\n        if (length && !array.length) {\n          array.push(undefined);\n        }\n        return array;\n      });\n    });\n\n    /**\n     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.\n     *\n     * @name chain\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // A sequence without explicit chaining.\n     * _(users).head();\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // A sequence with explicit chaining.\n     * _(users)\n     *   .chain()\n     *   .head()\n     *   .pick('user')\n     *   .value();\n     * // => { 'user': 'barney' }\n     */\n    function wrapperChain() {\n      return chain(this);\n    }\n\n    /**\n     * Executes the chain sequence and returns the wrapped result.\n     *\n     * @name commit\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).push(3);\n     *\n     * console.log(array);\n     * // => [1, 2]\n     *\n     * wrapped = wrapped.commit();\n     * console.log(array);\n     * // => [1, 2, 3]\n     *\n     * wrapped.last();\n     * // => 3\n     *\n     * console.log(array);\n     * // => [1, 2, 3]\n     */\n    function wrapperCommit() {\n      return new LodashWrapper(this.value(), this.__chain__);\n    }\n\n    /**\n     * Gets the next value on a wrapped object following the\n     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).\n     *\n     * @name next\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the next iterator value.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 1 }\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 2 }\n     *\n     * wrapped.next();\n     * // => { 'done': true, 'value': undefined }\n     */\n    function wrapperNext() {\n      if (this.__values__ === undefined) {\n        this.__values__ = toArray(this.value());\n      }\n      var done = this.__index__ >= this.__values__.length,\n          value = done ? undefined : this.__values__[this.__index__++];\n\n      return { 'done': done, 'value': value };\n    }\n\n    /**\n     * Enables the wrapper to be iterable.\n     *\n     * @name Symbol.iterator\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the wrapper object.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped[Symbol.iterator]() === wrapped;\n     * // => true\n     *\n     * Array.from(wrapped);\n     * // => [1, 2]\n     */\n    function wrapperToIterator() {\n      return this;\n    }\n\n    /**\n     * Creates a clone of the chain sequence planting `value` as the wrapped value.\n     *\n     * @name plant\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @param {*} value The value to plant.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2]).map(square);\n     * var other = wrapped.plant([3, 4]);\n     *\n     * other.value();\n     * // => [9, 16]\n     *\n     * wrapped.value();\n     * // => [1, 4]\n     */\n    function wrapperPlant(value) {\n      var result,\n          parent = this;\n\n      while (parent instanceof baseLodash) {\n        var clone = wrapperClone(parent);\n        clone.__index__ = 0;\n        clone.__values__ = undefined;\n        if (result) {\n          previous.__wrapped__ = clone;\n        } else {\n          result = clone;\n        }\n        var previous = clone;\n        parent = parent.__wrapped__;\n      }\n      previous.__wrapped__ = value;\n      return result;\n    }\n\n    /**\n     * This method is the wrapper version of `_.reverse`.\n     *\n     * **Note:** This method mutates the wrapped array.\n     *\n     * @name reverse\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _(array).reverse().value()\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function wrapperReverse() {\n      var value = this.__wrapped__;\n      if (value instanceof LazyWrapper) {\n        var wrapped = value;\n        if (this.__actions__.length) {\n          wrapped = new LazyWrapper(this);\n        }\n        wrapped = wrapped.reverse();\n        wrapped.__actions__.push({\n          'func': thru,\n          'args': [reverse],\n          'thisArg': undefined\n        });\n        return new LodashWrapper(wrapped, this.__chain__);\n      }\n      return this.thru(reverse);\n    }\n\n    /**\n     * Executes the chain sequence to resolve the unwrapped value.\n     *\n     * @name value\n     * @memberOf _\n     * @since 0.1.0\n     * @alias toJSON, valueOf\n     * @category Seq\n     * @returns {*} Returns the resolved unwrapped value.\n     * @example\n     *\n     * _([1, 2, 3]).value();\n     * // => [1, 2, 3]\n     */\n    function wrapperValue() {\n      return baseWrapperValue(this.__wrapped__, this.__actions__);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the number of times the key was returned by `iteratee`. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.countBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': 1, '6': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.countBy(['one', 'two', 'three'], 'length');\n     * // => { '3': 2, '5': 1 }\n     */\n    var countBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        ++result[key];\n      } else {\n        baseAssignValue(result, key, 1);\n      }\n    });\n\n    /**\n     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n     * Iteration is stopped once `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * **Note:** This method returns `true` for\n     * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because\n     * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of\n     * elements of empty collections.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.every([true, 1, null, 'yes'], Boolean);\n     * // => false\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.every(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.every(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.every(users, 'active');\n     * // => false\n     */\n    function every(collection, predicate, guard) {\n      var func = isArray(collection) ? arrayEvery : baseEvery;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning an array of all elements\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * **Note:** Unlike `_.remove`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.reject\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.filter(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, { 'age': 36, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.filter(users, 'active');\n     * // => objects for ['barney']\n     */\n    function filter(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning the first element\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': true },\n     *   { 'user': 'fred',    'age': 40, 'active': false },\n     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n     * ];\n     *\n     * _.find(users, function(o) { return o.age < 40; });\n     * // => object for 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.find(users, { 'age': 1, 'active': true });\n     * // => object for 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.find(users, ['active', false]);\n     * // => object for 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.find(users, 'active');\n     * // => object for 'barney'\n     */\n    var find = createFind(findIndex);\n\n    /**\n     * This method is like `_.find` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=collection.length-1] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * _.findLast([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 1;\n     * });\n     * // => 3\n     */\n    var findLast = createFind(findLastIndex);\n\n    /**\n     * Creates a flattened array of values by running each element in `collection`\n     * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n     * with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [n, n];\n     * }\n     *\n     * _.flatMap([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMap(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), 1);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDeep([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMapDeep(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), INFINITY);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDepth([1, 2], duplicate, 2);\n     * // => [[1, 1], [2, 2]]\n     */\n    function flatMapDepth(collection, iteratee, depth) {\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(map(collection, iteratee), depth);\n    }\n\n    /**\n     * Iterates over elements of `collection` and invokes `iteratee` for each element.\n     * The iteratee is invoked with three arguments: (value, index|key, collection).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n     * property are iterated like arrays. To avoid this behavior use `_.forIn`\n     * or `_.forOwn` for object iteration.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias each\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEachRight\n     * @example\n     *\n     * _.forEach([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `1` then `2`.\n     *\n     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forEach(collection, iteratee) {\n      var func = isArray(collection) ? arrayEach : baseEach;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forEach` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @alias eachRight\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEach\n     * @example\n     *\n     * _.forEachRight([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `2` then `1`.\n     */\n    function forEachRight(collection, iteratee) {\n      var func = isArray(collection) ? arrayEachRight : baseEachRight;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The order of grouped values\n     * is determined by the order they occur in `collection`. The corresponding\n     * value of each key is an array of elements responsible for generating the\n     * key. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': [4.2], '6': [6.1, 6.3] }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.groupBy(['one', 'two', 'three'], 'length');\n     * // => { '3': ['one', 'two'], '5': ['three'] }\n     */\n    var groupBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        result[key].push(value);\n      } else {\n        baseAssignValue(result, key, [value]);\n      }\n    });\n\n    /**\n     * Checks if `value` is in `collection`. If `collection` is a string, it's\n     * checked for a substring of `value`, otherwise\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * is used for equality comparisons. If `fromIndex` is negative, it's used as\n     * the offset from the end of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {boolean} Returns `true` if `value` is found, else `false`.\n     * @example\n     *\n     * _.includes([1, 2, 3], 1);\n     * // => true\n     *\n     * _.includes([1, 2, 3], 1, 2);\n     * // => false\n     *\n     * _.includes({ 'a': 1, 'b': 2 }, 1);\n     * // => true\n     *\n     * _.includes('abcd', 'bc');\n     * // => true\n     */\n    function includes(collection, value, fromIndex, guard) {\n      collection = isArrayLike(collection) ? collection : values(collection);\n      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\n      var length = collection.length;\n      if (fromIndex < 0) {\n        fromIndex = nativeMax(length + fromIndex, 0);\n      }\n      return isString(collection)\n        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n    }\n\n    /**\n     * Invokes the method at `path` of each element in `collection`, returning\n     * an array of the results of each invoked method. Any additional arguments\n     * are provided to each invoked method. If `path` is a function, it's invoked\n     * for, and `this` bound to, each element in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|string} path The path of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {...*} [args] The arguments to invoke each method with.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');\n     * // => [[1, 5, 7], [1, 2, 3]]\n     *\n     * _.invokeMap([123, 456], String.prototype.split, '');\n     * // => [['1', '2', '3'], ['4', '5', '6']]\n     */\n    var invokeMap = baseRest(function(collection, path, args) {\n      var index = -1,\n          isFunc = typeof path == 'function',\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value) {\n        result[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);\n      });\n      return result;\n    });\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the last element responsible for generating the key. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * var array = [\n     *   { 'dir': 'left', 'code': 97 },\n     *   { 'dir': 'right', 'code': 100 }\n     * ];\n     *\n     * _.keyBy(array, function(o) {\n     *   return String.fromCharCode(o.code);\n     * });\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.keyBy(array, 'dir');\n     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n     */\n    var keyBy = createAggregator(function(result, value, key) {\n      baseAssignValue(result, key, value);\n    });\n\n    /**\n     * Creates an array of values by running each element in `collection` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n     *\n     * The guarded methods are:\n     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * _.map([4, 8], square);\n     * // => [16, 64]\n     *\n     * _.map({ 'a': 4, 'b': 8 }, square);\n     * // => [16, 64] (iteration order is not guaranteed)\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, 'user');\n     * // => ['barney', 'fred']\n     */\n    function map(collection, iteratee) {\n      var func = isArray(collection) ? arrayMap : baseMap;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.sortBy` except that it allows specifying the sort\n     * orders of the iteratees to sort by. If `orders` is unspecified, all values\n     * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n     * descending or \"asc\" for ascending sort order of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @param {string[]} [orders] The sort orders of `iteratees`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 34 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 36 }\n     * ];\n     *\n     * // Sort by `user` in ascending order and by `age` in descending order.\n     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     */\n    function orderBy(collection, iteratees, orders, guard) {\n      if (collection == null) {\n        return [];\n      }\n      if (!isArray(iteratees)) {\n        iteratees = iteratees == null ? [] : [iteratees];\n      }\n      orders = guard ? undefined : orders;\n      if (!isArray(orders)) {\n        orders = orders == null ? [] : [orders];\n      }\n      return baseOrderBy(collection, iteratees, orders);\n    }\n\n    /**\n     * Creates an array of elements split into two groups, the first of which\n     * contains elements `predicate` returns truthy for, the second of which\n     * contains elements `predicate` returns falsey for. The predicate is\n     * invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of grouped elements.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': false },\n     *   { 'user': 'fred',    'age': 40, 'active': true },\n     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n     * ];\n     *\n     * _.partition(users, function(o) { return o.active; });\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.partition(users, { 'age': 1, 'active': false });\n     * // => objects for [['pebbles'], ['barney', 'fred']]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.partition(users, ['active', false]);\n     * // => objects for [['barney', 'pebbles'], ['fred']]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.partition(users, 'active');\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     */\n    var partition = createAggregator(function(result, value, key) {\n      result[key ? 0 : 1].push(value);\n    }, function() { return [[], []]; });\n\n    /**\n     * Reduces `collection` to a value which is the accumulated result of running\n     * each element in `collection` thru `iteratee`, where each successive\n     * invocation is supplied the return value of the previous. If `accumulator`\n     * is not given, the first element of `collection` is used as the initial\n     * value. The iteratee is invoked with four arguments:\n     * (accumulator, value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n     *\n     * The guarded methods are:\n     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n     * and `sortBy`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduceRight\n     * @example\n     *\n     * _.reduce([1, 2], function(sum, n) {\n     *   return sum + n;\n     * }, 0);\n     * // => 3\n     *\n     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     *   return result;\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n     */\n    function reduce(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduce : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);\n    }\n\n    /**\n     * This method is like `_.reduce` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduce\n     * @example\n     *\n     * var array = [[0, 1], [2, 3], [4, 5]];\n     *\n     * _.reduceRight(array, function(flattened, other) {\n     *   return flattened.concat(other);\n     * }, []);\n     * // => [4, 5, 2, 3, 0, 1]\n     */\n    function reduceRight(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduceRight : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);\n    }\n\n    /**\n     * The opposite of `_.filter`; this method returns the elements of `collection`\n     * that `predicate` does **not** return truthy for.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.filter\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': true }\n     * ];\n     *\n     * _.reject(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.reject(users, { 'age': 40, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.reject(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.reject(users, 'active');\n     * // => objects for ['barney']\n     */\n    function reject(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, negate(getIteratee(predicate, 3)));\n    }\n\n    /**\n     * Gets a random element from `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     * @example\n     *\n     * _.sample([1, 2, 3, 4]);\n     * // => 2\n     */\n    function sample(collection) {\n      var func = isArray(collection) ? arraySample : baseSample;\n      return func(collection);\n    }\n\n    /**\n     * Gets `n` random elements at unique keys from `collection` up to the\n     * size of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} [n=1] The number of elements to sample.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the random elements.\n     * @example\n     *\n     * _.sampleSize([1, 2, 3], 2);\n     * // => [3, 1]\n     *\n     * _.sampleSize([1, 2, 3], 4);\n     * // => [2, 3, 1]\n     */\n    function sampleSize(collection, n, guard) {\n      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      var func = isArray(collection) ? arraySampleSize : baseSampleSize;\n      return func(collection, n);\n    }\n\n    /**\n     * Creates an array of shuffled values, using a version of the\n     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     * @example\n     *\n     * _.shuffle([1, 2, 3, 4]);\n     * // => [4, 1, 3, 2]\n     */\n    function shuffle(collection) {\n      var func = isArray(collection) ? arrayShuffle : baseShuffle;\n      return func(collection);\n    }\n\n    /**\n     * Gets the size of `collection` by returning its length for array-like\n     * values or the number of own enumerable string keyed properties for objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @returns {number} Returns the collection size.\n     * @example\n     *\n     * _.size([1, 2, 3]);\n     * // => 3\n     *\n     * _.size({ 'a': 1, 'b': 2 });\n     * // => 2\n     *\n     * _.size('pebbles');\n     * // => 7\n     */\n    function size(collection) {\n      if (collection == null) {\n        return 0;\n      }\n      if (isArrayLike(collection)) {\n        return isString(collection) ? stringSize(collection) : collection.length;\n      }\n      var tag = getTag(collection);\n      if (tag == mapTag || tag == setTag) {\n        return collection.size;\n      }\n      return baseKeys(collection).length;\n    }\n\n    /**\n     * Checks if `predicate` returns truthy for **any** element of `collection`.\n     * Iteration is stopped once `predicate` returns truthy. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.some([null, 0, 'yes', false], Boolean);\n     * // => true\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': true },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.some(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.some(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.some(users, 'active');\n     * // => true\n     */\n    function some(collection, predicate, guard) {\n      var func = isArray(collection) ? arraySome : baseSome;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Creates an array of elements, sorted in ascending order by the results of\n     * running each element in a collection thru each iteratee. This method\n     * performs a stable sort, that is, it preserves the original sort order of\n     * equal elements. The iteratees are invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 34 }\n     * ];\n     *\n     * _.sortBy(users, [function(o) { return o.user; }]);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     *\n     * _.sortBy(users, ['user', 'age']);\n     * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]\n     */\n    var sortBy = baseRest(function(collection, iteratees) {\n      if (collection == null) {\n        return [];\n      }\n      var length = iteratees.length;\n      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n        iteratees = [];\n      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n        iteratees = [iteratees[0]];\n      }\n      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Gets the timestamp of the number of milliseconds that have elapsed since\n     * the Unix epoch (1 January 1970 00:00:00 UTC).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Date\n     * @returns {number} Returns the timestamp.\n     * @example\n     *\n     * _.defer(function(stamp) {\n     *   console.log(_.now() - stamp);\n     * }, _.now());\n     * // => Logs the number of milliseconds it took for the deferred invocation.\n     */\n    var now = ctxNow || function() {\n      return root.Date.now();\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The opposite of `_.before`; this method creates a function that invokes\n     * `func` once it's called `n` or more times.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {number} n The number of calls before `func` is invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var saves = ['profile', 'settings'];\n     *\n     * var done = _.after(saves.length, function() {\n     *   console.log('done saving!');\n     * });\n     *\n     * _.forEach(saves, function(type) {\n     *   asyncSave({ 'type': type, 'complete': done });\n     * });\n     * // => Logs 'done saving!' after the two async saves have completed.\n     */\n    function after(n, func) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n < 1) {\n          return func.apply(this, arguments);\n        }\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func`, with up to `n` arguments,\n     * ignoring any additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @param {number} [n=func.length] The arity cap.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n     * // => [6, 8, 10]\n     */\n    function ary(func, n, guard) {\n      n = guard ? undefined : n;\n      n = (func && n == null) ? func.length : n;\n      return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);\n    }\n\n    /**\n     * Creates a function that invokes `func`, with the `this` binding and arguments\n     * of the created function, while it's called less than `n` times. Subsequent\n     * calls to the created function return the result of the last `func` invocation.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {number} n The number of calls at which `func` is no longer invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * jQuery(element).on('click', _.before(5, addContactToList));\n     * // => Allows adding up to 4 contacts to the list.\n     */\n    function before(n, func) {\n      var result;\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n > 0) {\n          result = func.apply(this, arguments);\n        }\n        if (n <= 1) {\n          func = undefined;\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and `partials` prepended to the arguments it receives.\n     *\n     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** Unlike native `Function#bind`, this method doesn't set the \"length\"\n     * property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * function greet(greeting, punctuation) {\n     *   return greeting + ' ' + this.user + punctuation;\n     * }\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * var bound = _.bind(greet, object, 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bind(greet, object, _, '!');\n     * bound('hi');\n     * // => 'hi fred!'\n     */\n    var bind = baseRest(function(func, thisArg, partials) {\n      var bitmask = WRAP_BIND_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bind));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(func, bitmask, thisArg, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes the method at `object[key]` with `partials`\n     * prepended to the arguments it receives.\n     *\n     * This method differs from `_.bind` by allowing bound functions to reference\n     * methods that may be redefined or don't yet exist. See\n     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n     * for more details.\n     *\n     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Function\n     * @param {Object} object The object to invoke the method on.\n     * @param {string} key The key of the method.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var object = {\n     *   'user': 'fred',\n     *   'greet': function(greeting, punctuation) {\n     *     return greeting + ' ' + this.user + punctuation;\n     *   }\n     * };\n     *\n     * var bound = _.bindKey(object, 'greet', 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * object.greet = function(greeting, punctuation) {\n     *   return greeting + 'ya ' + this.user + punctuation;\n     * };\n     *\n     * bound('!');\n     * // => 'hiya fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bindKey(object, 'greet', _, '!');\n     * bound('hi');\n     * // => 'hiya fred!'\n     */\n    var bindKey = baseRest(function(object, key, partials) {\n      var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bindKey));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(key, bitmask, object, partials, holders);\n    });\n\n    /**\n     * Creates a function that accepts arguments of `func` and either invokes\n     * `func` returning its result, if at least `arity` number of arguments have\n     * been provided, or returns a function that accepts the remaining `func`\n     * arguments, and so on. The arity of `func` may be specified if `func.length`\n     * is not sufficient.\n     *\n     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curry(abc);\n     *\n     * curried(1)(2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(1)(_, 3)(2);\n     * // => [1, 2, 3]\n     */\n    function curry(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curry.placeholder;\n      return result;\n    }\n\n    /**\n     * This method is like `_.curry` except that arguments are applied to `func`\n     * in the manner of `_.partialRight` instead of `_.partial`.\n     *\n     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curryRight(abc);\n     *\n     * curried(3)(2)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(2, 3)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(3)(1, _)(2);\n     * // => [1, 2, 3]\n     */\n    function curryRight(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curryRight.placeholder;\n      return result;\n    }\n\n    /**\n     * Creates a debounced function that delays invoking `func` until after `wait`\n     * milliseconds have elapsed since the last time the debounced function was\n     * invoked. The debounced function comes with a `cancel` method to cancel\n     * delayed `func` invocations and a `flush` method to immediately invoke them.\n     * Provide `options` to indicate whether `func` should be invoked on the\n     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n     * with the last arguments provided to the debounced function. Subsequent\n     * calls to the debounced function return the result of the last `func`\n     * invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the debounced function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.debounce` and `_.throttle`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to debounce.\n     * @param {number} [wait=0] The number of milliseconds to delay.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=false]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {number} [options.maxWait]\n     *  The maximum time `func` is allowed to be delayed before it's invoked.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new debounced function.\n     * @example\n     *\n     * // Avoid costly calculations while the window size is in flux.\n     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n     *\n     * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n     * jQuery(element).on('click', _.debounce(sendMail, 300, {\n     *   'leading': true,\n     *   'trailing': false\n     * }));\n     *\n     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n     * var source = new EventSource('/stream');\n     * jQuery(source).on('message', debounced);\n     *\n     * // Cancel the trailing debounced invocation.\n     * jQuery(window).on('popstate', debounced.cancel);\n     */\n    function debounce(func, wait, options) {\n      var lastArgs,\n          lastThis,\n          maxWait,\n          result,\n          timerId,\n          lastCallTime,\n          lastInvokeTime = 0,\n          leading = false,\n          maxing = false,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      wait = toNumber(wait) || 0;\n      if (isObject(options)) {\n        leading = !!options.leading;\n        maxing = 'maxWait' in options;\n        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n\n      function invokeFunc(time) {\n        var args = lastArgs,\n            thisArg = lastThis;\n\n        lastArgs = lastThis = undefined;\n        lastInvokeTime = time;\n        result = func.apply(thisArg, args);\n        return result;\n      }\n\n      function leadingEdge(time) {\n        // Reset any `maxWait` timer.\n        lastInvokeTime = time;\n        // Start the timer for the trailing edge.\n        timerId = setTimeout(timerExpired, wait);\n        // Invoke the leading edge.\n        return leading ? invokeFunc(time) : result;\n      }\n\n      function remainingWait(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime,\n            timeWaiting = wait - timeSinceLastCall;\n\n        return maxing\n          ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n          : timeWaiting;\n      }\n\n      function shouldInvoke(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime;\n\n        // Either this is the first call, activity has stopped and we're at the\n        // trailing edge, the system time has gone backwards and we're treating\n        // it as the trailing edge, or we've hit the `maxWait` limit.\n        return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n      }\n\n      function timerExpired() {\n        var time = now();\n        if (shouldInvoke(time)) {\n          return trailingEdge(time);\n        }\n        // Restart the timer.\n        timerId = setTimeout(timerExpired, remainingWait(time));\n      }\n\n      function trailingEdge(time) {\n        timerId = undefined;\n\n        // Only invoke if we have `lastArgs` which means `func` has been\n        // debounced at least once.\n        if (trailing && lastArgs) {\n          return invokeFunc(time);\n        }\n        lastArgs = lastThis = undefined;\n        return result;\n      }\n\n      function cancel() {\n        if (timerId !== undefined) {\n          clearTimeout(timerId);\n        }\n        lastInvokeTime = 0;\n        lastArgs = lastCallTime = lastThis = timerId = undefined;\n      }\n\n      function flush() {\n        return timerId === undefined ? result : trailingEdge(now());\n      }\n\n      function debounced() {\n        var time = now(),\n            isInvoking = shouldInvoke(time);\n\n        lastArgs = arguments;\n        lastThis = this;\n        lastCallTime = time;\n\n        if (isInvoking) {\n          if (timerId === undefined) {\n            return leadingEdge(lastCallTime);\n          }\n          if (maxing) {\n            // Handle invocations in a tight loop.\n            timerId = setTimeout(timerExpired, wait);\n            return invokeFunc(lastCallTime);\n          }\n        }\n        if (timerId === undefined) {\n          timerId = setTimeout(timerExpired, wait);\n        }\n        return result;\n      }\n      debounced.cancel = cancel;\n      debounced.flush = flush;\n      return debounced;\n    }\n\n    /**\n     * Defers invoking the `func` until the current call stack has cleared. Any\n     * additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to defer.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.defer(function(text) {\n     *   console.log(text);\n     * }, 'deferred');\n     * // => Logs 'deferred' after one millisecond.\n     */\n    var defer = baseRest(function(func, args) {\n      return baseDelay(func, 1, args);\n    });\n\n    /**\n     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n     * provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.delay(function(text) {\n     *   console.log(text);\n     * }, 1000, 'later');\n     * // => Logs 'later' after one second.\n     */\n    var delay = baseRest(function(func, wait, args) {\n      return baseDelay(func, toNumber(wait) || 0, args);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments reversed.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to flip arguments for.\n     * @returns {Function} Returns the new flipped function.\n     * @example\n     *\n     * var flipped = _.flip(function() {\n     *   return _.toArray(arguments);\n     * });\n     *\n     * flipped('a', 'b', 'c', 'd');\n     * // => ['d', 'c', 'b', 'a']\n     */\n    function flip(func) {\n      return createWrap(func, WRAP_FLIP_FLAG);\n    }\n\n    /**\n     * Creates a function that memoizes the result of `func`. If `resolver` is\n     * provided, it determines the cache key for storing the result based on the\n     * arguments provided to the memoized function. By default, the first argument\n     * provided to the memoized function is used as the map cache key. The `func`\n     * is invoked with the `this` binding of the memoized function.\n     *\n     * **Note:** The cache is exposed as the `cache` property on the memoized\n     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n     * constructor with one whose instances implement the\n     * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n     * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to have its output memoized.\n     * @param {Function} [resolver] The function to resolve the cache key.\n     * @returns {Function} Returns the new memoized function.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     * var other = { 'c': 3, 'd': 4 };\n     *\n     * var values = _.memoize(_.values);\n     * values(object);\n     * // => [1, 2]\n     *\n     * values(other);\n     * // => [3, 4]\n     *\n     * object.a = 2;\n     * values(object);\n     * // => [1, 2]\n     *\n     * // Modify the result cache.\n     * values.cache.set(object, ['a', 'b']);\n     * values(object);\n     * // => ['a', 'b']\n     *\n     * // Replace `_.memoize.Cache`.\n     * _.memoize.Cache = WeakMap;\n     */\n    function memoize(func, resolver) {\n      if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var memoized = function() {\n        var args = arguments,\n            key = resolver ? resolver.apply(this, args) : args[0],\n            cache = memoized.cache;\n\n        if (cache.has(key)) {\n          return cache.get(key);\n        }\n        var result = func.apply(this, args);\n        memoized.cache = cache.set(key, result) || cache;\n        return result;\n      };\n      memoized.cache = new (memoize.Cache || MapCache);\n      return memoized;\n    }\n\n    // Expose `MapCache`.\n    memoize.Cache = MapCache;\n\n    /**\n     * Creates a function that negates the result of the predicate `func`. The\n     * `func` predicate is invoked with the `this` binding and arguments of the\n     * created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} predicate The predicate to negate.\n     * @returns {Function} Returns the new negated function.\n     * @example\n     *\n     * function isEven(n) {\n     *   return n % 2 == 0;\n     * }\n     *\n     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n     * // => [1, 3, 5]\n     */\n    function negate(predicate) {\n      if (typeof predicate != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function() {\n        var args = arguments;\n        switch (args.length) {\n          case 0: return !predicate.call(this);\n          case 1: return !predicate.call(this, args[0]);\n          case 2: return !predicate.call(this, args[0], args[1]);\n          case 3: return !predicate.call(this, args[0], args[1], args[2]);\n        }\n        return !predicate.apply(this, args);\n      };\n    }\n\n    /**\n     * Creates a function that is restricted to invoking `func` once. Repeat calls\n     * to the function return the value of the first invocation. The `func` is\n     * invoked with the `this` binding and arguments of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var initialize = _.once(createApplication);\n     * initialize();\n     * initialize();\n     * // => `createApplication` is invoked once\n     */\n    function once(func) {\n      return before(2, func);\n    }\n\n    /**\n     * Creates a function that invokes `func` with its arguments transformed.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to wrap.\n     * @param {...(Function|Function[])} [transforms=[_.identity]]\n     *  The argument transforms.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function doubled(n) {\n     *   return n * 2;\n     * }\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var func = _.overArgs(function(x, y) {\n     *   return [x, y];\n     * }, [square, doubled]);\n     *\n     * func(9, 3);\n     * // => [81, 6]\n     *\n     * func(10, 5);\n     * // => [100, 10]\n     */\n    var overArgs = castRest(function(func, transforms) {\n      transforms = (transforms.length == 1 && isArray(transforms[0]))\n        ? arrayMap(transforms[0], baseUnary(getIteratee()))\n        : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));\n\n      var funcsLength = transforms.length;\n      return baseRest(function(args) {\n        var index = -1,\n            length = nativeMin(args.length, funcsLength);\n\n        while (++index < length) {\n          args[index] = transforms[index].call(this, args[index]);\n        }\n        return apply(func, this, args);\n      });\n    });\n\n    /**\n     * Creates a function that invokes `func` with `partials` prepended to the\n     * arguments it receives. This method is like `_.bind` except it does **not**\n     * alter the `this` binding.\n     *\n     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.2.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var sayHelloTo = _.partial(greet, 'hello');\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     *\n     * // Partially applied with placeholders.\n     * var greetFred = _.partial(greet, _, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     */\n    var partial = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partial));\n      return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * This method is like `_.partial` except that partially applied arguments\n     * are appended to the arguments it receives.\n     *\n     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var greetFred = _.partialRight(greet, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     *\n     * // Partially applied with placeholders.\n     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     */\n    var partialRight = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partialRight));\n      return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments arranged according\n     * to the specified `indexes` where the argument value at the first index is\n     * provided as the first argument, the argument value at the second index is\n     * provided as the second argument, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to rearrange arguments for.\n     * @param {...(number|number[])} indexes The arranged argument indexes.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var rearged = _.rearg(function(a, b, c) {\n     *   return [a, b, c];\n     * }, [2, 0, 1]);\n     *\n     * rearged('b', 'c', 'a')\n     * // => ['a', 'b', 'c']\n     */\n    var rearg = flatRest(function(func, indexes) {\n      return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * created function and arguments from `start` and beyond provided as\n     * an array.\n     *\n     * **Note:** This method is based on the\n     * [rest parameter](https://mdn.io/rest_parameters).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.rest(function(what, names) {\n     *   return what + ' ' + _.initial(names).join(', ') +\n     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n     * });\n     *\n     * say('hello', 'fred', 'barney', 'pebbles');\n     * // => 'hello fred, barney, & pebbles'\n     */\n    function rest(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start === undefined ? start : toInteger(start);\n      return baseRest(func, start);\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * create function and an array of arguments much like\n     * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).\n     *\n     * **Note:** This method is based on the\n     * [spread operator](https://mdn.io/spread_operator).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Function\n     * @param {Function} func The function to spread arguments over.\n     * @param {number} [start=0] The start position of the spread.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.spread(function(who, what) {\n     *   return who + ' says ' + what;\n     * });\n     *\n     * say(['fred', 'hello']);\n     * // => 'fred says hello'\n     *\n     * var numbers = Promise.all([\n     *   Promise.resolve(40),\n     *   Promise.resolve(36)\n     * ]);\n     *\n     * numbers.then(_.spread(function(x, y) {\n     *   return x + y;\n     * }));\n     * // => a Promise of 76\n     */\n    function spread(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start == null ? 0 : nativeMax(toInteger(start), 0);\n      return baseRest(function(args) {\n        var array = args[start],\n            otherArgs = castSlice(args, 0, start);\n\n        if (array) {\n          arrayPush(otherArgs, array);\n        }\n        return apply(func, this, otherArgs);\n      });\n    }\n\n    /**\n     * Creates a throttled function that only invokes `func` at most once per\n     * every `wait` milliseconds. The throttled function comes with a `cancel`\n     * method to cancel delayed `func` invocations and a `flush` method to\n     * immediately invoke them. Provide `options` to indicate whether `func`\n     * should be invoked on the leading and/or trailing edge of the `wait`\n     * timeout. The `func` is invoked with the last arguments provided to the\n     * throttled function. Subsequent calls to the throttled function return the\n     * result of the last `func` invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the throttled function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.throttle` and `_.debounce`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to throttle.\n     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=true]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new throttled function.\n     * @example\n     *\n     * // Avoid excessively updating the position while scrolling.\n     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n     *\n     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n     * jQuery(element).on('click', throttled);\n     *\n     * // Cancel the trailing throttled invocation.\n     * jQuery(window).on('popstate', throttled.cancel);\n     */\n    function throttle(func, wait, options) {\n      var leading = true,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (isObject(options)) {\n        leading = 'leading' in options ? !!options.leading : leading;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n      return debounce(func, wait, {\n        'leading': leading,\n        'maxWait': wait,\n        'trailing': trailing\n      });\n    }\n\n    /**\n     * Creates a function that accepts up to one argument, ignoring any\n     * additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.unary(parseInt));\n     * // => [6, 8, 10]\n     */\n    function unary(func) {\n      return ary(func, 1);\n    }\n\n    /**\n     * Creates a function that provides `value` to `wrapper` as its first\n     * argument. Any additional arguments provided to the function are appended\n     * to those provided to the `wrapper`. The wrapper is invoked with the `this`\n     * binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {*} value The value to wrap.\n     * @param {Function} [wrapper=identity] The wrapper function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var p = _.wrap(_.escape, function(func, text) {\n     *   return '<p>' + func(text) + '</p>';\n     * });\n     *\n     * p('fred, barney, & pebbles');\n     * // => '<p>fred, barney, &amp; pebbles</p>'\n     */\n    function wrap(value, wrapper) {\n      return partial(castFunction(wrapper), value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Casts `value` as an array if it's not one.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Lang\n     * @param {*} value The value to inspect.\n     * @returns {Array} Returns the cast array.\n     * @example\n     *\n     * _.castArray(1);\n     * // => [1]\n     *\n     * _.castArray({ 'a': 1 });\n     * // => [{ 'a': 1 }]\n     *\n     * _.castArray('abc');\n     * // => ['abc']\n     *\n     * _.castArray(null);\n     * // => [null]\n     *\n     * _.castArray(undefined);\n     * // => [undefined]\n     *\n     * _.castArray();\n     * // => []\n     *\n     * var array = [1, 2, 3];\n     * console.log(_.castArray(array) === array);\n     * // => true\n     */\n    function castArray() {\n      if (!arguments.length) {\n        return [];\n      }\n      var value = arguments[0];\n      return isArray(value) ? value : [value];\n    }\n\n    /**\n     * Creates a shallow clone of `value`.\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n     * and supports cloning arrays, array buffers, booleans, date objects, maps,\n     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n     * arrays. The own enumerable properties of `arguments` objects are cloned\n     * as plain objects. An empty object is returned for uncloneable values such\n     * as error objects, functions, DOM nodes, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeep\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var shallow = _.clone(objects);\n     * console.log(shallow[0] === objects[0]);\n     * // => true\n     */\n    function clone(value) {\n      return baseClone(value, CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.clone` except that it accepts `customizer` which\n     * is invoked to produce the cloned value. If `customizer` returns `undefined`,\n     * cloning is handled by the method instead. The `customizer` is invoked with\n     * up to four arguments; (value [, index|key, object, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeepWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(false);\n     *   }\n     * }\n     *\n     * var el = _.cloneWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 0\n     */\n    function cloneWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * This method is like `_.clone` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.clone\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var deep = _.cloneDeep(objects);\n     * console.log(deep[0] === objects[0]);\n     * // => false\n     */\n    function cloneDeep(value) {\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.cloneWith` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.cloneWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(true);\n     *   }\n     * }\n     *\n     * var el = _.cloneDeepWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 20\n     */\n    function cloneDeepWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * Checks if `object` conforms to `source` by invoking the predicate\n     * properties of `source` with the corresponding property values of `object`.\n     *\n     * **Note:** This method is equivalent to `_.conforms` when `source` is\n     * partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });\n     * // => true\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });\n     * // => false\n     */\n    function conformsTo(object, source) {\n      return source == null || baseConformsTo(object, source, keys(source));\n    }\n\n    /**\n     * Performs a\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * comparison between two values to determine if they are equivalent.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.eq(object, object);\n     * // => true\n     *\n     * _.eq(object, other);\n     * // => false\n     *\n     * _.eq('a', 'a');\n     * // => true\n     *\n     * _.eq('a', Object('a'));\n     * // => false\n     *\n     * _.eq(NaN, NaN);\n     * // => true\n     */\n    function eq(value, other) {\n      return value === other || (value !== value && other !== other);\n    }\n\n    /**\n     * Checks if `value` is greater than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     * @see _.lt\n     * @example\n     *\n     * _.gt(3, 1);\n     * // => true\n     *\n     * _.gt(3, 3);\n     * // => false\n     *\n     * _.gt(1, 3);\n     * // => false\n     */\n    var gt = createRelationalOperation(baseGt);\n\n    /**\n     * Checks if `value` is greater than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than or equal to\n     *  `other`, else `false`.\n     * @see _.lte\n     * @example\n     *\n     * _.gte(3, 1);\n     * // => true\n     *\n     * _.gte(3, 3);\n     * // => true\n     *\n     * _.gte(1, 3);\n     * // => false\n     */\n    var gte = createRelationalOperation(function(value, other) {\n      return value >= other;\n    });\n\n    /**\n     * Checks if `value` is likely an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArguments(function() { return arguments; }());\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n    var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n      return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n        !propertyIsEnumerable.call(value, 'callee');\n    };\n\n    /**\n     * Checks if `value` is classified as an `Array` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n     * @example\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     *\n     * _.isArray(document.body.children);\n     * // => false\n     *\n     * _.isArray('abc');\n     * // => false\n     *\n     * _.isArray(_.noop);\n     * // => false\n     */\n    var isArray = Array.isArray;\n\n    /**\n     * Checks if `value` is classified as an `ArrayBuffer` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     * @example\n     *\n     * _.isArrayBuffer(new ArrayBuffer(2));\n     * // => true\n     *\n     * _.isArrayBuffer(new Array(2));\n     * // => false\n     */\n    var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;\n\n    /**\n     * Checks if `value` is array-like. A value is considered array-like if it's\n     * not a function and has a `value.length` that's an integer greater than or\n     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n     * @example\n     *\n     * _.isArrayLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLike(document.body.children);\n     * // => true\n     *\n     * _.isArrayLike('abc');\n     * // => true\n     *\n     * _.isArrayLike(_.noop);\n     * // => false\n     */\n    function isArrayLike(value) {\n      return value != null && isLength(value.length) && !isFunction(value);\n    }\n\n    /**\n     * This method is like `_.isArrayLike` except that it also checks if `value`\n     * is an object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array-like object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArrayLikeObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLikeObject(document.body.children);\n     * // => true\n     *\n     * _.isArrayLikeObject('abc');\n     * // => false\n     *\n     * _.isArrayLikeObject(_.noop);\n     * // => false\n     */\n    function isArrayLikeObject(value) {\n      return isObjectLike(value) && isArrayLike(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a boolean primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\n     * @example\n     *\n     * _.isBoolean(false);\n     * // => true\n     *\n     * _.isBoolean(null);\n     * // => false\n     */\n    function isBoolean(value) {\n      return value === true || value === false ||\n        (isObjectLike(value) && baseGetTag(value) == boolTag);\n    }\n\n    /**\n     * Checks if `value` is a buffer.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n     * @example\n     *\n     * _.isBuffer(new Buffer(2));\n     * // => true\n     *\n     * _.isBuffer(new Uint8Array(2));\n     * // => false\n     */\n    var isBuffer = nativeIsBuffer || stubFalse;\n\n    /**\n     * Checks if `value` is classified as a `Date` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     * @example\n     *\n     * _.isDate(new Date);\n     * // => true\n     *\n     * _.isDate('Mon April 23 2012');\n     * // => false\n     */\n    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;\n\n    /**\n     * Checks if `value` is likely a DOM element.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n     * @example\n     *\n     * _.isElement(document.body);\n     * // => true\n     *\n     * _.isElement('<body>');\n     * // => false\n     */\n    function isElement(value) {\n      return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);\n    }\n\n    /**\n     * Checks if `value` is an empty object, collection, map, or set.\n     *\n     * Objects are considered empty if they have no own enumerable string keyed\n     * properties.\n     *\n     * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n     * jQuery-like collections are considered empty if they have a `length` of `0`.\n     * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n     * @example\n     *\n     * _.isEmpty(null);\n     * // => true\n     *\n     * _.isEmpty(true);\n     * // => true\n     *\n     * _.isEmpty(1);\n     * // => true\n     *\n     * _.isEmpty([1, 2, 3]);\n     * // => false\n     *\n     * _.isEmpty({ 'a': 1 });\n     * // => false\n     */\n    function isEmpty(value) {\n      if (value == null) {\n        return true;\n      }\n      if (isArrayLike(value) &&\n          (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||\n            isBuffer(value) || isTypedArray(value) || isArguments(value))) {\n        return !value.length;\n      }\n      var tag = getTag(value);\n      if (tag == mapTag || tag == setTag) {\n        return !value.size;\n      }\n      if (isPrototype(value)) {\n        return !baseKeys(value).length;\n      }\n      for (var key in value) {\n        if (hasOwnProperty.call(value, key)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * Performs a deep comparison between two values to determine if they are\n     * equivalent.\n     *\n     * **Note:** This method supports comparing arrays, array buffers, booleans,\n     * date objects, error objects, maps, numbers, `Object` objects, regexes,\n     * sets, strings, symbols, and typed arrays. `Object` objects are compared\n     * by their own, not inherited, enumerable properties. Functions and DOM\n     * nodes are compared by strict equality, i.e. `===`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.isEqual(object, other);\n     * // => true\n     *\n     * object === other;\n     * // => false\n     */\n    function isEqual(value, other) {\n      return baseIsEqual(value, other);\n    }\n\n    /**\n     * This method is like `_.isEqual` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with up to\n     * six arguments: (objValue, othValue [, index|key, object, other, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, othValue) {\n     *   if (isGreeting(objValue) && isGreeting(othValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var array = ['hello', 'goodbye'];\n     * var other = ['hi', 'goodbye'];\n     *\n     * _.isEqualWith(array, other, customizer);\n     * // => true\n     */\n    function isEqualWith(value, other, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      var result = customizer ? customizer(value, other) : undefined;\n      return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;\n    }\n\n    /**\n     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n     * `SyntaxError`, `TypeError`, or `URIError` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n     * @example\n     *\n     * _.isError(new Error);\n     * // => true\n     *\n     * _.isError(Error);\n     * // => false\n     */\n    function isError(value) {\n      if (!isObjectLike(value)) {\n        return false;\n      }\n      var tag = baseGetTag(value);\n      return tag == errorTag || tag == domExcTag ||\n        (typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value));\n    }\n\n    /**\n     * Checks if `value` is a finite primitive number.\n     *\n     * **Note:** This method is based on\n     * [`Number.isFinite`](https://mdn.io/Number/isFinite).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n     * @example\n     *\n     * _.isFinite(3);\n     * // => true\n     *\n     * _.isFinite(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isFinite(Infinity);\n     * // => false\n     *\n     * _.isFinite('3');\n     * // => false\n     */\n    function isFinite(value) {\n      return typeof value == 'number' && nativeIsFinite(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Function` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     *\n     * _.isFunction(/abc/);\n     * // => false\n     */\n    function isFunction(value) {\n      if (!isObject(value)) {\n        return false;\n      }\n      // The use of `Object#toString` avoids issues with the `typeof` operator\n      // in Safari 9 which returns 'object' for typed arrays and other constructors.\n      var tag = baseGetTag(value);\n      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n    }\n\n    /**\n     * Checks if `value` is an integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isInteger`](https://mdn.io/Number/isInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.\n     * @example\n     *\n     * _.isInteger(3);\n     * // => true\n     *\n     * _.isInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isInteger(Infinity);\n     * // => false\n     *\n     * _.isInteger('3');\n     * // => false\n     */\n    function isInteger(value) {\n      return typeof value == 'number' && value == toInteger(value);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like length.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n     * @example\n     *\n     * _.isLength(3);\n     * // => true\n     *\n     * _.isLength(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isLength(Infinity);\n     * // => false\n     *\n     * _.isLength('3');\n     * // => false\n     */\n    function isLength(value) {\n      return typeof value == 'number' &&\n        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is the\n     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(_.noop);\n     * // => true\n     *\n     * _.isObject(null);\n     * // => false\n     */\n    function isObject(value) {\n      var type = typeof value;\n      return value != null && (type == 'object' || type == 'function');\n    }\n\n    /**\n     * Checks if `value` is object-like. A value is object-like if it's not `null`\n     * and has a `typeof` result of \"object\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n     * @example\n     *\n     * _.isObjectLike({});\n     * // => true\n     *\n     * _.isObjectLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isObjectLike(_.noop);\n     * // => false\n     *\n     * _.isObjectLike(null);\n     * // => false\n     */\n    function isObjectLike(value) {\n      return value != null && typeof value == 'object';\n    }\n\n    /**\n     * Checks if `value` is classified as a `Map` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     * @example\n     *\n     * _.isMap(new Map);\n     * // => true\n     *\n     * _.isMap(new WeakMap);\n     * // => false\n     */\n    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\n    /**\n     * Performs a partial deep comparison between `object` and `source` to\n     * determine if `object` contains equivalent property values.\n     *\n     * **Note:** This method is equivalent to `_.matches` when `source` is\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.isMatch(object, { 'b': 2 });\n     * // => true\n     *\n     * _.isMatch(object, { 'b': 1 });\n     * // => false\n     */\n    function isMatch(object, source) {\n      return object === source || baseIsMatch(object, source, getMatchData(source));\n    }\n\n    /**\n     * This method is like `_.isMatch` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with five\n     * arguments: (objValue, srcValue, index|key, object, source).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (isGreeting(objValue) && isGreeting(srcValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var object = { 'greeting': 'hello' };\n     * var source = { 'greeting': 'hi' };\n     *\n     * _.isMatchWith(object, source, customizer);\n     * // => true\n     */\n    function isMatchWith(object, source, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseIsMatch(object, source, getMatchData(source), customizer);\n    }\n\n    /**\n     * Checks if `value` is `NaN`.\n     *\n     * **Note:** This method is based on\n     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as\n     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for\n     * `undefined` and other non-number values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n     * @example\n     *\n     * _.isNaN(NaN);\n     * // => true\n     *\n     * _.isNaN(new Number(NaN));\n     * // => true\n     *\n     * isNaN(undefined);\n     * // => true\n     *\n     * _.isNaN(undefined);\n     * // => false\n     */\n    function isNaN(value) {\n      // An `NaN` primitive is the only value that is not equal to itself.\n      // Perform the `toStringTag` check first to avoid errors with some\n      // ActiveX objects in IE.\n      return isNumber(value) && value != +value;\n    }\n\n    /**\n     * Checks if `value` is a pristine native function.\n     *\n     * **Note:** This method can't reliably detect native functions in the presence\n     * of the core-js package because core-js circumvents this kind of detection.\n     * Despite multiple requests, the core-js maintainer has made it clear: any\n     * attempt to fix the detection will be obstructed. As a result, we're left\n     * with little choice but to throw an error. Unfortunately, this also affects\n     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),\n     * which rely on core-js.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     * @example\n     *\n     * _.isNative(Array.prototype.push);\n     * // => true\n     *\n     * _.isNative(_);\n     * // => false\n     */\n    function isNative(value) {\n      if (isMaskable(value)) {\n        throw new Error(CORE_ERROR_TEXT);\n      }\n      return baseIsNative(value);\n    }\n\n    /**\n     * Checks if `value` is `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n     * @example\n     *\n     * _.isNull(null);\n     * // => true\n     *\n     * _.isNull(void 0);\n     * // => false\n     */\n    function isNull(value) {\n      return value === null;\n    }\n\n    /**\n     * Checks if `value` is `null` or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n     * @example\n     *\n     * _.isNil(null);\n     * // => true\n     *\n     * _.isNil(void 0);\n     * // => true\n     *\n     * _.isNil(NaN);\n     * // => false\n     */\n    function isNil(value) {\n      return value == null;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Number` primitive or object.\n     *\n     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n     * classified as numbers, use the `_.isFinite` method.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n     * @example\n     *\n     * _.isNumber(3);\n     * // => true\n     *\n     * _.isNumber(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isNumber(Infinity);\n     * // => true\n     *\n     * _.isNumber('3');\n     * // => false\n     */\n    function isNumber(value) {\n      return typeof value == 'number' ||\n        (isObjectLike(value) && baseGetTag(value) == numberTag);\n    }\n\n    /**\n     * Checks if `value` is a plain object, that is, an object created by the\n     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.8.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * _.isPlainObject(new Foo);\n     * // => false\n     *\n     * _.isPlainObject([1, 2, 3]);\n     * // => false\n     *\n     * _.isPlainObject({ 'x': 0, 'y': 0 });\n     * // => true\n     *\n     * _.isPlainObject(Object.create(null));\n     * // => true\n     */\n    function isPlainObject(value) {\n      if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n        return false;\n      }\n      var proto = getPrototype(value);\n      if (proto === null) {\n        return true;\n      }\n      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n      return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n        funcToString.call(Ctor) == objectCtorString;\n    }\n\n    /**\n     * Checks if `value` is classified as a `RegExp` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     * @example\n     *\n     * _.isRegExp(/abc/);\n     * // => true\n     *\n     * _.isRegExp('/abc/');\n     * // => false\n     */\n    var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;\n\n    /**\n     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754\n     * double precision number which isn't the result of a rounded unsafe integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.\n     * @example\n     *\n     * _.isSafeInteger(3);\n     * // => true\n     *\n     * _.isSafeInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isSafeInteger(Infinity);\n     * // => false\n     *\n     * _.isSafeInteger('3');\n     * // => false\n     */\n    function isSafeInteger(value) {\n      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Set` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     * @example\n     *\n     * _.isSet(new Set);\n     * // => true\n     *\n     * _.isSet(new WeakSet);\n     * // => false\n     */\n    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\n    /**\n     * Checks if `value` is classified as a `String` primitive or object.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n     * @example\n     *\n     * _.isString('abc');\n     * // => true\n     *\n     * _.isString(1);\n     * // => false\n     */\n    function isString(value) {\n      return typeof value == 'string' ||\n        (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Symbol` primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n     * @example\n     *\n     * _.isSymbol(Symbol.iterator);\n     * // => true\n     *\n     * _.isSymbol('abc');\n     * // => false\n     */\n    function isSymbol(value) {\n      return typeof value == 'symbol' ||\n        (isObjectLike(value) && baseGetTag(value) == symbolTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a typed array.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     * @example\n     *\n     * _.isTypedArray(new Uint8Array);\n     * // => true\n     *\n     * _.isTypedArray([]);\n     * // => false\n     */\n    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n    /**\n     * Checks if `value` is `undefined`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n     * @example\n     *\n     * _.isUndefined(void 0);\n     * // => true\n     *\n     * _.isUndefined(null);\n     * // => false\n     */\n    function isUndefined(value) {\n      return value === undefined;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakMap` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.\n     * @example\n     *\n     * _.isWeakMap(new WeakMap);\n     * // => true\n     *\n     * _.isWeakMap(new Map);\n     * // => false\n     */\n    function isWeakMap(value) {\n      return isObjectLike(value) && getTag(value) == weakMapTag;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakSet` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.\n     * @example\n     *\n     * _.isWeakSet(new WeakSet);\n     * // => true\n     *\n     * _.isWeakSet(new Set);\n     * // => false\n     */\n    function isWeakSet(value) {\n      return isObjectLike(value) && baseGetTag(value) == weakSetTag;\n    }\n\n    /**\n     * Checks if `value` is less than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     * @see _.gt\n     * @example\n     *\n     * _.lt(1, 3);\n     * // => true\n     *\n     * _.lt(3, 3);\n     * // => false\n     *\n     * _.lt(3, 1);\n     * // => false\n     */\n    var lt = createRelationalOperation(baseLt);\n\n    /**\n     * Checks if `value` is less than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than or equal to\n     *  `other`, else `false`.\n     * @see _.gte\n     * @example\n     *\n     * _.lte(1, 3);\n     * // => true\n     *\n     * _.lte(3, 3);\n     * // => true\n     *\n     * _.lte(3, 1);\n     * // => false\n     */\n    var lte = createRelationalOperation(function(value, other) {\n      return value <= other;\n    });\n\n    /**\n     * Converts `value` to an array.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the converted array.\n     * @example\n     *\n     * _.toArray({ 'a': 1, 'b': 2 });\n     * // => [1, 2]\n     *\n     * _.toArray('abc');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toArray(1);\n     * // => []\n     *\n     * _.toArray(null);\n     * // => []\n     */\n    function toArray(value) {\n      if (!value) {\n        return [];\n      }\n      if (isArrayLike(value)) {\n        return isString(value) ? stringToArray(value) : copyArray(value);\n      }\n      if (symIterator && value[symIterator]) {\n        return iteratorToArray(value[symIterator]());\n      }\n      var tag = getTag(value),\n          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);\n\n      return func(value);\n    }\n\n    /**\n     * Converts `value` to a finite number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.12.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted number.\n     * @example\n     *\n     * _.toFinite(3.2);\n     * // => 3.2\n     *\n     * _.toFinite(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toFinite(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toFinite('3.2');\n     * // => 3.2\n     */\n    function toFinite(value) {\n      if (!value) {\n        return value === 0 ? value : 0;\n      }\n      value = toNumber(value);\n      if (value === INFINITY || value === -INFINITY) {\n        var sign = (value < 0 ? -1 : 1);\n        return sign * MAX_INTEGER;\n      }\n      return value === value ? value : 0;\n    }\n\n    /**\n     * Converts `value` to an integer.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toInteger(3.2);\n     * // => 3\n     *\n     * _.toInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toInteger(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toInteger('3.2');\n     * // => 3\n     */\n    function toInteger(value) {\n      var result = toFinite(value),\n          remainder = result % 1;\n\n      return result === result ? (remainder ? result - remainder : result) : 0;\n    }\n\n    /**\n     * Converts `value` to an integer suitable for use as the length of an\n     * array-like object.\n     *\n     * **Note:** This method is based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toLength(3.2);\n     * // => 3\n     *\n     * _.toLength(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toLength(Infinity);\n     * // => 4294967295\n     *\n     * _.toLength('3.2');\n     * // => 3\n     */\n    function toLength(value) {\n      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;\n    }\n\n    /**\n     * Converts `value` to a number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     * @example\n     *\n     * _.toNumber(3.2);\n     * // => 3.2\n     *\n     * _.toNumber(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toNumber(Infinity);\n     * // => Infinity\n     *\n     * _.toNumber('3.2');\n     * // => 3.2\n     */\n    function toNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      if (isObject(value)) {\n        var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n        value = isObject(other) ? (other + '') : other;\n      }\n      if (typeof value != 'string') {\n        return value === 0 ? value : +value;\n      }\n      value = value.replace(reTrim, '');\n      var isBinary = reIsBinary.test(value);\n      return (isBinary || reIsOctal.test(value))\n        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n        : (reIsBadHex.test(value) ? NAN : +value);\n    }\n\n    /**\n     * Converts `value` to a plain object flattening inherited enumerable string\n     * keyed properties of `value` to own properties of the plain object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Object} Returns the converted plain object.\n     * @example\n     *\n     * function Foo() {\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.assign({ 'a': 1 }, new Foo);\n     * // => { 'a': 1, 'b': 2 }\n     *\n     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n     * // => { 'a': 1, 'b': 2, 'c': 3 }\n     */\n    function toPlainObject(value) {\n      return copyObject(value, keysIn(value));\n    }\n\n    /**\n     * Converts `value` to a safe integer. A safe integer can be compared and\n     * represented correctly.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toSafeInteger(3.2);\n     * // => 3\n     *\n     * _.toSafeInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toSafeInteger(Infinity);\n     * // => 9007199254740991\n     *\n     * _.toSafeInteger('3.2');\n     * // => 3\n     */\n    function toSafeInteger(value) {\n      return value\n        ? baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER)\n        : (value === 0 ? value : 0);\n    }\n\n    /**\n     * Converts `value` to a string. An empty string is returned for `null`\n     * and `undefined` values. The sign of `-0` is preserved.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.toString(null);\n     * // => ''\n     *\n     * _.toString(-0);\n     * // => '-0'\n     *\n     * _.toString([1, 2, 3]);\n     * // => '1,2,3'\n     */\n    function toString(value) {\n      return value == null ? '' : baseToString(value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Assigns own enumerable string keyed properties of source objects to the\n     * destination object. Source objects are applied from left to right.\n     * Subsequent sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object` and is loosely based on\n     * [`Object.assign`](https://mdn.io/Object/assign).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assignIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assign({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var assign = createAssigner(function(object, source) {\n      if (isPrototype(source) || isArrayLike(source)) {\n        copyObject(source, keys(source), object);\n        return;\n      }\n      for (var key in source) {\n        if (hasOwnProperty.call(source, key)) {\n          assignValue(object, key, source[key]);\n        }\n      }\n    });\n\n    /**\n     * This method is like `_.assign` except that it iterates over own and\n     * inherited source properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extend\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assign\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assignIn({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }\n     */\n    var assignIn = createAssigner(function(object, source) {\n      copyObject(source, keysIn(source), object);\n    });\n\n    /**\n     * This method is like `_.assignIn` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extendWith\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignInWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keysIn(source), object, customizer);\n    });\n\n    /**\n     * This method is like `_.assign` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignInWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keys(source), object, customizer);\n    });\n\n    /**\n     * Creates an array of values corresponding to `paths` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Array} Returns the picked values.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _.at(object, ['a[0].b.c', 'a[1]']);\n     * // => [3, 4]\n     */\n    var at = flatRest(baseAt);\n\n    /**\n     * Creates an object that inherits from the `prototype` object. If a\n     * `properties` object is given, its own enumerable string keyed properties\n     * are assigned to the created object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Object\n     * @param {Object} prototype The object to inherit from.\n     * @param {Object} [properties] The properties to assign to the object.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * function Circle() {\n     *   Shape.call(this);\n     * }\n     *\n     * Circle.prototype = _.create(Shape.prototype, {\n     *   'constructor': Circle\n     * });\n     *\n     * var circle = new Circle;\n     * circle instanceof Circle;\n     * // => true\n     *\n     * circle instanceof Shape;\n     * // => true\n     */\n    function create(prototype, properties) {\n      var result = baseCreate(prototype);\n      return properties == null ? result : baseAssign(result, properties);\n    }\n\n    /**\n     * Assigns own and inherited enumerable string keyed properties of source\n     * objects to the destination object for all destination properties that\n     * resolve to `undefined`. Source objects are applied from left to right.\n     * Once a property is set, additional values of the same property are ignored.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaultsDeep\n     * @example\n     *\n     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var defaults = baseRest(function(object, sources) {\n      object = Object(object);\n\n      var index = -1;\n      var length = sources.length;\n      var guard = length > 2 ? sources[2] : undefined;\n\n      if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n        length = 1;\n      }\n\n      while (++index < length) {\n        var source = sources[index];\n        var props = keysIn(source);\n        var propsIndex = -1;\n        var propsLength = props.length;\n\n        while (++propsIndex < propsLength) {\n          var key = props[propsIndex];\n          var value = object[key];\n\n          if (value === undefined ||\n              (eq(value, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n            object[key] = source[key];\n          }\n        }\n      }\n\n      return object;\n    });\n\n    /**\n     * This method is like `_.defaults` except that it recursively assigns\n     * default properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaults\n     * @example\n     *\n     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });\n     * // => { 'a': { 'b': 2, 'c': 3 } }\n     */\n    var defaultsDeep = baseRest(function(args) {\n      args.push(undefined, customDefaultsMerge);\n      return apply(mergeWith, undefined, args);\n    });\n\n    /**\n     * This method is like `_.find` except that it returns the key of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findKey(users, function(o) { return o.age < 40; });\n     * // => 'barney' (iteration order is not guaranteed)\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findKey(users, { 'age': 1, 'active': true });\n     * // => 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findKey(users, 'active');\n     * // => 'barney'\n     */\n    function findKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);\n    }\n\n    /**\n     * This method is like `_.findKey` except that it iterates over elements of\n     * a collection in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findLastKey(users, function(o) { return o.age < 40; });\n     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastKey(users, { 'age': 36, 'active': true });\n     * // => 'barney'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastKey(users, 'active');\n     * // => 'pebbles'\n     */\n    function findLastKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);\n    }\n\n    /**\n     * Iterates over own and inherited enumerable string keyed properties of an\n     * object and invokes `iteratee` for each property. The iteratee is invoked\n     * with three arguments: (value, key, object). Iteratee functions may exit\n     * iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forInRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forIn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).\n     */\n    function forIn(object, iteratee) {\n      return object == null\n        ? object\n        : baseFor(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * This method is like `_.forIn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forInRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.\n     */\n    function forInRight(object, iteratee) {\n      return object == null\n        ? object\n        : baseForRight(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * Iterates over own enumerable string keyed properties of an object and\n     * invokes `iteratee` for each property. The iteratee is invoked with three\n     * arguments: (value, key, object). Iteratee functions may exit iteration\n     * early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwnRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forOwn(object, iteratee) {\n      return object && baseForOwn(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forOwn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwnRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.\n     */\n    function forOwnRight(object, iteratee) {\n      return object && baseForOwnRight(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an array of function property names from own enumerable properties\n     * of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functionsIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functions(new Foo);\n     * // => ['a', 'b']\n     */\n    function functions(object) {\n      return object == null ? [] : baseFunctions(object, keys(object));\n    }\n\n    /**\n     * Creates an array of function property names from own and inherited\n     * enumerable properties of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functions\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functionsIn(new Foo);\n     * // => ['a', 'b', 'c']\n     */\n    function functionsIn(object) {\n      return object == null ? [] : baseFunctions(object, keysIn(object));\n    }\n\n    /**\n     * Gets the value at `path` of `object`. If the resolved value is\n     * `undefined`, the `defaultValue` is returned in its place.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.get(object, 'a[0].b.c');\n     * // => 3\n     *\n     * _.get(object, ['a', '0', 'b', 'c']);\n     * // => 3\n     *\n     * _.get(object, 'a.b.c', 'default');\n     * // => 'default'\n     */\n    function get(object, path, defaultValue) {\n      var result = object == null ? undefined : baseGet(object, path);\n      return result === undefined ? defaultValue : result;\n    }\n\n    /**\n     * Checks if `path` is a direct property of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = { 'a': { 'b': 2 } };\n     * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.has(object, 'a');\n     * // => true\n     *\n     * _.has(object, 'a.b');\n     * // => true\n     *\n     * _.has(object, ['a', 'b']);\n     * // => true\n     *\n     * _.has(other, 'a');\n     * // => false\n     */\n    function has(object, path) {\n      return object != null && hasPath(object, path, baseHas);\n    }\n\n    /**\n     * Checks if `path` is a direct or inherited property of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.hasIn(object, 'a');\n     * // => true\n     *\n     * _.hasIn(object, 'a.b');\n     * // => true\n     *\n     * _.hasIn(object, ['a', 'b']);\n     * // => true\n     *\n     * _.hasIn(object, 'b');\n     * // => false\n     */\n    function hasIn(object, path) {\n      return object != null && hasPath(object, path, baseHasIn);\n    }\n\n    /**\n     * Creates an object composed of the inverted keys and values of `object`.\n     * If `object` contains duplicate values, subsequent values overwrite\n     * property assignments of previous values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invert(object);\n     * // => { '1': 'c', '2': 'b' }\n     */\n    var invert = createInverter(function(result, value, key) {\n      if (value != null &&\n          typeof value.toString != 'function') {\n        value = nativeObjectToString.call(value);\n      }\n\n      result[value] = key;\n    }, constant(identity));\n\n    /**\n     * This method is like `_.invert` except that the inverted object is generated\n     * from the results of running each element of `object` thru `iteratee`. The\n     * corresponding inverted value of each inverted key is an array of keys\n     * responsible for generating the inverted value. The iteratee is invoked\n     * with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invertBy(object);\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     *\n     * _.invertBy(object, function(value) {\n     *   return 'group' + value;\n     * });\n     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }\n     */\n    var invertBy = createInverter(function(result, value, key) {\n      if (value != null &&\n          typeof value.toString != 'function') {\n        value = nativeObjectToString.call(value);\n      }\n\n      if (hasOwnProperty.call(result, value)) {\n        result[value].push(key);\n      } else {\n        result[value] = [key];\n      }\n    }, getIteratee);\n\n    /**\n     * Invokes the method at `path` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };\n     *\n     * _.invoke(object, 'a[0].b.c.slice', 1, 3);\n     * // => [2, 3]\n     */\n    var invoke = baseRest(baseInvoke);\n\n    /**\n     * Creates an array of the own enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects. See the\n     * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * for more details.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keys(new Foo);\n     * // => ['a', 'b'] (iteration order is not guaranteed)\n     *\n     * _.keys('hi');\n     * // => ['0', '1']\n     */\n    function keys(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keysIn(new Foo);\n     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n     */\n    function keysIn(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n    }\n\n    /**\n     * The opposite of `_.mapValues`; this method creates an object with the\n     * same values as `object` and keys generated by running each own enumerable\n     * string keyed property of `object` thru `iteratee`. The iteratee is invoked\n     * with three arguments: (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapValues\n     * @example\n     *\n     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   return key + value;\n     * });\n     * // => { 'a1': 1, 'b2': 2 }\n     */\n    function mapKeys(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, iteratee(value, key, object), value);\n      });\n      return result;\n    }\n\n    /**\n     * Creates an object with the same keys as `object` and values generated\n     * by running each own enumerable string keyed property of `object` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapKeys\n     * @example\n     *\n     * var users = {\n     *   'fred':    { 'user': 'fred',    'age': 40 },\n     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n     * };\n     *\n     * _.mapValues(users, function(o) { return o.age; });\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.mapValues(users, 'age');\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     */\n    function mapValues(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, key, iteratee(value, key, object));\n      });\n      return result;\n    }\n\n    /**\n     * This method is like `_.assign` except that it recursively merges own and\n     * inherited enumerable string keyed properties of source objects into the\n     * destination object. Source properties that resolve to `undefined` are\n     * skipped if a destination value exists. Array and plain object properties\n     * are merged recursively. Other objects and value types are overridden by\n     * assignment. Source objects are applied from left to right. Subsequent\n     * sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {\n     *   'a': [{ 'b': 2 }, { 'd': 4 }]\n     * };\n     *\n     * var other = {\n     *   'a': [{ 'c': 3 }, { 'e': 5 }]\n     * };\n     *\n     * _.merge(object, other);\n     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n     */\n    var merge = createAssigner(function(object, source, srcIndex) {\n      baseMerge(object, source, srcIndex);\n    });\n\n    /**\n     * This method is like `_.merge` except that it accepts `customizer` which\n     * is invoked to produce the merged values of the destination and source\n     * properties. If `customizer` returns `undefined`, merging is handled by the\n     * method instead. The `customizer` is invoked with six arguments:\n     * (objValue, srcValue, key, object, source, stack).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (_.isArray(objValue)) {\n     *     return objValue.concat(srcValue);\n     *   }\n     * }\n     *\n     * var object = { 'a': [1], 'b': [2] };\n     * var other = { 'a': [3], 'b': [4] };\n     *\n     * _.mergeWith(object, other, customizer);\n     * // => { 'a': [1, 3], 'b': [2, 4] }\n     */\n    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {\n      baseMerge(object, source, srcIndex, customizer);\n    });\n\n    /**\n     * The opposite of `_.pick`; this method creates an object composed of the\n     * own and inherited enumerable property paths of `object` that are not omitted.\n     *\n     * **Note:** This method is considerably slower than `_.pick`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to omit.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omit(object, ['a', 'c']);\n     * // => { 'b': '2' }\n     */\n    var omit = flatRest(function(object, paths) {\n      var result = {};\n      if (object == null) {\n        return result;\n      }\n      var isDeep = false;\n      paths = arrayMap(paths, function(path) {\n        path = castPath(path, object);\n        isDeep || (isDeep = path.length > 1);\n        return path;\n      });\n      copyObject(object, getAllKeysIn(object), result);\n      if (isDeep) {\n        result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);\n      }\n      var length = paths.length;\n      while (length--) {\n        baseUnset(result, paths[length]);\n      }\n      return result;\n    });\n\n    /**\n     * The opposite of `_.pickBy`; this method creates an object composed of\n     * the own and inherited enumerable string keyed properties of `object` that\n     * `predicate` doesn't return truthy for. The predicate is invoked with two\n     * arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omitBy(object, _.isNumber);\n     * // => { 'b': '2' }\n     */\n    function omitBy(object, predicate) {\n      return pickBy(object, negate(getIteratee(predicate)));\n    }\n\n    /**\n     * Creates an object composed of the picked `object` properties.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pick(object, ['a', 'c']);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var pick = flatRest(function(object, paths) {\n      return object == null ? {} : basePick(object, paths);\n    });\n\n    /**\n     * Creates an object composed of the `object` properties `predicate` returns\n     * truthy for. The predicate is invoked with two arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pickBy(object, _.isNumber);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    function pickBy(object, predicate) {\n      if (object == null) {\n        return {};\n      }\n      var props = arrayMap(getAllKeysIn(object), function(prop) {\n        return [prop];\n      });\n      predicate = getIteratee(predicate);\n      return basePickBy(object, props, function(value, path) {\n        return predicate(value, path[0]);\n      });\n    }\n\n    /**\n     * This method is like `_.get` except that if the resolved value is a\n     * function it's invoked with the `this` binding of its parent object and\n     * its result is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to resolve.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n     *\n     * _.result(object, 'a[0].b.c1');\n     * // => 3\n     *\n     * _.result(object, 'a[0].b.c2');\n     * // => 4\n     *\n     * _.result(object, 'a[0].b.c3', 'default');\n     * // => 'default'\n     *\n     * _.result(object, 'a[0].b.c3', _.constant('default'));\n     * // => 'default'\n     */\n    function result(object, path, defaultValue) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length;\n\n      // Ensure the loop is entered when path is empty.\n      if (!length) {\n        length = 1;\n        object = undefined;\n      }\n      while (++index < length) {\n        var value = object == null ? undefined : object[toKey(path[index])];\n        if (value === undefined) {\n          index = length;\n          value = defaultValue;\n        }\n        object = isFunction(value) ? value.call(object) : value;\n      }\n      return object;\n    }\n\n    /**\n     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\n     * it's created. Arrays are created for missing index properties while objects\n     * are created for all other missing properties. Use `_.setWith` to customize\n     * `path` creation.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.set(object, 'a[0].b.c', 4);\n     * console.log(object.a[0].b.c);\n     * // => 4\n     *\n     * _.set(object, ['x', '0', 'y', 'z'], 5);\n     * console.log(object.x[0].y.z);\n     * // => 5\n     */\n    function set(object, path, value) {\n      return object == null ? object : baseSet(object, path, value);\n    }\n\n    /**\n     * This method is like `_.set` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.setWith(object, '[0][1]', 'a', Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function setWith(object, path, value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseSet(object, path, value, customizer);\n    }\n\n    /**\n     * Creates an array of own enumerable string keyed-value pairs for `object`\n     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its\n     * entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entries\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairs(new Foo);\n     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)\n     */\n    var toPairs = createToPairs(keys);\n\n    /**\n     * Creates an array of own and inherited enumerable string keyed-value pairs\n     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map\n     * or set, its entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entriesIn\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairsIn(new Foo);\n     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)\n     */\n    var toPairsIn = createToPairs(keysIn);\n\n    /**\n     * An alternative to `_.reduce`; this method transforms `object` to a new\n     * `accumulator` object which is the result of running each of its own\n     * enumerable string keyed properties thru `iteratee`, with each invocation\n     * potentially mutating the `accumulator` object. If `accumulator` is not\n     * provided, a new object with the same `[[Prototype]]` will be used. The\n     * iteratee is invoked with four arguments: (accumulator, value, key, object).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The custom accumulator value.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.transform([2, 3, 4], function(result, n) {\n     *   result.push(n *= n);\n     *   return n % 2 == 0;\n     * }, []);\n     * // => [4, 9]\n     *\n     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     */\n    function transform(object, iteratee, accumulator) {\n      var isArr = isArray(object),\n          isArrLike = isArr || isBuffer(object) || isTypedArray(object);\n\n      iteratee = getIteratee(iteratee, 4);\n      if (accumulator == null) {\n        var Ctor = object && object.constructor;\n        if (isArrLike) {\n          accumulator = isArr ? new Ctor : [];\n        }\n        else if (isObject(object)) {\n          accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};\n        }\n        else {\n          accumulator = {};\n        }\n      }\n      (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {\n        return iteratee(accumulator, value, index, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * Removes the property at `path` of `object`.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 7 } }] };\n     * _.unset(object, 'a[0].b.c');\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     *\n     * _.unset(object, ['a', '0', 'b', 'c']);\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     */\n    function unset(object, path) {\n      return object == null ? true : baseUnset(object, path);\n    }\n\n    /**\n     * This method is like `_.set` except that accepts `updater` to produce the\n     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`\n     * is invoked with one argument: (value).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.update(object, 'a[0].b.c', function(n) { return n * n; });\n     * console.log(object.a[0].b.c);\n     * // => 9\n     *\n     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });\n     * console.log(object.x[0].y.z);\n     * // => 0\n     */\n    function update(object, path, updater) {\n      return object == null ? object : baseUpdate(object, path, castFunction(updater));\n    }\n\n    /**\n     * This method is like `_.update` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.updateWith(object, '[0][1]', _.constant('a'), Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function updateWith(object, path, updater, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);\n    }\n\n    /**\n     * Creates an array of the own enumerable string keyed property values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.values(new Foo);\n     * // => [1, 2] (iteration order is not guaranteed)\n     *\n     * _.values('hi');\n     * // => ['h', 'i']\n     */\n    function values(object) {\n      return object == null ? [] : baseValues(object, keys(object));\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable string keyed property\n     * values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.valuesIn(new Foo);\n     * // => [1, 2, 3] (iteration order is not guaranteed)\n     */\n    function valuesIn(object) {\n      return object == null ? [] : baseValues(object, keysIn(object));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Clamps `number` within the inclusive `lower` and `upper` bounds.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Number\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     * @example\n     *\n     * _.clamp(-10, -5, 5);\n     * // => -5\n     *\n     * _.clamp(10, -5, 5);\n     * // => 5\n     */\n    function clamp(number, lower, upper) {\n      if (upper === undefined) {\n        upper = lower;\n        lower = undefined;\n      }\n      if (upper !== undefined) {\n        upper = toNumber(upper);\n        upper = upper === upper ? upper : 0;\n      }\n      if (lower !== undefined) {\n        lower = toNumber(lower);\n        lower = lower === lower ? lower : 0;\n      }\n      return baseClamp(toNumber(number), lower, upper);\n    }\n\n    /**\n     * Checks if `n` is between `start` and up to, but not including, `end`. If\n     * `end` is not specified, it's set to `start` with `start` then set to `0`.\n     * If `start` is greater than `end` the params are swapped to support\n     * negative ranges.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.3.0\n     * @category Number\n     * @param {number} number The number to check.\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     * @see _.range, _.rangeRight\n     * @example\n     *\n     * _.inRange(3, 2, 4);\n     * // => true\n     *\n     * _.inRange(4, 8);\n     * // => true\n     *\n     * _.inRange(4, 2);\n     * // => false\n     *\n     * _.inRange(2, 2);\n     * // => false\n     *\n     * _.inRange(1.2, 2);\n     * // => true\n     *\n     * _.inRange(5.2, 4);\n     * // => false\n     *\n     * _.inRange(-3, -2, -6);\n     * // => true\n     */\n    function inRange(number, start, end) {\n      start = toFinite(start);\n      if (end === undefined) {\n        end = start;\n        start = 0;\n      } else {\n        end = toFinite(end);\n      }\n      number = toNumber(number);\n      return baseInRange(number, start, end);\n    }\n\n    /**\n     * Produces a random number between the inclusive `lower` and `upper` bounds.\n     * If only one argument is provided a number between `0` and the given number\n     * is returned. If `floating` is `true`, or either `lower` or `upper` are\n     * floats, a floating-point number is returned instead of an integer.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Number\n     * @param {number} [lower=0] The lower bound.\n     * @param {number} [upper=1] The upper bound.\n     * @param {boolean} [floating] Specify returning a floating-point number.\n     * @returns {number} Returns the random number.\n     * @example\n     *\n     * _.random(0, 5);\n     * // => an integer between 0 and 5\n     *\n     * _.random(5);\n     * // => also an integer between 0 and 5\n     *\n     * _.random(5, true);\n     * // => a floating-point number between 0 and 5\n     *\n     * _.random(1.2, 5.2);\n     * // => a floating-point number between 1.2 and 5.2\n     */\n    function random(lower, upper, floating) {\n      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n        upper = floating = undefined;\n      }\n      if (floating === undefined) {\n        if (typeof upper == 'boolean') {\n          floating = upper;\n          upper = undefined;\n        }\n        else if (typeof lower == 'boolean') {\n          floating = lower;\n          lower = undefined;\n        }\n      }\n      if (lower === undefined && upper === undefined) {\n        lower = 0;\n        upper = 1;\n      }\n      else {\n        lower = toFinite(lower);\n        if (upper === undefined) {\n          upper = lower;\n          lower = 0;\n        } else {\n          upper = toFinite(upper);\n        }\n      }\n      if (lower > upper) {\n        var temp = lower;\n        lower = upper;\n        upper = temp;\n      }\n      if (floating || lower % 1 || upper % 1) {\n        var rand = nativeRandom();\n        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n      }\n      return baseRandom(lower, upper);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the camel cased string.\n     * @example\n     *\n     * _.camelCase('Foo Bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('--foo-bar--');\n     * // => 'fooBar'\n     *\n     * _.camelCase('__FOO_BAR__');\n     * // => 'fooBar'\n     */\n    var camelCase = createCompounder(function(result, word, index) {\n      word = word.toLowerCase();\n      return result + (index ? capitalize(word) : word);\n    });\n\n    /**\n     * Converts the first character of `string` to upper case and the remaining\n     * to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to capitalize.\n     * @returns {string} Returns the capitalized string.\n     * @example\n     *\n     * _.capitalize('FRED');\n     * // => 'Fred'\n     */\n    function capitalize(string) {\n      return upperFirst(toString(string).toLowerCase());\n    }\n\n    /**\n     * Deburrs `string` by converting\n     * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n     * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n     * letters to basic Latin letters and removing\n     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to deburr.\n     * @returns {string} Returns the deburred string.\n     * @example\n     *\n     * _.deburr('déjà vu');\n     * // => 'deja vu'\n     */\n    function deburr(string) {\n      string = toString(string);\n      return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n    }\n\n    /**\n     * Checks if `string` ends with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=string.length] The position to search up to.\n     * @returns {boolean} Returns `true` if `string` ends with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.endsWith('abc', 'c');\n     * // => true\n     *\n     * _.endsWith('abc', 'b');\n     * // => false\n     *\n     * _.endsWith('abc', 'b', 2);\n     * // => true\n     */\n    function endsWith(string, target, position) {\n      string = toString(string);\n      target = baseToString(target);\n\n      var length = string.length;\n      position = position === undefined\n        ? length\n        : baseClamp(toInteger(position), 0, length);\n\n      var end = position;\n      position -= target.length;\n      return position >= 0 && string.slice(position, end) == target;\n    }\n\n    /**\n     * Converts the characters \"&\", \"<\", \">\", '\"', and \"'\" in `string` to their\n     * corresponding HTML entities.\n     *\n     * **Note:** No other characters are escaped. To escape additional\n     * characters use a third-party library like [_he_](https://mths.be/he).\n     *\n     * Though the \">\" character is escaped for symmetry, characters like\n     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n     * unless they're part of a tag or unquoted attribute value. See\n     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n     * (under \"semi-related fun fact\") for more details.\n     *\n     * When working with HTML you should always\n     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce\n     * XSS vectors.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escape('fred, barney, & pebbles');\n     * // => 'fred, barney, &amp; pebbles'\n     */\n    function escape(string) {\n      string = toString(string);\n      return (string && reHasUnescapedHtml.test(string))\n        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n     * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escapeRegExp('[lodash](https://lodash.com/)');\n     * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n     */\n    function escapeRegExp(string) {\n      string = toString(string);\n      return (string && reHasRegExpChar.test(string))\n        ? string.replace(reRegExpChar, '\\\\$&')\n        : string;\n    }\n\n    /**\n     * Converts `string` to\n     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the kebab cased string.\n     * @example\n     *\n     * _.kebabCase('Foo Bar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('fooBar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('__FOO_BAR__');\n     * // => 'foo-bar'\n     */\n    var kebabCase = createCompounder(function(result, word, index) {\n      return result + (index ? '-' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts `string`, as space separated words, to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.lowerCase('--Foo-Bar--');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('fooBar');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('__FOO_BAR__');\n     * // => 'foo bar'\n     */\n    var lowerCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts the first character of `string` to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.lowerFirst('Fred');\n     * // => 'fred'\n     *\n     * _.lowerFirst('FRED');\n     * // => 'fRED'\n     */\n    var lowerFirst = createCaseFirst('toLowerCase');\n\n    /**\n     * Pads `string` on the left and right sides if it's shorter than `length`.\n     * Padding characters are truncated if they can't be evenly divided by `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.pad('abc', 8);\n     * // => '  abc   '\n     *\n     * _.pad('abc', 8, '_-');\n     * // => '_-abc_-_'\n     *\n     * _.pad('abc', 3);\n     * // => 'abc'\n     */\n    function pad(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      if (!length || strLength >= length) {\n        return string;\n      }\n      var mid = (length - strLength) / 2;\n      return (\n        createPadding(nativeFloor(mid), chars) +\n        string +\n        createPadding(nativeCeil(mid), chars)\n      );\n    }\n\n    /**\n     * Pads `string` on the right side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padEnd('abc', 6);\n     * // => 'abc   '\n     *\n     * _.padEnd('abc', 6, '_-');\n     * // => 'abc_-_'\n     *\n     * _.padEnd('abc', 3);\n     * // => 'abc'\n     */\n    function padEnd(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (string + createPadding(length - strLength, chars))\n        : string;\n    }\n\n    /**\n     * Pads `string` on the left side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padStart('abc', 6);\n     * // => '   abc'\n     *\n     * _.padStart('abc', 6, '_-');\n     * // => '_-_abc'\n     *\n     * _.padStart('abc', 3);\n     * // => 'abc'\n     */\n    function padStart(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (createPadding(length - strLength, chars) + string)\n        : string;\n    }\n\n    /**\n     * Converts `string` to an integer of the specified radix. If `radix` is\n     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a\n     * hexadecimal, in which case a `radix` of `16` is used.\n     *\n     * **Note:** This method aligns with the\n     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category String\n     * @param {string} string The string to convert.\n     * @param {number} [radix=10] The radix to interpret `value` by.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.parseInt('08');\n     * // => 8\n     *\n     * _.map(['6', '08', '10'], _.parseInt);\n     * // => [6, 8, 10]\n     */\n    function parseInt(string, radix, guard) {\n      if (guard || radix == null) {\n        radix = 0;\n      } else if (radix) {\n        radix = +radix;\n      }\n      return nativeParseInt(toString(string).replace(reTrimStart, ''), radix || 0);\n    }\n\n    /**\n     * Repeats the given string `n` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to repeat.\n     * @param {number} [n=1] The number of times to repeat the string.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the repeated string.\n     * @example\n     *\n     * _.repeat('*', 3);\n     * // => '***'\n     *\n     * _.repeat('abc', 2);\n     * // => 'abcabc'\n     *\n     * _.repeat('abc', 0);\n     * // => ''\n     */\n    function repeat(string, n, guard) {\n      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      return baseRepeat(toString(string), n);\n    }\n\n    /**\n     * Replaces matches for `pattern` in `string` with `replacement`.\n     *\n     * **Note:** This method is based on\n     * [`String#replace`](https://mdn.io/String/replace).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to modify.\n     * @param {RegExp|string} pattern The pattern to replace.\n     * @param {Function|string} replacement The match replacement.\n     * @returns {string} Returns the modified string.\n     * @example\n     *\n     * _.replace('Hi Fred', 'Fred', 'Barney');\n     * // => 'Hi Barney'\n     */\n    function replace() {\n      var args = arguments,\n          string = toString(args[0]);\n\n      return args.length < 3 ? string : string.replace(args[1], args[2]);\n    }\n\n    /**\n     * Converts `string` to\n     * [snake case](https://en.wikipedia.org/wiki/Snake_case).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the snake cased string.\n     * @example\n     *\n     * _.snakeCase('Foo Bar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('fooBar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('--FOO-BAR--');\n     * // => 'foo_bar'\n     */\n    var snakeCase = createCompounder(function(result, word, index) {\n      return result + (index ? '_' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Splits `string` by `separator`.\n     *\n     * **Note:** This method is based on\n     * [`String#split`](https://mdn.io/String/split).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to split.\n     * @param {RegExp|string} separator The separator pattern to split by.\n     * @param {number} [limit] The length to truncate results to.\n     * @returns {Array} Returns the string segments.\n     * @example\n     *\n     * _.split('a-b-c', '-', 2);\n     * // => ['a', 'b']\n     */\n    function split(string, separator, limit) {\n      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {\n        separator = limit = undefined;\n      }\n      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;\n      if (!limit) {\n        return [];\n      }\n      string = toString(string);\n      if (string && (\n            typeof separator == 'string' ||\n            (separator != null && !isRegExp(separator))\n          )) {\n        separator = baseToString(separator);\n        if (!separator && hasUnicode(string)) {\n          return castSlice(stringToArray(string), 0, limit);\n        }\n      }\n      return string.split(separator, limit);\n    }\n\n    /**\n     * Converts `string` to\n     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.1.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the start cased string.\n     * @example\n     *\n     * _.startCase('--foo-bar--');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('fooBar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('__FOO_BAR__');\n     * // => 'FOO BAR'\n     */\n    var startCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + upperFirst(word);\n    });\n\n    /**\n     * Checks if `string` starts with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=0] The position to search from.\n     * @returns {boolean} Returns `true` if `string` starts with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.startsWith('abc', 'a');\n     * // => true\n     *\n     * _.startsWith('abc', 'b');\n     * // => false\n     *\n     * _.startsWith('abc', 'b', 1);\n     * // => true\n     */\n    function startsWith(string, target, position) {\n      string = toString(string);\n      position = position == null\n        ? 0\n        : baseClamp(toInteger(position), 0, string.length);\n\n      target = baseToString(target);\n      return string.slice(position, position + target.length) == target;\n    }\n\n    /**\n     * Creates a compiled template function that can interpolate data properties\n     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n     * properties may be accessed as free variables in the template. If a setting\n     * object is given, it takes precedence over `_.templateSettings` values.\n     *\n     * **Note:** In the development build `_.template` utilizes\n     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n     * for easier debugging.\n     *\n     * For more information on precompiling templates see\n     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n     *\n     * For more information on Chrome extension sandboxes see\n     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The template string.\n     * @param {Object} [options={}] The options object.\n     * @param {RegExp} [options.escape=_.templateSettings.escape]\n     *  The HTML \"escape\" delimiter.\n     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]\n     *  The \"evaluate\" delimiter.\n     * @param {Object} [options.imports=_.templateSettings.imports]\n     *  An object to import into the template as free variables.\n     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]\n     *  The \"interpolate\" delimiter.\n     * @param {string} [options.sourceURL='lodash.templateSources[n]']\n     *  The sourceURL of the compiled template.\n     * @param {string} [options.variable='obj']\n     *  The data object variable name.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the compiled template function.\n     * @example\n     *\n     * // Use the \"interpolate\" delimiter to create a compiled template.\n     * var compiled = _.template('hello <%= user %>!');\n     * compiled({ 'user': 'fred' });\n     * // => 'hello fred!'\n     *\n     * // Use the HTML \"escape\" delimiter to escape data property values.\n     * var compiled = _.template('<b><%- value %></b>');\n     * compiled({ 'value': '<script>' });\n     * // => '<b>&lt;script&gt;</b>'\n     *\n     * // Use the \"evaluate\" delimiter to execute JavaScript and generate HTML.\n     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the internal `print` function in \"evaluate\" delimiters.\n     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n     * compiled({ 'user': 'barney' });\n     * // => 'hello barney!'\n     *\n     * // Use the ES template literal delimiter as an \"interpolate\" delimiter.\n     * // Disable support by replacing the \"interpolate\" delimiter.\n     * var compiled = _.template('hello ${ user }!');\n     * compiled({ 'user': 'pebbles' });\n     * // => 'hello pebbles!'\n     *\n     * // Use backslashes to treat delimiters as plain text.\n     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n     * compiled({ 'value': 'ignored' });\n     * // => '<%- value %>'\n     *\n     * // Use the `imports` option to import `jQuery` as `jq`.\n     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the `sourceURL` option to specify a custom sourceURL for the template.\n     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n     * compiled(data);\n     * // => Find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector.\n     *\n     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.\n     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n     * compiled.source;\n     * // => function(data) {\n     * //   var __t, __p = '';\n     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n     * //   return __p;\n     * // }\n     *\n     * // Use custom template delimiters.\n     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n     * var compiled = _.template('hello {{ user }}!');\n     * compiled({ 'user': 'mustache' });\n     * // => 'hello mustache!'\n     *\n     * // Use the `source` property to inline compiled templates for meaningful\n     * // line numbers in error messages and stack traces.\n     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\\\n     *   var JST = {\\\n     *     \"main\": ' + _.template(mainText).source + '\\\n     *   };\\\n     * ');\n     */\n    function template(string, options, guard) {\n      // Based on John Resig's `tmpl` implementation\n      // (http://ejohn.org/blog/javascript-micro-templating/)\n      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n      var settings = lodash.templateSettings;\n\n      if (guard && isIterateeCall(string, options, guard)) {\n        options = undefined;\n      }\n      string = toString(string);\n      options = assignInWith({}, options, settings, customDefaultsAssignIn);\n\n      var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn),\n          importsKeys = keys(imports),\n          importsValues = baseValues(imports, importsKeys);\n\n      var isEscaping,\n          isEvaluating,\n          index = 0,\n          interpolate = options.interpolate || reNoMatch,\n          source = \"__p += '\";\n\n      // Compile the regexp to match each delimiter.\n      var reDelimiters = RegExp(\n        (options.escape || reNoMatch).source + '|' +\n        interpolate.source + '|' +\n        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n        (options.evaluate || reNoMatch).source + '|$'\n      , 'g');\n\n      // Use a sourceURL for easier debugging.\n      var sourceURL = '//# sourceURL=' +\n        ('sourceURL' in options\n          ? options.sourceURL\n          : ('lodash.templateSources[' + (++templateCounter) + ']')\n        ) + '\\n';\n\n      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n        interpolateValue || (interpolateValue = esTemplateValue);\n\n        // Escape characters that can't be included in string literals.\n        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n        // Replace delimiters with snippets.\n        if (escapeValue) {\n          isEscaping = true;\n          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n        }\n        if (evaluateValue) {\n          isEvaluating = true;\n          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n        }\n        if (interpolateValue) {\n          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n        }\n        index = offset + match.length;\n\n        // The JS engine embedded in Adobe products needs `match` returned in\n        // order to produce the correct `offset` value.\n        return match;\n      });\n\n      source += \"';\\n\";\n\n      // If `variable` is not specified wrap a with-statement around the generated\n      // code to add the data object to the top of the scope chain.\n      var variable = options.variable;\n      if (!variable) {\n        source = 'with (obj) {\\n' + source + '\\n}\\n';\n      }\n      // Cleanup code by stripping empty strings.\n      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n        .replace(reEmptyStringMiddle, '$1')\n        .replace(reEmptyStringTrailing, '$1;');\n\n      // Frame code as the function body.\n      source = 'function(' + (variable || 'obj') + ') {\\n' +\n        (variable\n          ? ''\n          : 'obj || (obj = {});\\n'\n        ) +\n        \"var __t, __p = ''\" +\n        (isEscaping\n           ? ', __e = _.escape'\n           : ''\n        ) +\n        (isEvaluating\n          ? ', __j = Array.prototype.join;\\n' +\n            \"function print() { __p += __j.call(arguments, '') }\\n\"\n          : ';\\n'\n        ) +\n        source +\n        'return __p\\n}';\n\n      var result = attempt(function() {\n        return Function(importsKeys, sourceURL + 'return ' + source)\n          .apply(undefined, importsValues);\n      });\n\n      // Provide the compiled function's source by its `toString` method or\n      // the `source` property as a convenience for inlining compiled templates.\n      result.source = source;\n      if (isError(result)) {\n        throw result;\n      }\n      return result;\n    }\n\n    /**\n     * Converts `string`, as a whole, to lower case just like\n     * [String#toLowerCase](https://mdn.io/toLowerCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.toLower('--Foo-Bar--');\n     * // => '--foo-bar--'\n     *\n     * _.toLower('fooBar');\n     * // => 'foobar'\n     *\n     * _.toLower('__FOO_BAR__');\n     * // => '__foo_bar__'\n     */\n    function toLower(value) {\n      return toString(value).toLowerCase();\n    }\n\n    /**\n     * Converts `string`, as a whole, to upper case just like\n     * [String#toUpperCase](https://mdn.io/toUpperCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.toUpper('--foo-bar--');\n     * // => '--FOO-BAR--'\n     *\n     * _.toUpper('fooBar');\n     * // => 'FOOBAR'\n     *\n     * _.toUpper('__foo_bar__');\n     * // => '__FOO_BAR__'\n     */\n    function toUpper(value) {\n      return toString(value).toUpperCase();\n    }\n\n    /**\n     * Removes leading and trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trim('  abc  ');\n     * // => 'abc'\n     *\n     * _.trim('-_-abc-_-', '_-');\n     * // => 'abc'\n     *\n     * _.map(['  foo  ', '  bar  '], _.trim);\n     * // => ['foo', 'bar']\n     */\n    function trim(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrim, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          chrSymbols = stringToArray(chars),\n          start = charsStartIndex(strSymbols, chrSymbols),\n          end = charsEndIndex(strSymbols, chrSymbols) + 1;\n\n      return castSlice(strSymbols, start, end).join('');\n    }\n\n    /**\n     * Removes trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimEnd('  abc  ');\n     * // => '  abc'\n     *\n     * _.trimEnd('-_-abc-_-', '_-');\n     * // => '-_-abc'\n     */\n    function trimEnd(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimEnd, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;\n\n      return castSlice(strSymbols, 0, end).join('');\n    }\n\n    /**\n     * Removes leading whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimStart('  abc  ');\n     * // => 'abc  '\n     *\n     * _.trimStart('-_-abc-_-', '_-');\n     * // => 'abc-_-'\n     */\n    function trimStart(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimStart, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          start = charsStartIndex(strSymbols, stringToArray(chars));\n\n      return castSlice(strSymbols, start).join('');\n    }\n\n    /**\n     * Truncates `string` if it's longer than the given maximum string length.\n     * The last characters of the truncated string are replaced with the omission\n     * string which defaults to \"...\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to truncate.\n     * @param {Object} [options={}] The options object.\n     * @param {number} [options.length=30] The maximum string length.\n     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n     * @returns {string} Returns the truncated string.\n     * @example\n     *\n     * _.truncate('hi-diddly-ho there, neighborino');\n     * // => 'hi-diddly-ho there, neighbo...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': ' '\n     * });\n     * // => 'hi-diddly-ho there,...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': /,? +/\n     * });\n     * // => 'hi-diddly-ho there...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'omission': ' [...]'\n     * });\n     * // => 'hi-diddly-ho there, neig [...]'\n     */\n    function truncate(string, options) {\n      var length = DEFAULT_TRUNC_LENGTH,\n          omission = DEFAULT_TRUNC_OMISSION;\n\n      if (isObject(options)) {\n        var separator = 'separator' in options ? options.separator : separator;\n        length = 'length' in options ? toInteger(options.length) : length;\n        omission = 'omission' in options ? baseToString(options.omission) : omission;\n      }\n      string = toString(string);\n\n      var strLength = string.length;\n      if (hasUnicode(string)) {\n        var strSymbols = stringToArray(string);\n        strLength = strSymbols.length;\n      }\n      if (length >= strLength) {\n        return string;\n      }\n      var end = length - stringSize(omission);\n      if (end < 1) {\n        return omission;\n      }\n      var result = strSymbols\n        ? castSlice(strSymbols, 0, end).join('')\n        : string.slice(0, end);\n\n      if (separator === undefined) {\n        return result + omission;\n      }\n      if (strSymbols) {\n        end += (result.length - end);\n      }\n      if (isRegExp(separator)) {\n        if (string.slice(end).search(separator)) {\n          var match,\n              substring = result;\n\n          if (!separator.global) {\n            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');\n          }\n          separator.lastIndex = 0;\n          while ((match = separator.exec(substring))) {\n            var newEnd = match.index;\n          }\n          result = result.slice(0, newEnd === undefined ? end : newEnd);\n        }\n      } else if (string.indexOf(baseToString(separator), end) != end) {\n        var index = result.lastIndexOf(separator);\n        if (index > -1) {\n          result = result.slice(0, index);\n        }\n      }\n      return result + omission;\n    }\n\n    /**\n     * The inverse of `_.escape`; this method converts the HTML entities\n     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to\n     * their corresponding characters.\n     *\n     * **Note:** No other HTML entities are unescaped. To unescape additional\n     * HTML entities use a third-party library like [_he_](https://mths.be/he).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.6.0\n     * @category String\n     * @param {string} [string=''] The string to unescape.\n     * @returns {string} Returns the unescaped string.\n     * @example\n     *\n     * _.unescape('fred, barney, &amp; pebbles');\n     * // => 'fred, barney, & pebbles'\n     */\n    function unescape(string) {\n      string = toString(string);\n      return (string && reHasEscapedHtml.test(string))\n        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Converts `string`, as space separated words, to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.upperCase('--foo-bar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('fooBar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('__foo_bar__');\n     * // => 'FOO BAR'\n     */\n    var upperCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toUpperCase();\n    });\n\n    /**\n     * Converts the first character of `string` to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.upperFirst('fred');\n     * // => 'Fred'\n     *\n     * _.upperFirst('FRED');\n     * // => 'FRED'\n     */\n    var upperFirst = createCaseFirst('toUpperCase');\n\n    /**\n     * Splits `string` into an array of its words.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {RegExp|string} [pattern] The pattern to match words.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the words of `string`.\n     * @example\n     *\n     * _.words('fred, barney, & pebbles');\n     * // => ['fred', 'barney', 'pebbles']\n     *\n     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n     * // => ['fred', 'barney', '&', 'pebbles']\n     */\n    function words(string, pattern, guard) {\n      string = toString(string);\n      pattern = guard ? undefined : pattern;\n\n      if (pattern === undefined) {\n        return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n      }\n      return string.match(pattern) || [];\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Attempts to invoke `func`, returning either the result or the caught error\n     * object. Any additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Function} func The function to attempt.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {*} Returns the `func` result or error object.\n     * @example\n     *\n     * // Avoid throwing errors for invalid selectors.\n     * var elements = _.attempt(function(selector) {\n     *   return document.querySelectorAll(selector);\n     * }, '>_>');\n     *\n     * if (_.isError(elements)) {\n     *   elements = [];\n     * }\n     */\n    var attempt = baseRest(function(func, args) {\n      try {\n        return apply(func, undefined, args);\n      } catch (e) {\n        return isError(e) ? e : new Error(e);\n      }\n    });\n\n    /**\n     * Binds methods of an object to the object itself, overwriting the existing\n     * method.\n     *\n     * **Note:** This method doesn't set the \"length\" property of bound functions.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {...(string|string[])} methodNames The object method names to bind.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'click': function() {\n     *     console.log('clicked ' + this.label);\n     *   }\n     * };\n     *\n     * _.bindAll(view, ['click']);\n     * jQuery(element).on('click', view.click);\n     * // => Logs 'clicked docs' when clicked.\n     */\n    var bindAll = flatRest(function(object, methodNames) {\n      arrayEach(methodNames, function(key) {\n        key = toKey(key);\n        baseAssignValue(object, key, bind(object[key], object));\n      });\n      return object;\n    });\n\n    /**\n     * Creates a function that iterates over `pairs` and invokes the corresponding\n     * function of the first predicate to return truthy. The predicate-function\n     * pairs are invoked with the `this` binding and arguments of the created\n     * function.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Array} pairs The predicate-function pairs.\n     * @returns {Function} Returns the new composite function.\n     * @example\n     *\n     * var func = _.cond([\n     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],\n     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],\n     *   [_.stubTrue,                      _.constant('no match')]\n     * ]);\n     *\n     * func({ 'a': 1, 'b': 2 });\n     * // => 'matches A'\n     *\n     * func({ 'a': 0, 'b': 1 });\n     * // => 'matches B'\n     *\n     * func({ 'a': '1', 'b': '2' });\n     * // => 'no match'\n     */\n    function cond(pairs) {\n      var length = pairs == null ? 0 : pairs.length,\n          toIteratee = getIteratee();\n\n      pairs = !length ? [] : arrayMap(pairs, function(pair) {\n        if (typeof pair[1] != 'function') {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n        return [toIteratee(pair[0]), pair[1]];\n      });\n\n      return baseRest(function(args) {\n        var index = -1;\n        while (++index < length) {\n          var pair = pairs[index];\n          if (apply(pair[0], this, args)) {\n            return apply(pair[1], this, args);\n          }\n        }\n      });\n    }\n\n    /**\n     * Creates a function that invokes the predicate properties of `source` with\n     * the corresponding property values of a given object, returning `true` if\n     * all predicates return truthy, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.conformsTo` with\n     * `source` partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 2, 'b': 1 },\n     *   { 'a': 1, 'b': 2 }\n     * ];\n     *\n     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));\n     * // => [{ 'a': 1, 'b': 2 }]\n     */\n    function conforms(source) {\n      return baseConforms(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that returns `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {*} value The value to return from the new function.\n     * @returns {Function} Returns the new constant function.\n     * @example\n     *\n     * var objects = _.times(2, _.constant({ 'a': 1 }));\n     *\n     * console.log(objects);\n     * // => [{ 'a': 1 }, { 'a': 1 }]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => true\n     */\n    function constant(value) {\n      return function() {\n        return value;\n      };\n    }\n\n    /**\n     * Checks `value` to determine whether a default value should be returned in\n     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,\n     * or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Util\n     * @param {*} value The value to check.\n     * @param {*} defaultValue The default value.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * _.defaultTo(1, 10);\n     * // => 1\n     *\n     * _.defaultTo(undefined, 10);\n     * // => 10\n     */\n    function defaultTo(value, defaultValue) {\n      return (value == null || value !== value) ? defaultValue : value;\n    }\n\n    /**\n     * Creates a function that returns the result of invoking the given functions\n     * with the `this` binding of the created function, where each successive\n     * invocation is supplied the return value of the previous.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flowRight\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flow([_.add, square]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flow = createFlow();\n\n    /**\n     * This method is like `_.flow` except that it creates a function that\n     * invokes the given functions from right to left.\n     *\n     * @static\n     * @since 3.0.0\n     * @memberOf _\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flow\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flowRight([square, _.add]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flowRight = createFlow(true);\n\n    /**\n     * This method returns the first argument it receives.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {*} value Any value.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     *\n     * console.log(_.identity(object) === object);\n     * // => true\n     */\n    function identity(value) {\n      return value;\n    }\n\n    /**\n     * Creates a function that invokes `func` with the arguments of the created\n     * function. If `func` is a property name, the created function returns the\n     * property value for a given element. If `func` is an array or object, the\n     * created function returns `true` for elements that contain the equivalent\n     * source properties, otherwise it returns `false`.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Util\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @returns {Function} Returns the callback.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));\n     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, _.iteratee(['user', 'fred']));\n     * // => [{ 'user': 'fred', 'age': 40 }]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, _.iteratee('user'));\n     * // => ['barney', 'fred']\n     *\n     * // Create custom iteratee shorthands.\n     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {\n     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {\n     *     return func.test(string);\n     *   };\n     * });\n     *\n     * _.filter(['abc', 'def'], /ef/);\n     * // => ['def']\n     */\n    function iteratee(func) {\n      return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between a given\n     * object and `source`, returning `true` if the given object has equivalent\n     * property values, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.isMatch` with `source`\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));\n     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]\n     */\n    function matches(source) {\n      return baseMatches(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between the\n     * value at `path` of a given object to `srcValue`, returning `true` if the\n     * object value is equivalent, else `false`.\n     *\n     * **Note:** Partial comparisons will match empty array and empty object\n     * `srcValue` values against any array or object value, respectively. See\n     * `_.isEqual` for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.find(objects, _.matchesProperty('a', 4));\n     * // => { 'a': 4, 'b': 5, 'c': 6 }\n     */\n    function matchesProperty(path, srcValue) {\n      return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that invokes the method at `path` of a given object.\n     * Any additional arguments are provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': _.constant(2) } },\n     *   { 'a': { 'b': _.constant(1) } }\n     * ];\n     *\n     * _.map(objects, _.method('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(objects, _.method(['a', 'b']));\n     * // => [2, 1]\n     */\n    var method = baseRest(function(path, args) {\n      return function(object) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * The opposite of `_.method`; this method creates a function that invokes\n     * the method at a given path of `object`. Any additional arguments are\n     * provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var array = _.times(3, _.constant),\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n     * // => [2, 0]\n     */\n    var methodOf = baseRest(function(object, args) {\n      return function(path) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * Adds all own enumerable string keyed function properties of a source\n     * object to the destination object. If `object` is a function, then methods\n     * are added to its prototype as well.\n     *\n     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n     * avoid conflicts caused by modifying the original.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Function|Object} [object=lodash] The destination object.\n     * @param {Object} source The object of functions to add.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.\n     * @returns {Function|Object} Returns `object`.\n     * @example\n     *\n     * function vowels(string) {\n     *   return _.filter(string, function(v) {\n     *     return /[aeiou]/i.test(v);\n     *   });\n     * }\n     *\n     * _.mixin({ 'vowels': vowels });\n     * _.vowels('fred');\n     * // => ['e']\n     *\n     * _('fred').vowels().value();\n     * // => ['e']\n     *\n     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n     * _('fred').vowels();\n     * // => ['e']\n     */\n    function mixin(object, source, options) {\n      var props = keys(source),\n          methodNames = baseFunctions(source, props);\n\n      if (options == null &&\n          !(isObject(source) && (methodNames.length || !props.length))) {\n        options = source;\n        source = object;\n        object = this;\n        methodNames = baseFunctions(source, keys(source));\n      }\n      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,\n          isFunc = isFunction(object);\n\n      arrayEach(methodNames, function(methodName) {\n        var func = source[methodName];\n        object[methodName] = func;\n        if (isFunc) {\n          object.prototype[methodName] = function() {\n            var chainAll = this.__chain__;\n            if (chain || chainAll) {\n              var result = object(this.__wrapped__),\n                  actions = result.__actions__ = copyArray(this.__actions__);\n\n              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n              result.__chain__ = chainAll;\n              return result;\n            }\n            return func.apply(object, arrayPush([this.value()], arguments));\n          };\n        }\n      });\n\n      return object;\n    }\n\n    /**\n     * Reverts the `_` variable to its previous value and returns a reference to\n     * the `lodash` function.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @returns {Function} Returns the `lodash` function.\n     * @example\n     *\n     * var lodash = _.noConflict();\n     */\n    function noConflict() {\n      if (root._ === this) {\n        root._ = oldDash;\n      }\n      return this;\n    }\n\n    /**\n     * This method returns `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Util\n     * @example\n     *\n     * _.times(2, _.noop);\n     * // => [undefined, undefined]\n     */\n    function noop() {\n      // No operation performed.\n    }\n\n    /**\n     * Creates a function that gets the argument at index `n`. If `n` is negative,\n     * the nth argument from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [n=0] The index of the argument to return.\n     * @returns {Function} Returns the new pass-thru function.\n     * @example\n     *\n     * var func = _.nthArg(1);\n     * func('a', 'b', 'c', 'd');\n     * // => 'b'\n     *\n     * var func = _.nthArg(-2);\n     * func('a', 'b', 'c', 'd');\n     * // => 'c'\n     */\n    function nthArg(n) {\n      n = toInteger(n);\n      return baseRest(function(args) {\n        return baseNth(args, n);\n      });\n    }\n\n    /**\n     * Creates a function that invokes `iteratees` with the arguments it receives\n     * and returns their results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.over([Math.max, Math.min]);\n     *\n     * func(1, 2, 3, 4);\n     * // => [4, 1]\n     */\n    var over = createOver(arrayMap);\n\n    /**\n     * Creates a function that checks if **all** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overEvery([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => false\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overEvery = createOver(arrayEvery);\n\n    /**\n     * Creates a function that checks if **any** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overSome([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => true\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overSome = createOver(arraySome);\n\n    /**\n     * Creates a function that returns the value at `path` of a given object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': 2 } },\n     *   { 'a': { 'b': 1 } }\n     * ];\n     *\n     * _.map(objects, _.property('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n     * // => [1, 2]\n     */\n    function property(path) {\n      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n    }\n\n    /**\n     * The opposite of `_.property`; this method creates a function that returns\n     * the value at a given path of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var array = [0, 1, 2],\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n     * // => [2, 0]\n     */\n    function propertyOf(object) {\n      return function(path) {\n        return object == null ? undefined : baseGet(object, path);\n      };\n    }\n\n    /**\n     * Creates an array of numbers (positive and/or negative) progressing from\n     * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n     * `start` is specified without an `end` or `step`. If `end` is not specified,\n     * it's set to `start` with `start` then set to `0`.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.rangeRight\n     * @example\n     *\n     * _.range(4);\n     * // => [0, 1, 2, 3]\n     *\n     * _.range(-4);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 5);\n     * // => [1, 2, 3, 4]\n     *\n     * _.range(0, 20, 5);\n     * // => [0, 5, 10, 15]\n     *\n     * _.range(0, -4, -1);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.range(0);\n     * // => []\n     */\n    var range = createRange();\n\n    /**\n     * This method is like `_.range` except that it populates values in\n     * descending order.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.range\n     * @example\n     *\n     * _.rangeRight(4);\n     * // => [3, 2, 1, 0]\n     *\n     * _.rangeRight(-4);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 5);\n     * // => [4, 3, 2, 1]\n     *\n     * _.rangeRight(0, 20, 5);\n     * // => [15, 10, 5, 0]\n     *\n     * _.rangeRight(0, -4, -1);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.rangeRight(0);\n     * // => []\n     */\n    var rangeRight = createRange(true);\n\n    /**\n     * This method returns a new empty array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Array} Returns the new empty array.\n     * @example\n     *\n     * var arrays = _.times(2, _.stubArray);\n     *\n     * console.log(arrays);\n     * // => [[], []]\n     *\n     * console.log(arrays[0] === arrays[1]);\n     * // => false\n     */\n    function stubArray() {\n      return [];\n    }\n\n    /**\n     * This method returns `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `false`.\n     * @example\n     *\n     * _.times(2, _.stubFalse);\n     * // => [false, false]\n     */\n    function stubFalse() {\n      return false;\n    }\n\n    /**\n     * This method returns a new empty object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Object} Returns the new empty object.\n     * @example\n     *\n     * var objects = _.times(2, _.stubObject);\n     *\n     * console.log(objects);\n     * // => [{}, {}]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => false\n     */\n    function stubObject() {\n      return {};\n    }\n\n    /**\n     * This method returns an empty string.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {string} Returns the empty string.\n     * @example\n     *\n     * _.times(2, _.stubString);\n     * // => ['', '']\n     */\n    function stubString() {\n      return '';\n    }\n\n    /**\n     * This method returns `true`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `true`.\n     * @example\n     *\n     * _.times(2, _.stubTrue);\n     * // => [true, true]\n     */\n    function stubTrue() {\n      return true;\n    }\n\n    /**\n     * Invokes the iteratee `n` times, returning an array of the results of\n     * each invocation. The iteratee is invoked with one argument; (index).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} n The number of times to invoke `iteratee`.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.times(3, String);\n     * // => ['0', '1', '2']\n     *\n     *  _.times(4, _.constant(0));\n     * // => [0, 0, 0, 0]\n     */\n    function times(n, iteratee) {\n      n = toInteger(n);\n      if (n < 1 || n > MAX_SAFE_INTEGER) {\n        return [];\n      }\n      var index = MAX_ARRAY_LENGTH,\n          length = nativeMin(n, MAX_ARRAY_LENGTH);\n\n      iteratee = getIteratee(iteratee);\n      n -= MAX_ARRAY_LENGTH;\n\n      var result = baseTimes(length, iteratee);\n      while (++index < n) {\n        iteratee(index);\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a property path array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the new property path array.\n     * @example\n     *\n     * _.toPath('a.b.c');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toPath('a[0].b.c');\n     * // => ['a', '0', 'b', 'c']\n     */\n    function toPath(value) {\n      if (isArray(value)) {\n        return arrayMap(value, toKey);\n      }\n      return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));\n    }\n\n    /**\n     * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {string} [prefix=''] The value to prefix the ID with.\n     * @returns {string} Returns the unique ID.\n     * @example\n     *\n     * _.uniqueId('contact_');\n     * // => 'contact_104'\n     *\n     * _.uniqueId();\n     * // => '105'\n     */\n    function uniqueId(prefix) {\n      var id = ++idCounter;\n      return toString(prefix) + id;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Adds two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {number} augend The first number in an addition.\n     * @param {number} addend The second number in an addition.\n     * @returns {number} Returns the total.\n     * @example\n     *\n     * _.add(6, 4);\n     * // => 10\n     */\n    var add = createMathOperation(function(augend, addend) {\n      return augend + addend;\n    }, 0);\n\n    /**\n     * Computes `number` rounded up to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round up.\n     * @param {number} [precision=0] The precision to round up to.\n     * @returns {number} Returns the rounded up number.\n     * @example\n     *\n     * _.ceil(4.006);\n     * // => 5\n     *\n     * _.ceil(6.004, 2);\n     * // => 6.01\n     *\n     * _.ceil(6040, -2);\n     * // => 6100\n     */\n    var ceil = createRound('ceil');\n\n    /**\n     * Divide two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} dividend The first number in a division.\n     * @param {number} divisor The second number in a division.\n     * @returns {number} Returns the quotient.\n     * @example\n     *\n     * _.divide(6, 4);\n     * // => 1.5\n     */\n    var divide = createMathOperation(function(dividend, divisor) {\n      return dividend / divisor;\n    }, 1);\n\n    /**\n     * Computes `number` rounded down to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round down.\n     * @param {number} [precision=0] The precision to round down to.\n     * @returns {number} Returns the rounded down number.\n     * @example\n     *\n     * _.floor(4.006);\n     * // => 4\n     *\n     * _.floor(0.046, 2);\n     * // => 0.04\n     *\n     * _.floor(4060, -2);\n     * // => 4000\n     */\n    var floor = createRound('floor');\n\n    /**\n     * Computes the maximum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * _.max([4, 2, 8, 6]);\n     * // => 8\n     *\n     * _.max([]);\n     * // => undefined\n     */\n    function max(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseGt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.max` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.maxBy(objects, function(o) { return o.n; });\n     * // => { 'n': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.maxBy(objects, 'n');\n     * // => { 'n': 2 }\n     */\n    function maxBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseGt)\n        : undefined;\n    }\n\n    /**\n     * Computes the mean of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * _.mean([4, 2, 8, 6]);\n     * // => 5\n     */\n    function mean(array) {\n      return baseMean(array, identity);\n    }\n\n    /**\n     * This method is like `_.mean` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be averaged.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.meanBy(objects, function(o) { return o.n; });\n     * // => 5\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.meanBy(objects, 'n');\n     * // => 5\n     */\n    function meanBy(array, iteratee) {\n      return baseMean(array, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * Computes the minimum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * _.min([4, 2, 8, 6]);\n     * // => 2\n     *\n     * _.min([]);\n     * // => undefined\n     */\n    function min(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseLt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.min` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.minBy(objects, function(o) { return o.n; });\n     * // => { 'n': 1 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.minBy(objects, 'n');\n     * // => { 'n': 1 }\n     */\n    function minBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseLt)\n        : undefined;\n    }\n\n    /**\n     * Multiply two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} multiplier The first number in a multiplication.\n     * @param {number} multiplicand The second number in a multiplication.\n     * @returns {number} Returns the product.\n     * @example\n     *\n     * _.multiply(6, 4);\n     * // => 24\n     */\n    var multiply = createMathOperation(function(multiplier, multiplicand) {\n      return multiplier * multiplicand;\n    }, 1);\n\n    /**\n     * Computes `number` rounded to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round.\n     * @param {number} [precision=0] The precision to round to.\n     * @returns {number} Returns the rounded number.\n     * @example\n     *\n     * _.round(4.006);\n     * // => 4\n     *\n     * _.round(4.006, 2);\n     * // => 4.01\n     *\n     * _.round(4060, -2);\n     * // => 4100\n     */\n    var round = createRound('round');\n\n    /**\n     * Subtract two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {number} minuend The first number in a subtraction.\n     * @param {number} subtrahend The second number in a subtraction.\n     * @returns {number} Returns the difference.\n     * @example\n     *\n     * _.subtract(6, 4);\n     * // => 2\n     */\n    var subtract = createMathOperation(function(minuend, subtrahend) {\n      return minuend - subtrahend;\n    }, 0);\n\n    /**\n     * Computes the sum of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.sum([4, 2, 8, 6]);\n     * // => 20\n     */\n    function sum(array) {\n      return (array && array.length)\n        ? baseSum(array, identity)\n        : 0;\n    }\n\n    /**\n     * This method is like `_.sum` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be summed.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.sumBy(objects, function(o) { return o.n; });\n     * // => 20\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sumBy(objects, 'n');\n     * // => 20\n     */\n    function sumBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSum(array, getIteratee(iteratee, 2))\n        : 0;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return wrapped values in chain sequences.\n    lodash.after = after;\n    lodash.ary = ary;\n    lodash.assign = assign;\n    lodash.assignIn = assignIn;\n    lodash.assignInWith = assignInWith;\n    lodash.assignWith = assignWith;\n    lodash.at = at;\n    lodash.before = before;\n    lodash.bind = bind;\n    lodash.bindAll = bindAll;\n    lodash.bindKey = bindKey;\n    lodash.castArray = castArray;\n    lodash.chain = chain;\n    lodash.chunk = chunk;\n    lodash.compact = compact;\n    lodash.concat = concat;\n    lodash.cond = cond;\n    lodash.conforms = conforms;\n    lodash.constant = constant;\n    lodash.countBy = countBy;\n    lodash.create = create;\n    lodash.curry = curry;\n    lodash.curryRight = curryRight;\n    lodash.debounce = debounce;\n    lodash.defaults = defaults;\n    lodash.defaultsDeep = defaultsDeep;\n    lodash.defer = defer;\n    lodash.delay = delay;\n    lodash.difference = difference;\n    lodash.differenceBy = differenceBy;\n    lodash.differenceWith = differenceWith;\n    lodash.drop = drop;\n    lodash.dropRight = dropRight;\n    lodash.dropRightWhile = dropRightWhile;\n    lodash.dropWhile = dropWhile;\n    lodash.fill = fill;\n    lodash.filter = filter;\n    lodash.flatMap = flatMap;\n    lodash.flatMapDeep = flatMapDeep;\n    lodash.flatMapDepth = flatMapDepth;\n    lodash.flatten = flatten;\n    lodash.flattenDeep = flattenDeep;\n    lodash.flattenDepth = flattenDepth;\n    lodash.flip = flip;\n    lodash.flow = flow;\n    lodash.flowRight = flowRight;\n    lodash.fromPairs = fromPairs;\n    lodash.functions = functions;\n    lodash.functionsIn = functionsIn;\n    lodash.groupBy = groupBy;\n    lodash.initial = initial;\n    lodash.intersection = intersection;\n    lodash.intersectionBy = intersectionBy;\n    lodash.intersectionWith = intersectionWith;\n    lodash.invert = invert;\n    lodash.invertBy = invertBy;\n    lodash.invokeMap = invokeMap;\n    lodash.iteratee = iteratee;\n    lodash.keyBy = keyBy;\n    lodash.keys = keys;\n    lodash.keysIn = keysIn;\n    lodash.map = map;\n    lodash.mapKeys = mapKeys;\n    lodash.mapValues = mapValues;\n    lodash.matches = matches;\n    lodash.matchesProperty = matchesProperty;\n    lodash.memoize = memoize;\n    lodash.merge = merge;\n    lodash.mergeWith = mergeWith;\n    lodash.method = method;\n    lodash.methodOf = methodOf;\n    lodash.mixin = mixin;\n    lodash.negate = negate;\n    lodash.nthArg = nthArg;\n    lodash.omit = omit;\n    lodash.omitBy = omitBy;\n    lodash.once = once;\n    lodash.orderBy = orderBy;\n    lodash.over = over;\n    lodash.overArgs = overArgs;\n    lodash.overEvery = overEvery;\n    lodash.overSome = overSome;\n    lodash.partial = partial;\n    lodash.partialRight = partialRight;\n    lodash.partition = partition;\n    lodash.pick = pick;\n    lodash.pickBy = pickBy;\n    lodash.property = property;\n    lodash.propertyOf = propertyOf;\n    lodash.pull = pull;\n    lodash.pullAll = pullAll;\n    lodash.pullAllBy = pullAllBy;\n    lodash.pullAllWith = pullAllWith;\n    lodash.pullAt = pullAt;\n    lodash.range = range;\n    lodash.rangeRight = rangeRight;\n    lodash.rearg = rearg;\n    lodash.reject = reject;\n    lodash.remove = remove;\n    lodash.rest = rest;\n    lodash.reverse = reverse;\n    lodash.sampleSize = sampleSize;\n    lodash.set = set;\n    lodash.setWith = setWith;\n    lodash.shuffle = shuffle;\n    lodash.slice = slice;\n    lodash.sortBy = sortBy;\n    lodash.sortedUniq = sortedUniq;\n    lodash.sortedUniqBy = sortedUniqBy;\n    lodash.split = split;\n    lodash.spread = spread;\n    lodash.tail = tail;\n    lodash.take = take;\n    lodash.takeRight = takeRight;\n    lodash.takeRightWhile = takeRightWhile;\n    lodash.takeWhile = takeWhile;\n    lodash.tap = tap;\n    lodash.throttle = throttle;\n    lodash.thru = thru;\n    lodash.toArray = toArray;\n    lodash.toPairs = toPairs;\n    lodash.toPairsIn = toPairsIn;\n    lodash.toPath = toPath;\n    lodash.toPlainObject = toPlainObject;\n    lodash.transform = transform;\n    lodash.unary = unary;\n    lodash.union = union;\n    lodash.unionBy = unionBy;\n    lodash.unionWith = unionWith;\n    lodash.uniq = uniq;\n    lodash.uniqBy = uniqBy;\n    lodash.uniqWith = uniqWith;\n    lodash.unset = unset;\n    lodash.unzip = unzip;\n    lodash.unzipWith = unzipWith;\n    lodash.update = update;\n    lodash.updateWith = updateWith;\n    lodash.values = values;\n    lodash.valuesIn = valuesIn;\n    lodash.without = without;\n    lodash.words = words;\n    lodash.wrap = wrap;\n    lodash.xor = xor;\n    lodash.xorBy = xorBy;\n    lodash.xorWith = xorWith;\n    lodash.zip = zip;\n    lodash.zipObject = zipObject;\n    lodash.zipObjectDeep = zipObjectDeep;\n    lodash.zipWith = zipWith;\n\n    // Add aliases.\n    lodash.entries = toPairs;\n    lodash.entriesIn = toPairsIn;\n    lodash.extend = assignIn;\n    lodash.extendWith = assignInWith;\n\n    // Add methods to `lodash.prototype`.\n    mixin(lodash, lodash);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return unwrapped values in chain sequences.\n    lodash.add = add;\n    lodash.attempt = attempt;\n    lodash.camelCase = camelCase;\n    lodash.capitalize = capitalize;\n    lodash.ceil = ceil;\n    lodash.clamp = clamp;\n    lodash.clone = clone;\n    lodash.cloneDeep = cloneDeep;\n    lodash.cloneDeepWith = cloneDeepWith;\n    lodash.cloneWith = cloneWith;\n    lodash.conformsTo = conformsTo;\n    lodash.deburr = deburr;\n    lodash.defaultTo = defaultTo;\n    lodash.divide = divide;\n    lodash.endsWith = endsWith;\n    lodash.eq = eq;\n    lodash.escape = escape;\n    lodash.escapeRegExp = escapeRegExp;\n    lodash.every = every;\n    lodash.find = find;\n    lodash.findIndex = findIndex;\n    lodash.findKey = findKey;\n    lodash.findLast = findLast;\n    lodash.findLastIndex = findLastIndex;\n    lodash.findLastKey = findLastKey;\n    lodash.floor = floor;\n    lodash.forEach = forEach;\n    lodash.forEachRight = forEachRight;\n    lodash.forIn = forIn;\n    lodash.forInRight = forInRight;\n    lodash.forOwn = forOwn;\n    lodash.forOwnRight = forOwnRight;\n    lodash.get = get;\n    lodash.gt = gt;\n    lodash.gte = gte;\n    lodash.has = has;\n    lodash.hasIn = hasIn;\n    lodash.head = head;\n    lodash.identity = identity;\n    lodash.includes = includes;\n    lodash.indexOf = indexOf;\n    lodash.inRange = inRange;\n    lodash.invoke = invoke;\n    lodash.isArguments = isArguments;\n    lodash.isArray = isArray;\n    lodash.isArrayBuffer = isArrayBuffer;\n    lodash.isArrayLike = isArrayLike;\n    lodash.isArrayLikeObject = isArrayLikeObject;\n    lodash.isBoolean = isBoolean;\n    lodash.isBuffer = isBuffer;\n    lodash.isDate = isDate;\n    lodash.isElement = isElement;\n    lodash.isEmpty = isEmpty;\n    lodash.isEqual = isEqual;\n    lodash.isEqualWith = isEqualWith;\n    lodash.isError = isError;\n    lodash.isFinite = isFinite;\n    lodash.isFunction = isFunction;\n    lodash.isInteger = isInteger;\n    lodash.isLength = isLength;\n    lodash.isMap = isMap;\n    lodash.isMatch = isMatch;\n    lodash.isMatchWith = isMatchWith;\n    lodash.isNaN = isNaN;\n    lodash.isNative = isNative;\n    lodash.isNil = isNil;\n    lodash.isNull = isNull;\n    lodash.isNumber = isNumber;\n    lodash.isObject = isObject;\n    lodash.isObjectLike = isObjectLike;\n    lodash.isPlainObject = isPlainObject;\n    lodash.isRegExp = isRegExp;\n    lodash.isSafeInteger = isSafeInteger;\n    lodash.isSet = isSet;\n    lodash.isString = isString;\n    lodash.isSymbol = isSymbol;\n    lodash.isTypedArray = isTypedArray;\n    lodash.isUndefined = isUndefined;\n    lodash.isWeakMap = isWeakMap;\n    lodash.isWeakSet = isWeakSet;\n    lodash.join = join;\n    lodash.kebabCase = kebabCase;\n    lodash.last = last;\n    lodash.lastIndexOf = lastIndexOf;\n    lodash.lowerCase = lowerCase;\n    lodash.lowerFirst = lowerFirst;\n    lodash.lt = lt;\n    lodash.lte = lte;\n    lodash.max = max;\n    lodash.maxBy = maxBy;\n    lodash.mean = mean;\n    lodash.meanBy = meanBy;\n    lodash.min = min;\n    lodash.minBy = minBy;\n    lodash.stubArray = stubArray;\n    lodash.stubFalse = stubFalse;\n    lodash.stubObject = stubObject;\n    lodash.stubString = stubString;\n    lodash.stubTrue = stubTrue;\n    lodash.multiply = multiply;\n    lodash.nth = nth;\n    lodash.noConflict = noConflict;\n    lodash.noop = noop;\n    lodash.now = now;\n    lodash.pad = pad;\n    lodash.padEnd = padEnd;\n    lodash.padStart = padStart;\n    lodash.parseInt = parseInt;\n    lodash.random = random;\n    lodash.reduce = reduce;\n    lodash.reduceRight = reduceRight;\n    lodash.repeat = repeat;\n    lodash.replace = replace;\n    lodash.result = result;\n    lodash.round = round;\n    lodash.runInContext = runInContext;\n    lodash.sample = sample;\n    lodash.size = size;\n    lodash.snakeCase = snakeCase;\n    lodash.some = some;\n    lodash.sortedIndex = sortedIndex;\n    lodash.sortedIndexBy = sortedIndexBy;\n    lodash.sortedIndexOf = sortedIndexOf;\n    lodash.sortedLastIndex = sortedLastIndex;\n    lodash.sortedLastIndexBy = sortedLastIndexBy;\n    lodash.sortedLastIndexOf = sortedLastIndexOf;\n    lodash.startCase = startCase;\n    lodash.startsWith = startsWith;\n    lodash.subtract = subtract;\n    lodash.sum = sum;\n    lodash.sumBy = sumBy;\n    lodash.template = template;\n    lodash.times = times;\n    lodash.toFinite = toFinite;\n    lodash.toInteger = toInteger;\n    lodash.toLength = toLength;\n    lodash.toLower = toLower;\n    lodash.toNumber = toNumber;\n    lodash.toSafeInteger = toSafeInteger;\n    lodash.toString = toString;\n    lodash.toUpper = toUpper;\n    lodash.trim = trim;\n    lodash.trimEnd = trimEnd;\n    lodash.trimStart = trimStart;\n    lodash.truncate = truncate;\n    lodash.unescape = unescape;\n    lodash.uniqueId = uniqueId;\n    lodash.upperCase = upperCase;\n    lodash.upperFirst = upperFirst;\n\n    // Add aliases.\n    lodash.each = forEach;\n    lodash.eachRight = forEachRight;\n    lodash.first = head;\n\n    mixin(lodash, (function() {\n      var source = {};\n      baseForOwn(lodash, function(func, methodName) {\n        if (!hasOwnProperty.call(lodash.prototype, methodName)) {\n          source[methodName] = func;\n        }\n      });\n      return source;\n    }()), { 'chain': false });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The semantic version number.\n     *\n     * @static\n     * @memberOf _\n     * @type {string}\n     */\n    lodash.VERSION = VERSION;\n\n    // Assign default placeholders.\n    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n      lodash[methodName].placeholder = lodash;\n    });\n\n    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n    arrayEach(['drop', 'take'], function(methodName, index) {\n      LazyWrapper.prototype[methodName] = function(n) {\n        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);\n\n        var result = (this.__filtered__ && !index)\n          ? new LazyWrapper(this)\n          : this.clone();\n\n        if (result.__filtered__) {\n          result.__takeCount__ = nativeMin(n, result.__takeCount__);\n        } else {\n          result.__views__.push({\n            'size': nativeMin(n, MAX_ARRAY_LENGTH),\n            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')\n          });\n        }\n        return result;\n      };\n\n      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n        return this.reverse()[methodName](n).reverse();\n      };\n    });\n\n    // Add `LazyWrapper` methods that accept an `iteratee` value.\n    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n      var type = index + 1,\n          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;\n\n      LazyWrapper.prototype[methodName] = function(iteratee) {\n        var result = this.clone();\n        result.__iteratees__.push({\n          'iteratee': getIteratee(iteratee, 3),\n          'type': type\n        });\n        result.__filtered__ = result.__filtered__ || isFilter;\n        return result;\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.head` and `_.last`.\n    arrayEach(['head', 'last'], function(methodName, index) {\n      var takeName = 'take' + (index ? 'Right' : '');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this[takeName](1).value()[0];\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.\n    arrayEach(['initial', 'tail'], function(methodName, index) {\n      var dropName = 'drop' + (index ? '' : 'Right');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n      };\n    });\n\n    LazyWrapper.prototype.compact = function() {\n      return this.filter(identity);\n    };\n\n    LazyWrapper.prototype.find = function(predicate) {\n      return this.filter(predicate).head();\n    };\n\n    LazyWrapper.prototype.findLast = function(predicate) {\n      return this.reverse().find(predicate);\n    };\n\n    LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {\n      if (typeof path == 'function') {\n        return new LazyWrapper(this);\n      }\n      return this.map(function(value) {\n        return baseInvoke(value, path, args);\n      });\n    });\n\n    LazyWrapper.prototype.reject = function(predicate) {\n      return this.filter(negate(getIteratee(predicate)));\n    };\n\n    LazyWrapper.prototype.slice = function(start, end) {\n      start = toInteger(start);\n\n      var result = this;\n      if (result.__filtered__ && (start > 0 || end < 0)) {\n        return new LazyWrapper(result);\n      }\n      if (start < 0) {\n        result = result.takeRight(-start);\n      } else if (start) {\n        result = result.drop(start);\n      }\n      if (end !== undefined) {\n        end = toInteger(end);\n        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n      }\n      return result;\n    };\n\n    LazyWrapper.prototype.takeRightWhile = function(predicate) {\n      return this.reverse().takeWhile(predicate).reverse();\n    };\n\n    LazyWrapper.prototype.toArray = function() {\n      return this.take(MAX_ARRAY_LENGTH);\n    };\n\n    // Add `LazyWrapper` methods to `lodash.prototype`.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),\n          isTaker = /^(?:head|last)$/.test(methodName),\n          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],\n          retUnwrapped = isTaker || /^find/.test(methodName);\n\n      if (!lodashFunc) {\n        return;\n      }\n      lodash.prototype[methodName] = function() {\n        var value = this.__wrapped__,\n            args = isTaker ? [1] : arguments,\n            isLazy = value instanceof LazyWrapper,\n            iteratee = args[0],\n            useLazy = isLazy || isArray(value);\n\n        var interceptor = function(value) {\n          var result = lodashFunc.apply(lodash, arrayPush([value], args));\n          return (isTaker && chainAll) ? result[0] : result;\n        };\n\n        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n          isLazy = useLazy = false;\n        }\n        var chainAll = this.__chain__,\n            isHybrid = !!this.__actions__.length,\n            isUnwrapped = retUnwrapped && !chainAll,\n            onlyLazy = isLazy && !isHybrid;\n\n        if (!retUnwrapped && useLazy) {\n          value = onlyLazy ? value : new LazyWrapper(this);\n          var result = func.apply(value, args);\n          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n          return new LodashWrapper(result, chainAll);\n        }\n        if (isUnwrapped && onlyLazy) {\n          return func.apply(this, args);\n        }\n        result = this.thru(interceptor);\n        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;\n      };\n    });\n\n    // Add `Array` methods to `lodash.prototype`.\n    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {\n      var func = arrayProto[methodName],\n          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n          retUnwrapped = /^(?:pop|shift)$/.test(methodName);\n\n      lodash.prototype[methodName] = function() {\n        var args = arguments;\n        if (retUnwrapped && !this.__chain__) {\n          var value = this.value();\n          return func.apply(isArray(value) ? value : [], args);\n        }\n        return this[chainName](function(value) {\n          return func.apply(isArray(value) ? value : [], args);\n        });\n      };\n    });\n\n    // Map minified method names to their real names.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var lodashFunc = lodash[methodName];\n      if (lodashFunc) {\n        var key = (lodashFunc.name + ''),\n            names = realNames[key] || (realNames[key] = []);\n\n        names.push({ 'name': methodName, 'func': lodashFunc });\n      }\n    });\n\n    realNames[createHybrid(undefined, WRAP_BIND_KEY_FLAG).name] = [{\n      'name': 'wrapper',\n      'func': undefined\n    }];\n\n    // Add methods to `LazyWrapper`.\n    LazyWrapper.prototype.clone = lazyClone;\n    LazyWrapper.prototype.reverse = lazyReverse;\n    LazyWrapper.prototype.value = lazyValue;\n\n    // Add chain sequence methods to the `lodash` wrapper.\n    lodash.prototype.at = wrapperAt;\n    lodash.prototype.chain = wrapperChain;\n    lodash.prototype.commit = wrapperCommit;\n    lodash.prototype.next = wrapperNext;\n    lodash.prototype.plant = wrapperPlant;\n    lodash.prototype.reverse = wrapperReverse;\n    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n    // Add lazy aliases.\n    lodash.prototype.first = lodash.prototype.head;\n\n    if (symIterator) {\n      lodash.prototype[symIterator] = wrapperToIterator;\n    }\n    return lodash;\n  });\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export lodash.\n  var _ = runInContext();\n\n  // Some AMD build optimizers, like r.js, check for condition patterns like:\n  if (true) {\n    // Expose Lodash on the global object to prevent errors when Lodash is\n    // loaded by a script tag in the presence of an AMD loader.\n    // See http://requirejs.org/docs/errors.html#mismatch for more details.\n    // Use `_.noConflict` to remove Lodash from the global object.\n    root._ = _;\n\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    !(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n      return _;\n    }.call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  }\n  // Check for `exports` after `define` in case a build optimizer adds it.\n  else if (freeModule) {\n    // Export for Node.js.\n    (freeModule.exports = _)._ = _;\n    // Export for CommonJS support.\n    freeExports._ = _;\n  }\n  else {\n    // Export to the global object.\n    root._ = _;\n  }\n}.call(this));\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(9), __webpack_require__(42)(module)))\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _ = __webpack_require__(2),\n    PriorityQueue = __webpack_require__(15);\n\nmodule.exports = dijkstra;\n\nvar DEFAULT_WEIGHT_FUNC = _.constant(1);\n\nfunction dijkstra(g, source, weightFn, edgeFn) {\n  return runDijkstra(g, String(source),\n                     weightFn || DEFAULT_WEIGHT_FUNC,\n                     edgeFn || function(v) { return g.outEdges(v); });\n}\n\nfunction runDijkstra(g, source, weightFn, edgeFn) {\n  var results = {},\n      pq = new PriorityQueue(),\n      v, vEntry;\n\n  var updateNeighbors = function(edge) {\n    var w = edge.v !== v ? edge.v : edge.w,\n        wEntry = results[w],\n        weight = weightFn(edge),\n        distance = vEntry.distance + weight;\n\n    if (weight < 0) {\n      throw new Error(\"dijkstra does not allow negative edge weights. \" +\n                      \"Bad edge: \" + edge + \" Weight: \" + weight);\n    }\n\n    if (distance < wEntry.distance) {\n      wEntry.distance = distance;\n      wEntry.predecessor = v;\n      pq.decrease(w, distance);\n    }\n  };\n\n  g.nodes().forEach(function(v) {\n    var distance = v === source ? 0 : Number.POSITIVE_INFINITY;\n    results[v] = { distance: distance };\n    pq.add(v, distance);\n  });\n\n  while (pq.size() > 0) {\n    v = pq.removeMin();\n    vEntry = results[v];\n    if (vEntry.distance === Number.POSITIVE_INFINITY) {\n      break;\n    }\n\n    edgeFn(v).forEach(updateNeighbors);\n  }\n\n  return results;\n}\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _ = __webpack_require__(2);\n\nmodule.exports = PriorityQueue;\n\n/**\n * A min-priority queue data structure. This algorithm is derived from Cormen,\n * et al., \"Introduction to Algorithms\". The basic idea of a min-priority\n * queue is that you can efficiently (in O(1) time) get the smallest key in\n * the queue. Adding and removing elements takes O(log n) time. A key can\n * have its priority decreased in O(log n) time.\n */\nfunction PriorityQueue() {\n  this._arr = [];\n  this._keyIndices = {};\n}\n\n/**\n * Returns the number of elements in the queue. Takes `O(1)` time.\n */\nPriorityQueue.prototype.size = function() {\n  return this._arr.length;\n};\n\n/**\n * Returns the keys that are in the queue. Takes `O(n)` time.\n */\nPriorityQueue.prototype.keys = function() {\n  return this._arr.map(function(x) { return x.key; });\n};\n\n/**\n * Returns `true` if **key** is in the queue and `false` if not.\n */\nPriorityQueue.prototype.has = function(key) {\n  return _.has(this._keyIndices, key);\n};\n\n/**\n * Returns the priority for **key**. If **key** is not present in the queue\n * then this function returns `undefined`. Takes `O(1)` time.\n *\n * @param {Object} key\n */\nPriorityQueue.prototype.priority = function(key) {\n  var index = this._keyIndices[key];\n  if (index !== undefined) {\n    return this._arr[index].priority;\n  }\n};\n\n/**\n * Returns the key for the minimum element in this queue. If the queue is\n * empty this function throws an Error. Takes `O(1)` time.\n */\nPriorityQueue.prototype.min = function() {\n  if (this.size() === 0) {\n    throw new Error(\"Queue underflow\");\n  }\n  return this._arr[0].key;\n};\n\n/**\n * Inserts a new key into the priority queue. If the key already exists in\n * the queue this function returns `false`; otherwise it will return `true`.\n * Takes `O(n)` time.\n *\n * @param {Object} key the key to add\n * @param {Number} priority the initial priority for the key\n */\nPriorityQueue.prototype.add = function(key, priority) {\n  var keyIndices = this._keyIndices;\n  key = String(key);\n  if (!_.has(keyIndices, key)) {\n    var arr = this._arr;\n    var index = arr.length;\n    keyIndices[key] = index;\n    arr.push({key: key, priority: priority});\n    this._decrease(index);\n    return true;\n  }\n  return false;\n};\n\n/**\n * Removes and returns the smallest key in the queue. Takes `O(log n)` time.\n */\nPriorityQueue.prototype.removeMin = function() {\n  this._swap(0, this._arr.length - 1);\n  var min = this._arr.pop();\n  delete this._keyIndices[min.key];\n  this._heapify(0);\n  return min.key;\n};\n\n/**\n * Decreases the priority for **key** to **priority**. If the new priority is\n * greater than the previous priority, this function will throw an Error.\n *\n * @param {Object} key the key for which to raise priority\n * @param {Number} priority the new priority for the key\n */\nPriorityQueue.prototype.decrease = function(key, priority) {\n  var index = this._keyIndices[key];\n  if (priority > this._arr[index].priority) {\n    throw new Error(\"New priority is greater than current priority. \" +\n        \"Key: \" + key + \" Old: \" + this._arr[index].priority + \" New: \" + priority);\n  }\n  this._arr[index].priority = priority;\n  this._decrease(index);\n};\n\nPriorityQueue.prototype._heapify = function(i) {\n  var arr = this._arr;\n  var l = 2 * i,\n      r = l + 1,\n      largest = i;\n  if (l < arr.length) {\n    largest = arr[l].priority < arr[largest].priority ? l : largest;\n    if (r < arr.length) {\n      largest = arr[r].priority < arr[largest].priority ? r : largest;\n    }\n    if (largest !== i) {\n      this._swap(i, largest);\n      this._heapify(largest);\n    }\n  }\n};\n\nPriorityQueue.prototype._decrease = function(index) {\n  var arr = this._arr;\n  var priority = arr[index].priority;\n  var parent;\n  while (index !== 0) {\n    parent = index >> 1;\n    if (arr[parent].priority < priority) {\n      break;\n    }\n    this._swap(index, parent);\n    index = parent;\n  }\n};\n\nPriorityQueue.prototype._swap = function(i, j) {\n  var arr = this._arr;\n  var keyIndices = this._keyIndices;\n  var origArrI = arr[i];\n  var origArrJ = arr[j];\n  arr[i] = origArrJ;\n  arr[j] = origArrI;\n  keyIndices[origArrJ.key] = i;\n  keyIndices[origArrI.key] = j;\n};\n\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _ = __webpack_require__(2);\n\nmodule.exports = tarjan;\n\nfunction tarjan(g) {\n  var index = 0,\n      stack = [],\n      visited = {}, // node id -> { onStack, lowlink, index }\n      results = [];\n\n  function dfs(v) {\n    var entry = visited[v] = {\n      onStack: true,\n      lowlink: index,\n      index: index++\n    };\n    stack.push(v);\n\n    g.successors(v).forEach(function(w) {\n      if (!_.has(visited, w)) {\n        dfs(w);\n        entry.lowlink = Math.min(entry.lowlink, visited[w].lowlink);\n      } else if (visited[w].onStack) {\n        entry.lowlink = Math.min(entry.lowlink, visited[w].index);\n      }\n    });\n\n    if (entry.lowlink === entry.index) {\n      var cmpt = [],\n          w;\n      do {\n        w = stack.pop();\n        visited[w].onStack = false;\n        cmpt.push(w);\n      } while (v !== w);\n      results.push(cmpt);\n    }\n  }\n\n  g.nodes().forEach(function(v) {\n    if (!_.has(visited, v)) {\n      dfs(v);\n    }\n  });\n\n  return results;\n}\n\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _ = __webpack_require__(2);\n\nmodule.exports = topsort;\ntopsort.CycleException = CycleException;\n\nfunction topsort(g) {\n  var visited = {},\n      stack = {},\n      results = [];\n\n  function visit(node) {\n    if (_.has(stack, node)) {\n      throw new CycleException();\n    }\n\n    if (!_.has(visited, node)) {\n      stack[node] = true;\n      visited[node] = true;\n      _.each(g.predecessors(node), visit);\n      delete stack[node];\n      results.push(node);\n    }\n  }\n\n  _.each(g.sinks(), visit);\n\n  if (_.size(visited) !== g.nodeCount()) {\n    throw new CycleException();\n  }\n\n  return results;\n}\n\nfunction CycleException() {}\n\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _ = __webpack_require__(2);\n\nmodule.exports = dfs;\n\n/*\n * A helper that preforms a pre- or post-order traversal on the input graph\n * and returns the nodes in the order they were visited. If the graph is\n * undirected then this algorithm will navigate using neighbors. If the graph\n * is directed then this algorithm will navigate using successors.\n *\n * Order must be one of \"pre\" or \"post\".\n */\nfunction dfs(g, vs, order) {\n  if (!_.isArray(vs)) {\n    vs = [vs];\n  }\n\n  var navigation = (g.isDirected() ? g.successors : g.neighbors).bind(g);\n\n  var acc = [],\n      visited = {};\n  _.each(vs, function(v) {\n    if (!g.hasNode(v)) {\n      throw new Error(\"Graph does not have node: \" + v);\n    }\n\n    doDfs(g, v, order === \"post\", visited, navigation, acc);\n  });\n  return acc;\n}\n\nfunction doDfs(g, v, postorder, visited, navigation, acc) {\n  if (!_.has(visited, v)) {\n    visited[v] = true;\n\n    if (!postorder) { acc.push(v); }\n    _.each(navigation(v), function(w) {\n      doDfs(g, w, postorder, visited, navigation, acc);\n    });\n    if (postorder) { acc.push(v); }\n  }\n}\n\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _ = __webpack_require__(0),\n    Graph = __webpack_require__(3).Graph,\n    slack = __webpack_require__(4).slack;\n\nmodule.exports = feasibleTree;\n\n/*\n * Constructs a spanning tree with tight edges and adjusted the input node's\n * ranks to achieve this. A tight edge is one that is has a length that matches\n * its \"minlen\" attribute.\n *\n * The basic structure for this function is derived from Gansner, et al., \"A\n * Technique for Drawing Directed Graphs.\"\n *\n * Pre-conditions:\n *\n *    1. Graph must be a DAG.\n *    2. Graph must be connected.\n *    3. Graph must have at least one node.\n *    5. Graph nodes must have been previously assigned a \"rank\" property that\n *       respects the \"minlen\" property of incident edges.\n *    6. Graph edges must have a \"minlen\" property.\n *\n * Post-conditions:\n *\n *    - Graph nodes will have their rank adjusted to ensure that all edges are\n *      tight.\n *\n * Returns a tree (undirected graph) that is constructed using only \"tight\"\n * edges.\n */\nfunction feasibleTree(g) {\n  var t = new Graph({ directed: false });\n\n  // Choose arbitrary node from which to start our tree\n  var start = g.nodes()[0],\n      size = g.nodeCount();\n  t.setNode(start, {});\n\n  var edge, delta;\n  while (tightTree(t, g) < size) {\n    edge = findMinSlackEdge(t, g);\n    delta = t.hasNode(edge.v) ? slack(g, edge) : -slack(g, edge);\n    shiftRanks(t, g, delta);\n  }\n\n  return t;\n}\n\n/*\n * Finds a maximal tree of tight edges and returns the number of nodes in the\n * tree.\n */\nfunction tightTree(t, g) {\n  function dfs(v) {\n    _.forEach(g.nodeEdges(v), function(e) {\n      var edgeV = e.v,\n          w = (v === edgeV) ? e.w : edgeV;\n      if (!t.hasNode(w) && !slack(g, e)) {\n        t.setNode(w, {});\n        t.setEdge(v, w, {});\n        dfs(w);\n      }\n    });\n  }\n\n  _.forEach(t.nodes(), dfs);\n  return t.nodeCount();\n}\n\n/*\n * Finds the edge with the smallest slack that is incident on tree and returns\n * it.\n */\nfunction findMinSlackEdge(t, g) {\n  return _.minBy(g.edges(), function(e) {\n    if (t.hasNode(e.v) !== t.hasNode(e.w)) {\n      return slack(g, e);\n    }\n  });\n}\n\nfunction shiftRanks(t, g, delta) {\n  _.forEach(t.nodes(), function(v) {\n    g.node(v).rank += delta;\n  });\n}\n\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(21);\nmodule.exports = __webpack_require__(26);\n\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n// @remove-on-eject-begin\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n// @remove-on-eject-end\n\n\nif (typeof Promise === 'undefined') {\n  // Rejection tracking prevents a common issue where React gets into an\n  // inconsistent state due to an error, but it gets swallowed by a Promise,\n  // and the user has no idea what causes React's erratic future behavior.\n  __webpack_require__(22).enable();\n  window.Promise = __webpack_require__(24);\n}\n\n// fetch() polyfill for making API calls.\n__webpack_require__(25);\n\n// Object.assign() is commonly used with React.\n// It will use the native implementation if it's present and isn't buggy.\nObject.assign = __webpack_require__(5);\n\n// In tests, polyfill requestAnimationFrame since jsdom doesn't provide it yet.\n// We don't polyfill it in the browser--this is user's responsibility.\nif (false) {\n  require('raf').polyfill(global);\n}\n\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar Promise = __webpack_require__(8);\n\nvar DEFAULT_WHITELIST = [\n  ReferenceError,\n  TypeError,\n  RangeError\n];\n\nvar enabled = false;\nexports.disable = disable;\nfunction disable() {\n  enabled = false;\n  Promise._47 = null;\n  Promise._71 = null;\n}\n\nexports.enable = enable;\nfunction enable(options) {\n  options = options || {};\n  if (enabled) disable();\n  enabled = true;\n  var id = 0;\n  var displayId = 0;\n  var rejections = {};\n  Promise._47 = function (promise) {\n    if (\n      promise._83 === 2 && // IS REJECTED\n      rejections[promise._56]\n    ) {\n      if (rejections[promise._56].logged) {\n        onHandled(promise._56);\n      } else {\n        clearTimeout(rejections[promise._56].timeout);\n      }\n      delete rejections[promise._56];\n    }\n  };\n  Promise._71 = function (promise, err) {\n    if (promise._75 === 0) { // not yet handled\n      promise._56 = id++;\n      rejections[promise._56] = {\n        displayId: null,\n        error: err,\n        timeout: setTimeout(\n          onUnhandled.bind(null, promise._56),\n          // For reference errors and type errors, this almost always\n          // means the programmer made a mistake, so log them after just\n          // 100ms\n          // otherwise, wait 2 seconds to see if they get handled\n          matchWhitelist(err, DEFAULT_WHITELIST)\n            ? 100\n            : 2000\n        ),\n        logged: false\n      };\n    }\n  };\n  function onUnhandled(id) {\n    if (\n      options.allRejections ||\n      matchWhitelist(\n        rejections[id].error,\n        options.whitelist || DEFAULT_WHITELIST\n      )\n    ) {\n      rejections[id].displayId = displayId++;\n      if (options.onUnhandled) {\n        rejections[id].logged = true;\n        options.onUnhandled(\n          rejections[id].displayId,\n          rejections[id].error\n        );\n      } else {\n        rejections[id].logged = true;\n        logError(\n          rejections[id].displayId,\n          rejections[id].error\n        );\n      }\n    }\n  }\n  function onHandled(id) {\n    if (rejections[id].logged) {\n      if (options.onHandled) {\n        options.onHandled(rejections[id].displayId, rejections[id].error);\n      } else if (!rejections[id].onUnhandled) {\n        console.warn(\n          'Promise Rejection Handled (id: ' + rejections[id].displayId + '):'\n        );\n        console.warn(\n          '  This means you can ignore any previous messages of the form \"Possible Unhandled Promise Rejection\" with id ' +\n          rejections[id].displayId + '.'\n        );\n      }\n    }\n  }\n}\n\nfunction logError(id, error) {\n  console.warn('Possible Unhandled Promise Rejection (id: ' + id + '):');\n  var errStr = (error && (error.stack || error)) + '';\n  errStr.split('\\n').forEach(function (line) {\n    console.warn('  ' + line);\n  });\n}\n\nfunction matchWhitelist(error, list) {\n  return list.some(function (cls) {\n    return error instanceof cls;\n  });\n}\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {\n\n// Use the fastest means possible to execute a task in its own turn, with\n// priority over other events including IO, animation, reflow, and redraw\n// events in browsers.\n//\n// An exception thrown by a task will permanently interrupt the processing of\n// subsequent tasks. The higher level `asap` function ensures that if an\n// exception is thrown by a task, that the task queue will continue flushing as\n// soon as possible, but if you use `rawAsap` directly, you are responsible to\n// either ensure that no exceptions are thrown from your task, or to manually\n// call `rawAsap.requestFlush` if an exception is thrown.\nmodule.exports = rawAsap;\nfunction rawAsap(task) {\n    if (!queue.length) {\n        requestFlush();\n        flushing = true;\n    }\n    // Equivalent to push, but avoids a function call.\n    queue[queue.length] = task;\n}\n\nvar queue = [];\n// Once a flush has been requested, no further calls to `requestFlush` are\n// necessary until the next `flush` completes.\nvar flushing = false;\n// `requestFlush` is an implementation-specific method that attempts to kick\n// off a `flush` event as quickly as possible. `flush` will attempt to exhaust\n// the event queue before yielding to the browser's own event loop.\nvar requestFlush;\n// The position of the next task to execute in the task queue. This is\n// preserved between calls to `flush` so that it can be resumed if\n// a task throws an exception.\nvar index = 0;\n// If a task schedules additional tasks recursively, the task queue can grow\n// unbounded. To prevent memory exhaustion, the task queue will periodically\n// truncate already-completed tasks.\nvar capacity = 1024;\n\n// The flush function processes all tasks that have been scheduled with\n// `rawAsap` unless and until one of those tasks throws an exception.\n// If a task throws an exception, `flush` ensures that its state will remain\n// consistent and will resume where it left off when called again.\n// However, `flush` does not make any arrangements to be called again if an\n// exception is thrown.\nfunction flush() {\n    while (index < queue.length) {\n        var currentIndex = index;\n        // Advance the index before calling the task. This ensures that we will\n        // begin flushing on the next task the task throws an error.\n        index = index + 1;\n        queue[currentIndex].call();\n        // Prevent leaking memory for long chains of recursive calls to `asap`.\n        // If we call `asap` within tasks scheduled by `asap`, the queue will\n        // grow, but to avoid an O(n) walk for every task we execute, we don't\n        // shift tasks off the queue after they have been executed.\n        // Instead, we periodically shift 1024 tasks off the queue.\n        if (index > capacity) {\n            // Manually shift all values starting at the index back to the\n            // beginning of the queue.\n            for (var scan = 0, newLength = queue.length - index; scan < newLength; scan++) {\n                queue[scan] = queue[scan + index];\n            }\n            queue.length -= index;\n            index = 0;\n        }\n    }\n    queue.length = 0;\n    index = 0;\n    flushing = false;\n}\n\n// `requestFlush` is implemented using a strategy based on data collected from\n// every available SauceLabs Selenium web driver worker at time of writing.\n// https://docs.google.com/spreadsheets/d/1mG-5UYGup5qxGdEMWkhP6BWCz053NUb2E1QoUTU16uA/edit#gid=783724593\n\n// Safari 6 and 6.1 for desktop, iPad, and iPhone are the only browsers that\n// have WebKitMutationObserver but not un-prefixed MutationObserver.\n// Must use `global` or `self` instead of `window` to work in both frames and web\n// workers. `global` is a provision of Browserify, Mr, Mrs, or Mop.\n\n/* globals self */\nvar scope = typeof global !== \"undefined\" ? global : self;\nvar BrowserMutationObserver = scope.MutationObserver || scope.WebKitMutationObserver;\n\n// MutationObservers are desirable because they have high priority and work\n// reliably everywhere they are implemented.\n// They are implemented in all modern browsers.\n//\n// - Android 4-4.3\n// - Chrome 26-34\n// - Firefox 14-29\n// - Internet Explorer 11\n// - iPad Safari 6-7.1\n// - iPhone Safari 7-7.1\n// - Safari 6-7\nif (typeof BrowserMutationObserver === \"function\") {\n    requestFlush = makeRequestCallFromMutationObserver(flush);\n\n// MessageChannels are desirable because they give direct access to the HTML\n// task queue, are implemented in Internet Explorer 10, Safari 5.0-1, and Opera\n// 11-12, and in web workers in many engines.\n// Although message channels yield to any queued rendering and IO tasks, they\n// would be better than imposing the 4ms delay of timers.\n// However, they do not work reliably in Internet Explorer or Safari.\n\n// Internet Explorer 10 is the only browser that has setImmediate but does\n// not have MutationObservers.\n// Although setImmediate yields to the browser's renderer, it would be\n// preferrable to falling back to setTimeout since it does not have\n// the minimum 4ms penalty.\n// Unfortunately there appears to be a bug in Internet Explorer 10 Mobile (and\n// Desktop to a lesser extent) that renders both setImmediate and\n// MessageChannel useless for the purposes of ASAP.\n// https://github.com/kriskowal/q/issues/396\n\n// Timers are implemented universally.\n// We fall back to timers in workers in most engines, and in foreground\n// contexts in the following browsers.\n// However, note that even this simple case requires nuances to operate in a\n// broad spectrum of browsers.\n//\n// - Firefox 3-13\n// - Internet Explorer 6-9\n// - iPad Safari 4.3\n// - Lynx 2.8.7\n} else {\n    requestFlush = makeRequestCallFromTimer(flush);\n}\n\n// `requestFlush` requests that the high priority event queue be flushed as\n// soon as possible.\n// This is useful to prevent an error thrown in a task from stalling the event\n// queue if the exception handled by Node.js’s\n// `process.on(\"uncaughtException\")` or by a domain.\nrawAsap.requestFlush = requestFlush;\n\n// To request a high priority event, we induce a mutation observer by toggling\n// the text of a text node between \"1\" and \"-1\".\nfunction makeRequestCallFromMutationObserver(callback) {\n    var toggle = 1;\n    var observer = new BrowserMutationObserver(callback);\n    var node = document.createTextNode(\"\");\n    observer.observe(node, {characterData: true});\n    return function requestCall() {\n        toggle = -toggle;\n        node.data = toggle;\n    };\n}\n\n// The message channel technique was discovered by Malte Ubl and was the\n// original foundation for this library.\n// http://www.nonblocking.io/2011/06/windownexttick.html\n\n// Safari 6.0.5 (at least) intermittently fails to create message ports on a\n// page's first load. Thankfully, this version of Safari supports\n// MutationObservers, so we don't need to fall back in that case.\n\n// function makeRequestCallFromMessageChannel(callback) {\n//     var channel = new MessageChannel();\n//     channel.port1.onmessage = callback;\n//     return function requestCall() {\n//         channel.port2.postMessage(0);\n//     };\n// }\n\n// For reasons explained above, we are also unable to use `setImmediate`\n// under any circumstances.\n// Even if we were, there is another bug in Internet Explorer 10.\n// It is not sufficient to assign `setImmediate` to `requestFlush` because\n// `setImmediate` must be called *by name* and therefore must be wrapped in a\n// closure.\n// Never forget.\n\n// function makeRequestCallFromSetImmediate(callback) {\n//     return function requestCall() {\n//         setImmediate(callback);\n//     };\n// }\n\n// Safari 6.0 has a problem where timers will get lost while the user is\n// scrolling. This problem does not impact ASAP because Safari 6.0 supports\n// mutation observers, so that implementation is used instead.\n// However, if we ever elect to use timers in Safari, the prevalent work-around\n// is to add a scroll event listener that calls for a flush.\n\n// `setTimeout` does not call the passed callback if the delay is less than\n// approximately 7 in web workers in Firefox 8 through 18, and sometimes not\n// even then.\n\nfunction makeRequestCallFromTimer(callback) {\n    return function requestCall() {\n        // We dispatch a timeout with a specified delay of 0 for engines that\n        // can reliably accommodate that request. This will usually be snapped\n        // to a 4 milisecond delay, but once we're flushing, there's no delay\n        // between events.\n        var timeoutHandle = setTimeout(handleTimer, 0);\n        // However, since this timer gets frequently dropped in Firefox\n        // workers, we enlist an interval handle that will try to fire\n        // an event 20 times per second until it succeeds.\n        var intervalHandle = setInterval(handleTimer, 50);\n\n        function handleTimer() {\n            // Whichever timer succeeds will cancel both timers and\n            // execute the callback.\n            clearTimeout(timeoutHandle);\n            clearInterval(intervalHandle);\n            callback();\n        }\n    };\n}\n\n// This is for `asap.js` only.\n// Its name will be periodically randomized to break any code that depends on\n// its existence.\nrawAsap.makeRequestCallFromTimer = makeRequestCallFromTimer;\n\n// ASAP was originally a nextTick shim included in Q. This was factored out\n// into this ASAP package. It was later adapted to RSVP which made further\n// amendments. These decisions, particularly to marginalize MessageChannel and\n// to capture the MutationObserver implementation in a closure, were integrated\n// back into ASAP proper.\n// https://github.com/tildeio/rsvp.js/blob/cddf7232546a9cf858524b75cde6f9edf72620a7/lib/rsvp/asap.js\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(9)))\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n//This file contains the ES6 extensions to the core Promises/A+ API\n\nvar Promise = __webpack_require__(8);\n\nmodule.exports = Promise;\n\n/* Static Functions */\n\nvar TRUE = valuePromise(true);\nvar FALSE = valuePromise(false);\nvar NULL = valuePromise(null);\nvar UNDEFINED = valuePromise(undefined);\nvar ZERO = valuePromise(0);\nvar EMPTYSTRING = valuePromise('');\n\nfunction valuePromise(value) {\n  var p = new Promise(Promise._44);\n  p._83 = 1;\n  p._18 = value;\n  return p;\n}\nPromise.resolve = function (value) {\n  if (value instanceof Promise) return value;\n\n  if (value === null) return NULL;\n  if (value === undefined) return UNDEFINED;\n  if (value === true) return TRUE;\n  if (value === false) return FALSE;\n  if (value === 0) return ZERO;\n  if (value === '') return EMPTYSTRING;\n\n  if (typeof value === 'object' || typeof value === 'function') {\n    try {\n      var then = value.then;\n      if (typeof then === 'function') {\n        return new Promise(then.bind(value));\n      }\n    } catch (ex) {\n      return new Promise(function (resolve, reject) {\n        reject(ex);\n      });\n    }\n  }\n  return valuePromise(value);\n};\n\nPromise.all = function (arr) {\n  var args = Array.prototype.slice.call(arr);\n\n  return new Promise(function (resolve, reject) {\n    if (args.length === 0) return resolve([]);\n    var remaining = args.length;\n    function res(i, val) {\n      if (val && (typeof val === 'object' || typeof val === 'function')) {\n        if (val instanceof Promise && val.then === Promise.prototype.then) {\n          while (val._83 === 3) {\n            val = val._18;\n          }\n          if (val._83 === 1) return res(i, val._18);\n          if (val._83 === 2) reject(val._18);\n          val.then(function (val) {\n            res(i, val);\n          }, reject);\n          return;\n        } else {\n          var then = val.then;\n          if (typeof then === 'function') {\n            var p = new Promise(then.bind(val));\n            p.then(function (val) {\n              res(i, val);\n            }, reject);\n            return;\n          }\n        }\n      }\n      args[i] = val;\n      if (--remaining === 0) {\n        resolve(args);\n      }\n    }\n    for (var i = 0; i < args.length; i++) {\n      res(i, args[i]);\n    }\n  });\n};\n\nPromise.reject = function (value) {\n  return new Promise(function (resolve, reject) {\n    reject(value);\n  });\n};\n\nPromise.race = function (values) {\n  return new Promise(function (resolve, reject) {\n    values.forEach(function(value){\n      Promise.resolve(value).then(resolve, reject);\n    });\n  });\n};\n\n/* Prototype Methods */\n\nPromise.prototype['catch'] = function (onRejected) {\n  return this.then(null, onRejected);\n};\n\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports) {\n\n(function(self) {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob()\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ]\n\n    var isDataView = function(obj) {\n      return obj && DataView.prototype.isPrototypeOf(obj)\n    }\n\n    var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    }\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift()\n        return {done: value === undefined, value: value}\n      }\n    }\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      }\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1])\n      }, this)\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var oldValue = this.map[name]\n    this.map[name] = oldValue ? oldValue+','+value : value\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name)\n    return this.has(name) ? this.map[name] : null\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value)\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this)\n      }\n    }\n  }\n\n  Headers.prototype.keys = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push(name) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.values = function() {\n    var items = []\n    this.forEach(function(value) { items.push(value) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.entries = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push([name, value]) })\n    return iteratorFor(items)\n  }\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsArrayBuffer(blob)\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsText(blob)\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf)\n    var chars = new Array(view.length)\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i])\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength)\n      view.set(new Uint8Array(buf))\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (!body) {\n        this._bodyText = ''\n      } else if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString()\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer)\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer])\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body)\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type)\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n        }\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      }\n    }\n\n    this.text = function() {\n      var rejected = consumed(this)\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    } else {\n      this.url = String(input)\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, { body: this._bodyInit })\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers()\n    rawHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':')\n      var key = parts.shift().trim()\n      if (key) {\n        var value = parts.join(':').trim()\n        headers.append(key, value)\n      }\n    })\n    return headers\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this.type = 'default'\n    this.status = 'status' in options ? options.status : 200\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = 'statusText' in options ? options.statusText : 'OK'\n    this.headers = new Headers(options.headers)\n    this.url = options.url || ''\n    this._initBody(bodyInit)\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init)\n      var xhr = new XMLHttpRequest()\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        }\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n        var body = 'response' in xhr ? xhr.response : xhr.responseText\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})(typeof self !== 'undefined' ? self : this);\n\n\n/***/ }),\n/* 26 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(6);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_dom__ = __webpack_require__(28);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_react_dom___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_react_dom__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__index_css__ = __webpack_require__(36);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__index_css___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__index_css__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__App__ = __webpack_require__(37);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__registerServiceWorker__ = __webpack_require__(78);\n__WEBPACK_IMPORTED_MODULE_1_react_dom___default.a.render(__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_3__App__[\"a\" /* default */],null),document.getElementById('root'));Object(__WEBPACK_IMPORTED_MODULE_4__registerServiceWorker__[\"a\" /* default */])();\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/** @license React v16.4.1\n * react.production.min.js\n *\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar k=__webpack_require__(5),n=__webpack_require__(10),p=__webpack_require__(11),q=__webpack_require__(12),r=\"function\"===typeof Symbol&&Symbol.for,t=r?Symbol.for(\"react.element\"):60103,u=r?Symbol.for(\"react.portal\"):60106,v=r?Symbol.for(\"react.fragment\"):60107,w=r?Symbol.for(\"react.strict_mode\"):60108,x=r?Symbol.for(\"react.profiler\"):60114,y=r?Symbol.for(\"react.provider\"):60109,z=r?Symbol.for(\"react.context\"):60110,A=r?Symbol.for(\"react.async_mode\"):60111,B=\nr?Symbol.for(\"react.forward_ref\"):60112;r&&Symbol.for(\"react.timeout\");var C=\"function\"===typeof Symbol&&Symbol.iterator;function D(a){for(var b=arguments.length-1,e=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=0;c<b;c++)e+=\"&args[]=\"+encodeURIComponent(arguments[c+1]);n(!1,\"Minified React error #\"+a+\"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. \",e)}\nvar E={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}};function F(a,b,e){this.props=a;this.context=b;this.refs=p;this.updater=e||E}F.prototype.isReactComponent={};F.prototype.setState=function(a,b){\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a?D(\"85\"):void 0;this.updater.enqueueSetState(this,a,b,\"setState\")};F.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};function G(){}\nG.prototype=F.prototype;function H(a,b,e){this.props=a;this.context=b;this.refs=p;this.updater=e||E}var I=H.prototype=new G;I.constructor=H;k(I,F.prototype);I.isPureReactComponent=!0;var J={current:null},K=Object.prototype.hasOwnProperty,L={key:!0,ref:!0,__self:!0,__source:!0};\nfunction M(a,b,e){var c=void 0,d={},g=null,h=null;if(null!=b)for(c in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(g=\"\"+b.key),b)K.call(b,c)&&!L.hasOwnProperty(c)&&(d[c]=b[c]);var f=arguments.length-2;if(1===f)d.children=e;else if(1<f){for(var l=Array(f),m=0;m<f;m++)l[m]=arguments[m+2];d.children=l}if(a&&a.defaultProps)for(c in f=a.defaultProps,f)void 0===d[c]&&(d[c]=f[c]);return{$$typeof:t,type:a,key:g,ref:h,props:d,_owner:J.current}}\nfunction N(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===t}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+(\"\"+a).replace(/[=:]/g,function(a){return b[a]})}var O=/\\/+/g,P=[];function Q(a,b,e,c){if(P.length){var d=P.pop();d.result=a;d.keyPrefix=b;d.func=e;d.context=c;d.count=0;return d}return{result:a,keyPrefix:b,func:e,context:c,count:0}}function R(a){a.result=null;a.keyPrefix=null;a.func=null;a.context=null;a.count=0;10>P.length&&P.push(a)}\nfunction S(a,b,e,c){var d=typeof a;if(\"undefined\"===d||\"boolean\"===d)a=null;var g=!1;if(null===a)g=!0;else switch(d){case \"string\":case \"number\":g=!0;break;case \"object\":switch(a.$$typeof){case t:case u:g=!0}}if(g)return e(c,a,\"\"===b?\".\"+T(a,0):b),1;g=0;b=\"\"===b?\".\":b+\":\";if(Array.isArray(a))for(var h=0;h<a.length;h++){d=a[h];var f=b+T(d,h);g+=S(d,f,e,c)}else if(null===a||\"undefined\"===typeof a?f=null:(f=C&&a[C]||a[\"@@iterator\"],f=\"function\"===typeof f?f:null),\"function\"===typeof f)for(a=f.call(a),\nh=0;!(d=a.next()).done;)d=d.value,f=b+T(d,h++),g+=S(d,f,e,c);else\"object\"===d&&(e=\"\"+a,D(\"31\",\"[object Object]\"===e?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":e,\"\"));return g}function T(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(a.key):b.toString(36)}function U(a,b){a.func.call(a.context,b,a.count++)}\nfunction V(a,b,e){var c=a.result,d=a.keyPrefix;a=a.func.call(a.context,b,a.count++);Array.isArray(a)?W(a,c,e,q.thatReturnsArgument):null!=a&&(N(a)&&(b=d+(!a.key||b&&b.key===a.key?\"\":(\"\"+a.key).replace(O,\"$&/\")+\"/\")+e,a={$$typeof:t,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}),c.push(a))}function W(a,b,e,c,d){var g=\"\";null!=e&&(g=(\"\"+e).replace(O,\"$&/\")+\"/\");b=Q(b,g,c,d);null==a||S(a,\"\",V,b);R(b)}\nvar X={Children:{map:function(a,b,e){if(null==a)return a;var c=[];W(a,c,null,b,e);return c},forEach:function(a,b,e){if(null==a)return a;b=Q(null,null,b,e);null==a||S(a,\"\",U,b);R(b)},count:function(a){return null==a?0:S(a,\"\",q.thatReturnsNull,null)},toArray:function(a){var b=[];W(a,b,null,q.thatReturnsArgument);return b},only:function(a){N(a)?void 0:D(\"143\");return a}},createRef:function(){return{current:null}},Component:F,PureComponent:H,createContext:function(a,b){void 0===b&&(b=null);a={$$typeof:z,\n_calculateChangedBits:b,_defaultValue:a,_currentValue:a,_currentValue2:a,_changedBits:0,_changedBits2:0,Provider:null,Consumer:null};a.Provider={$$typeof:y,_context:a};return a.Consumer=a},forwardRef:function(a){return{$$typeof:B,render:a}},Fragment:v,StrictMode:w,unstable_AsyncMode:A,unstable_Profiler:x,createElement:M,cloneElement:function(a,b,e){null===a||void 0===a?D(\"267\",a):void 0;var c=void 0,d=k({},a.props),g=a.key,h=a.ref,f=a._owner;if(null!=b){void 0!==b.ref&&(h=b.ref,f=J.current);void 0!==\nb.key&&(g=\"\"+b.key);var l=void 0;a.type&&a.type.defaultProps&&(l=a.type.defaultProps);for(c in b)K.call(b,c)&&!L.hasOwnProperty(c)&&(d[c]=void 0===b[c]&&void 0!==l?l[c]:b[c])}c=arguments.length-2;if(1===c)d.children=e;else if(1<c){l=Array(c);for(var m=0;m<c;m++)l[m]=arguments[m+2];d.children=l}return{$$typeof:t,type:a.type,key:g,ref:h,props:d,_owner:f}},createFactory:function(a){var b=M.bind(null,a);b.type=a;return b},isValidElement:N,version:\"16.4.1\",__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentOwner:J,\nassign:k}},Y={default:X},Z=Y&&X||Y;module.exports=Z.default?Z.default:Z;\n\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (false) {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (true) {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = __webpack_require__(29);\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}\n\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/** @license React v16.4.1\n * react-dom.production.min.js\n *\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/*\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\nvar aa=__webpack_require__(10),ba=__webpack_require__(6),m=__webpack_require__(30),p=__webpack_require__(5),v=__webpack_require__(12),da=__webpack_require__(31),ea=__webpack_require__(32),fa=__webpack_require__(33),ha=__webpack_require__(11);\nfunction A(a){for(var b=arguments.length-1,c=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,d=0;d<b;d++)c+=\"&args[]=\"+encodeURIComponent(arguments[d+1]);aa(!1,\"Minified React error #\"+a+\"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. \",c)}ba?void 0:A(\"227\");\nfunction ia(a,b,c,d,e,f,g,h,k){this._hasCaughtError=!1;this._caughtError=null;var n=Array.prototype.slice.call(arguments,3);try{b.apply(c,n)}catch(r){this._caughtError=r,this._hasCaughtError=!0}}\nvar B={_caughtError:null,_hasCaughtError:!1,_rethrowError:null,_hasRethrowError:!1,invokeGuardedCallback:function(a,b,c,d,e,f,g,h,k){ia.apply(B,arguments)},invokeGuardedCallbackAndCatchFirstError:function(a,b,c,d,e,f,g,h,k){B.invokeGuardedCallback.apply(this,arguments);if(B.hasCaughtError()){var n=B.clearCaughtError();B._hasRethrowError||(B._hasRethrowError=!0,B._rethrowError=n)}},rethrowCaughtError:function(){return ka.apply(B,arguments)},hasCaughtError:function(){return B._hasCaughtError},clearCaughtError:function(){if(B._hasCaughtError){var a=\nB._caughtError;B._caughtError=null;B._hasCaughtError=!1;return a}A(\"198\")}};function ka(){if(B._hasRethrowError){var a=B._rethrowError;B._rethrowError=null;B._hasRethrowError=!1;throw a;}}var la=null,ma={};\nfunction na(){if(la)for(var a in ma){var b=ma[a],c=la.indexOf(a);-1<c?void 0:A(\"96\",a);if(!oa[c]){b.extractEvents?void 0:A(\"97\",a);oa[c]=b;c=b.eventTypes;for(var d in c){var e=void 0;var f=c[d],g=b,h=d;pa.hasOwnProperty(h)?A(\"99\",h):void 0;pa[h]=f;var k=f.phasedRegistrationNames;if(k){for(e in k)k.hasOwnProperty(e)&&qa(k[e],g,h);e=!0}else f.registrationName?(qa(f.registrationName,g,h),e=!0):e=!1;e?void 0:A(\"98\",d,a)}}}}\nfunction qa(a,b,c){ra[a]?A(\"100\",a):void 0;ra[a]=b;sa[a]=b.eventTypes[c].dependencies}var oa=[],pa={},ra={},sa={};function ta(a){la?A(\"101\"):void 0;la=Array.prototype.slice.call(a);na()}function ua(a){var b=!1,c;for(c in a)if(a.hasOwnProperty(c)){var d=a[c];ma.hasOwnProperty(c)&&ma[c]===d||(ma[c]?A(\"102\",c):void 0,ma[c]=d,b=!0)}b&&na()}\nvar va={plugins:oa,eventNameDispatchConfigs:pa,registrationNameModules:ra,registrationNameDependencies:sa,possibleRegistrationNames:null,injectEventPluginOrder:ta,injectEventPluginsByName:ua},wa=null,xa=null,ya=null;function za(a,b,c,d){b=a.type||\"unknown-event\";a.currentTarget=ya(d);B.invokeGuardedCallbackAndCatchFirstError(b,c,void 0,a);a.currentTarget=null}\nfunction Aa(a,b){null==b?A(\"30\"):void 0;if(null==a)return b;if(Array.isArray(a)){if(Array.isArray(b))return a.push.apply(a,b),a;a.push(b);return a}return Array.isArray(b)?[a].concat(b):[a,b]}function Ba(a,b,c){Array.isArray(a)?a.forEach(b,c):a&&b.call(c,a)}var Ca=null;\nfunction Da(a,b){if(a){var c=a._dispatchListeners,d=a._dispatchInstances;if(Array.isArray(c))for(var e=0;e<c.length&&!a.isPropagationStopped();e++)za(a,b,c[e],d[e]);else c&&za(a,b,c,d);a._dispatchListeners=null;a._dispatchInstances=null;a.isPersistent()||a.constructor.release(a)}}function Ea(a){return Da(a,!0)}function Fa(a){return Da(a,!1)}var Ga={injectEventPluginOrder:ta,injectEventPluginsByName:ua};\nfunction Ha(a,b){var c=a.stateNode;if(!c)return null;var d=wa(c);if(!d)return null;c=d[b];a:switch(b){case \"onClick\":case \"onClickCapture\":case \"onDoubleClick\":case \"onDoubleClickCapture\":case \"onMouseDown\":case \"onMouseDownCapture\":case \"onMouseMove\":case \"onMouseMoveCapture\":case \"onMouseUp\":case \"onMouseUpCapture\":(d=!d.disabled)||(a=a.type,d=!(\"button\"===a||\"input\"===a||\"select\"===a||\"textarea\"===a));a=!d;break a;default:a=!1}if(a)return null;c&&\"function\"!==typeof c?A(\"231\",b,typeof c):void 0;\nreturn c}function Ia(a,b){null!==a&&(Ca=Aa(Ca,a));a=Ca;Ca=null;a&&(b?Ba(a,Ea):Ba(a,Fa),Ca?A(\"95\"):void 0,B.rethrowCaughtError())}function Ja(a,b,c,d){for(var e=null,f=0;f<oa.length;f++){var g=oa[f];g&&(g=g.extractEvents(a,b,c,d))&&(e=Aa(e,g))}Ia(e,!1)}var Ka={injection:Ga,getListener:Ha,runEventsInBatch:Ia,runExtractedEventsInBatch:Ja},La=Math.random().toString(36).slice(2),C=\"__reactInternalInstance$\"+La,Ma=\"__reactEventHandlers$\"+La;\nfunction Na(a){if(a[C])return a[C];for(;!a[C];)if(a.parentNode)a=a.parentNode;else return null;a=a[C];return 5===a.tag||6===a.tag?a:null}function Oa(a){if(5===a.tag||6===a.tag)return a.stateNode;A(\"33\")}function Pa(a){return a[Ma]||null}var Qa={precacheFiberNode:function(a,b){b[C]=a},getClosestInstanceFromNode:Na,getInstanceFromNode:function(a){a=a[C];return!a||5!==a.tag&&6!==a.tag?null:a},getNodeFromInstance:Oa,getFiberCurrentPropsFromNode:Pa,updateFiberProps:function(a,b){a[Ma]=b}};\nfunction F(a){do a=a.return;while(a&&5!==a.tag);return a?a:null}function Ra(a,b,c){for(var d=[];a;)d.push(a),a=F(a);for(a=d.length;0<a--;)b(d[a],\"captured\",c);for(a=0;a<d.length;a++)b(d[a],\"bubbled\",c)}function Sa(a,b,c){if(b=Ha(a,c.dispatchConfig.phasedRegistrationNames[b]))c._dispatchListeners=Aa(c._dispatchListeners,b),c._dispatchInstances=Aa(c._dispatchInstances,a)}function Ta(a){a&&a.dispatchConfig.phasedRegistrationNames&&Ra(a._targetInst,Sa,a)}\nfunction Ua(a){if(a&&a.dispatchConfig.phasedRegistrationNames){var b=a._targetInst;b=b?F(b):null;Ra(b,Sa,a)}}function Va(a,b,c){a&&c&&c.dispatchConfig.registrationName&&(b=Ha(a,c.dispatchConfig.registrationName))&&(c._dispatchListeners=Aa(c._dispatchListeners,b),c._dispatchInstances=Aa(c._dispatchInstances,a))}function Xa(a){a&&a.dispatchConfig.registrationName&&Va(a._targetInst,null,a)}function Ya(a){Ba(a,Ta)}\nfunction Za(a,b,c,d){if(c&&d)a:{var e=c;for(var f=d,g=0,h=e;h;h=F(h))g++;h=0;for(var k=f;k;k=F(k))h++;for(;0<g-h;)e=F(e),g--;for(;0<h-g;)f=F(f),h--;for(;g--;){if(e===f||e===f.alternate)break a;e=F(e);f=F(f)}e=null}else e=null;f=e;for(e=[];c&&c!==f;){g=c.alternate;if(null!==g&&g===f)break;e.push(c);c=F(c)}for(c=[];d&&d!==f;){g=d.alternate;if(null!==g&&g===f)break;c.push(d);d=F(d)}for(d=0;d<e.length;d++)Va(e[d],\"bubbled\",a);for(a=c.length;0<a--;)Va(c[a],\"captured\",b)}\nvar $a={accumulateTwoPhaseDispatches:Ya,accumulateTwoPhaseDispatchesSkipTarget:function(a){Ba(a,Ua)},accumulateEnterLeaveDispatches:Za,accumulateDirectDispatches:function(a){Ba(a,Xa)}};function ab(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c[\"Webkit\"+a]=\"webkit\"+b;c[\"Moz\"+a]=\"moz\"+b;c[\"ms\"+a]=\"MS\"+b;c[\"O\"+a]=\"o\"+b.toLowerCase();return c}\nvar bb={animationend:ab(\"Animation\",\"AnimationEnd\"),animationiteration:ab(\"Animation\",\"AnimationIteration\"),animationstart:ab(\"Animation\",\"AnimationStart\"),transitionend:ab(\"Transition\",\"TransitionEnd\")},cb={},db={};m.canUseDOM&&(db=document.createElement(\"div\").style,\"AnimationEvent\"in window||(delete bb.animationend.animation,delete bb.animationiteration.animation,delete bb.animationstart.animation),\"TransitionEvent\"in window||delete bb.transitionend.transition);\nfunction eb(a){if(cb[a])return cb[a];if(!bb[a])return a;var b=bb[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in db)return cb[a]=b[c];return a}var fb=eb(\"animationend\"),gb=eb(\"animationiteration\"),hb=eb(\"animationstart\"),ib=eb(\"transitionend\"),jb=\"abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting\".split(\" \"),kb=null;\nfunction lb(){!kb&&m.canUseDOM&&(kb=\"textContent\"in document.documentElement?\"textContent\":\"innerText\");return kb}var G={_root:null,_startText:null,_fallbackText:null};function mb(){if(G._fallbackText)return G._fallbackText;var a,b=G._startText,c=b.length,d,e=nb(),f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);G._fallbackText=e.slice(a,1<d?1-d:void 0);return G._fallbackText}function nb(){return\"value\"in G._root?G._root.value:G._root[lb()]}\nvar ob=\"dispatchConfig _targetInst nativeEvent isDefaultPrevented isPropagationStopped _dispatchListeners _dispatchInstances\".split(\" \"),pb={type:null,target:null,currentTarget:v.thatReturnsNull,eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null};\nfunction H(a,b,c,d){this.dispatchConfig=a;this._targetInst=b;this.nativeEvent=c;a=this.constructor.Interface;for(var e in a)a.hasOwnProperty(e)&&((b=a[e])?this[e]=b(c):\"target\"===e?this.target=d:this[e]=c[e]);this.isDefaultPrevented=(null!=c.defaultPrevented?c.defaultPrevented:!1===c.returnValue)?v.thatReturnsTrue:v.thatReturnsFalse;this.isPropagationStopped=v.thatReturnsFalse;return this}\np(H.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():\"unknown\"!==typeof a.returnValue&&(a.returnValue=!1),this.isDefaultPrevented=v.thatReturnsTrue)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():\"unknown\"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=v.thatReturnsTrue)},persist:function(){this.isPersistent=v.thatReturnsTrue},isPersistent:v.thatReturnsFalse,\ndestructor:function(){var a=this.constructor.Interface,b;for(b in a)this[b]=null;for(a=0;a<ob.length;a++)this[ob[a]]=null}});H.Interface=pb;H.extend=function(a){function b(){}function c(){return d.apply(this,arguments)}var d=this;b.prototype=d.prototype;var e=new b;p(e,c.prototype);c.prototype=e;c.prototype.constructor=c;c.Interface=p({},d.Interface,a);c.extend=d.extend;qb(c);return c};qb(H);\nfunction rb(a,b,c,d){if(this.eventPool.length){var e=this.eventPool.pop();this.call(e,a,b,c,d);return e}return new this(a,b,c,d)}function sb(a){a instanceof this?void 0:A(\"223\");a.destructor();10>this.eventPool.length&&this.eventPool.push(a)}function qb(a){a.eventPool=[];a.getPooled=rb;a.release=sb}var tb=H.extend({data:null}),ub=H.extend({data:null}),vb=[9,13,27,32],wb=m.canUseDOM&&\"CompositionEvent\"in window,xb=null;m.canUseDOM&&\"documentMode\"in document&&(xb=document.documentMode);\nvar yb=m.canUseDOM&&\"TextEvent\"in window&&!xb,zb=m.canUseDOM&&(!wb||xb&&8<xb&&11>=xb),Ab=String.fromCharCode(32),Bb={beforeInput:{phasedRegistrationNames:{bubbled:\"onBeforeInput\",captured:\"onBeforeInputCapture\"},dependencies:[\"compositionend\",\"keypress\",\"textInput\",\"paste\"]},compositionEnd:{phasedRegistrationNames:{bubbled:\"onCompositionEnd\",captured:\"onCompositionEndCapture\"},dependencies:\"blur compositionend keydown keypress keyup mousedown\".split(\" \")},compositionStart:{phasedRegistrationNames:{bubbled:\"onCompositionStart\",\ncaptured:\"onCompositionStartCapture\"},dependencies:\"blur compositionstart keydown keypress keyup mousedown\".split(\" \")},compositionUpdate:{phasedRegistrationNames:{bubbled:\"onCompositionUpdate\",captured:\"onCompositionUpdateCapture\"},dependencies:\"blur compositionupdate keydown keypress keyup mousedown\".split(\" \")}},Cb=!1;\nfunction Db(a,b){switch(a){case \"keyup\":return-1!==vb.indexOf(b.keyCode);case \"keydown\":return 229!==b.keyCode;case \"keypress\":case \"mousedown\":case \"blur\":return!0;default:return!1}}function Eb(a){a=a.detail;return\"object\"===typeof a&&\"data\"in a?a.data:null}var Fb=!1;function Gb(a,b){switch(a){case \"compositionend\":return Eb(b);case \"keypress\":if(32!==b.which)return null;Cb=!0;return Ab;case \"textInput\":return a=b.data,a===Ab&&Cb?null:a;default:return null}}\nfunction Hb(a,b){if(Fb)return\"compositionend\"===a||!wb&&Db(a,b)?(a=mb(),G._root=null,G._startText=null,G._fallbackText=null,Fb=!1,a):null;switch(a){case \"paste\":return null;case \"keypress\":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case \"compositionend\":return zb?null:b.data;default:return null}}\nvar Ib={eventTypes:Bb,extractEvents:function(a,b,c,d){var e=void 0;var f=void 0;if(wb)b:{switch(a){case \"compositionstart\":e=Bb.compositionStart;break b;case \"compositionend\":e=Bb.compositionEnd;break b;case \"compositionupdate\":e=Bb.compositionUpdate;break b}e=void 0}else Fb?Db(a,c)&&(e=Bb.compositionEnd):\"keydown\"===a&&229===c.keyCode&&(e=Bb.compositionStart);e?(zb&&(Fb||e!==Bb.compositionStart?e===Bb.compositionEnd&&Fb&&(f=mb()):(G._root=d,G._startText=nb(),Fb=!0)),e=tb.getPooled(e,b,c,d),f?e.data=\nf:(f=Eb(c),null!==f&&(e.data=f)),Ya(e),f=e):f=null;(a=yb?Gb(a,c):Hb(a,c))?(b=ub.getPooled(Bb.beforeInput,b,c,d),b.data=a,Ya(b)):b=null;return null===f?b:null===b?f:[f,b]}},Jb=null,Kb={injectFiberControlledHostComponent:function(a){Jb=a}},Lb=null,Mb=null;function Nb(a){if(a=xa(a)){Jb&&\"function\"===typeof Jb.restoreControlledState?void 0:A(\"194\");var b=wa(a.stateNode);Jb.restoreControlledState(a.stateNode,a.type,b)}}function Ob(a){Lb?Mb?Mb.push(a):Mb=[a]:Lb=a}\nfunction Pb(){return null!==Lb||null!==Mb}function Qb(){if(Lb){var a=Lb,b=Mb;Mb=Lb=null;Nb(a);if(b)for(a=0;a<b.length;a++)Nb(b[a])}}var Rb={injection:Kb,enqueueStateRestore:Ob,needsStateRestore:Pb,restoreStateIfNeeded:Qb};function Sb(a,b){return a(b)}function Tb(a,b,c){return a(b,c)}function Ub(){}var Vb=!1;function Wb(a,b){if(Vb)return a(b);Vb=!0;try{return Sb(a,b)}finally{Vb=!1,Pb()&&(Ub(),Qb())}}\nvar Xb={color:!0,date:!0,datetime:!0,\"datetime-local\":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Yb(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return\"input\"===b?!!Xb[a.type]:\"textarea\"===b?!0:!1}function Zb(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}\nfunction $b(a,b){if(!m.canUseDOM||b&&!(\"addEventListener\"in document))return!1;a=\"on\"+a;b=a in document;b||(b=document.createElement(\"div\"),b.setAttribute(a,\"return;\"),b=\"function\"===typeof b[a]);return b}function ac(a){var b=a.type;return(a=a.nodeName)&&\"input\"===a.toLowerCase()&&(\"checkbox\"===b||\"radio\"===b)}\nfunction bc(a){var b=ac(a)?\"checked\":\"value\",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=\"\"+a[b];if(!a.hasOwnProperty(b)&&\"undefined\"!==typeof c&&\"function\"===typeof c.get&&\"function\"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=\"\"+a;f.call(this,a)}});Object.defineProperty(a,b,{enumerable:c.enumerable});return{getValue:function(){return d},setValue:function(a){d=\"\"+a},stopTracking:function(){a._valueTracker=\nnull;delete a[b]}}}}function cc(a){a._valueTracker||(a._valueTracker=bc(a))}function dc(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d=\"\";a&&(d=ac(a)?a.checked?\"true\":\"false\":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}\nvar ec=ba.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,fc=\"function\"===typeof Symbol&&Symbol.for,gc=fc?Symbol.for(\"react.element\"):60103,hc=fc?Symbol.for(\"react.portal\"):60106,ic=fc?Symbol.for(\"react.fragment\"):60107,jc=fc?Symbol.for(\"react.strict_mode\"):60108,kc=fc?Symbol.for(\"react.profiler\"):60114,lc=fc?Symbol.for(\"react.provider\"):60109,mc=fc?Symbol.for(\"react.context\"):60110,pc=fc?Symbol.for(\"react.async_mode\"):60111,qc=fc?Symbol.for(\"react.forward_ref\"):60112,rc=fc?Symbol.for(\"react.timeout\"):\n60113,sc=\"function\"===typeof Symbol&&Symbol.iterator;function tc(a){if(null===a||\"undefined\"===typeof a)return null;a=sc&&a[sc]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}\nfunction uc(a){var b=a.type;if(\"function\"===typeof b)return b.displayName||b.name;if(\"string\"===typeof b)return b;switch(b){case pc:return\"AsyncMode\";case mc:return\"Context.Consumer\";case ic:return\"ReactFragment\";case hc:return\"ReactPortal\";case kc:return\"Profiler(\"+a.pendingProps.id+\")\";case lc:return\"Context.Provider\";case jc:return\"StrictMode\";case rc:return\"Timeout\"}if(\"object\"===typeof b&&null!==b)switch(b.$$typeof){case qc:return a=b.render.displayName||b.render.name||\"\",\"\"!==a?\"ForwardRef(\"+\na+\")\":\"ForwardRef\"}return null}function vc(a){var b=\"\";do{a:switch(a.tag){case 0:case 1:case 2:case 5:var c=a._debugOwner,d=a._debugSource;var e=uc(a);var f=null;c&&(f=uc(c));c=d;e=\"\\n    in \"+(e||\"Unknown\")+(c?\" (at \"+c.fileName.replace(/^.*[\\\\\\/]/,\"\")+\":\"+c.lineNumber+\")\":f?\" (created by \"+f+\")\":\"\");break a;default:e=\"\"}b+=e;a=a.return}while(a);return b}\nvar wc=/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,xc={},zc={};function Ac(a){if(zc.hasOwnProperty(a))return!0;if(xc.hasOwnProperty(a))return!1;if(wc.test(a))return zc[a]=!0;xc[a]=!0;return!1}\nfunction Bc(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case \"function\":case \"symbol\":return!0;case \"boolean\":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return\"data-\"!==a&&\"aria-\"!==a;default:return!1}}function Cc(a,b,c,d){if(null===b||\"undefined\"===typeof b||Bc(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}\nfunction I(a,b,c,d,e){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b}var J={};\"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style\".split(\" \").forEach(function(a){J[a]=new I(a,0,!1,a,null)});\n[[\"acceptCharset\",\"accept-charset\"],[\"className\",\"class\"],[\"htmlFor\",\"for\"],[\"httpEquiv\",\"http-equiv\"]].forEach(function(a){var b=a[0];J[b]=new I(b,1,!1,a[1],null)});[\"contentEditable\",\"draggable\",\"spellCheck\",\"value\"].forEach(function(a){J[a]=new I(a,2,!1,a.toLowerCase(),null)});[\"autoReverse\",\"externalResourcesRequired\",\"preserveAlpha\"].forEach(function(a){J[a]=new I(a,2,!1,a,null)});\n\"allowFullScreen async autoFocus autoPlay controls default defer disabled formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope\".split(\" \").forEach(function(a){J[a]=new I(a,3,!1,a.toLowerCase(),null)});[\"checked\",\"multiple\",\"muted\",\"selected\"].forEach(function(a){J[a]=new I(a,3,!0,a.toLowerCase(),null)});[\"capture\",\"download\"].forEach(function(a){J[a]=new I(a,4,!1,a.toLowerCase(),null)});\n[\"cols\",\"rows\",\"size\",\"span\"].forEach(function(a){J[a]=new I(a,6,!1,a.toLowerCase(),null)});[\"rowSpan\",\"start\"].forEach(function(a){J[a]=new I(a,5,!1,a.toLowerCase(),null)});var Dc=/[\\-:]([a-z])/g;function Ec(a){return a[1].toUpperCase()}\n\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height\".split(\" \").forEach(function(a){var b=a.replace(Dc,\nEc);J[b]=new I(b,1,!1,a,null)});\"xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type\".split(\" \").forEach(function(a){var b=a.replace(Dc,Ec);J[b]=new I(b,1,!1,a,\"http://www.w3.org/1999/xlink\")});[\"xml:base\",\"xml:lang\",\"xml:space\"].forEach(function(a){var b=a.replace(Dc,Ec);J[b]=new I(b,1,!1,a,\"http://www.w3.org/XML/1998/namespace\")});J.tabIndex=new I(\"tabIndex\",1,!1,\"tabindex\",null);\nfunction Fc(a,b,c,d){var e=J.hasOwnProperty(b)?J[b]:null;var f=null!==e?0===e.type:d?!1:!(2<b.length)||\"o\"!==b[0]&&\"O\"!==b[0]||\"n\"!==b[1]&&\"N\"!==b[1]?!1:!0;f||(Cc(b,c,e,d)&&(c=null),d||null===e?Ac(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,\"\"+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:\"\":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?\"\":\"\"+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c))))}\nfunction Gc(a,b){var c=b.checked;return p({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}function Hc(a,b){var c=null==b.defaultValue?\"\":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=Ic(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:\"checkbox\"===b.type||\"radio\"===b.type?null!=b.checked:null!=b.value}}function Jc(a,b){b=b.checked;null!=b&&Fc(a,\"checked\",b,!1)}\nfunction Kc(a,b){Jc(a,b);var c=Ic(b.value);if(null!=c)if(\"number\"===b.type){if(0===c&&\"\"===a.value||a.value!=c)a.value=\"\"+c}else a.value!==\"\"+c&&(a.value=\"\"+c);b.hasOwnProperty(\"value\")?Lc(a,b.type,c):b.hasOwnProperty(\"defaultValue\")&&Lc(a,b.type,Ic(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}\nfunction Mc(a,b,c){if(b.hasOwnProperty(\"value\")||b.hasOwnProperty(\"defaultValue\")){b=\"\"+a._wrapperState.initialValue;var d=a.value;c||b===d||(a.value=b);a.defaultValue=b}c=a.name;\"\"!==c&&(a.name=\"\");a.defaultChecked=!a.defaultChecked;a.defaultChecked=!a.defaultChecked;\"\"!==c&&(a.name=c)}function Lc(a,b,c){if(\"number\"!==b||a.ownerDocument.activeElement!==a)null==c?a.defaultValue=\"\"+a._wrapperState.initialValue:a.defaultValue!==\"\"+c&&(a.defaultValue=\"\"+c)}\nfunction Ic(a){switch(typeof a){case \"boolean\":case \"number\":case \"object\":case \"string\":case \"undefined\":return a;default:return\"\"}}var Nc={change:{phasedRegistrationNames:{bubbled:\"onChange\",captured:\"onChangeCapture\"},dependencies:\"blur change click focus input keydown keyup selectionchange\".split(\" \")}};function Oc(a,b,c){a=H.getPooled(Nc.change,a,b,c);a.type=\"change\";Ob(c);Ya(a);return a}var Pc=null,Qc=null;function Rc(a){Ia(a,!1)}function Sc(a){var b=Oa(a);if(dc(b))return a}\nfunction Tc(a,b){if(\"change\"===a)return b}var Uc=!1;m.canUseDOM&&(Uc=$b(\"input\")&&(!document.documentMode||9<document.documentMode));function Vc(){Pc&&(Pc.detachEvent(\"onpropertychange\",Wc),Qc=Pc=null)}function Wc(a){\"value\"===a.propertyName&&Sc(Qc)&&(a=Oc(Qc,a,Zb(a)),Wb(Rc,a))}function Xc(a,b,c){\"focus\"===a?(Vc(),Pc=b,Qc=c,Pc.attachEvent(\"onpropertychange\",Wc)):\"blur\"===a&&Vc()}function Yc(a){if(\"selectionchange\"===a||\"keyup\"===a||\"keydown\"===a)return Sc(Qc)}\nfunction Zc(a,b){if(\"click\"===a)return Sc(b)}function $c(a,b){if(\"input\"===a||\"change\"===a)return Sc(b)}\nvar ad={eventTypes:Nc,_isInputEventSupported:Uc,extractEvents:function(a,b,c,d){var e=b?Oa(b):window,f=void 0,g=void 0,h=e.nodeName&&e.nodeName.toLowerCase();\"select\"===h||\"input\"===h&&\"file\"===e.type?f=Tc:Yb(e)?Uc?f=$c:(f=Yc,g=Xc):(h=e.nodeName)&&\"input\"===h.toLowerCase()&&(\"checkbox\"===e.type||\"radio\"===e.type)&&(f=Zc);if(f&&(f=f(a,b)))return Oc(f,c,d);g&&g(a,e,b);\"blur\"===a&&(a=e._wrapperState)&&a.controlled&&\"number\"===e.type&&Lc(e,\"number\",e.value)}},bd=H.extend({view:null,detail:null}),cd={Alt:\"altKey\",\nControl:\"ctrlKey\",Meta:\"metaKey\",Shift:\"shiftKey\"};function dd(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=cd[a])?!!b[a]:!1}function ed(){return dd}\nvar fd=bd.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:ed,button:null,buttons:null,relatedTarget:function(a){return a.relatedTarget||(a.fromElement===a.srcElement?a.toElement:a.fromElement)}}),gd=fd.extend({pointerId:null,width:null,height:null,pressure:null,tiltX:null,tiltY:null,pointerType:null,isPrimary:null}),hd={mouseEnter:{registrationName:\"onMouseEnter\",dependencies:[\"mouseout\",\"mouseover\"]},\nmouseLeave:{registrationName:\"onMouseLeave\",dependencies:[\"mouseout\",\"mouseover\"]},pointerEnter:{registrationName:\"onPointerEnter\",dependencies:[\"pointerout\",\"pointerover\"]},pointerLeave:{registrationName:\"onPointerLeave\",dependencies:[\"pointerout\",\"pointerover\"]}},id={eventTypes:hd,extractEvents:function(a,b,c,d){var e=\"mouseover\"===a||\"pointerover\"===a,f=\"mouseout\"===a||\"pointerout\"===a;if(e&&(c.relatedTarget||c.fromElement)||!f&&!e)return null;e=d.window===d?d:(e=d.ownerDocument)?e.defaultView||\ne.parentWindow:window;f?(f=b,b=(b=c.relatedTarget||c.toElement)?Na(b):null):f=null;if(f===b)return null;var g=void 0,h=void 0,k=void 0,n=void 0;if(\"mouseout\"===a||\"mouseover\"===a)g=fd,h=hd.mouseLeave,k=hd.mouseEnter,n=\"mouse\";else if(\"pointerout\"===a||\"pointerover\"===a)g=gd,h=hd.pointerLeave,k=hd.pointerEnter,n=\"pointer\";a=null==f?e:Oa(f);e=null==b?e:Oa(b);h=g.getPooled(h,f,c,d);h.type=n+\"leave\";h.target=a;h.relatedTarget=e;c=g.getPooled(k,b,c,d);c.type=n+\"enter\";c.target=e;c.relatedTarget=a;Za(h,\nc,f,b);return[h,c]}};function jd(a){var b=a;if(a.alternate)for(;b.return;)b=b.return;else{if(0!==(b.effectTag&2))return 1;for(;b.return;)if(b=b.return,0!==(b.effectTag&2))return 1}return 3===b.tag?2:3}function kd(a){2!==jd(a)?A(\"188\"):void 0}\nfunction ld(a){var b=a.alternate;if(!b)return b=jd(a),3===b?A(\"188\"):void 0,1===b?null:a;for(var c=a,d=b;;){var e=c.return,f=e?e.alternate:null;if(!e||!f)break;if(e.child===f.child){for(var g=e.child;g;){if(g===c)return kd(e),a;if(g===d)return kd(e),b;g=g.sibling}A(\"188\")}if(c.return!==d.return)c=e,d=f;else{g=!1;for(var h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===c){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}g?\nvoid 0:A(\"189\")}}c.alternate!==d?A(\"190\"):void 0}3!==c.tag?A(\"188\"):void 0;return c.stateNode.current===c?a:b}function md(a){a=ld(a);if(!a)return null;for(var b=a;;){if(5===b.tag||6===b.tag)return b;if(b.child)b.child.return=b,b=b.child;else{if(b===a)break;for(;!b.sibling;){if(!b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}}return null}\nfunction nd(a){a=ld(a);if(!a)return null;for(var b=a;;){if(5===b.tag||6===b.tag)return b;if(b.child&&4!==b.tag)b.child.return=b,b=b.child;else{if(b===a)break;for(;!b.sibling;){if(!b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}}return null}var od=H.extend({animationName:null,elapsedTime:null,pseudoElement:null}),pd=H.extend({clipboardData:function(a){return\"clipboardData\"in a?a.clipboardData:window.clipboardData}}),qd=bd.extend({relatedTarget:null});\nfunction rd(a){var b=a.keyCode;\"charCode\"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}\nvar sd={Esc:\"Escape\",Spacebar:\" \",Left:\"ArrowLeft\",Up:\"ArrowUp\",Right:\"ArrowRight\",Down:\"ArrowDown\",Del:\"Delete\",Win:\"OS\",Menu:\"ContextMenu\",Apps:\"ContextMenu\",Scroll:\"ScrollLock\",MozPrintableKey:\"Unidentified\"},td={8:\"Backspace\",9:\"Tab\",12:\"Clear\",13:\"Enter\",16:\"Shift\",17:\"Control\",18:\"Alt\",19:\"Pause\",20:\"CapsLock\",27:\"Escape\",32:\" \",33:\"PageUp\",34:\"PageDown\",35:\"End\",36:\"Home\",37:\"ArrowLeft\",38:\"ArrowUp\",39:\"ArrowRight\",40:\"ArrowDown\",45:\"Insert\",46:\"Delete\",112:\"F1\",113:\"F2\",114:\"F3\",115:\"F4\",\n116:\"F5\",117:\"F6\",118:\"F7\",119:\"F8\",120:\"F9\",121:\"F10\",122:\"F11\",123:\"F12\",144:\"NumLock\",145:\"ScrollLock\",224:\"Meta\"},ud=bd.extend({key:function(a){if(a.key){var b=sd[a.key]||a.key;if(\"Unidentified\"!==b)return b}return\"keypress\"===a.type?(a=rd(a),13===a?\"Enter\":String.fromCharCode(a)):\"keydown\"===a.type||\"keyup\"===a.type?td[a.keyCode]||\"Unidentified\":\"\"},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:ed,charCode:function(a){return\"keypress\"===\na.type?rd(a):0},keyCode:function(a){return\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0},which:function(a){return\"keypress\"===a.type?rd(a):\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0}}),vd=fd.extend({dataTransfer:null}),wd=bd.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:ed}),xd=H.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),yd=fd.extend({deltaX:function(a){return\"deltaX\"in a?a.deltaX:\"wheelDeltaX\"in\na?-a.wheelDeltaX:0},deltaY:function(a){return\"deltaY\"in a?a.deltaY:\"wheelDeltaY\"in a?-a.wheelDeltaY:\"wheelDelta\"in a?-a.wheelDelta:0},deltaZ:null,deltaMode:null}),zd=[[\"abort\",\"abort\"],[fb,\"animationEnd\"],[gb,\"animationIteration\"],[hb,\"animationStart\"],[\"canplay\",\"canPlay\"],[\"canplaythrough\",\"canPlayThrough\"],[\"drag\",\"drag\"],[\"dragenter\",\"dragEnter\"],[\"dragexit\",\"dragExit\"],[\"dragleave\",\"dragLeave\"],[\"dragover\",\"dragOver\"],[\"durationchange\",\"durationChange\"],[\"emptied\",\"emptied\"],[\"encrypted\",\"encrypted\"],\n[\"ended\",\"ended\"],[\"error\",\"error\"],[\"gotpointercapture\",\"gotPointerCapture\"],[\"load\",\"load\"],[\"loadeddata\",\"loadedData\"],[\"loadedmetadata\",\"loadedMetadata\"],[\"loadstart\",\"loadStart\"],[\"lostpointercapture\",\"lostPointerCapture\"],[\"mousemove\",\"mouseMove\"],[\"mouseout\",\"mouseOut\"],[\"mouseover\",\"mouseOver\"],[\"playing\",\"playing\"],[\"pointermove\",\"pointerMove\"],[\"pointerout\",\"pointerOut\"],[\"pointerover\",\"pointerOver\"],[\"progress\",\"progress\"],[\"scroll\",\"scroll\"],[\"seeking\",\"seeking\"],[\"stalled\",\"stalled\"],\n[\"suspend\",\"suspend\"],[\"timeupdate\",\"timeUpdate\"],[\"toggle\",\"toggle\"],[\"touchmove\",\"touchMove\"],[ib,\"transitionEnd\"],[\"waiting\",\"waiting\"],[\"wheel\",\"wheel\"]],Ad={},Bd={};function Cd(a,b){var c=a[0];a=a[1];var d=\"on\"+(a[0].toUpperCase()+a.slice(1));b={phasedRegistrationNames:{bubbled:d,captured:d+\"Capture\"},dependencies:[c],isInteractive:b};Ad[a]=b;Bd[c]=b}\n[[\"blur\",\"blur\"],[\"cancel\",\"cancel\"],[\"click\",\"click\"],[\"close\",\"close\"],[\"contextmenu\",\"contextMenu\"],[\"copy\",\"copy\"],[\"cut\",\"cut\"],[\"dblclick\",\"doubleClick\"],[\"dragend\",\"dragEnd\"],[\"dragstart\",\"dragStart\"],[\"drop\",\"drop\"],[\"focus\",\"focus\"],[\"input\",\"input\"],[\"invalid\",\"invalid\"],[\"keydown\",\"keyDown\"],[\"keypress\",\"keyPress\"],[\"keyup\",\"keyUp\"],[\"mousedown\",\"mouseDown\"],[\"mouseup\",\"mouseUp\"],[\"paste\",\"paste\"],[\"pause\",\"pause\"],[\"play\",\"play\"],[\"pointercancel\",\"pointerCancel\"],[\"pointerdown\",\"pointerDown\"],\n[\"pointerup\",\"pointerUp\"],[\"ratechange\",\"rateChange\"],[\"reset\",\"reset\"],[\"seeked\",\"seeked\"],[\"submit\",\"submit\"],[\"touchcancel\",\"touchCancel\"],[\"touchend\",\"touchEnd\"],[\"touchstart\",\"touchStart\"],[\"volumechange\",\"volumeChange\"]].forEach(function(a){Cd(a,!0)});zd.forEach(function(a){Cd(a,!1)});\nvar Dd={eventTypes:Ad,isInteractiveTopLevelEventType:function(a){a=Bd[a];return void 0!==a&&!0===a.isInteractive},extractEvents:function(a,b,c,d){var e=Bd[a];if(!e)return null;switch(a){case \"keypress\":if(0===rd(c))return null;case \"keydown\":case \"keyup\":a=ud;break;case \"blur\":case \"focus\":a=qd;break;case \"click\":if(2===c.button)return null;case \"dblclick\":case \"mousedown\":case \"mousemove\":case \"mouseup\":case \"mouseout\":case \"mouseover\":case \"contextmenu\":a=fd;break;case \"drag\":case \"dragend\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"dragstart\":case \"drop\":a=\nvd;break;case \"touchcancel\":case \"touchend\":case \"touchmove\":case \"touchstart\":a=wd;break;case fb:case gb:case hb:a=od;break;case ib:a=xd;break;case \"scroll\":a=bd;break;case \"wheel\":a=yd;break;case \"copy\":case \"cut\":case \"paste\":a=pd;break;case \"gotpointercapture\":case \"lostpointercapture\":case \"pointercancel\":case \"pointerdown\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"pointerup\":a=gd;break;default:a=H}b=a.getPooled(e,b,c,d);Ya(b);return b}},Ed=Dd.isInteractiveTopLevelEventType,\nFd=[];function Gd(a){var b=a.targetInst;do{if(!b){a.ancestors.push(b);break}var c;for(c=b;c.return;)c=c.return;c=3!==c.tag?null:c.stateNode.containerInfo;if(!c)break;a.ancestors.push(b);b=Na(c)}while(b);for(c=0;c<a.ancestors.length;c++)b=a.ancestors[c],Ja(a.topLevelType,b,a.nativeEvent,Zb(a.nativeEvent))}var Hd=!0;function Id(a){Hd=!!a}function K(a,b){if(!b)return null;var c=(Ed(a)?Kd:Ld).bind(null,a);b.addEventListener(a,c,!1)}\nfunction Md(a,b){if(!b)return null;var c=(Ed(a)?Kd:Ld).bind(null,a);b.addEventListener(a,c,!0)}function Kd(a,b){Tb(Ld,a,b)}function Ld(a,b){if(Hd){var c=Zb(b);c=Na(c);null===c||\"number\"!==typeof c.tag||2===jd(c)||(c=null);if(Fd.length){var d=Fd.pop();d.topLevelType=a;d.nativeEvent=b;d.targetInst=c;a=d}else a={topLevelType:a,nativeEvent:b,targetInst:c,ancestors:[]};try{Wb(Gd,a)}finally{a.topLevelType=null,a.nativeEvent=null,a.targetInst=null,a.ancestors.length=0,10>Fd.length&&Fd.push(a)}}}\nvar Nd={get _enabled(){return Hd},setEnabled:Id,isEnabled:function(){return Hd},trapBubbledEvent:K,trapCapturedEvent:Md,dispatchEvent:Ld},Od={},Pd=0,Qd=\"_reactListenersID\"+(\"\"+Math.random()).slice(2);function Rd(a){Object.prototype.hasOwnProperty.call(a,Qd)||(a[Qd]=Pd++,Od[a[Qd]]={});return Od[a[Qd]]}function Sd(a){for(;a&&a.firstChild;)a=a.firstChild;return a}\nfunction Td(a,b){var c=Sd(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=Sd(c)}}function Ud(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&(\"input\"===b&&(\"text\"===a.type||\"search\"===a.type||\"tel\"===a.type||\"url\"===a.type||\"password\"===a.type)||\"textarea\"===b||\"true\"===a.contentEditable)}\nvar Vd=m.canUseDOM&&\"documentMode\"in document&&11>=document.documentMode,Wd={select:{phasedRegistrationNames:{bubbled:\"onSelect\",captured:\"onSelectCapture\"},dependencies:\"blur contextmenu focus keydown keyup mousedown mouseup selectionchange\".split(\" \")}},Xd=null,Yd=null,Zd=null,$d=!1;\nfunction ae(a,b){if($d||null==Xd||Xd!==da())return null;var c=Xd;\"selectionStart\"in c&&Ud(c)?c={start:c.selectionStart,end:c.selectionEnd}:window.getSelection?(c=window.getSelection(),c={anchorNode:c.anchorNode,anchorOffset:c.anchorOffset,focusNode:c.focusNode,focusOffset:c.focusOffset}):c=void 0;return Zd&&ea(Zd,c)?null:(Zd=c,a=H.getPooled(Wd.select,Yd,a,b),a.type=\"select\",a.target=Xd,Ya(a),a)}\nvar be={eventTypes:Wd,extractEvents:function(a,b,c,d){var e=d.window===d?d.document:9===d.nodeType?d:d.ownerDocument,f;if(!(f=!e)){a:{e=Rd(e);f=sa.onSelect;for(var g=0;g<f.length;g++){var h=f[g];if(!e.hasOwnProperty(h)||!e[h]){e=!1;break a}}e=!0}f=!e}if(f)return null;e=b?Oa(b):window;switch(a){case \"focus\":if(Yb(e)||\"true\"===e.contentEditable)Xd=e,Yd=b,Zd=null;break;case \"blur\":Zd=Yd=Xd=null;break;case \"mousedown\":$d=!0;break;case \"contextmenu\":case \"mouseup\":return $d=!1,ae(c,d);case \"selectionchange\":if(Vd)break;\ncase \"keydown\":case \"keyup\":return ae(c,d)}return null}};Ga.injectEventPluginOrder(\"ResponderEventPlugin SimpleEventPlugin TapEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin\".split(\" \"));wa=Qa.getFiberCurrentPropsFromNode;xa=Qa.getInstanceFromNode;ya=Qa.getNodeFromInstance;Ga.injectEventPluginsByName({SimpleEventPlugin:Dd,EnterLeaveEventPlugin:id,ChangeEventPlugin:ad,SelectEventPlugin:be,BeforeInputEventPlugin:Ib});\nvar ce=\"function\"===typeof requestAnimationFrame?requestAnimationFrame:void 0,de=Date,ee=setTimeout,fe=clearTimeout,ge=void 0;if(\"object\"===typeof performance&&\"function\"===typeof performance.now){var he=performance;ge=function(){return he.now()}}else ge=function(){return de.now()};var ie=void 0,je=void 0;\nif(m.canUseDOM){var ke=\"function\"===typeof ce?ce:function(){A(\"276\")},L=null,le=null,me=-1,ne=!1,oe=!1,pe=0,qe=33,re=33,se={didTimeout:!1,timeRemaining:function(){var a=pe-ge();return 0<a?a:0}},ue=function(a,b){var c=a.scheduledCallback,d=!1;try{c(b),d=!0}finally{je(a),d||(ne=!0,window.postMessage(te,\"*\"))}},te=\"__reactIdleCallback$\"+Math.random().toString(36).slice(2);window.addEventListener(\"message\",function(a){if(a.source===window&&a.data===te&&(ne=!1,null!==L)){if(null!==L){var b=ge();if(!(-1===\nme||me>b)){a=-1;for(var c=[],d=L;null!==d;){var e=d.timeoutTime;-1!==e&&e<=b?c.push(d):-1!==e&&(-1===a||e<a)&&(a=e);d=d.next}if(0<c.length)for(se.didTimeout=!0,b=0,d=c.length;b<d;b++)ue(c[b],se);me=a}}for(a=ge();0<pe-a&&null!==L;)a=L,se.didTimeout=!1,ue(a,se),a=ge();null===L||oe||(oe=!0,ke(ve))}},!1);var ve=function(a){oe=!1;var b=a-pe+re;b<re&&qe<re?(8>b&&(b=8),re=b<qe?qe:b):qe=b;pe=a+re;ne||(ne=!0,window.postMessage(te,\"*\"))};ie=function(a,b){var c=-1;null!=b&&\"number\"===typeof b.timeout&&(c=ge()+\nb.timeout);if(-1===me||-1!==c&&c<me)me=c;a={scheduledCallback:a,timeoutTime:c,prev:null,next:null};null===L?L=a:(b=a.prev=le,null!==b&&(b.next=a));le=a;oe||(oe=!0,ke(ve));return a};je=function(a){if(null!==a.prev||L===a){var b=a.next,c=a.prev;a.next=null;a.prev=null;null!==b?null!==c?(c.next=b,b.prev=c):(b.prev=null,L=b):null!==c?(c.next=null,le=c):le=L=null}}}else{var we=new Map;ie=function(a){var b={scheduledCallback:a,timeoutTime:0,next:null,prev:null},c=ee(function(){a({timeRemaining:function(){return Infinity},\ndidTimeout:!1})});we.set(a,c);return b};je=function(a){var b=we.get(a.scheduledCallback);we.delete(a);fe(b)}}function xe(a){var b=\"\";ba.Children.forEach(a,function(a){null==a||\"string\"!==typeof a&&\"number\"!==typeof a||(b+=a)});return b}function ye(a,b){a=p({children:void 0},b);if(b=xe(b.children))a.children=b;return a}\nfunction ze(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b[\"$\"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty(\"$\"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=\"\"+c;b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}\nfunction Ae(a,b){var c=b.value;a._wrapperState={initialValue:null!=c?c:b.defaultValue,wasMultiple:!!b.multiple}}function Be(a,b){null!=b.dangerouslySetInnerHTML?A(\"91\"):void 0;return p({},b,{value:void 0,defaultValue:void 0,children:\"\"+a._wrapperState.initialValue})}function Ce(a,b){var c=b.value;null==c&&(c=b.defaultValue,b=b.children,null!=b&&(null!=c?A(\"92\"):void 0,Array.isArray(b)&&(1>=b.length?void 0:A(\"93\"),b=b[0]),c=\"\"+b),null==c&&(c=\"\"));a._wrapperState={initialValue:\"\"+c}}\nfunction De(a,b){var c=b.value;null!=c&&(c=\"\"+c,c!==a.value&&(a.value=c),null==b.defaultValue&&(a.defaultValue=c));null!=b.defaultValue&&(a.defaultValue=b.defaultValue)}function Ee(a){var b=a.textContent;b===a._wrapperState.initialValue&&(a.value=b)}var Fe={html:\"http://www.w3.org/1999/xhtml\",mathml:\"http://www.w3.org/1998/Math/MathML\",svg:\"http://www.w3.org/2000/svg\"};\nfunction Ge(a){switch(a){case \"svg\":return\"http://www.w3.org/2000/svg\";case \"math\":return\"http://www.w3.org/1998/Math/MathML\";default:return\"http://www.w3.org/1999/xhtml\"}}function He(a,b){return null==a||\"http://www.w3.org/1999/xhtml\"===a?Ge(b):\"http://www.w3.org/2000/svg\"===a&&\"foreignObject\"===b?\"http://www.w3.org/1999/xhtml\":a}\nvar Ie=void 0,Je=function(a){return\"undefined\"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(a.namespaceURI!==Fe.svg||\"innerHTML\"in a)a.innerHTML=b;else{Ie=Ie||document.createElement(\"div\");Ie.innerHTML=\"<svg>\"+b+\"</svg>\";for(b=Ie.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});\nfunction Ke(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}\nvar Le={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,\nstopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},Me=[\"Webkit\",\"ms\",\"Moz\",\"O\"];Object.keys(Le).forEach(function(a){Me.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);Le[b]=Le[a]})});\nfunction Ne(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf(\"--\");var e=c;var f=b[c];e=null==f||\"boolean\"===typeof f||\"\"===f?\"\":d||\"number\"!==typeof f||0===f||Le.hasOwnProperty(e)&&Le[e]?(\"\"+f).trim():f+\"px\";\"float\"===c&&(c=\"cssFloat\");d?a.setProperty(c,e):a[c]=e}}var Oe=p({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});\nfunction Pe(a,b,c){b&&(Oe[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML?A(\"137\",a,c()):void 0),null!=b.dangerouslySetInnerHTML&&(null!=b.children?A(\"60\"):void 0,\"object\"===typeof b.dangerouslySetInnerHTML&&\"__html\"in b.dangerouslySetInnerHTML?void 0:A(\"61\")),null!=b.style&&\"object\"!==typeof b.style?A(\"62\",c()):void 0)}\nfunction Qe(a,b){if(-1===a.indexOf(\"-\"))return\"string\"===typeof b.is;switch(a){case \"annotation-xml\":case \"color-profile\":case \"font-face\":case \"font-face-src\":case \"font-face-uri\":case \"font-face-format\":case \"font-face-name\":case \"missing-glyph\":return!1;default:return!0}}var Re=v.thatReturns(\"\");\nfunction Se(a,b){a=9===a.nodeType||11===a.nodeType?a:a.ownerDocument;var c=Rd(a);b=sa[b];for(var d=0;d<b.length;d++){var e=b[d];if(!c.hasOwnProperty(e)||!c[e]){switch(e){case \"scroll\":Md(\"scroll\",a);break;case \"focus\":case \"blur\":Md(\"focus\",a);Md(\"blur\",a);c.blur=!0;c.focus=!0;break;case \"cancel\":case \"close\":$b(e,!0)&&Md(e,a);break;case \"invalid\":case \"submit\":case \"reset\":break;default:-1===jb.indexOf(e)&&K(e,a)}c[e]=!0}}}\nfunction Te(a,b,c,d){c=9===c.nodeType?c:c.ownerDocument;d===Fe.html&&(d=Ge(a));d===Fe.html?\"script\"===a?(a=c.createElement(\"div\"),a.innerHTML=\"<script>\\x3c/script>\",a=a.removeChild(a.firstChild)):a=\"string\"===typeof b.is?c.createElement(a,{is:b.is}):c.createElement(a):a=c.createElementNS(d,a);return a}function Ue(a,b){return(9===b.nodeType?b:b.ownerDocument).createTextNode(a)}\nfunction Ve(a,b,c,d){var e=Qe(b,c);switch(b){case \"iframe\":case \"object\":K(\"load\",a);var f=c;break;case \"video\":case \"audio\":for(f=0;f<jb.length;f++)K(jb[f],a);f=c;break;case \"source\":K(\"error\",a);f=c;break;case \"img\":case \"image\":case \"link\":K(\"error\",a);K(\"load\",a);f=c;break;case \"form\":K(\"reset\",a);K(\"submit\",a);f=c;break;case \"details\":K(\"toggle\",a);f=c;break;case \"input\":Hc(a,c);f=Gc(a,c);K(\"invalid\",a);Se(d,\"onChange\");break;case \"option\":f=ye(a,c);break;case \"select\":Ae(a,c);f=p({},c,{value:void 0});\nK(\"invalid\",a);Se(d,\"onChange\");break;case \"textarea\":Ce(a,c);f=Be(a,c);K(\"invalid\",a);Se(d,\"onChange\");break;default:f=c}Pe(b,f,Re);var g=f,h;for(h in g)if(g.hasOwnProperty(h)){var k=g[h];\"style\"===h?Ne(a,k,Re):\"dangerouslySetInnerHTML\"===h?(k=k?k.__html:void 0,null!=k&&Je(a,k)):\"children\"===h?\"string\"===typeof k?(\"textarea\"!==b||\"\"!==k)&&Ke(a,k):\"number\"===typeof k&&Ke(a,\"\"+k):\"suppressContentEditableWarning\"!==h&&\"suppressHydrationWarning\"!==h&&\"autoFocus\"!==h&&(ra.hasOwnProperty(h)?null!=k&&Se(d,\nh):null!=k&&Fc(a,h,k,e))}switch(b){case \"input\":cc(a);Mc(a,c,!1);break;case \"textarea\":cc(a);Ee(a,c);break;case \"option\":null!=c.value&&a.setAttribute(\"value\",c.value);break;case \"select\":a.multiple=!!c.multiple;b=c.value;null!=b?ze(a,!!c.multiple,b,!1):null!=c.defaultValue&&ze(a,!!c.multiple,c.defaultValue,!0);break;default:\"function\"===typeof f.onClick&&(a.onclick=v)}}\nfunction We(a,b,c,d,e){var f=null;switch(b){case \"input\":c=Gc(a,c);d=Gc(a,d);f=[];break;case \"option\":c=ye(a,c);d=ye(a,d);f=[];break;case \"select\":c=p({},c,{value:void 0});d=p({},d,{value:void 0});f=[];break;case \"textarea\":c=Be(a,c);d=Be(a,d);f=[];break;default:\"function\"!==typeof c.onClick&&\"function\"===typeof d.onClick&&(a.onclick=v)}Pe(b,d,Re);b=a=void 0;var g=null;for(a in c)if(!d.hasOwnProperty(a)&&c.hasOwnProperty(a)&&null!=c[a])if(\"style\"===a){var h=c[a];for(b in h)h.hasOwnProperty(b)&&(g||\n(g={}),g[b]=\"\")}else\"dangerouslySetInnerHTML\"!==a&&\"children\"!==a&&\"suppressContentEditableWarning\"!==a&&\"suppressHydrationWarning\"!==a&&\"autoFocus\"!==a&&(ra.hasOwnProperty(a)?f||(f=[]):(f=f||[]).push(a,null));for(a in d){var k=d[a];h=null!=c?c[a]:void 0;if(d.hasOwnProperty(a)&&k!==h&&(null!=k||null!=h))if(\"style\"===a)if(h){for(b in h)!h.hasOwnProperty(b)||k&&k.hasOwnProperty(b)||(g||(g={}),g[b]=\"\");for(b in k)k.hasOwnProperty(b)&&h[b]!==k[b]&&(g||(g={}),g[b]=k[b])}else g||(f||(f=[]),f.push(a,g)),\ng=k;else\"dangerouslySetInnerHTML\"===a?(k=k?k.__html:void 0,h=h?h.__html:void 0,null!=k&&h!==k&&(f=f||[]).push(a,\"\"+k)):\"children\"===a?h===k||\"string\"!==typeof k&&\"number\"!==typeof k||(f=f||[]).push(a,\"\"+k):\"suppressContentEditableWarning\"!==a&&\"suppressHydrationWarning\"!==a&&(ra.hasOwnProperty(a)?(null!=k&&Se(e,a),f||h===k||(f=[])):(f=f||[]).push(a,k))}g&&(f=f||[]).push(\"style\",g);return f}\nfunction Xe(a,b,c,d,e){\"input\"===c&&\"radio\"===e.type&&null!=e.name&&Jc(a,e);Qe(c,d);d=Qe(c,e);for(var f=0;f<b.length;f+=2){var g=b[f],h=b[f+1];\"style\"===g?Ne(a,h,Re):\"dangerouslySetInnerHTML\"===g?Je(a,h):\"children\"===g?Ke(a,h):Fc(a,g,h,d)}switch(c){case \"input\":Kc(a,e);break;case \"textarea\":De(a,e);break;case \"select\":a._wrapperState.initialValue=void 0,b=a._wrapperState.wasMultiple,a._wrapperState.wasMultiple=!!e.multiple,c=e.value,null!=c?ze(a,!!e.multiple,c,!1):b!==!!e.multiple&&(null!=e.defaultValue?\nze(a,!!e.multiple,e.defaultValue,!0):ze(a,!!e.multiple,e.multiple?[]:\"\",!1))}}\nfunction Ye(a,b,c,d,e){switch(b){case \"iframe\":case \"object\":K(\"load\",a);break;case \"video\":case \"audio\":for(d=0;d<jb.length;d++)K(jb[d],a);break;case \"source\":K(\"error\",a);break;case \"img\":case \"image\":case \"link\":K(\"error\",a);K(\"load\",a);break;case \"form\":K(\"reset\",a);K(\"submit\",a);break;case \"details\":K(\"toggle\",a);break;case \"input\":Hc(a,c);K(\"invalid\",a);Se(e,\"onChange\");break;case \"select\":Ae(a,c);K(\"invalid\",a);Se(e,\"onChange\");break;case \"textarea\":Ce(a,c),K(\"invalid\",a),Se(e,\"onChange\")}Pe(b,\nc,Re);d=null;for(var f in c)if(c.hasOwnProperty(f)){var g=c[f];\"children\"===f?\"string\"===typeof g?a.textContent!==g&&(d=[\"children\",g]):\"number\"===typeof g&&a.textContent!==\"\"+g&&(d=[\"children\",\"\"+g]):ra.hasOwnProperty(f)&&null!=g&&Se(e,f)}switch(b){case \"input\":cc(a);Mc(a,c,!0);break;case \"textarea\":cc(a);Ee(a,c);break;case \"select\":case \"option\":break;default:\"function\"===typeof c.onClick&&(a.onclick=v)}return d}function Ze(a,b){return a.nodeValue!==b}\nvar $e={createElement:Te,createTextNode:Ue,setInitialProperties:Ve,diffProperties:We,updateProperties:Xe,diffHydratedProperties:Ye,diffHydratedText:Ze,warnForUnmatchedText:function(){},warnForDeletedHydratableElement:function(){},warnForDeletedHydratableText:function(){},warnForInsertedHydratedElement:function(){},warnForInsertedHydratedText:function(){},restoreControlledState:function(a,b,c){switch(b){case \"input\":Kc(a,c);b=c.name;if(\"radio\"===c.type&&null!=b){for(c=a;c.parentNode;)c=c.parentNode;\nc=c.querySelectorAll(\"input[name=\"+JSON.stringify(\"\"+b)+'][type=\"radio\"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=Pa(d);e?void 0:A(\"90\");dc(d);Kc(d,e)}}}break;case \"textarea\":De(a,c);break;case \"select\":b=c.value,null!=b&&ze(a,!!c.multiple,b,!1)}}},af=null,bf=null;function cf(a,b){switch(a){case \"button\":case \"input\":case \"select\":case \"textarea\":return!!b.autoFocus}return!1}\nfunction df(a,b){return\"textarea\"===a||\"string\"===typeof b.children||\"number\"===typeof b.children||\"object\"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&\"string\"===typeof b.dangerouslySetInnerHTML.__html}var ef=ge,ff=ie,gf=je;function hf(a){for(a=a.nextSibling;a&&1!==a.nodeType&&3!==a.nodeType;)a=a.nextSibling;return a}function jf(a){for(a=a.firstChild;a&&1!==a.nodeType&&3!==a.nodeType;)a=a.nextSibling;return a}new Set;var kf=[],lf=-1;function mf(a){return{current:a}}\nfunction M(a){0>lf||(a.current=kf[lf],kf[lf]=null,lf--)}function N(a,b){lf++;kf[lf]=a.current;a.current=b}var nf=mf(ha),O=mf(!1),of=ha;function pf(a){return qf(a)?of:nf.current}\nfunction rf(a,b){var c=a.type.contextTypes;if(!c)return ha;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}function qf(a){return 2===a.tag&&null!=a.type.childContextTypes}function sf(a){qf(a)&&(M(O,a),M(nf,a))}function tf(a){M(O,a);M(nf,a)}\nfunction uf(a,b,c){nf.current!==ha?A(\"168\"):void 0;N(nf,b,a);N(O,c,a)}function vf(a,b){var c=a.stateNode,d=a.type.childContextTypes;if(\"function\"!==typeof c.getChildContext)return b;c=c.getChildContext();for(var e in c)e in d?void 0:A(\"108\",uc(a)||\"Unknown\",e);return p({},b,c)}function wf(a){if(!qf(a))return!1;var b=a.stateNode;b=b&&b.__reactInternalMemoizedMergedChildContext||ha;of=nf.current;N(nf,b,a);N(O,O.current,a);return!0}\nfunction xf(a,b){var c=a.stateNode;c?void 0:A(\"169\");if(b){var d=vf(a,of);c.__reactInternalMemoizedMergedChildContext=d;M(O,a);M(nf,a);N(nf,d,a)}else M(O,a);N(O,b,a)}\nfunction yf(a,b,c,d){this.tag=a;this.key=c;this.sibling=this.child=this.return=this.stateNode=this.type=null;this.index=0;this.ref=null;this.pendingProps=b;this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.effectTag=0;this.lastEffect=this.firstEffect=this.nextEffect=null;this.expirationTime=0;this.alternate=null}\nfunction zf(a,b,c){var d=a.alternate;null===d?(d=new yf(a.tag,b,a.key,a.mode),d.type=a.type,d.stateNode=a.stateNode,d.alternate=a,a.alternate=d):(d.pendingProps=b,d.effectTag=0,d.nextEffect=null,d.firstEffect=null,d.lastEffect=null);d.expirationTime=c;d.child=a.child;d.memoizedProps=a.memoizedProps;d.memoizedState=a.memoizedState;d.updateQueue=a.updateQueue;d.sibling=a.sibling;d.index=a.index;d.ref=a.ref;return d}\nfunction Af(a,b,c){var d=a.type,e=a.key;a=a.props;if(\"function\"===typeof d)var f=d.prototype&&d.prototype.isReactComponent?2:0;else if(\"string\"===typeof d)f=5;else switch(d){case ic:return Bf(a.children,b,c,e);case pc:f=11;b|=3;break;case jc:f=11;b|=2;break;case kc:return d=new yf(15,a,e,b|4),d.type=kc,d.expirationTime=c,d;case rc:f=16;b|=2;break;default:a:{switch(\"object\"===typeof d&&null!==d?d.$$typeof:null){case lc:f=13;break a;case mc:f=12;break a;case qc:f=14;break a;default:A(\"130\",null==d?\nd:typeof d,\"\")}f=void 0}}b=new yf(f,a,e,b);b.type=d;b.expirationTime=c;return b}function Bf(a,b,c,d){a=new yf(10,a,d,b);a.expirationTime=c;return a}function Cf(a,b,c){a=new yf(6,a,null,b);a.expirationTime=c;return a}function Df(a,b,c){b=new yf(4,null!==a.children?a.children:[],a.key,b);b.expirationTime=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}\nfunction Ef(a,b,c){b=new yf(3,null,null,b?3:0);a={current:b,containerInfo:a,pendingChildren:null,earliestPendingTime:0,latestPendingTime:0,earliestSuspendedTime:0,latestSuspendedTime:0,latestPingedTime:0,pendingCommitExpirationTime:0,finishedWork:null,context:null,pendingContext:null,hydrate:c,remainingExpirationTime:0,firstBatch:null,nextScheduledRoot:null};return b.stateNode=a}var Ff=null,Gf=null;function Hf(a){return function(b){try{return a(b)}catch(c){}}}\nfunction If(a){if(\"undefined\"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var b=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(b.isDisabled||!b.supportsFiber)return!0;try{var c=b.inject(a);Ff=Hf(function(a){return b.onCommitFiberRoot(c,a)});Gf=Hf(function(a){return b.onCommitFiberUnmount(c,a)})}catch(d){}return!0}function Jf(a){\"function\"===typeof Ff&&Ff(a)}function Kf(a){\"function\"===typeof Gf&&Gf(a)}var Lf=!1;\nfunction Mf(a){return{expirationTime:0,baseState:a,firstUpdate:null,lastUpdate:null,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function Nf(a){return{expirationTime:a.expirationTime,baseState:a.baseState,firstUpdate:a.firstUpdate,lastUpdate:a.lastUpdate,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}\nfunction Of(a){return{expirationTime:a,tag:0,payload:null,callback:null,next:null,nextEffect:null}}function Pf(a,b,c){null===a.lastUpdate?a.firstUpdate=a.lastUpdate=b:(a.lastUpdate.next=b,a.lastUpdate=b);if(0===a.expirationTime||a.expirationTime>c)a.expirationTime=c}\nfunction Qf(a,b,c){var d=a.alternate;if(null===d){var e=a.updateQueue;var f=null;null===e&&(e=a.updateQueue=Mf(a.memoizedState))}else e=a.updateQueue,f=d.updateQueue,null===e?null===f?(e=a.updateQueue=Mf(a.memoizedState),f=d.updateQueue=Mf(d.memoizedState)):e=a.updateQueue=Nf(f):null===f&&(f=d.updateQueue=Nf(e));null===f||e===f?Pf(e,b,c):null===e.lastUpdate||null===f.lastUpdate?(Pf(e,b,c),Pf(f,b,c)):(Pf(e,b,c),f.lastUpdate=b)}\nfunction Rf(a,b,c){var d=a.updateQueue;d=null===d?a.updateQueue=Mf(a.memoizedState):Sf(a,d);null===d.lastCapturedUpdate?d.firstCapturedUpdate=d.lastCapturedUpdate=b:(d.lastCapturedUpdate.next=b,d.lastCapturedUpdate=b);if(0===d.expirationTime||d.expirationTime>c)d.expirationTime=c}function Sf(a,b){var c=a.alternate;null!==c&&b===c.updateQueue&&(b=a.updateQueue=Nf(b));return b}\nfunction Tf(a,b,c,d,e,f){switch(c.tag){case 1:return a=c.payload,\"function\"===typeof a?a.call(f,d,e):a;case 3:a.effectTag=a.effectTag&-1025|64;case 0:a=c.payload;e=\"function\"===typeof a?a.call(f,d,e):a;if(null===e||void 0===e)break;return p({},d,e);case 2:Lf=!0}return d}\nfunction Uf(a,b,c,d,e){Lf=!1;if(!(0===b.expirationTime||b.expirationTime>e)){b=Sf(a,b);for(var f=b.baseState,g=null,h=0,k=b.firstUpdate,n=f;null!==k;){var r=k.expirationTime;if(r>e){if(null===g&&(g=k,f=n),0===h||h>r)h=r}else n=Tf(a,b,k,n,c,d),null!==k.callback&&(a.effectTag|=32,k.nextEffect=null,null===b.lastEffect?b.firstEffect=b.lastEffect=k:(b.lastEffect.nextEffect=k,b.lastEffect=k));k=k.next}r=null;for(k=b.firstCapturedUpdate;null!==k;){var w=k.expirationTime;if(w>e){if(null===r&&(r=k,null===\ng&&(f=n)),0===h||h>w)h=w}else n=Tf(a,b,k,n,c,d),null!==k.callback&&(a.effectTag|=32,k.nextEffect=null,null===b.lastCapturedEffect?b.firstCapturedEffect=b.lastCapturedEffect=k:(b.lastCapturedEffect.nextEffect=k,b.lastCapturedEffect=k));k=k.next}null===g&&(b.lastUpdate=null);null===r?b.lastCapturedUpdate=null:a.effectTag|=32;null===g&&null===r&&(f=n);b.baseState=f;b.firstUpdate=g;b.firstCapturedUpdate=r;b.expirationTime=h;a.memoizedState=n}}\nfunction Vf(a,b){\"function\"!==typeof a?A(\"191\",a):void 0;a.call(b)}\nfunction Wf(a,b,c){null!==b.firstCapturedUpdate&&(null!==b.lastUpdate&&(b.lastUpdate.next=b.firstCapturedUpdate,b.lastUpdate=b.lastCapturedUpdate),b.firstCapturedUpdate=b.lastCapturedUpdate=null);a=b.firstEffect;for(b.firstEffect=b.lastEffect=null;null!==a;){var d=a.callback;null!==d&&(a.callback=null,Vf(d,c));a=a.nextEffect}a=b.firstCapturedEffect;for(b.firstCapturedEffect=b.lastCapturedEffect=null;null!==a;)b=a.callback,null!==b&&(a.callback=null,Vf(b,c)),a=a.nextEffect}\nfunction Xf(a,b){return{value:a,source:b,stack:vc(b)}}var Yf=mf(null),Zf=mf(null),$f=mf(0);function ag(a){var b=a.type._context;N($f,b._changedBits,a);N(Zf,b._currentValue,a);N(Yf,a,a);b._currentValue=a.pendingProps.value;b._changedBits=a.stateNode}function bg(a){var b=$f.current,c=Zf.current;M(Yf,a);M(Zf,a);M($f,a);a=a.type._context;a._currentValue=c;a._changedBits=b}var cg={},dg=mf(cg),eg=mf(cg),fg=mf(cg);function gg(a){a===cg?A(\"174\"):void 0;return a}\nfunction ig(a,b){N(fg,b,a);N(eg,a,a);N(dg,cg,a);var c=b.nodeType;switch(c){case 9:case 11:b=(b=b.documentElement)?b.namespaceURI:He(null,\"\");break;default:c=8===c?b.parentNode:b,b=c.namespaceURI||null,c=c.tagName,b=He(b,c)}M(dg,a);N(dg,b,a)}function jg(a){M(dg,a);M(eg,a);M(fg,a)}function kg(a){eg.current===a&&(M(dg,a),M(eg,a))}function lg(a,b,c){var d=a.memoizedState;b=b(c,d);d=null===b||void 0===b?d:p({},d,b);a.memoizedState=d;a=a.updateQueue;null!==a&&0===a.expirationTime&&(a.baseState=d)}\nvar pg={isMounted:function(a){return(a=a._reactInternalFiber)?2===jd(a):!1},enqueueSetState:function(a,b,c){a=a._reactInternalFiber;var d=mg();d=ng(d,a);var e=Of(d);e.payload=b;void 0!==c&&null!==c&&(e.callback=c);Qf(a,e,d);og(a,d)},enqueueReplaceState:function(a,b,c){a=a._reactInternalFiber;var d=mg();d=ng(d,a);var e=Of(d);e.tag=1;e.payload=b;void 0!==c&&null!==c&&(e.callback=c);Qf(a,e,d);og(a,d)},enqueueForceUpdate:function(a,b){a=a._reactInternalFiber;var c=mg();c=ng(c,a);var d=Of(c);d.tag=2;void 0!==\nb&&null!==b&&(d.callback=b);Qf(a,d,c);og(a,c)}};function qg(a,b,c,d,e,f){var g=a.stateNode;a=a.type;return\"function\"===typeof g.shouldComponentUpdate?g.shouldComponentUpdate(c,e,f):a.prototype&&a.prototype.isPureReactComponent?!ea(b,c)||!ea(d,e):!0}\nfunction rg(a,b,c,d){a=b.state;\"function\"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);\"function\"===typeof b.UNSAFE_componentWillReceiveProps&&b.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&pg.enqueueReplaceState(b,b.state,null)}\nfunction sg(a,b){var c=a.type,d=a.stateNode,e=a.pendingProps,f=pf(a);d.props=e;d.state=a.memoizedState;d.refs=ha;d.context=rf(a,f);f=a.updateQueue;null!==f&&(Uf(a,f,e,d,b),d.state=a.memoizedState);f=a.type.getDerivedStateFromProps;\"function\"===typeof f&&(lg(a,f,e),d.state=a.memoizedState);\"function\"===typeof c.getDerivedStateFromProps||\"function\"===typeof d.getSnapshotBeforeUpdate||\"function\"!==typeof d.UNSAFE_componentWillMount&&\"function\"!==typeof d.componentWillMount||(c=d.state,\"function\"===typeof d.componentWillMount&&\nd.componentWillMount(),\"function\"===typeof d.UNSAFE_componentWillMount&&d.UNSAFE_componentWillMount(),c!==d.state&&pg.enqueueReplaceState(d,d.state,null),f=a.updateQueue,null!==f&&(Uf(a,f,e,d,b),d.state=a.memoizedState));\"function\"===typeof d.componentDidMount&&(a.effectTag|=4)}var tg=Array.isArray;\nfunction ug(a,b,c){a=c.ref;if(null!==a&&\"function\"!==typeof a&&\"object\"!==typeof a){if(c._owner){c=c._owner;var d=void 0;c&&(2!==c.tag?A(\"110\"):void 0,d=c.stateNode);d?void 0:A(\"147\",a);var e=\"\"+a;if(null!==b&&null!==b.ref&&\"function\"===typeof b.ref&&b.ref._stringRef===e)return b.ref;b=function(a){var b=d.refs===ha?d.refs={}:d.refs;null===a?delete b[e]:b[e]=a};b._stringRef=e;return b}\"string\"!==typeof a?A(\"148\"):void 0;c._owner?void 0:A(\"254\",a)}return a}\nfunction vg(a,b){\"textarea\"!==a.type&&A(\"31\",\"[object Object]\"===Object.prototype.toString.call(b)?\"object with keys {\"+Object.keys(b).join(\", \")+\"}\":b,\"\")}\nfunction wg(a){function b(b,c){if(a){var d=b.lastEffect;null!==d?(d.nextEffect=c,b.lastEffect=c):b.firstEffect=b.lastEffect=c;c.nextEffect=null;c.effectTag=8}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b,c){a=zf(a,b,c);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.effectTag=\n2,c):d;b.effectTag=2;return c}function g(b){a&&null===b.alternate&&(b.effectTag=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=Cf(c,a.mode,d),b.return=a,b;b=e(b,c,d);b.return=a;return b}function k(a,b,c,d){if(null!==b&&b.type===c.type)return d=e(b,c.props,d),d.ref=ug(a,b,c),d.return=a,d;d=Af(c,a.mode,d);d.ref=ug(a,b,c);d.return=a;return d}function n(a,b,c,d){if(null===b||4!==b.tag||b.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==c.implementation)return b=\nDf(c,a.mode,d),b.return=a,b;b=e(b,c.children||[],d);b.return=a;return b}function r(a,b,c,d,f){if(null===b||10!==b.tag)return b=Bf(c,a.mode,d,f),b.return=a,b;b=e(b,c,d);b.return=a;return b}function w(a,b,c){if(\"string\"===typeof b||\"number\"===typeof b)return b=Cf(\"\"+b,a.mode,c),b.return=a,b;if(\"object\"===typeof b&&null!==b){switch(b.$$typeof){case gc:return c=Af(b,a.mode,c),c.ref=ug(a,null,b),c.return=a,c;case hc:return b=Df(b,a.mode,c),b.return=a,b}if(tg(b)||tc(b))return b=Bf(b,a.mode,c,null),b.return=\na,b;vg(a,b)}return null}function P(a,b,c,d){var e=null!==b?b.key:null;if(\"string\"===typeof c||\"number\"===typeof c)return null!==e?null:h(a,b,\"\"+c,d);if(\"object\"===typeof c&&null!==c){switch(c.$$typeof){case gc:return c.key===e?c.type===ic?r(a,b,c.props.children,d,e):k(a,b,c,d):null;case hc:return c.key===e?n(a,b,c,d):null}if(tg(c)||tc(c))return null!==e?null:r(a,b,c,d,null);vg(a,c)}return null}function nc(a,b,c,d,e){if(\"string\"===typeof d||\"number\"===typeof d)return a=a.get(c)||null,h(b,a,\"\"+d,e);\nif(\"object\"===typeof d&&null!==d){switch(d.$$typeof){case gc:return a=a.get(null===d.key?c:d.key)||null,d.type===ic?r(b,a,d.props.children,e,d.key):k(b,a,d,e);case hc:return a=a.get(null===d.key?c:d.key)||null,n(b,a,d,e)}if(tg(d)||tc(d))return a=a.get(c)||null,r(b,a,d,e,null);vg(b,d)}return null}function Jd(e,g,h,k){for(var u=null,x=null,t=g,q=g=0,n=null;null!==t&&q<h.length;q++){t.index>q?(n=t,t=null):n=t.sibling;var l=P(e,t,h[q],k);if(null===l){null===t&&(t=n);break}a&&t&&null===l.alternate&&b(e,\nt);g=f(l,g,q);null===x?u=l:x.sibling=l;x=l;t=n}if(q===h.length)return c(e,t),u;if(null===t){for(;q<h.length;q++)if(t=w(e,h[q],k))g=f(t,g,q),null===x?u=t:x.sibling=t,x=t;return u}for(t=d(e,t);q<h.length;q++)if(n=nc(t,e,q,h[q],k))a&&null!==n.alternate&&t.delete(null===n.key?q:n.key),g=f(n,g,q),null===x?u=n:x.sibling=n,x=n;a&&t.forEach(function(a){return b(e,a)});return u}function E(e,g,h,k){var u=tc(h);\"function\"!==typeof u?A(\"150\"):void 0;h=u.call(h);null==h?A(\"151\"):void 0;for(var t=u=null,n=g,x=\ng=0,y=null,l=h.next();null!==n&&!l.done;x++,l=h.next()){n.index>x?(y=n,n=null):y=n.sibling;var r=P(e,n,l.value,k);if(null===r){n||(n=y);break}a&&n&&null===r.alternate&&b(e,n);g=f(r,g,x);null===t?u=r:t.sibling=r;t=r;n=y}if(l.done)return c(e,n),u;if(null===n){for(;!l.done;x++,l=h.next())l=w(e,l.value,k),null!==l&&(g=f(l,g,x),null===t?u=l:t.sibling=l,t=l);return u}for(n=d(e,n);!l.done;x++,l=h.next())l=nc(n,e,x,l.value,k),null!==l&&(a&&null!==l.alternate&&n.delete(null===l.key?x:l.key),g=f(l,g,x),null===\nt?u=l:t.sibling=l,t=l);a&&n.forEach(function(a){return b(e,a)});return u}return function(a,d,f,h){var k=\"object\"===typeof f&&null!==f&&f.type===ic&&null===f.key;k&&(f=f.props.children);var n=\"object\"===typeof f&&null!==f;if(n)switch(f.$$typeof){case gc:a:{n=f.key;for(k=d;null!==k;){if(k.key===n)if(10===k.tag?f.type===ic:k.type===f.type){c(a,k.sibling);d=e(k,f.type===ic?f.props.children:f.props,h);d.ref=ug(a,k,f);d.return=a;a=d;break a}else{c(a,k);break}else b(a,k);k=k.sibling}f.type===ic?(d=Bf(f.props.children,\na.mode,h,f.key),d.return=a,a=d):(h=Af(f,a.mode,h),h.ref=ug(a,d,f),h.return=a,a=h)}return g(a);case hc:a:{for(k=f.key;null!==d;){if(d.key===k)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[],h);d.return=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=Df(f,a.mode,h);d.return=a;a=d}return g(a)}if(\"string\"===typeof f||\"number\"===typeof f)return f=\"\"+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f,h),d.return=\na,a=d):(c(a,d),d=Cf(f,a.mode,h),d.return=a,a=d),g(a);if(tg(f))return Jd(a,d,f,h);if(tc(f))return E(a,d,f,h);n&&vg(a,f);if(\"undefined\"===typeof f&&!k)switch(a.tag){case 2:case 1:h=a.type,A(\"152\",h.displayName||h.name||\"Component\")}return c(a,d)}}var xg=wg(!0),yg=wg(!1),zg=null,Ag=null,Bg=!1;function Cg(a,b){var c=new yf(5,null,null,0);c.type=\"DELETED\";c.stateNode=b;c.return=a;c.effectTag=8;null!==a.lastEffect?(a.lastEffect.nextEffect=c,a.lastEffect=c):a.firstEffect=a.lastEffect=c}\nfunction Dg(a,b){switch(a.tag){case 5:var c=a.type;b=1!==b.nodeType||c.toLowerCase()!==b.nodeName.toLowerCase()?null:b;return null!==b?(a.stateNode=b,!0):!1;case 6:return b=\"\"===a.pendingProps||3!==b.nodeType?null:b,null!==b?(a.stateNode=b,!0):!1;default:return!1}}function Eg(a){if(Bg){var b=Ag;if(b){var c=b;if(!Dg(a,b)){b=hf(c);if(!b||!Dg(a,b)){a.effectTag|=2;Bg=!1;zg=a;return}Cg(zg,c)}zg=a;Ag=jf(b)}else a.effectTag|=2,Bg=!1,zg=a}}\nfunction Fg(a){for(a=a.return;null!==a&&5!==a.tag&&3!==a.tag;)a=a.return;zg=a}function Gg(a){if(a!==zg)return!1;if(!Bg)return Fg(a),Bg=!0,!1;var b=a.type;if(5!==a.tag||\"head\"!==b&&\"body\"!==b&&!df(b,a.memoizedProps))for(b=Ag;b;)Cg(a,b),b=hf(b);Fg(a);Ag=zg?hf(a.stateNode):null;return!0}function Hg(){Ag=zg=null;Bg=!1}function Q(a,b,c){Ig(a,b,c,b.expirationTime)}function Ig(a,b,c,d){b.child=null===a?yg(b,null,c,d):xg(b,a.child,c,d)}\nfunction Jg(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.effectTag|=128}function Kg(a,b,c,d,e){Jg(a,b);var f=0!==(b.effectTag&64);if(!c&&!f)return d&&xf(b,!1),R(a,b);c=b.stateNode;ec.current=b;var g=f?null:c.render();b.effectTag|=1;f&&(Ig(a,b,null,e),b.child=null);Ig(a,b,g,e);b.memoizedState=c.state;b.memoizedProps=c.props;d&&xf(b,!0);return b.child}\nfunction Lg(a){var b=a.stateNode;b.pendingContext?uf(a,b.pendingContext,b.pendingContext!==b.context):b.context&&uf(a,b.context,!1);ig(a,b.containerInfo)}\nfunction Mg(a,b,c,d){var e=a.child;null!==e&&(e.return=a);for(;null!==e;){switch(e.tag){case 12:var f=e.stateNode|0;if(e.type===b&&0!==(f&c)){for(f=e;null!==f;){var g=f.alternate;if(0===f.expirationTime||f.expirationTime>d)f.expirationTime=d,null!==g&&(0===g.expirationTime||g.expirationTime>d)&&(g.expirationTime=d);else if(null!==g&&(0===g.expirationTime||g.expirationTime>d))g.expirationTime=d;else break;f=f.return}f=null}else f=e.child;break;case 13:f=e.type===a.type?null:e.child;break;default:f=\ne.child}if(null!==f)f.return=e;else for(f=e;null!==f;){if(f===a){f=null;break}e=f.sibling;if(null!==e){e.return=f.return;f=e;break}f=f.return}e=f}}\nfunction Qg(a,b,c){var d=b.type._context,e=b.pendingProps,f=b.memoizedProps,g=!0;if(O.current)g=!1;else if(f===e)return b.stateNode=0,ag(b),R(a,b);var h=e.value;b.memoizedProps=e;if(null===f)h=1073741823;else if(f.value===e.value){if(f.children===e.children&&g)return b.stateNode=0,ag(b),R(a,b);h=0}else{var k=f.value;if(k===h&&(0!==k||1/k===1/h)||k!==k&&h!==h){if(f.children===e.children&&g)return b.stateNode=0,ag(b),R(a,b);h=0}else if(h=\"function\"===typeof d._calculateChangedBits?d._calculateChangedBits(k,\nh):1073741823,h|=0,0===h){if(f.children===e.children&&g)return b.stateNode=0,ag(b),R(a,b)}else Mg(b,d,h,c)}b.stateNode=h;ag(b);Q(a,b,e.children);return b.child}function R(a,b){null!==a&&b.child!==a.child?A(\"153\"):void 0;if(null!==b.child){a=b.child;var c=zf(a,a.pendingProps,a.expirationTime);b.child=c;for(c.return=b;null!==a.sibling;)a=a.sibling,c=c.sibling=zf(a,a.pendingProps,a.expirationTime),c.return=b;c.sibling=null}return b.child}\nfunction Rg(a,b,c){if(0===b.expirationTime||b.expirationTime>c){switch(b.tag){case 3:Lg(b);break;case 2:wf(b);break;case 4:ig(b,b.stateNode.containerInfo);break;case 13:ag(b)}return null}switch(b.tag){case 0:null!==a?A(\"155\"):void 0;var d=b.type,e=b.pendingProps,f=pf(b);f=rf(b,f);d=d(e,f);b.effectTag|=1;\"object\"===typeof d&&null!==d&&\"function\"===typeof d.render&&void 0===d.$$typeof?(f=b.type,b.tag=2,b.memoizedState=null!==d.state&&void 0!==d.state?d.state:null,f=f.getDerivedStateFromProps,\"function\"===\ntypeof f&&lg(b,f,e),e=wf(b),d.updater=pg,b.stateNode=d,d._reactInternalFiber=b,sg(b,c),a=Kg(a,b,!0,e,c)):(b.tag=1,Q(a,b,d),b.memoizedProps=e,a=b.child);return a;case 1:return e=b.type,c=b.pendingProps,O.current||b.memoizedProps!==c?(d=pf(b),d=rf(b,d),e=e(c,d),b.effectTag|=1,Q(a,b,e),b.memoizedProps=c,a=b.child):a=R(a,b),a;case 2:e=wf(b);if(null===a)if(null===b.stateNode){var g=b.pendingProps,h=b.type;d=pf(b);var k=2===b.tag&&null!=b.type.contextTypes;f=k?rf(b,d):ha;g=new h(g,f);b.memoizedState=null!==\ng.state&&void 0!==g.state?g.state:null;g.updater=pg;b.stateNode=g;g._reactInternalFiber=b;k&&(k=b.stateNode,k.__reactInternalMemoizedUnmaskedChildContext=d,k.__reactInternalMemoizedMaskedChildContext=f);sg(b,c);d=!0}else{h=b.type;d=b.stateNode;k=b.memoizedProps;f=b.pendingProps;d.props=k;var n=d.context;g=pf(b);g=rf(b,g);var r=h.getDerivedStateFromProps;(h=\"function\"===typeof r||\"function\"===typeof d.getSnapshotBeforeUpdate)||\"function\"!==typeof d.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof d.componentWillReceiveProps||\n(k!==f||n!==g)&&rg(b,d,f,g);Lf=!1;var w=b.memoizedState;n=d.state=w;var P=b.updateQueue;null!==P&&(Uf(b,P,f,d,c),n=b.memoizedState);k!==f||w!==n||O.current||Lf?(\"function\"===typeof r&&(lg(b,r,f),n=b.memoizedState),(k=Lf||qg(b,k,f,w,n,g))?(h||\"function\"!==typeof d.UNSAFE_componentWillMount&&\"function\"!==typeof d.componentWillMount||(\"function\"===typeof d.componentWillMount&&d.componentWillMount(),\"function\"===typeof d.UNSAFE_componentWillMount&&d.UNSAFE_componentWillMount()),\"function\"===typeof d.componentDidMount&&\n(b.effectTag|=4)):(\"function\"===typeof d.componentDidMount&&(b.effectTag|=4),b.memoizedProps=f,b.memoizedState=n),d.props=f,d.state=n,d.context=g,d=k):(\"function\"===typeof d.componentDidMount&&(b.effectTag|=4),d=!1)}else h=b.type,d=b.stateNode,f=b.memoizedProps,k=b.pendingProps,d.props=f,n=d.context,g=pf(b),g=rf(b,g),r=h.getDerivedStateFromProps,(h=\"function\"===typeof r||\"function\"===typeof d.getSnapshotBeforeUpdate)||\"function\"!==typeof d.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof d.componentWillReceiveProps||\n(f!==k||n!==g)&&rg(b,d,k,g),Lf=!1,n=b.memoizedState,w=d.state=n,P=b.updateQueue,null!==P&&(Uf(b,P,k,d,c),w=b.memoizedState),f!==k||n!==w||O.current||Lf?(\"function\"===typeof r&&(lg(b,r,k),w=b.memoizedState),(r=Lf||qg(b,f,k,n,w,g))?(h||\"function\"!==typeof d.UNSAFE_componentWillUpdate&&\"function\"!==typeof d.componentWillUpdate||(\"function\"===typeof d.componentWillUpdate&&d.componentWillUpdate(k,w,g),\"function\"===typeof d.UNSAFE_componentWillUpdate&&d.UNSAFE_componentWillUpdate(k,w,g)),\"function\"===typeof d.componentDidUpdate&&\n(b.effectTag|=4),\"function\"===typeof d.getSnapshotBeforeUpdate&&(b.effectTag|=256)):(\"function\"!==typeof d.componentDidUpdate||f===a.memoizedProps&&n===a.memoizedState||(b.effectTag|=4),\"function\"!==typeof d.getSnapshotBeforeUpdate||f===a.memoizedProps&&n===a.memoizedState||(b.effectTag|=256),b.memoizedProps=k,b.memoizedState=w),d.props=k,d.state=w,d.context=g,d=r):(\"function\"!==typeof d.componentDidUpdate||f===a.memoizedProps&&n===a.memoizedState||(b.effectTag|=4),\"function\"!==typeof d.getSnapshotBeforeUpdate||\nf===a.memoizedProps&&n===a.memoizedState||(b.effectTag|=256),d=!1);return Kg(a,b,d,e,c);case 3:Lg(b);e=b.updateQueue;if(null!==e)if(d=b.memoizedState,d=null!==d?d.element:null,Uf(b,e,b.pendingProps,null,c),e=b.memoizedState.element,e===d)Hg(),a=R(a,b);else{d=b.stateNode;if(d=(null===a||null===a.child)&&d.hydrate)Ag=jf(b.stateNode.containerInfo),zg=b,d=Bg=!0;d?(b.effectTag|=2,b.child=yg(b,null,e,c)):(Hg(),Q(a,b,e));a=b.child}else Hg(),a=R(a,b);return a;case 5:a:{gg(fg.current);e=gg(dg.current);d=He(e,\nb.type);e!==d&&(N(eg,b,b),N(dg,d,b));null===a&&Eg(b);e=b.type;k=b.memoizedProps;d=b.pendingProps;f=null!==a?a.memoizedProps:null;if(!O.current&&k===d){if(k=b.mode&1&&!!d.hidden)b.expirationTime=1073741823;if(!k||1073741823!==c){a=R(a,b);break a}}k=d.children;df(e,d)?k=null:f&&df(e,f)&&(b.effectTag|=16);Jg(a,b);1073741823!==c&&b.mode&1&&d.hidden?(b.expirationTime=1073741823,b.memoizedProps=d,a=null):(Q(a,b,k),b.memoizedProps=d,a=b.child)}return a;case 6:return null===a&&Eg(b),b.memoizedProps=b.pendingProps,\nnull;case 16:return null;case 4:return ig(b,b.stateNode.containerInfo),e=b.pendingProps,O.current||b.memoizedProps!==e?(null===a?b.child=xg(b,null,e,c):Q(a,b,e),b.memoizedProps=e,a=b.child):a=R(a,b),a;case 14:return e=b.type.render,c=b.pendingProps,d=b.ref,O.current||b.memoizedProps!==c||d!==(null!==a?a.ref:null)?(e=e(c,d),Q(a,b,e),b.memoizedProps=c,a=b.child):a=R(a,b),a;case 10:return c=b.pendingProps,O.current||b.memoizedProps!==c?(Q(a,b,c),b.memoizedProps=c,a=b.child):a=R(a,b),a;case 11:return c=\nb.pendingProps.children,O.current||null!==c&&b.memoizedProps!==c?(Q(a,b,c),b.memoizedProps=c,a=b.child):a=R(a,b),a;case 15:return c=b.pendingProps,b.memoizedProps===c?a=R(a,b):(Q(a,b,c.children),b.memoizedProps=c,a=b.child),a;case 13:return Qg(a,b,c);case 12:a:if(d=b.type,f=b.pendingProps,k=b.memoizedProps,e=d._currentValue,g=d._changedBits,O.current||0!==g||k!==f){b.memoizedProps=f;h=f.unstable_observedBits;if(void 0===h||null===h)h=1073741823;b.stateNode=h;if(0!==(g&h))Mg(b,d,g,c);else if(k===f){a=\nR(a,b);break a}c=f.children;c=c(e);b.effectTag|=1;Q(a,b,c);a=b.child}else a=R(a,b);return a;default:A(\"156\")}}function Sg(a){a.effectTag|=4}var Tg=void 0,Ug=void 0,Vg=void 0;Tg=function(){};Ug=function(a,b,c){(b.updateQueue=c)&&Sg(b)};Vg=function(a,b,c,d){c!==d&&Sg(b)};\nfunction Wg(a,b){var c=b.pendingProps;switch(b.tag){case 1:return null;case 2:return sf(b),null;case 3:jg(b);tf(b);var d=b.stateNode;d.pendingContext&&(d.context=d.pendingContext,d.pendingContext=null);if(null===a||null===a.child)Gg(b),b.effectTag&=-3;Tg(b);return null;case 5:kg(b);d=gg(fg.current);var e=b.type;if(null!==a&&null!=b.stateNode){var f=a.memoizedProps,g=b.stateNode,h=gg(dg.current);g=We(g,e,f,c,d);Ug(a,b,g,e,f,c,d,h);a.ref!==b.ref&&(b.effectTag|=128)}else{if(!c)return null===b.stateNode?\nA(\"166\"):void 0,null;a=gg(dg.current);if(Gg(b))c=b.stateNode,e=b.type,f=b.memoizedProps,c[C]=b,c[Ma]=f,d=Ye(c,e,f,a,d),b.updateQueue=d,null!==d&&Sg(b);else{a=Te(e,c,d,a);a[C]=b;a[Ma]=c;a:for(f=b.child;null!==f;){if(5===f.tag||6===f.tag)a.appendChild(f.stateNode);else if(4!==f.tag&&null!==f.child){f.child.return=f;f=f.child;continue}if(f===b)break;for(;null===f.sibling;){if(null===f.return||f.return===b)break a;f=f.return}f.sibling.return=f.return;f=f.sibling}Ve(a,e,c,d);cf(e,c)&&Sg(b);b.stateNode=\na}null!==b.ref&&(b.effectTag|=128)}return null;case 6:if(a&&null!=b.stateNode)Vg(a,b,a.memoizedProps,c);else{if(\"string\"!==typeof c)return null===b.stateNode?A(\"166\"):void 0,null;d=gg(fg.current);gg(dg.current);Gg(b)?(d=b.stateNode,c=b.memoizedProps,d[C]=b,Ze(d,c)&&Sg(b)):(d=Ue(c,d),d[C]=b,b.stateNode=d)}return null;case 14:return null;case 16:return null;case 10:return null;case 11:return null;case 15:return null;case 4:return jg(b),Tg(b),null;case 13:return bg(b),null;case 12:return null;case 0:A(\"167\");\ndefault:A(\"156\")}}function Xg(a,b){var c=b.source;null===b.stack&&null!==c&&vc(c);null!==c&&uc(c);b=b.value;null!==a&&2===a.tag&&uc(a);try{b&&b.suppressReactErrorLogging||console.error(b)}catch(d){d&&d.suppressReactErrorLogging||console.error(d)}}function Yg(a){var b=a.ref;if(null!==b)if(\"function\"===typeof b)try{b(null)}catch(c){Zg(a,c)}else b.current=null}\nfunction $g(a){\"function\"===typeof Kf&&Kf(a);switch(a.tag){case 2:Yg(a);var b=a.stateNode;if(\"function\"===typeof b.componentWillUnmount)try{b.props=a.memoizedProps,b.state=a.memoizedState,b.componentWillUnmount()}catch(c){Zg(a,c)}break;case 5:Yg(a);break;case 4:ah(a)}}function bh(a){return 5===a.tag||3===a.tag||4===a.tag}\nfunction ch(a){a:{for(var b=a.return;null!==b;){if(bh(b)){var c=b;break a}b=b.return}A(\"160\");c=void 0}var d=b=void 0;switch(c.tag){case 5:b=c.stateNode;d=!1;break;case 3:b=c.stateNode.containerInfo;d=!0;break;case 4:b=c.stateNode.containerInfo;d=!0;break;default:A(\"161\")}c.effectTag&16&&(Ke(b,\"\"),c.effectTag&=-17);a:b:for(c=a;;){for(;null===c.sibling;){if(null===c.return||bh(c.return)){c=null;break a}c=c.return}c.sibling.return=c.return;for(c=c.sibling;5!==c.tag&&6!==c.tag;){if(c.effectTag&2)continue b;\nif(null===c.child||4===c.tag)continue b;else c.child.return=c,c=c.child}if(!(c.effectTag&2)){c=c.stateNode;break a}}for(var e=a;;){if(5===e.tag||6===e.tag)if(c)if(d){var f=b,g=e.stateNode,h=c;8===f.nodeType?f.parentNode.insertBefore(g,h):f.insertBefore(g,h)}else b.insertBefore(e.stateNode,c);else d?(f=b,g=e.stateNode,8===f.nodeType?f.parentNode.insertBefore(g,f):f.appendChild(g)):b.appendChild(e.stateNode);else if(4!==e.tag&&null!==e.child){e.child.return=e;e=e.child;continue}if(e===a)break;for(;null===\ne.sibling;){if(null===e.return||e.return===a)return;e=e.return}e.sibling.return=e.return;e=e.sibling}}\nfunction ah(a){for(var b=a,c=!1,d=void 0,e=void 0;;){if(!c){c=b.return;a:for(;;){null===c?A(\"160\"):void 0;switch(c.tag){case 5:d=c.stateNode;e=!1;break a;case 3:d=c.stateNode.containerInfo;e=!0;break a;case 4:d=c.stateNode.containerInfo;e=!0;break a}c=c.return}c=!0}if(5===b.tag||6===b.tag){a:for(var f=b,g=f;;)if($g(g),null!==g.child&&4!==g.tag)g.child.return=g,g=g.child;else{if(g===f)break;for(;null===g.sibling;){if(null===g.return||g.return===f)break a;g=g.return}g.sibling.return=g.return;g=g.sibling}e?\n(f=d,g=b.stateNode,8===f.nodeType?f.parentNode.removeChild(g):f.removeChild(g)):d.removeChild(b.stateNode)}else if(4===b.tag?d=b.stateNode.containerInfo:$g(b),null!==b.child){b.child.return=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return;b=b.return;4===b.tag&&(c=!1)}b.sibling.return=b.return;b=b.sibling}}\nfunction dh(a,b){switch(b.tag){case 2:break;case 5:var c=b.stateNode;if(null!=c){var d=b.memoizedProps;a=null!==a?a.memoizedProps:d;var e=b.type,f=b.updateQueue;b.updateQueue=null;null!==f&&(c[Ma]=d,Xe(c,f,e,a,d))}break;case 6:null===b.stateNode?A(\"162\"):void 0;b.stateNode.nodeValue=b.memoizedProps;break;case 3:break;case 15:break;case 16:break;default:A(\"163\")}}function eh(a,b,c){c=Of(c);c.tag=3;c.payload={element:null};var d=b.value;c.callback=function(){fh(d);Xg(a,b)};return c}\nfunction gh(a,b,c){c=Of(c);c.tag=3;var d=a.stateNode;null!==d&&\"function\"===typeof d.componentDidCatch&&(c.callback=function(){null===hh?hh=new Set([this]):hh.add(this);var c=b.value,d=b.stack;Xg(a,b);this.componentDidCatch(c,{componentStack:null!==d?d:\"\"})});return c}\nfunction ih(a,b,c,d,e,f){c.effectTag|=512;c.firstEffect=c.lastEffect=null;d=Xf(d,c);a=b;do{switch(a.tag){case 3:a.effectTag|=1024;d=eh(a,d,f);Rf(a,d,f);return;case 2:if(b=d,c=a.stateNode,0===(a.effectTag&64)&&null!==c&&\"function\"===typeof c.componentDidCatch&&(null===hh||!hh.has(c))){a.effectTag|=1024;d=gh(a,b,f);Rf(a,d,f);return}}a=a.return}while(null!==a)}\nfunction jh(a){switch(a.tag){case 2:sf(a);var b=a.effectTag;return b&1024?(a.effectTag=b&-1025|64,a):null;case 3:return jg(a),tf(a),b=a.effectTag,b&1024?(a.effectTag=b&-1025|64,a):null;case 5:return kg(a),null;case 16:return b=a.effectTag,b&1024?(a.effectTag=b&-1025|64,a):null;case 4:return jg(a),null;case 13:return bg(a),null;default:return null}}var kh=ef(),lh=2,mh=kh,nh=0,oh=0,ph=!1,S=null,qh=null,T=0,rh=-1,sh=!1,U=null,th=!1,uh=!1,hh=null;\nfunction vh(){if(null!==S)for(var a=S.return;null!==a;){var b=a;switch(b.tag){case 2:sf(b);break;case 3:jg(b);tf(b);break;case 5:kg(b);break;case 4:jg(b);break;case 13:bg(b)}a=a.return}qh=null;T=0;rh=-1;sh=!1;S=null;uh=!1}\nfunction wh(a){for(;;){var b=a.alternate,c=a.return,d=a.sibling;if(0===(a.effectTag&512)){b=Wg(b,a,T);var e=a;if(1073741823===T||1073741823!==e.expirationTime){var f=0;switch(e.tag){case 3:case 2:var g=e.updateQueue;null!==g&&(f=g.expirationTime)}for(g=e.child;null!==g;)0!==g.expirationTime&&(0===f||f>g.expirationTime)&&(f=g.expirationTime),g=g.sibling;e.expirationTime=f}if(null!==b)return b;null!==c&&0===(c.effectTag&512)&&(null===c.firstEffect&&(c.firstEffect=a.firstEffect),null!==a.lastEffect&&\n(null!==c.lastEffect&&(c.lastEffect.nextEffect=a.firstEffect),c.lastEffect=a.lastEffect),1<a.effectTag&&(null!==c.lastEffect?c.lastEffect.nextEffect=a:c.firstEffect=a,c.lastEffect=a));if(null!==d)return d;if(null!==c)a=c;else{uh=!0;break}}else{a=jh(a,sh,T);if(null!==a)return a.effectTag&=511,a;null!==c&&(c.firstEffect=c.lastEffect=null,c.effectTag|=512);if(null!==d)return d;if(null!==c)a=c;else break}}return null}\nfunction xh(a){var b=Rg(a.alternate,a,T);null===b&&(b=wh(a));ec.current=null;return b}\nfunction yh(a,b,c){ph?A(\"243\"):void 0;ph=!0;if(b!==T||a!==qh||null===S)vh(),qh=a,T=b,rh=-1,S=zf(qh.current,null,T),a.pendingCommitExpirationTime=0;var d=!1;sh=!c||T<=lh;do{try{if(c)for(;null!==S&&!zh();)S=xh(S);else for(;null!==S;)S=xh(S)}catch(f){if(null===S)d=!0,fh(f);else{null===S?A(\"271\"):void 0;c=S;var e=c.return;if(null===e){d=!0;fh(f);break}ih(a,e,c,f,sh,T,mh);S=wh(c)}}break}while(1);ph=!1;if(d)return null;if(null===S){if(uh)return a.pendingCommitExpirationTime=b,a.current.alternate;sh?A(\"262\"):\nvoid 0;0<=rh&&setTimeout(function(){var b=a.current.expirationTime;0!==b&&(0===a.remainingExpirationTime||a.remainingExpirationTime<b)&&Ah(a,b)},rh);Bh(a.current.expirationTime)}return null}\nfunction Zg(a,b){var c;a:{ph&&!th?A(\"263\"):void 0;for(c=a.return;null!==c;){switch(c.tag){case 2:var d=c.stateNode;if(\"function\"===typeof c.type.getDerivedStateFromCatch||\"function\"===typeof d.componentDidCatch&&(null===hh||!hh.has(d))){a=Xf(b,a);a=gh(c,a,1);Qf(c,a,1);og(c,1);c=void 0;break a}break;case 3:a=Xf(b,a);a=eh(c,a,1);Qf(c,a,1);og(c,1);c=void 0;break a}c=c.return}3===a.tag&&(c=Xf(b,a),c=eh(a,c,1),Qf(a,c,1),og(a,1));c=void 0}return c}\nfunction Ch(){var a=2+25*(((mg()-2+500)/25|0)+1);a<=nh&&(a=nh+1);return nh=a}function ng(a,b){a=0!==oh?oh:ph?th?1:T:b.mode&1?Dh?2+10*(((a-2+15)/10|0)+1):2+25*(((a-2+500)/25|0)+1):1;Dh&&(0===Eh||a>Eh)&&(Eh=a);return a}\nfunction og(a,b){for(;null!==a;){if(0===a.expirationTime||a.expirationTime>b)a.expirationTime=b;null!==a.alternate&&(0===a.alternate.expirationTime||a.alternate.expirationTime>b)&&(a.alternate.expirationTime=b);if(null===a.return)if(3===a.tag){var c=a.stateNode;!ph&&0!==T&&b<T&&vh();var d=c.current.expirationTime;ph&&!th&&qh===c||Ah(c,d);Fh>Gh&&A(\"185\")}else break;a=a.return}}function mg(){mh=ef()-kh;return lh=(mh/10|0)+2}\nfunction Hh(a){var b=oh;oh=2+25*(((mg()-2+500)/25|0)+1);try{return a()}finally{oh=b}}function Ih(a,b,c,d,e){var f=oh;oh=1;try{return a(b,c,d,e)}finally{oh=f}}var Jh=null,V=null,Kh=0,Lh=void 0,W=!1,X=null,Y=0,Eh=0,Mh=!1,Nh=!1,Oh=null,Ph=null,Z=!1,Qh=!1,Dh=!1,Rh=null,Gh=1E3,Fh=0,Sh=1;function Th(a){if(0!==Kh){if(a>Kh)return;null!==Lh&&gf(Lh)}var b=ef()-kh;Kh=a;Lh=ff(Uh,{timeout:10*(a-2)-b})}\nfunction Ah(a,b){if(null===a.nextScheduledRoot)a.remainingExpirationTime=b,null===V?(Jh=V=a,a.nextScheduledRoot=a):(V=V.nextScheduledRoot=a,V.nextScheduledRoot=Jh);else{var c=a.remainingExpirationTime;if(0===c||b<c)a.remainingExpirationTime=b}W||(Z?Qh&&(X=a,Y=1,Vh(a,1,!1)):1===b?Wh():Th(b))}\nfunction Xh(){var a=0,b=null;if(null!==V)for(var c=V,d=Jh;null!==d;){var e=d.remainingExpirationTime;if(0===e){null===c||null===V?A(\"244\"):void 0;if(d===d.nextScheduledRoot){Jh=V=d.nextScheduledRoot=null;break}else if(d===Jh)Jh=e=d.nextScheduledRoot,V.nextScheduledRoot=e,d.nextScheduledRoot=null;else if(d===V){V=c;V.nextScheduledRoot=Jh;d.nextScheduledRoot=null;break}else c.nextScheduledRoot=d.nextScheduledRoot,d.nextScheduledRoot=null;d=c.nextScheduledRoot}else{if(0===a||e<a)a=e,b=d;if(d===V)break;\nc=d;d=d.nextScheduledRoot}}c=X;null!==c&&c===b&&1===a?Fh++:Fh=0;X=b;Y=a}function Uh(a){Yh(0,!0,a)}function Wh(){Yh(1,!1,null)}function Yh(a,b,c){Ph=c;Xh();if(b)for(;null!==X&&0!==Y&&(0===a||a>=Y)&&(!Mh||mg()>=Y);)mg(),Vh(X,Y,!Mh),Xh();else for(;null!==X&&0!==Y&&(0===a||a>=Y);)Vh(X,Y,!1),Xh();null!==Ph&&(Kh=0,Lh=null);0!==Y&&Th(Y);Ph=null;Mh=!1;Zh()}function $h(a,b){W?A(\"253\"):void 0;X=a;Y=b;Vh(a,b,!1);Wh();Zh()}\nfunction Zh(){Fh=0;if(null!==Rh){var a=Rh;Rh=null;for(var b=0;b<a.length;b++){var c=a[b];try{c._onComplete()}catch(d){Nh||(Nh=!0,Oh=d)}}}if(Nh)throw a=Oh,Oh=null,Nh=!1,a;}function Vh(a,b,c){W?A(\"245\"):void 0;W=!0;c?(c=a.finishedWork,null!==c?ai(a,c,b):(c=yh(a,b,!0),null!==c&&(zh()?a.finishedWork=c:ai(a,c,b)))):(c=a.finishedWork,null!==c?ai(a,c,b):(c=yh(a,b,!1),null!==c&&ai(a,c,b)));W=!1}\nfunction ai(a,b,c){var d=a.firstBatch;if(null!==d&&d._expirationTime<=c&&(null===Rh?Rh=[d]:Rh.push(d),d._defer)){a.finishedWork=b;a.remainingExpirationTime=0;return}a.finishedWork=null;th=ph=!0;c=b.stateNode;c.current===b?A(\"177\"):void 0;d=c.pendingCommitExpirationTime;0===d?A(\"261\"):void 0;c.pendingCommitExpirationTime=0;mg();ec.current=null;if(1<b.effectTag)if(null!==b.lastEffect){b.lastEffect.nextEffect=b;var e=b.firstEffect}else e=b;else e=b.firstEffect;af=Hd;var f=da();if(Ud(f)){if(\"selectionStart\"in\nf)var g={start:f.selectionStart,end:f.selectionEnd};else a:{var h=window.getSelection&&window.getSelection();if(h&&0!==h.rangeCount){g=h.anchorNode;var k=h.anchorOffset,n=h.focusNode;h=h.focusOffset;try{g.nodeType,n.nodeType}catch(Wa){g=null;break a}var r=0,w=-1,P=-1,nc=0,Jd=0,E=f,t=null;b:for(;;){for(var x;;){E!==g||0!==k&&3!==E.nodeType||(w=r+k);E!==n||0!==h&&3!==E.nodeType||(P=r+h);3===E.nodeType&&(r+=E.nodeValue.length);if(null===(x=E.firstChild))break;t=E;E=x}for(;;){if(E===f)break b;t===g&&\n++nc===k&&(w=r);t===n&&++Jd===h&&(P=r);if(null!==(x=E.nextSibling))break;E=t;t=E.parentNode}E=x}g=-1===w||-1===P?null:{start:w,end:P}}else g=null}g=g||{start:0,end:0}}else g=null;bf={focusedElem:f,selectionRange:g};Id(!1);for(U=e;null!==U;){f=!1;g=void 0;try{for(;null!==U;){if(U.effectTag&256){var u=U.alternate;k=U;switch(k.tag){case 2:if(k.effectTag&256&&null!==u){var y=u.memoizedProps,D=u.memoizedState,ja=k.stateNode;ja.props=k.memoizedProps;ja.state=k.memoizedState;var mi=ja.getSnapshotBeforeUpdate(y,\nD);ja.__reactInternalSnapshotBeforeUpdate=mi}break;case 3:case 5:case 6:case 4:break;default:A(\"163\")}}U=U.nextEffect}}catch(Wa){f=!0,g=Wa}f&&(null===U?A(\"178\"):void 0,Zg(U,g),null!==U&&(U=U.nextEffect))}for(U=e;null!==U;){u=!1;y=void 0;try{for(;null!==U;){var q=U.effectTag;q&16&&Ke(U.stateNode,\"\");if(q&128){var z=U.alternate;if(null!==z){var l=z.ref;null!==l&&(\"function\"===typeof l?l(null):l.current=null)}}switch(q&14){case 2:ch(U);U.effectTag&=-3;break;case 6:ch(U);U.effectTag&=-3;dh(U.alternate,\nU);break;case 4:dh(U.alternate,U);break;case 8:D=U,ah(D),D.return=null,D.child=null,D.alternate&&(D.alternate.child=null,D.alternate.return=null)}U=U.nextEffect}}catch(Wa){u=!0,y=Wa}u&&(null===U?A(\"178\"):void 0,Zg(U,y),null!==U&&(U=U.nextEffect))}l=bf;z=da();q=l.focusedElem;u=l.selectionRange;if(z!==q&&fa(document.documentElement,q)){null!==u&&Ud(q)&&(z=u.start,l=u.end,void 0===l&&(l=z),\"selectionStart\"in q?(q.selectionStart=z,q.selectionEnd=Math.min(l,q.value.length)):window.getSelection&&(z=window.getSelection(),\ny=q[lb()].length,l=Math.min(u.start,y),u=void 0===u.end?l:Math.min(u.end,y),!z.extend&&l>u&&(y=u,u=l,l=y),y=Td(q,l),D=Td(q,u),y&&D&&(1!==z.rangeCount||z.anchorNode!==y.node||z.anchorOffset!==y.offset||z.focusNode!==D.node||z.focusOffset!==D.offset)&&(ja=document.createRange(),ja.setStart(y.node,y.offset),z.removeAllRanges(),l>u?(z.addRange(ja),z.extend(D.node,D.offset)):(ja.setEnd(D.node,D.offset),z.addRange(ja)))));z=[];for(l=q;l=l.parentNode;)1===l.nodeType&&z.push({element:l,left:l.scrollLeft,\ntop:l.scrollTop});\"function\"===typeof q.focus&&q.focus();for(q=0;q<z.length;q++)l=z[q],l.element.scrollLeft=l.left,l.element.scrollTop=l.top}bf=null;Id(af);af=null;c.current=b;for(U=e;null!==U;){e=!1;q=void 0;try{for(z=d;null!==U;){var hg=U.effectTag;if(hg&36){var oc=U.alternate;l=U;u=z;switch(l.tag){case 2:var ca=l.stateNode;if(l.effectTag&4)if(null===oc)ca.props=l.memoizedProps,ca.state=l.memoizedState,ca.componentDidMount();else{var wi=oc.memoizedProps,xi=oc.memoizedState;ca.props=l.memoizedProps;\nca.state=l.memoizedState;ca.componentDidUpdate(wi,xi,ca.__reactInternalSnapshotBeforeUpdate)}var Ng=l.updateQueue;null!==Ng&&(ca.props=l.memoizedProps,ca.state=l.memoizedState,Wf(l,Ng,ca,u));break;case 3:var Og=l.updateQueue;if(null!==Og){y=null;if(null!==l.child)switch(l.child.tag){case 5:y=l.child.stateNode;break;case 2:y=l.child.stateNode}Wf(l,Og,y,u)}break;case 5:var yi=l.stateNode;null===oc&&l.effectTag&4&&cf(l.type,l.memoizedProps)&&yi.focus();break;case 6:break;case 4:break;case 15:break;case 16:break;\ndefault:A(\"163\")}}if(hg&128){l=void 0;var yc=U.ref;if(null!==yc){var Pg=U.stateNode;switch(U.tag){case 5:l=Pg;break;default:l=Pg}\"function\"===typeof yc?yc(l):yc.current=l}}var zi=U.nextEffect;U.nextEffect=null;U=zi}}catch(Wa){e=!0,q=Wa}e&&(null===U?A(\"178\"):void 0,Zg(U,q),null!==U&&(U=U.nextEffect))}ph=th=!1;\"function\"===typeof Jf&&Jf(b.stateNode);b=c.current.expirationTime;0===b&&(hh=null);a.remainingExpirationTime=b}function zh(){return null===Ph||Ph.timeRemaining()>Sh?!1:Mh=!0}\nfunction fh(a){null===X?A(\"246\"):void 0;X.remainingExpirationTime=0;Nh||(Nh=!0,Oh=a)}function Bh(a){null===X?A(\"246\"):void 0;X.remainingExpirationTime=a}function bi(a,b){var c=Z;Z=!0;try{return a(b)}finally{(Z=c)||W||Wh()}}function ci(a,b){if(Z&&!Qh){Qh=!0;try{return a(b)}finally{Qh=!1}}return a(b)}function di(a,b){W?A(\"187\"):void 0;var c=Z;Z=!0;try{return Ih(a,b)}finally{Z=c,Wh()}}\nfunction ei(a,b,c){if(Dh)return a(b,c);Z||W||0===Eh||(Yh(Eh,!1,null),Eh=0);var d=Dh,e=Z;Z=Dh=!0;try{return a(b,c)}finally{Dh=d,(Z=e)||W||Wh()}}function fi(a){var b=Z;Z=!0;try{Ih(a)}finally{(Z=b)||W||Yh(1,!1,null)}}\nfunction gi(a,b,c,d,e){var f=b.current;if(c){c=c._reactInternalFiber;var g;b:{2===jd(c)&&2===c.tag?void 0:A(\"170\");for(g=c;3!==g.tag;){if(qf(g)){g=g.stateNode.__reactInternalMemoizedMergedChildContext;break b}(g=g.return)?void 0:A(\"171\")}g=g.stateNode.context}c=qf(c)?vf(c,g):g}else c=ha;null===b.context?b.context=c:b.pendingContext=c;b=e;e=Of(d);e.payload={element:a};b=void 0===b?null:b;null!==b&&(e.callback=b);Qf(f,e,d);og(f,d);return d}\nfunction hi(a){var b=a._reactInternalFiber;void 0===b&&(\"function\"===typeof a.render?A(\"188\"):A(\"268\",Object.keys(a)));a=md(b);return null===a?null:a.stateNode}function ii(a,b,c,d){var e=b.current,f=mg();e=ng(f,e);return gi(a,b,c,e,d)}function ji(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return a.child.stateNode;default:return a.child.stateNode}}\nfunction ki(a){var b=a.findFiberByHostInstance;return If(p({},a,{findHostInstanceByFiber:function(a){a=md(a);return null===a?null:a.stateNode},findFiberByHostInstance:function(a){return b?b(a):null}}))}\nvar li={updateContainerAtExpirationTime:gi,createContainer:function(a,b,c){return Ef(a,b,c)},updateContainer:ii,flushRoot:$h,requestWork:Ah,computeUniqueAsyncExpiration:Ch,batchedUpdates:bi,unbatchedUpdates:ci,deferredUpdates:Hh,syncUpdates:Ih,interactiveUpdates:ei,flushInteractiveUpdates:function(){W||0===Eh||(Yh(Eh,!1,null),Eh=0)},flushControlled:fi,flushSync:di,getPublicRootInstance:ji,findHostInstance:hi,findHostInstanceWithNoPortals:function(a){a=nd(a);return null===a?null:a.stateNode},injectIntoDevTools:ki};\nfunction ni(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:hc,key:null==d?null:\"\"+d,children:a,containerInfo:b,implementation:c}}Kb.injectFiberControlledHostComponent($e);function oi(a){this._expirationTime=Ch();this._root=a;this._callbacks=this._next=null;this._hasChildren=this._didComplete=!1;this._children=null;this._defer=!0}\noi.prototype.render=function(a){this._defer?void 0:A(\"250\");this._hasChildren=!0;this._children=a;var b=this._root._internalRoot,c=this._expirationTime,d=new pi;gi(a,b,null,c,d._onCommit);return d};oi.prototype.then=function(a){if(this._didComplete)a();else{var b=this._callbacks;null===b&&(b=this._callbacks=[]);b.push(a)}};\noi.prototype.commit=function(){var a=this._root._internalRoot,b=a.firstBatch;this._defer&&null!==b?void 0:A(\"251\");if(this._hasChildren){var c=this._expirationTime;if(b!==this){this._hasChildren&&(c=this._expirationTime=b._expirationTime,this.render(this._children));for(var d=null,e=b;e!==this;)d=e,e=e._next;null===d?A(\"251\"):void 0;d._next=e._next;this._next=b;a.firstBatch=this}this._defer=!1;$h(a,c);b=this._next;this._next=null;b=a.firstBatch=b;null!==b&&b._hasChildren&&b.render(b._children)}else this._next=\nnull,this._defer=!1};oi.prototype._onComplete=function(){if(!this._didComplete){this._didComplete=!0;var a=this._callbacks;if(null!==a)for(var b=0;b<a.length;b++)(0,a[b])()}};function pi(){this._callbacks=null;this._didCommit=!1;this._onCommit=this._onCommit.bind(this)}pi.prototype.then=function(a){if(this._didCommit)a();else{var b=this._callbacks;null===b&&(b=this._callbacks=[]);b.push(a)}};\npi.prototype._onCommit=function(){if(!this._didCommit){this._didCommit=!0;var a=this._callbacks;if(null!==a)for(var b=0;b<a.length;b++){var c=a[b];\"function\"!==typeof c?A(\"191\",c):void 0;c()}}};function qi(a,b,c){this._internalRoot=Ef(a,b,c)}qi.prototype.render=function(a,b){var c=this._internalRoot,d=new pi;b=void 0===b?null:b;null!==b&&d.then(b);ii(a,c,null,d._onCommit);return d};\nqi.prototype.unmount=function(a){var b=this._internalRoot,c=new pi;a=void 0===a?null:a;null!==a&&c.then(a);ii(null,b,null,c._onCommit);return c};qi.prototype.legacy_renderSubtreeIntoContainer=function(a,b,c){var d=this._internalRoot,e=new pi;c=void 0===c?null:c;null!==c&&e.then(c);ii(b,d,a,e._onCommit);return e};\nqi.prototype.createBatch=function(){var a=new oi(this),b=a._expirationTime,c=this._internalRoot,d=c.firstBatch;if(null===d)c.firstBatch=a,a._next=null;else{for(c=null;null!==d&&d._expirationTime<=b;)c=d,d=d._next;a._next=d;null!==c&&(c._next=a)}return a};function ri(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||\" react-mount-point-unstable \"!==a.nodeValue))}Sb=li.batchedUpdates;Tb=li.interactiveUpdates;Ub=li.flushInteractiveUpdates;\nfunction si(a,b){b||(b=a?9===a.nodeType?a.documentElement:a.firstChild:null,b=!(!b||1!==b.nodeType||!b.hasAttribute(\"data-reactroot\")));if(!b)for(var c;c=a.lastChild;)a.removeChild(c);return new qi(a,!1,b)}\nfunction ti(a,b,c,d,e){ri(c)?void 0:A(\"200\");var f=c._reactRootContainer;if(f){if(\"function\"===typeof e){var g=e;e=function(){var a=ji(f._internalRoot);g.call(a)}}null!=a?f.legacy_renderSubtreeIntoContainer(a,b,e):f.render(b,e)}else{f=c._reactRootContainer=si(c,d);if(\"function\"===typeof e){var h=e;e=function(){var a=ji(f._internalRoot);h.call(a)}}ci(function(){null!=a?f.legacy_renderSubtreeIntoContainer(a,b,e):f.render(b,e)})}return ji(f._internalRoot)}\nfunction ui(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;ri(b)?void 0:A(\"200\");return ni(a,b,null,c)}\nvar vi={createPortal:ui,findDOMNode:function(a){return null==a?null:1===a.nodeType?a:hi(a)},hydrate:function(a,b,c){return ti(null,a,b,!0,c)},render:function(a,b,c){return ti(null,a,b,!1,c)},unstable_renderSubtreeIntoContainer:function(a,b,c,d){null==a||void 0===a._reactInternalFiber?A(\"38\"):void 0;return ti(a,b,c,!1,d)},unmountComponentAtNode:function(a){ri(a)?void 0:A(\"40\");return a._reactRootContainer?(ci(function(){ti(null,null,a,!1,function(){a._reactRootContainer=null})}),!0):!1},unstable_createPortal:function(){return ui.apply(void 0,\narguments)},unstable_batchedUpdates:bi,unstable_deferredUpdates:Hh,unstable_interactiveUpdates:ei,flushSync:di,unstable_flushControlled:fi,__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{EventPluginHub:Ka,EventPluginRegistry:va,EventPropagators:$a,ReactControlledComponent:Rb,ReactDOMComponentTree:Qa,ReactDOMEventListener:Nd},unstable_createRoot:function(a,b){return new qi(a,!0,null!=b&&!0===b.hydrate)}};ki({findFiberByHostInstance:Na,bundleType:0,version:\"16.4.1\",rendererPackageName:\"react-dom\"});\nvar Ai={default:vi},Bi=Ai&&vi||Ai;module.exports=Bi.default?Bi.default:Bi;\n\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n\n\nvar canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\n\n/**\n * Simple, lightweight module assisting with the detection and context of\n * Worker. Helps avoid circular dependencies and allows code to reason about\n * whether or not they are in a Worker, even if they never include the main\n * `ReactWorker` dependency.\n */\nvar ExecutionEnvironment = {\n\n  canUseDOM: canUseDOM,\n\n  canUseWorkers: typeof Worker !== 'undefined',\n\n  canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),\n\n  canUseViewport: canUseDOM && !!window.screen,\n\n  isInWorker: !canUseDOM // For now, this is true - might change in the future.\n\n};\n\nmodule.exports = ExecutionEnvironment;\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n */\n\n/* eslint-disable fb-www/typeof-undefined */\n\n/**\n * Same as document.activeElement but wraps in a try-catch block. In IE it is\n * not safe to call document.activeElement if there is nothing focused.\n *\n * The activeElement will be null only if the document or document body is not\n * yet defined.\n *\n * @param {?DOMDocument} doc Defaults to current document.\n * @return {?DOMElement}\n */\nfunction getActiveElement(doc) /*?DOMElement*/{\n  doc = doc || (typeof document !== 'undefined' ? document : undefined);\n  if (typeof doc === 'undefined') {\n    return null;\n  }\n  try {\n    return doc.activeElement || doc.body;\n  } catch (e) {\n    return doc.body;\n  }\n}\n\nmodule.exports = getActiveElement;\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n * \n */\n\n/*eslint-disable no-self-compare */\n\n\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\nfunction is(x, y) {\n  // SameValue algorithm\n  if (x === y) {\n    // Steps 1-5, 7-10\n    // Steps 6.b-6.e: +0 != -0\n    // Added the nonzero y check to make Flow happy, but it is redundant\n    return x !== 0 || y !== 0 || 1 / x === 1 / y;\n  } else {\n    // Step 6.a: NaN == NaN\n    return x !== x && y !== y;\n  }\n}\n\n/**\n * Performs equality by iterating through keys on an object and returning false\n * when any key has values which are not strictly equal between the arguments.\n * Returns true when the values of all keys are strictly equal.\n */\nfunction shallowEqual(objA, objB) {\n  if (is(objA, objB)) {\n    return true;\n  }\n\n  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {\n    return false;\n  }\n\n  var keysA = Object.keys(objA);\n  var keysB = Object.keys(objB);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  // Test for A's keys different from B.\n  for (var i = 0; i < keysA.length; i++) {\n    if (!hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nmodule.exports = shallowEqual;\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nvar isTextNode = __webpack_require__(34);\n\n/*eslint-disable no-bitwise */\n\n/**\n * Checks if a given DOM node contains or is another DOM node.\n */\nfunction containsNode(outerNode, innerNode) {\n  if (!outerNode || !innerNode) {\n    return false;\n  } else if (outerNode === innerNode) {\n    return true;\n  } else if (isTextNode(outerNode)) {\n    return false;\n  } else if (isTextNode(innerNode)) {\n    return containsNode(outerNode, innerNode.parentNode);\n  } else if ('contains' in outerNode) {\n    return outerNode.contains(innerNode);\n  } else if (outerNode.compareDocumentPosition) {\n    return !!(outerNode.compareDocumentPosition(innerNode) & 16);\n  } else {\n    return false;\n  }\n}\n\nmodule.exports = containsNode;\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n */\n\nvar isNode = __webpack_require__(35);\n\n/**\n * @param {*} object The object to check.\n * @return {boolean} Whether or not the object is a DOM text node.\n */\nfunction isTextNode(object) {\n  return isNode(object) && object.nodeType == 3;\n}\n\nmodule.exports = isTextNode;\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n */\n\n/**\n * @param {*} object The object to check.\n * @return {boolean} Whether or not the object is a DOM node.\n */\nfunction isNode(object) {\n  var doc = object ? object.ownerDocument || object : document;\n  var defaultView = doc.defaultView || window;\n  return !!(object && (typeof defaultView.Node === 'function' ? object instanceof defaultView.Node : typeof object === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string'));\n}\n\nmodule.exports = isNode;\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 37 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(6);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_jsplumb__ = __webpack_require__(38);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_jsplumb___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_jsplumb__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_dagre__ = __webpack_require__(39);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_dagre___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_dagre__);\nvar _typeof=typeof Symbol===\"function\"&&typeof Symbol.iterator===\"symbol\"?function(obj){return typeof obj;}:function(obj){return obj&&typeof Symbol===\"function\"&&obj.constructor===Symbol&&obj!==Symbol.prototype?\"symbol\":typeof obj;};var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _toConsumableArray(arr){if(Array.isArray(arr)){for(var i=0,arr2=Array(arr.length);i<arr.length;i++){arr2[i]=arr[i];}return arr2;}else{return Array.from(arr);}}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function, not \"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var JSPLUMB_ID='jsplumb_box';var color=\"gray\";var arrowCommon={foldback:0.5,fill:color,fillStyle:color,width:14};var overlays=[[\"Arrow\",{location:1},arrowCommon]];var edges=[{sourceId:\"1\",targetId:\"2\"},{sourceId:\"2\",targetId:\"3\"},{sourceId:\"3\",targetId:\"4\"}];var nodes=[{id:\"1\",name:'Node 1',style:{}},{id:\"2\",name:'Node 2',style:{}},{id:\"3\",name:'Node 3',style:{}},{id:\"4\",name:'Node 4',style:{}}];var getLayout=function getLayout(nodes,edges){var separation=arguments.length>2&&arguments[2]!==undefined?arguments[2]:30;var graph=new __WEBPACK_IMPORTED_MODULE_2_dagre___default.a.graphlib.Graph();graph.setGraph({marginx:((document.documentElement.clientWidth||document.body.clientWidth)-224-50-240)/2,marginy:0,nodesep:30,rankdir:\"TB\",ranker:\"longest-path\",ranksep:separation});graph.setDefaultEdgeLabel(function(){return{};});nodes.forEach(function(node){var id=node.id;graph.setNode(id,{width:240,height:80});});edges.forEach(function(connection){graph.setEdge(connection.sourceId,connection.targetId);});__WEBPACK_IMPORTED_MODULE_2_dagre___default.a.layout(graph);return graph;};var graphNodes=getLayout(nodes,edges);nodes=nodes.map(function(node){var location=graphNodes._nodes[node.id];var top=node.style?node.style.top:'';var left=node.style?node.style.left:'';return Object.assign({},node,{style:{left:left?left:location.x+\"px\",top:top?top:location.y+\"px\"}});});var jsPlumbSettings={Connector:[\"Flowchart\",{alwaysRespectStubs:true,cornerRadius:20,midpoint:0.5,stub:[30,30]}],DragOptions:{cursor:\"pointer\",zIndex:2000},PaintStyle:{stroke:color,strokeStyle:color,lineWidth:2},EndpointStyle:{radius:9,fill:color,fillStyle:color},HoverPaintStyle:{stroke:\"#ec9f2e\",strokeStyle:\"#ec9f2e\"},EndpointHoverStyle:{fill:\"#ec9f2e\",fillStyle:\"#ec9f2e\"},ConnectionOverlays:overlays,Container:\"canvas\"};var App=function(_Component){_inherits(App,_Component);function App(){var _ref;var _temp,_this,_ret;_classCallCheck(this,App);for(var _len=arguments.length,args=Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}return _ret=(_temp=(_this=_possibleConstructorReturn(this,(_ref=App.__proto__||Object.getPrototypeOf(App)).call.apply(_ref,[this].concat(args))),_this),_this.state={edges:edges,nodes:nodes,jsPlumbInstance:null,isJsPlumbInstanceCreated:false,dragging:false,// 是否触发画布拖动\nnodeDragging:false,// 是否触发node拖动\n_ratio:0.25,// 滚轮的比率\n_scale:1,// 画布缩放比例\n_left:0,// 画布Left位置\n_top:0,// 画布Top位置\n_initX:0,// 拖动按下鼠标时的X位置\n_initY:0// 拖动按下鼠标时的Y位置\n// 连线事件\n},_this.onConnection=function(connObj,originalEvent){if(!originalEvent){return;}connObj.connection.setPaintStyle({stroke:\"#8b91a0\",strokeStyle:\"#8b91a0\"});var sourceId=connObj.sourceId;var targetId=connObj.targetId;_this.setState({edges:[].concat(_toConsumableArray(_this.state.edges),[{sourceId:sourceId,targetId:targetId}])});return false;},_this.onDelConnection=function(connObj,originalEvent){if(!originalEvent){return;}_this.removeConnection(connObj);return false;},_this.removeConnection=function(connection){_this.setState({edges:_this.state.edges.filter(function(conn){return!(conn.sourceId===connection.sourceId&&conn.targetId===connection.targetId);})});_this.updateParent();},_this.updateParent=function(){if(_this.props.onChange){_this.props.onChange({edges:_this.state.edges,nodes:_this.state.nodes});}},_this.setEventListeners=function(jsPlumbInstance){var eventListeners=_this.props.eventListeners;if(eventListeners&&(typeof eventListeners===\"undefined\"?\"undefined\":_typeof(eventListeners))===\"object\"&&typeof eventListeners.length===\"number\"){Object.keys(eventListeners).forEach(function(event){if(typeof eventListeners[event]!==\"undefined\"){jsPlumbInstance.bind(event,eventListeners[event]);}});}},_this.onCanvasMousewheel=function(e){var self=_this.state;//放大\nif(e.deltaY<0){_this.setState({_scale:self._scale+self._scale*self._ratio});}//缩小\nif(e.deltaY>0){_this.setState({_scale:self._scale-self._scale*self._ratio});}},_this.onMouseMove=function(e){if(!_this.state.nodeDragging){_this.setState({nodeDragging:true});}},_this.onCanvasMousedown=function(e){_this.setState({_initX:e.pageX,_initY:e.pageY,dragging:true});},_this.upDateNode=function(options){var nodesDom=_this.refs[JSPLUMB_ID].querySelectorAll('.gui-canvas-node');if(options){_this.refs[JSPLUMB_ID].style.left='0px';_this.refs[JSPLUMB_ID].style.top='0px';}options=options||{};_this.setState(Object.assign({},options,{nodeDragging:false,nodes:_this.state.nodes.map(function(el){for(var i=0,l=nodesDom.length;i<l;i++){var nodeDom=nodesDom[i];if(nodeDom.id==el.id){el.style={top:nodeDom.style.top,left:nodeDom.style.left};break;}}return el;})}));},_this.onCanvasMouseUpLeave=function(e){var self=_this.state;if(self.dragging){var _left=self._left+e.pageX-self._initX;var _top=self._top+e.pageY-self._initY;_this.refs[JSPLUMB_ID].style.left=_left+'px';_this.refs[JSPLUMB_ID].style.top=_top+'px';_this.setState({_left:_left,_top:_top,nodeDragging:false,dragging:false});}else if(self.nodeDragging){// node 的onMouseDown事件被阻止\n_this.upDateNode();}},_this.onCanvasMousemove=function(e){var self=_this.state;if(!self.dragging){return;}_this.refs[JSPLUMB_ID].style.left=self._left+e.pageX-self._initX+'px';_this.refs[JSPLUMB_ID].style.top=self._top+e.pageY-self._initY+'px';},_temp),_possibleConstructorReturn(_this,_ret);}// 删线事件\n// 删除连接线\n// 更新父组件状态\n// 绑定父组件传入的事件\n// 缩放画布\n// node move\n// 拖动画布\n// 释放画布\n// 移动画布\n_createClass(App,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;__WEBPACK_IMPORTED_MODULE_1_jsplumb__[\"jsPlumb\"].ready(function(){var jsPlumbInstance=__WEBPACK_IMPORTED_MODULE_1_jsplumb__[\"jsPlumb\"].getInstance(jsPlumbSettings||{});jsPlumbInstance.setContainer(document.getElementById(JSPLUMB_ID));jsPlumbInstance.bind(\"connection\",_this2.onConnection);jsPlumbInstance.bind(\"contextmenu\",_this2.onDelConnection);jsPlumbInstance.bind(\"connectionDetached\",_this2.onDelConnection);_this2.setEventListeners(jsPlumbInstance);var sourceEndpointStyle={fill:\"#1fb139\",fillStyle:\"#1fb139\"};var targetEndpointStyle={fill:\"#f65d3b\",fillStyle:\"#f65d3b\"};var endpoint=[\"Dot\",{cssClass:\"endpointClass\",radius:5,hoverClass:\"endpointHoverClass\"}];var connector=[\"Flowchart\",{cssClass:\"connectorClass\",hoverClass:\"connectorHoverClass\"}];var connectorStyle={lineWidth:2,stroke:\"#15a4fa\",strokeStyle:\"#15a4fa\"};var hoverStyle={stroke:\"#1e8151\",strokeStyle:\"#1e8151\",lineWidth:2};var anSourceEndpoint={endpoint:endpoint,paintStyle:sourceEndpointStyle,hoverPaintStyle:{fill:\"#449999\",fillStyle:\"#449999\"},isSource:true,maxConnections:-1,Anchor:[\"TopCenter\"],connector:connector,connectorStyle:connectorStyle,connectorHoverStyle:hoverStyle};var anTargetEndpoint={endpoint:endpoint,paintStyle:targetEndpointStyle,hoverPaintStyle:{fill:\"#449999\",fillStyle:\"#449999\"},isTarget:true,maxConnections:-1,Anchor:[\"BottomCenter\"],connector:connector,connectorStyle:connectorStyle,connectorHoverStyle:hoverStyle};//画点\nvar nodes=_this2.state.nodes;for(var i=0;i<nodes.length;i++){var nUUID=nodes[i].id;jsPlumbInstance.addEndpoint(nUUID,anSourceEndpoint,{uuid:nUUID+\"-bottom\",anchor:\"Bottom\",maxConnections:-1});jsPlumbInstance.addEndpoint(nUUID,anTargetEndpoint,{uuid:nUUID+\"-top\",anchor:\"Top\",maxConnections:-1});jsPlumbInstance.draggable(nUUID);}//画线\nvar edges=_this2.state.edges;for(var j=0;j<edges.length;j++){var connection=jsPlumbInstance.connect({uuids:[edges[j].sourceId+\"-bottom\",edges[j].targetId+\"-top\"]});connection.setPaintStyle({stroke:\"#8b91a0\",strokeStyle:\"#8b91a0\"});}_this2.setState({isJsPlumbInstanceCreated:true,jsPlumbInstance:jsPlumbInstance});});}},{key:\"render\",value:function render(){var _this3=this;var leftArray=[];var topArray=[];var nodesDom=this.state.nodes.map(function(node){var style=node.style||{};leftArray.push(parseFloat(style.left||0));topArray.push(parseFloat(style.top||0));return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"div\",{className:\"gui-canvas-node\",onMouseMove:_this3.onMouseMove,key:node.id,style:style,id:node.id},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"div\",{className:\"node-cnt\"},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"h3\",{className:\"node-title\"},node.name)));});var nodesMap=this.state.nodes.map(function(node){return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"div\",{className:\"gui-canvas-node\",key:node.id+'_map',style:node.style},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"div\",{className:\"node-cnt\"},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"h3\",{className:\"node-title\"},node.name)));});leftArray.sort(function(a,b){return a>b;});topArray.sort(function(a,b){return a>b;});var difLeft=leftArray[leftArray.length-1]-leftArray[0]+240;var difTop=topArray[topArray.length-1]-topArray[0]+80;var scale=Math.min(144/difLeft,144/difTop);var left=0;var top=0;if(difLeft>difTop){left=-leftArray[0]*scale;top=-topArray[0]*scale+(144-difTop*scale)/2;}else{left=-leftArray[0]*scale+(144-difLeft*scale)/2;top=-topArray[0]*scale;}var translateWidth=document.documentElement.clientWidth*(1-this.state._scale)/2;var translateHeight=(document.documentElement.clientHeight-60)*(1-this.state._scale)/2;return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"div\",{className:\"App\"},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"header\",{className:\"App-header\"},\"\\u4E3B\\u9875\",__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"a\",{style:{marginLeft:'30px'},href:\"javascript:;\",onClick:function onClick(e){_this3.upDateNode({_scale:1,_left:0,_top:0});}},\"\\u8FD8\\u539F\"),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"a\",{style:{marginLeft:'30px'},href:\"javascript:;\",onClick:function onClick(e){console.log({nodes:_this3.state.nodes,edges:_this3.state.edges});}},\"\\u63D0\\u4EA4\\u53C2\\u6570\")),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"div\",{key:JSPLUMB_ID,className:\"jsplumb-box\",onWheel:this.onCanvasMousewheel,onMouseMove:this.onCanvasMousemove,onMouseDown:this.onCanvasMousedown,onMouseUp:this.onCanvasMouseUpLeave,onMouseLeave:this.onCanvasMouseUpLeave,onContextMenu:function onContextMenu(event){event.stopPropagation();event.preventDefault();}},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"div\",{style:{width:'150px',height:'150px',padding:'2px',position:'absolute',right:'30px',top:'30px',border:'1px solid #c1c1c1',background:'#F6F6F6',zIndex:2,cursor:'move'}},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"div\",{style:{position:'relative',width:'50px',height:'50px',left:left+\"px\",top:top+\"px\",transformOrigin:'0px 0px 0px',transform:\"scale(\"+scale+\")\"}},nodesMap)),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"div\",{className:\"jsplumb-canvas\",ref:JSPLUMB_ID,id:JSPLUMB_ID,style:{transformOrigin:'0px 0px 0px',transform:\"translate(\"+translateWidth+\"px, \"+translateHeight+\"px) scale(\"+this.state._scale+\")\"}},nodesDom)));}}]);return App;}(__WEBPACK_IMPORTED_MODULE_0_react__[\"Component\"]);/* harmony default export */ __webpack_exports__[\"a\"] = (App);\n\n/***/ }),\n/* 38 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * jsBezier\n *\n * Copyright (c) 2010 - 2017 jsPlumb (hello@jsplumbtoolkit.com)\n *\n * licensed under the MIT license.\n *\n * a set of Bezier curve functions that deal with Beziers, used by jsPlumb, and perhaps useful for other people.  These functions work with Bezier\n * curves of arbitrary degree.\n *\n * - functions are all in the 'jsBezier' namespace.\n *\n * - all input points should be in the format {x:.., y:..}. all output points are in this format too.\n *\n * - all input curves should be in the format [ {x:.., y:..}, {x:.., y:..}, {x:.., y:..}, {x:.., y:..} ]\n *\n * - 'location' as used as an input here refers to a decimal in the range 0-1 inclusive, which indicates a point some proportion along the length\n * of the curve.  location as output has the same format and meaning.\n *\n *\n * Function List:\n * --------------\n *\n * distanceFromCurve(point, curve)\n *\n * \tCalculates the distance that the given point lies from the given Bezier.  Note that it is computed relative to the center of the Bezier,\n * so if you have stroked the curve with a wide pen you may wish to take that into account!  The distance returned is relative to the values\n * of the curve and the point - it will most likely be pixels.\n *\n * gradientAtPoint(curve, location)\n *\n * \tCalculates the gradient to the curve at the given location, as a decimal between 0 and 1 inclusive.\n *\n * gradientAtPointAlongCurveFrom (curve, location)\n *\n *\tCalculates the gradient at the point on the given curve that is 'distance' units from location.\n *\n * nearestPointOnCurve(point, curve)\n *\n *\tCalculates the nearest point to the given point on the given curve.  The return value of this is a JS object literal, containing both the\n *point's coordinates and also the 'location' of the point (see above), for example:  { point:{x:551,y:150}, location:0.263365 }.\n *\n * pointOnCurve(curve, location)\n *\n * \tCalculates the coordinates of the point on the given Bezier curve at the given location.\n *\n * pointAlongCurveFrom(curve, location, distance)\n *\n * \tCalculates the coordinates of the point on the given curve that is 'distance' units from location.  'distance' should be in the same coordinate\n * space as that used to construct the Bezier curve.  For an HTML Canvas usage, for example, distance would be a measure of pixels.\n *\n * locationAlongCurveFrom(curve, location, distance)\n *\n * \tCalculates the location on the given curve that is 'distance' units from location.  'distance' should be in the same coordinate\n * space as that used to construct the Bezier curve.  For an HTML Canvas usage, for example, distance would be a measure of pixels.\n *\n * perpendicularToCurveAt(curve, location, length, distance)\n *\n * \tCalculates the perpendicular to the given curve at the given location.  length is the length of the line you wish for (it will be centered\n * on the point at 'location'). distance is optional, and allows you to specify a point along the path from the given location as the center of\n * the perpendicular returned.  The return value of this is an array of two points: [ {x:...,y:...}, {x:...,y:...} ].\n *\n *\n */\n\n(function() {\n\n    var root = this;\n\n    if(typeof Math.sgn == \"undefined\") {\n        Math.sgn = function(x) { return x == 0 ? 0 : x > 0 ? 1 :-1; };\n    }\n\n    var Vectors = {\n            subtract \t: \tfunction(v1, v2) { return {x:v1.x - v2.x, y:v1.y - v2.y }; },\n            dotProduct\t: \tfunction(v1, v2) { return (v1.x * v2.x)  + (v1.y * v2.y); },\n            square\t\t:\tfunction(v) { return Math.sqrt((v.x * v.x) + (v.y * v.y)); },\n            scale\t\t:\tfunction(v, s) { return {x:v.x * s, y:v.y * s }; }\n        },\n\n        maxRecursion = 64,\n        flatnessTolerance = Math.pow(2.0,-maxRecursion-1);\n\n    /**\n     * Calculates the distance that the point lies from the curve.\n     *\n     * @param point a point in the form {x:567, y:3342}\n     * @param curve a Bezier curve in the form [{x:..., y:...}, {x:..., y:...}, {x:..., y:...}, {x:..., y:...}].  note that this is currently\n     * hardcoded to assume cubiz beziers, but would be better off supporting any degree.\n     * @return a JS object literal containing location and distance, for example: {location:0.35, distance:10}.  Location is analogous to the location\n     * argument you pass to the pointOnPath function: it is a ratio of distance travelled along the curve.  Distance is the distance in pixels from\n     * the point to the curve.\n     */\n    var _distanceFromCurve = function(point, curve) {\n        var candidates = [],\n            w = _convertToBezier(point, curve),\n            degree = curve.length - 1, higherDegree = (2 * degree) - 1,\n            numSolutions = _findRoots(w, higherDegree, candidates, 0),\n            v = Vectors.subtract(point, curve[0]), dist = Vectors.square(v), t = 0.0;\n\n        for (var i = 0; i < numSolutions; i++) {\n            v = Vectors.subtract(point, _bezier(curve, degree, candidates[i], null, null));\n            var newDist = Vectors.square(v);\n            if (newDist < dist) {\n                dist = newDist;\n                t = candidates[i];\n            }\n        }\n        v = Vectors.subtract(point, curve[degree]);\n        newDist = Vectors.square(v);\n        if (newDist < dist) {\n            dist = newDist;\n            t = 1.0;\n        }\n        return {location:t, distance:dist};\n    };\n    /**\n     * finds the nearest point on the curve to the given point.\n     */\n    var _nearestPointOnCurve = function(point, curve) {\n        var td = _distanceFromCurve(point, curve);\n        return {point:_bezier(curve, curve.length - 1, td.location, null, null), location:td.location};\n    };\n    var _convertToBezier = function(point, curve) {\n        var degree = curve.length - 1, higherDegree = (2 * degree) - 1,\n            c = [], d = [], cdTable = [], w = [],\n            z = [ [1.0, 0.6, 0.3, 0.1], [0.4, 0.6, 0.6, 0.4], [0.1, 0.3, 0.6, 1.0] ];\n\n        for (var i = 0; i <= degree; i++) c[i] = Vectors.subtract(curve[i], point);\n        for (var i = 0; i <= degree - 1; i++) {\n            d[i] = Vectors.subtract(curve[i+1], curve[i]);\n            d[i] = Vectors.scale(d[i], 3.0);\n        }\n        for (var row = 0; row <= degree - 1; row++) {\n            for (var column = 0; column <= degree; column++) {\n                if (!cdTable[row]) cdTable[row] = [];\n                cdTable[row][column] = Vectors.dotProduct(d[row], c[column]);\n            }\n        }\n        for (i = 0; i <= higherDegree; i++) {\n            if (!w[i]) w[i] = [];\n            w[i].y = 0.0;\n            w[i].x = parseFloat(i) / higherDegree;\n        }\n        var n = degree, m = degree-1;\n        for (var k = 0; k <= n + m; k++) {\n            var lb = Math.max(0, k - m),\n                ub = Math.min(k, n);\n            for (i = lb; i <= ub; i++) {\n                j = k - i;\n                w[i+j].y += cdTable[j][i] * z[j][i];\n            }\n        }\n        return w;\n    };\n    /**\n     * counts how many roots there are.\n     */\n    var _findRoots = function(w, degree, t, depth) {\n        var left = [], right = [],\n            left_count, right_count,\n            left_t = [], right_t = [];\n\n        switch (_getCrossingCount(w, degree)) {\n            case 0 : {\n                return 0;\n            }\n            case 1 : {\n                if (depth >= maxRecursion) {\n                    t[0] = (w[0].x + w[degree].x) / 2.0;\n                    return 1;\n                }\n                if (_isFlatEnough(w, degree)) {\n                    t[0] = _computeXIntercept(w, degree);\n                    return 1;\n                }\n                break;\n            }\n        }\n        _bezier(w, degree, 0.5, left, right);\n        left_count  = _findRoots(left,  degree, left_t, depth+1);\n        right_count = _findRoots(right, degree, right_t, depth+1);\n        for (var i = 0; i < left_count; i++) t[i] = left_t[i];\n        for (var i = 0; i < right_count; i++) t[i+left_count] = right_t[i];\n        return (left_count+right_count);\n    };\n    var _getCrossingCount = function(curve, degree) {\n        var n_crossings = 0, sign, old_sign;\n        sign = old_sign = Math.sgn(curve[0].y);\n        for (var i = 1; i <= degree; i++) {\n            sign = Math.sgn(curve[i].y);\n            if (sign != old_sign) n_crossings++;\n            old_sign = sign;\n        }\n        return n_crossings;\n    };\n    var _isFlatEnough = function(curve, degree) {\n        var  error,\n            intercept_1, intercept_2, left_intercept, right_intercept,\n            a, b, c, det, dInv, a1, b1, c1, a2, b2, c2;\n        a = curve[0].y - curve[degree].y;\n        b = curve[degree].x - curve[0].x;\n        c = curve[0].x * curve[degree].y - curve[degree].x * curve[0].y;\n\n        var max_distance_above = max_distance_below = 0.0;\n\n        for (var i = 1; i < degree; i++) {\n            var value = a * curve[i].x + b * curve[i].y + c;\n            if (value > max_distance_above)\n                max_distance_above = value;\n            else if (value < max_distance_below)\n                max_distance_below = value;\n        }\n\n        a1 = 0.0; b1 = 1.0; c1 = 0.0; a2 = a; b2 = b;\n        c2 = c - max_distance_above;\n        det = a1 * b2 - a2 * b1;\n        dInv = 1.0/det;\n        intercept_1 = (b1 * c2 - b2 * c1) * dInv;\n        a2 = a; b2 = b; c2 = c - max_distance_below;\n        det = a1 * b2 - a2 * b1;\n        dInv = 1.0/det;\n        intercept_2 = (b1 * c2 - b2 * c1) * dInv;\n        left_intercept = Math.min(intercept_1, intercept_2);\n        right_intercept = Math.max(intercept_1, intercept_2);\n        error = right_intercept - left_intercept;\n        return (error < flatnessTolerance)? 1 : 0;\n    };\n    var _computeXIntercept = function(curve, degree) {\n        var XLK = 1.0, YLK = 0.0,\n            XNM = curve[degree].x - curve[0].x, YNM = curve[degree].y - curve[0].y,\n            XMK = curve[0].x - 0.0, YMK = curve[0].y - 0.0,\n            det = XNM*YLK - YNM*XLK, detInv = 1.0/det,\n            S = (XNM*YMK - YNM*XMK) * detInv;\n        return 0.0 + XLK * S;\n    };\n    var _bezier = function(curve, degree, t, left, right) {\n        var temp = [[]];\n        for (var j =0; j <= degree; j++) temp[0][j] = curve[j];\n        for (var i = 1; i <= degree; i++) {\n            for (var j =0 ; j <= degree - i; j++) {\n                if (!temp[i]) temp[i] = [];\n                if (!temp[i][j]) temp[i][j] = {};\n                temp[i][j].x = (1.0 - t) * temp[i-1][j].x + t * temp[i-1][j+1].x;\n                temp[i][j].y = (1.0 - t) * temp[i-1][j].y + t * temp[i-1][j+1].y;\n            }\n        }\n        if (left != null)\n            for (j = 0; j <= degree; j++) left[j]  = temp[j][0];\n        if (right != null)\n            for (j = 0; j <= degree; j++) right[j] = temp[degree-j][j];\n\n        return (temp[degree][0]);\n    };\n\n    var _curveFunctionCache = {};\n    var _getCurveFunctions = function(order) {\n        var fns = _curveFunctionCache[order];\n        if (!fns) {\n            fns = [];\n            var f_term = function() { return function(t) { return Math.pow(t, order); }; },\n                l_term = function() { return function(t) { return Math.pow((1-t), order); }; },\n                c_term = function(c) { return function(t) { return c; }; },\n                t_term = function() { return function(t) { return t; }; },\n                one_minus_t_term = function() { return function(t) { return 1-t; }; },\n                _termFunc = function(terms) {\n                    return function(t) {\n                        var p = 1;\n                        for (var i = 0; i < terms.length; i++) p = p * terms[i](t);\n                        return p;\n                    };\n                };\n\n            fns.push(new f_term());  // first is t to the power of the curve order\n            for (var i = 1; i < order; i++) {\n                var terms = [new c_term(order)];\n                for (var j = 0 ; j < (order - i); j++) terms.push(new t_term());\n                for (var j = 0 ; j < i; j++) terms.push(new one_minus_t_term());\n                fns.push(new _termFunc(terms));\n            }\n            fns.push(new l_term());  // last is (1-t) to the power of the curve order\n\n            _curveFunctionCache[order] = fns;\n        }\n\n        return fns;\n    };\n\n\n    /**\n     * calculates a point on the curve, for a Bezier of arbitrary order.\n     * @param curve an array of control points, eg [{x:10,y:20}, {x:50,y:50}, {x:100,y:100}, {x:120,y:100}].  For a cubic bezier this should have four points.\n     * @param location a decimal indicating the distance along the curve the point should be located at.  this is the distance along the curve as it travels, taking the way it bends into account.  should be a number from 0 to 1, inclusive.\n     */\n    var _pointOnPath = function(curve, location) {\n        var cc = _getCurveFunctions(curve.length - 1),\n            _x = 0, _y = 0;\n        for (var i = 0; i < curve.length ; i++) {\n            _x = _x + (curve[i].x * cc[i](location));\n            _y = _y + (curve[i].y * cc[i](location));\n        }\n\n        return {x:_x, y:_y};\n    };\n\n    var _dist = function(p1,p2) {\n        return Math.sqrt(Math.pow(p1.x - p2.x, 2) + Math.pow(p1.y - p2.y, 2));\n    };\n\n    var _isPoint = function(curve) {\n        return curve[0].x == curve[1].x && curve[0].y == curve[1].y;\n    };\n\n    /**\n     * finds the point that is 'distance' along the path from 'location'.  this method returns both the x,y location of the point and also\n     * its 'location' (proportion of travel along the path); the method below - _pointAlongPathFrom - calls this method and just returns the\n     * point.\n     */\n    var _pointAlongPath = function(curve, location, distance) {\n\n        if (_isPoint(curve)) {\n            return {\n                point:curve[0],\n                location:location\n            };\n        }\n\n        var prev = _pointOnPath(curve, location),\n            tally = 0,\n            curLoc = location,\n            direction = distance > 0 ? 1 : -1,\n            cur = null;\n\n        while (tally < Math.abs(distance)) {\n            curLoc += (0.005 * direction);\n            cur = _pointOnPath(curve, curLoc);\n            tally += _dist(cur, prev);\n            prev = cur;\n        }\n        return {point:cur, location:curLoc};\n    };\n\n    var _length = function(curve) {\n        if (_isPoint(curve)) return 0;\n\n        var prev = _pointOnPath(curve, 0),\n            tally = 0,\n            curLoc = 0,\n            direction = 1,\n            cur = null;\n\n        while (curLoc < 1) {\n            curLoc += (0.005 * direction);\n            cur = _pointOnPath(curve, curLoc);\n            tally += _dist(cur, prev);\n            prev = cur;\n        }\n        return tally;\n    };\n\n    /**\n     * finds the point that is 'distance' along the path from 'location'.\n     */\n    var _pointAlongPathFrom = function(curve, location, distance) {\n        return _pointAlongPath(curve, location, distance).point;\n    };\n\n    /**\n     * finds the location that is 'distance' along the path from 'location'.\n     */\n    var _locationAlongPathFrom = function(curve, location, distance) {\n        return _pointAlongPath(curve, location, distance).location;\n    };\n\n    /**\n     * returns the gradient of the curve at the given location, which is a decimal between 0 and 1 inclusive.\n     *\n     * thanks // http://bimixual.org/AnimationLibrary/beziertangents.html\n     */\n    var _gradientAtPoint = function(curve, location) {\n        var p1 = _pointOnPath(curve, location),\n            p2 = _pointOnPath(curve.slice(0, curve.length - 1), location),\n            dy = p2.y - p1.y, dx = p2.x - p1.x;\n        return dy == 0 ? Infinity : Math.atan(dy / dx);\n    };\n\n    /**\n     returns the gradient of the curve at the point which is 'distance' from the given location.\n     if this point is greater than location 1, the gradient at location 1 is returned.\n     if this point is less than location 0, the gradient at location 0 is returned.\n     */\n    var _gradientAtPointAlongPathFrom = function(curve, location, distance) {\n        var p = _pointAlongPath(curve, location, distance);\n        if (p.location > 1) p.location = 1;\n        if (p.location < 0) p.location = 0;\n        return _gradientAtPoint(curve, p.location);\n    };\n\n    /**\n     * calculates a line that is 'length' pixels long, perpendicular to, and centered on, the path at 'distance' pixels from the given location.\n     * if distance is not supplied, the perpendicular for the given location is computed (ie. we set distance to zero).\n     */\n    var _perpendicularToPathAt = function(curve, location, length, distance) {\n        distance = distance == null ? 0 : distance;\n        var p = _pointAlongPath(curve, location, distance),\n            m = _gradientAtPoint(curve, p.location),\n            _theta2 = Math.atan(-1 / m),\n            y =  length / 2 * Math.sin(_theta2),\n            x =  length / 2 * Math.cos(_theta2);\n        return [{x:p.point.x + x, y:p.point.y + y}, {x:p.point.x - x, y:p.point.y - y}];\n    };\n\n    var jsBezier = this.jsBezier = {\n        distanceFromCurve : _distanceFromCurve,\n        gradientAtPoint : _gradientAtPoint,\n        gradientAtPointAlongCurveFrom : _gradientAtPointAlongPathFrom,\n        nearestPointOnCurve : _nearestPointOnCurve,\n        pointOnCurve : _pointOnPath,\n        pointAlongCurveFrom : _pointAlongPathFrom,\n        perpendicularToCurveAt : _perpendicularToPathAt,\n        locationAlongCurveFrom:_locationAlongPathFrom,\n        getLength:_length,\n        version:\"0.9.0\"\n    };\n\n    if (true) {\n        exports.jsBezier = jsBezier;\n    }\n\n}).call(typeof window !== 'undefined' ? window : this);\n\n/**\n * Biltong v0.4.0\n *\n * Various geometry functions written as part of jsPlumb and perhaps useful for others.\n *\n * Copyright (c) 2017 jsPlumb\n * https://jsplumbtoolkit.com\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n;(function() {\n\n    \"use strict\";\n    var root = this;\n\n    var Biltong = root.Biltong = {\n        version:\"0.4.0\"\n    };\n\n    if (true) {\n        exports.Biltong = Biltong;\n    }\n\n    var _isa = function(a) { return Object.prototype.toString.call(a) === \"[object Array]\"; },\n        _pointHelper = function(p1, p2, fn) {\n            p1 = _isa(p1) ? p1 : [p1.x, p1.y];\n            p2 = _isa(p2) ? p2 : [p2.x, p2.y];\n            return fn(p1, p2);\n        },\n        /**\n         * @name Biltong.gradient\n         * @function\n         * @desc Calculates the gradient of a line between the two points.\n         * @param {Point} p1 First point, either as a 2 entry array or object with `left` and `top` properties.\n         * @param {Point} p2 Second point, either as a 2 entry array or object with `left` and `top` properties.\n         * @return {Float} The gradient of a line between the two points.\n         */\n        _gradient = Biltong.gradient = function(p1, p2) {\n            return _pointHelper(p1, p2, function(_p1, _p2) {\n                if (_p2[0] == _p1[0])\n                    return _p2[1] > _p1[1] ? Infinity : -Infinity;\n                else if (_p2[1] == _p1[1])\n                    return _p2[0] > _p1[0] ? 0 : -0;\n                else\n                    return (_p2[1] - _p1[1]) / (_p2[0] - _p1[0]);\n            });\n        },\n        /**\n         * @name Biltong.normal\n         * @function\n         * @desc Calculates the gradient of a normal to a line between the two points.\n         * @param {Point} p1 First point, either as a 2 entry array or object with `left` and `top` properties.\n         * @param {Point} p2 Second point, either as a 2 entry array or object with `left` and `top` properties.\n         * @return {Float} The gradient of a normal to a line between the two points.\n         */\n        _normal = Biltong.normal = function(p1, p2) {\n            return -1 / _gradient(p1, p2);\n        },\n        /**\n         * @name Biltong.lineLength\n         * @function\n         * @desc Calculates the length of a line between the two points.\n         * @param {Point} p1 First point, either as a 2 entry array or object with `left` and `top` properties.\n         * @param {Point} p2 Second point, either as a 2 entry array or object with `left` and `top` properties.\n         * @return {Float} The length of a line between the two points.\n         */\n        _lineLength = Biltong.lineLength = function(p1, p2) {\n            return _pointHelper(p1, p2, function(_p1, _p2) {\n                return Math.sqrt(Math.pow(_p2[1] - _p1[1], 2) + Math.pow(_p2[0] - _p1[0], 2));\n            });\n        },\n        /**\n         * @name Biltong.quadrant\n         * @function\n         * @desc Calculates the quadrant in which the angle between the two points lies.\n         * @param {Point} p1 First point, either as a 2 entry array or object with `left` and `top` properties.\n         * @param {Point} p2 Second point, either as a 2 entry array or object with `left` and `top` properties.\n         * @return {Integer} The quadrant - 1 for upper right, 2 for lower right, 3 for lower left, 4 for upper left.\n         */\n        _quadrant = Biltong.quadrant = function(p1, p2) {\n            return _pointHelper(p1, p2, function(_p1, _p2) {\n                if (_p2[0] > _p1[0]) {\n                    return (_p2[1] > _p1[1]) ? 2 : 1;\n                }\n                else if (_p2[0] == _p1[0]) {\n                    return _p2[1] > _p1[1] ? 2 : 1;\n                }\n                else {\n                    return (_p2[1] > _p1[1]) ? 3 : 4;\n                }\n            });\n        },\n        /**\n         * @name Biltong.theta\n         * @function\n         * @desc Calculates the angle between the two points.\n         * @param {Point} p1 First point, either as a 2 entry array or object with `left` and `top` properties.\n         * @param {Point} p2 Second point, either as a 2 entry array or object with `left` and `top` properties.\n         * @return {Float} The angle between the two points.\n         */\n        _theta = Biltong.theta = function(p1, p2) {\n            return _pointHelper(p1, p2, function(_p1, _p2) {\n                var m = _gradient(_p1, _p2),\n                    t = Math.atan(m),\n                    s = _quadrant(_p1, _p2);\n                if ((s == 4 || s== 3)) t += Math.PI;\n                if (t < 0) t += (2 * Math.PI);\n\n                return t;\n            });\n        },\n        /**\n         * @name Biltong.intersects\n         * @function\n         * @desc Calculates whether or not the two rectangles intersect.\n         * @param {Rectangle} r1 First rectangle, as a js object in the form `{x:.., y:.., w:.., h:..}`\n         * @param {Rectangle} r2 Second rectangle, as a js object in the form `{x:.., y:.., w:.., h:..}`\n         * @return {Boolean} True if the rectangles intersect, false otherwise.\n         */\n        _intersects = Biltong.intersects = function(r1, r2) {\n            var x1 = r1.x, x2 = r1.x + r1.w, y1 = r1.y, y2 = r1.y + r1.h,\n                a1 = r2.x, a2 = r2.x + r2.w, b1 = r2.y, b2 = r2.y + r2.h;\n\n            return  ( (x1 <= a1 && a1 <= x2) && (y1 <= b1 && b1 <= y2) ) ||\n                ( (x1 <= a2 && a2 <= x2) && (y1 <= b1 && b1 <= y2) ) ||\n                ( (x1 <= a1 && a1 <= x2) && (y1 <= b2 && b2 <= y2) ) ||\n                ( (x1 <= a2 && a1 <= x2) && (y1 <= b2 && b2 <= y2) ) ||\n                ( (a1 <= x1 && x1 <= a2) && (b1 <= y1 && y1 <= b2) ) ||\n                ( (a1 <= x2 && x2 <= a2) && (b1 <= y1 && y1 <= b2) ) ||\n                ( (a1 <= x1 && x1 <= a2) && (b1 <= y2 && y2 <= b2) ) ||\n                ( (a1 <= x2 && x1 <= a2) && (b1 <= y2 && y2 <= b2) );\n        },\n        /**\n         * @name Biltong.encloses\n         * @function\n         * @desc Calculates whether or not r2 is completely enclosed by r1.\n         * @param {Rectangle} r1 First rectangle, as a js object in the form `{x:.., y:.., w:.., h:..}`\n         * @param {Rectangle} r2 Second rectangle, as a js object in the form `{x:.., y:.., w:.., h:..}`\n         * @param {Boolean} [allowSharedEdges=false] If true, the concept of enclosure allows for one or more edges to be shared by the two rectangles.\n         * @return {Boolean} True if r1 encloses r2, false otherwise.\n         */\n        _encloses = Biltong.encloses = function(r1, r2, allowSharedEdges) {\n            var x1 = r1.x, x2 = r1.x + r1.w, y1 = r1.y, y2 = r1.y + r1.h,\n                a1 = r2.x, a2 = r2.x + r2.w, b1 = r2.y, b2 = r2.y + r2.h,\n                c = function(v1, v2, v3, v4) { return allowSharedEdges ? v1 <= v2 && v3>= v4 : v1 < v2 && v3 > v4; };\n\n            return c(x1,a1,x2,a2) && c(y1,b1,y2,b2);\n        },\n        _segmentMultipliers = [null, [1, -1], [1, 1], [-1, 1], [-1, -1] ],\n        _inverseSegmentMultipliers = [null, [-1, -1], [-1, 1], [1, 1], [1, -1] ],\n        /**\n         * @name Biltong.pointOnLine\n         * @function\n         * @desc Calculates a point on the line from `fromPoint` to `toPoint` that is `distance` units along the length of the line.\n         * @param {Point} p1 First point, either as a 2 entry array or object with `left` and `top` properties.\n         * @param {Point} p2 Second point, either as a 2 entry array or object with `left` and `top` properties.\n         * @return {Point} Point on the line, in the form `{ x:..., y:... }`.\n         */\n        _pointOnLine = Biltong.pointOnLine = function(fromPoint, toPoint, distance) {\n            var m = _gradient(fromPoint, toPoint),\n                s = _quadrant(fromPoint, toPoint),\n                segmentMultiplier = distance > 0 ? _segmentMultipliers[s] : _inverseSegmentMultipliers[s],\n                theta = Math.atan(m),\n                y = Math.abs(distance * Math.sin(theta)) * segmentMultiplier[1],\n                x =  Math.abs(distance * Math.cos(theta)) * segmentMultiplier[0];\n            return { x:fromPoint.x + x, y:fromPoint.y + y };\n        },\n        /**\n         * @name Biltong.perpendicularLineTo\n         * @function\n         * @desc Calculates a line of length `length` that is perpendicular to the line from `fromPoint` to `toPoint` and passes through `toPoint`.\n         * @param {Point} p1 First point, either as a 2 entry array or object with `left` and `top` properties.\n         * @param {Point} p2 Second point, either as a 2 entry array or object with `left` and `top` properties.\n         * @return {Line} Perpendicular line, in the form `[ { x:..., y:... }, { x:..., y:... } ]`.\n         */\n        _perpendicularLineTo = Biltong.perpendicularLineTo = function(fromPoint, toPoint, length) {\n            var m = _gradient(fromPoint, toPoint),\n                theta2 = Math.atan(-1 / m),\n                y =  length / 2 * Math.sin(theta2),\n                x =  length / 2 * Math.cos(theta2);\n            return [{x:toPoint.x + x, y:toPoint.y + y}, {x:toPoint.x - x, y:toPoint.y - y}];\n        };\n}).call(typeof window !== 'undefined' ? window : this);\n;\n(function () {\n\n    \"use strict\";\n\n    var root = this,\n        Sniff = {\n            android: navigator.userAgent.toLowerCase().indexOf(\"android\") > -1\n        },\n        matchesSelector = function (el, selector, ctx) {\n            ctx = ctx || el.parentNode;\n            var possibles = ctx.querySelectorAll(selector);\n            for (var i = 0; i < possibles.length; i++) {\n                if (possibles[i] === el) {\n                    return true;\n                }\n            }\n            return false;\n        },\n        _gel = function (el) {\n            return (typeof el == \"string\" || el.constructor === String) ? document.getElementById(el) : el;\n        },\n        _t = function (e) {\n            return e.srcElement || e.target;\n        },\n    //\n    // gets path info for the given event - the path from target to obj, in the event's bubble chain. if doCompute\n    // is false we just return target for the path.\n    //\n        _pi = function(e, target, obj, doCompute) {\n            if (!doCompute) return { path:[target], end:1 };\n            else if (typeof e.path !== \"undefined\" && e.path.indexOf) {\n                return { path: e.path, end: e.path.indexOf(obj) };\n            } else {\n                var out = { path:[], end:-1 }, _one = function(el) {\n                    out.path.push(el);\n                    if (el === obj) {\n                        out.end = out.path.length - 1;\n                    }\n                    else if (el.parentNode != null) {\n                        _one(el.parentNode)\n                    }\n                };\n                _one(target);\n                return out;\n            }\n        },\n        _d = function (l, fn) {\n            for (var i = 0, j = l.length; i < j; i++) {\n                if (l[i] == fn) break;\n            }\n            if (i < l.length) l.splice(i, 1);\n        },\n        guid = 1,\n    //\n    // this function generates a guid for every handler, sets it on the handler, then adds\n    // it to the associated object's map of handlers for the given event. this is what enables us\n    // to unbind all events of some type, or all events (the second of which can be requested by the user,\n    // but it also used by Mottle when an element is removed.)\n        _store = function (obj, event, fn) {\n            var g = guid++;\n            obj.__ta = obj.__ta || {};\n            obj.__ta[event] = obj.__ta[event] || {};\n            // store each handler with a unique guid.\n            obj.__ta[event][g] = fn;\n            // set the guid on the handler.\n            fn.__tauid = g;\n            return g;\n        },\n        _unstore = function (obj, event, fn) {\n            obj.__ta && obj.__ta[event] && delete obj.__ta[event][fn.__tauid];\n            // a handler might have attached extra functions, so we unbind those too.\n            if (fn.__taExtra) {\n                for (var i = 0; i < fn.__taExtra.length; i++) {\n                    _unbind(obj, fn.__taExtra[i][0], fn.__taExtra[i][1]);\n                }\n                fn.__taExtra.length = 0;\n            }\n            // a handler might have attached an unstore callback\n            fn.__taUnstore && fn.__taUnstore();\n        },\n        _curryChildFilter = function (children, obj, fn, evt) {\n            if (children == null) return fn;\n            else {\n                var c = children.split(\",\"),\n                    _fn = function (e) {\n                        _fn.__tauid = fn.__tauid;\n                        var t = _t(e), target = t;  // t is the target element on which the event occurred. it is the\n                        // element we will wish to pass to any callbacks.\n                        var pathInfo = _pi(e, t, obj, children != null)\n                        if (pathInfo.end != -1) {\n                            for (var p = 0; p < pathInfo.end; p++) {\n                                target = pathInfo.path[p];\n                                for (var i = 0; i < c.length; i++) {\n                                    if (matchesSelector(target, c[i], obj)) {\n                                        fn.apply(target, arguments);\n                                    }\n                                }\n                            }\n                        }\n                    };\n                registerExtraFunction(fn, evt, _fn);\n                return _fn;\n            }\n        },\n    //\n    // registers an 'extra' function on some event listener function we were given - a function that we\n    // created and bound to the element as part of our housekeeping, and which we want to unbind and remove\n    // whenever the given function is unbound.\n        registerExtraFunction = function (fn, evt, newFn) {\n            fn.__taExtra = fn.__taExtra || [];\n            fn.__taExtra.push([evt, newFn]);\n        },\n        DefaultHandler = function (obj, evt, fn, children) {\n            if (isTouchDevice && touchMap[evt]) {\n                var tfn = _curryChildFilter(children, obj, fn, touchMap[evt]);\n                _bind(obj, touchMap[evt], tfn , fn);\n            }\n            if (evt === \"focus\" && obj.getAttribute(\"tabindex\") == null) {\n                obj.setAttribute(\"tabindex\", \"1\");\n            }\n            _bind(obj, evt, _curryChildFilter(children, obj, fn, evt), fn);\n        },\n        SmartClickHandler = function (obj, evt, fn, children) {\n            if (obj.__taSmartClicks == null) {\n                var down = function (e) {\n                        obj.__tad = _pageLocation(e);\n                    },\n                    up = function (e) {\n                        obj.__tau = _pageLocation(e);\n                    },\n                    click = function (e) {\n                        if (obj.__tad && obj.__tau && obj.__tad[0] === obj.__tau[0] && obj.__tad[1] === obj.__tau[1]) {\n                            for (var i = 0; i < obj.__taSmartClicks.length; i++)\n                                obj.__taSmartClicks[i].apply(_t(e), [ e ]);\n                        }\n                    };\n                DefaultHandler(obj, \"mousedown\", down, children);\n                DefaultHandler(obj, \"mouseup\", up, children);\n                DefaultHandler(obj, \"click\", click, children);\n                obj.__taSmartClicks = [];\n            }\n\n            // store in the list of callbacks\n            obj.__taSmartClicks.push(fn);\n            // the unstore function removes this function from the object's listener list for this type.\n            fn.__taUnstore = function () {\n                _d(obj.__taSmartClicks, fn);\n            };\n        },\n        _tapProfiles = {\n            \"tap\": {touches: 1, taps: 1},\n            \"dbltap\": {touches: 1, taps: 2},\n            \"contextmenu\": {touches: 2, taps: 1}\n        },\n        TapHandler = function (clickThreshold, dblClickThreshold) {\n            return function (obj, evt, fn, children) {\n                // if event is contextmenu, for devices which are mouse only, we want to\n                // use the default bind.\n                if (evt == \"contextmenu\" && isMouseDevice)\n                    DefaultHandler(obj, evt, fn, children);\n                else {\n                    // the issue here is that this down handler gets registered only for the\n                    // child nodes in the first registration. in fact it should be registered with\n                    // no child selector and then on down we should cycle through the registered\n                    // functions to see if one of them matches. on mouseup we should execute ALL of\n                    // the functions whose children are either null or match the element.\n                    if (obj.__taTapHandler == null) {\n                        var tt = obj.__taTapHandler = {\n                            tap: [],\n                            dbltap: [],\n                            contextmenu: [],\n                            down: false,\n                            taps: 0,\n                            downSelectors: []\n                        };\n                        var down = function (e) {\n                                var target = _t(e), pathInfo = _pi(e, target, obj, children != null), finished = false;\n                                for (var p = 0; p < pathInfo.end; p++) {\n                                    if (finished) return;\n                                    target = pathInfo.path[p];\n                                    for (var i = 0; i < tt.downSelectors.length; i++) {\n                                        if (tt.downSelectors[i] == null || matchesSelector(target, tt.downSelectors[i], obj)) {\n                                            tt.down = true;\n                                            setTimeout(clearSingle, clickThreshold);\n                                            setTimeout(clearDouble, dblClickThreshold);\n                                            finished = true;\n                                            break; // we only need one match on mousedown\n                                        }\n                                    }\n                                }\n                            },\n                            up = function (e) {\n                                if (tt.down) {\n                                    var target = _t(e), currentTarget, pathInfo;\n                                    tt.taps++;\n                                    var tc = _touchCount(e);\n                                    for (var eventId in _tapProfiles) {\n                                        if (_tapProfiles.hasOwnProperty(eventId)) {\n                                            var p = _tapProfiles[eventId];\n                                            if (p.touches === tc && (p.taps === 1 || p.taps === tt.taps)) {\n                                                for (var i = 0; i < tt[eventId].length; i++) {\n                                                    pathInfo = _pi(e, target, obj, tt[eventId][i][1] != null);\n                                                    for (var pLoop = 0; pLoop < pathInfo.end; pLoop++) {\n                                                        currentTarget = pathInfo.path[pLoop];\n                                                        // this is a single event registration handler.\n                                                        if (tt[eventId][i][1] == null || matchesSelector(currentTarget, tt[eventId][i][1], obj)) {\n                                                            tt[eventId][i][0].apply(currentTarget, [ e ]);\n                                                            break;\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            },\n                            clearSingle = function () {\n                                tt.down = false;\n                            },\n                            clearDouble = function () {\n                                tt.taps = 0;\n                            };\n\n                        DefaultHandler(obj, \"mousedown\", down);\n                        DefaultHandler(obj, \"mouseup\", up);\n                    }\n                    // add this child selector (it can be null, that's fine).\n                    obj.__taTapHandler.downSelectors.push(children);\n\n                    obj.__taTapHandler[evt].push([fn, children]);\n                    // the unstore function removes this function from the object's listener list for this type.\n                    fn.__taUnstore = function () {\n                        _d(obj.__taTapHandler[evt], fn);\n                    };\n                }\n            };\n        },\n        meeHelper = function (type, evt, obj, target) {\n            for (var i in obj.__tamee[type]) {\n                if (obj.__tamee[type].hasOwnProperty(i)) {\n                    obj.__tamee[type][i].apply(target, [ evt ]);\n                }\n            }\n        },\n        MouseEnterExitHandler = function () {\n            var activeElements = [];\n            return function (obj, evt, fn, children) {\n                if (!obj.__tamee) {\n                    // __tamee holds a flag saying whether the mouse is currently \"in\" the element, and a list of\n                    // both mouseenter and mouseexit functions.\n                    obj.__tamee = { over: false, mouseenter: [], mouseexit: [] };\n                    // register over and out functions\n                    var over = function (e) {\n                            var t = _t(e);\n                            if ((children == null && (t == obj && !obj.__tamee.over)) || (matchesSelector(t, children, obj) && (t.__tamee == null || !t.__tamee.over))) {\n                                meeHelper(\"mouseenter\", e, obj, t);\n                                t.__tamee = t.__tamee || {};\n                                t.__tamee.over = true;\n                                activeElements.push(t);\n                            }\n                        },\n                        out = function (e) {\n                            var t = _t(e);\n                            // is the current target one of the activeElements? and is the\n                            // related target NOT a descendant of it?\n                            for (var i = 0; i < activeElements.length; i++) {\n                                if (t == activeElements[i] && !matchesSelector((e.relatedTarget || e.toElement), \"*\", t)) {\n                                    t.__tamee.over = false;\n                                    activeElements.splice(i, 1);\n                                    meeHelper(\"mouseexit\", e, obj, t);\n                                }\n                            }\n                        };\n\n                    _bind(obj, \"mouseover\", _curryChildFilter(children, obj, over, \"mouseover\"), over);\n                    _bind(obj, \"mouseout\", _curryChildFilter(children, obj, out, \"mouseout\"), out);\n                }\n\n                fn.__taUnstore = function () {\n                    delete obj.__tamee[evt][fn.__tauid];\n                };\n\n                _store(obj, evt, fn);\n                obj.__tamee[evt][fn.__tauid] = fn;\n            };\n        },\n        isTouchDevice = \"ontouchstart\" in document.documentElement,\n        isMouseDevice = \"onmousedown\" in document.documentElement,\n        touchMap = { \"mousedown\": \"touchstart\", \"mouseup\": \"touchend\", \"mousemove\": \"touchmove\" },\n        touchstart = \"touchstart\", touchend = \"touchend\", touchmove = \"touchmove\",\n        iev = (function () {\n            var rv = -1;\n            if (navigator.appName == 'Microsoft Internet Explorer') {\n                var ua = navigator.userAgent,\n                    re = new RegExp(\"MSIE ([0-9]{1,}[\\.0-9]{0,})\");\n                if (re.exec(ua) != null)\n                    rv = parseFloat(RegExp.$1);\n            }\n            return rv;\n        })(),\n        isIELT9 = iev > -1 && iev < 9,\n        _genLoc = function (e, prefix) {\n            if (e == null) return [ 0, 0 ];\n            var ts = _touches(e), t = _getTouch(ts, 0);\n            return [t[prefix + \"X\"], t[prefix + \"Y\"]];\n        },\n        _pageLocation = function (e) {\n            if (e == null) return [ 0, 0 ];\n            if (isIELT9) {\n                return [ e.clientX + document.documentElement.scrollLeft, e.clientY + document.documentElement.scrollTop ];\n            }\n            else {\n                return _genLoc(e, \"page\");\n            }\n        },\n        _screenLocation = function (e) {\n            return _genLoc(e, \"screen\");\n        },\n        _clientLocation = function (e) {\n            return _genLoc(e, \"client\");\n        },\n        _getTouch = function (touches, idx) {\n            return touches.item ? touches.item(idx) : touches[idx];\n        },\n        _touches = function (e) {\n            return e.touches && e.touches.length > 0 ? e.touches :\n                    e.changedTouches && e.changedTouches.length > 0 ? e.changedTouches :\n                    e.targetTouches && e.targetTouches.length > 0 ? e.targetTouches :\n                [ e ];\n        },\n        _touchCount = function (e) {\n            return _touches(e).length;\n        },\n    //http://www.quirksmode.org/blog/archives/2005/10/_and_the_winner_1.html\n        _bind = function (obj, type, fn, originalFn) {\n            _store(obj, type, fn);\n            originalFn.__tauid = fn.__tauid;\n            if (obj.addEventListener)\n                obj.addEventListener(type, fn, false);\n            else if (obj.attachEvent) {\n                var key = type + fn.__tauid;\n                obj[\"e\" + key] = fn;\n                // TODO look at replacing with .call(..)\n                obj[key] = function () {\n                    obj[\"e\" + key] && obj[\"e\" + key](window.event);\n                };\n                obj.attachEvent(\"on\" + type, obj[key]);\n            }\n        },\n        _unbind = function (obj, type, fn) {\n            if (fn == null) return;\n            _each(obj, function () {\n                var _el = _gel(this);\n                _unstore(_el, type, fn);\n                // it has been bound if there is a tauid. otherwise it was not bound and we can ignore it.\n                if (fn.__tauid != null) {\n                    if (_el.removeEventListener) {\n                        _el.removeEventListener(type, fn, false);\n                        if (isTouchDevice && touchMap[type]) _el.removeEventListener(touchMap[type], fn, false);\n                    }\n                    else if (this.detachEvent) {\n                        var key = type + fn.__tauid;\n                        _el[key] && _el.detachEvent(\"on\" + type, _el[key]);\n                        _el[key] = null;\n                        _el[\"e\" + key] = null;\n                    }\n                }\n\n                // if a touch event was also registered, deregister now.\n                if (fn.__taTouchProxy) {\n                    _unbind(obj, fn.__taTouchProxy[1], fn.__taTouchProxy[0]);\n                }\n            });\n        },\n        _each = function (obj, fn) {\n            if (obj == null) return;\n            // if a list (or list-like), use it. if a string, get a list\n            // by running the string through querySelectorAll. else, assume\n            // it's an Element.\n            // obj.top is \"unknown\" in IE8.\n            obj = (typeof Window !== \"undefined\" && (typeof obj.top !== \"unknown\" && obj == obj.top)) ? [ obj ] :\n                    (typeof obj !== \"string\") && (obj.tagName == null && obj.length != null) ? obj :\n                    typeof obj === \"string\" ? document.querySelectorAll(obj)\n                : [ obj ];\n\n            for (var i = 0; i < obj.length; i++)\n                fn.apply(obj[i]);\n        };\n\n    /**\n     * Mottle offers support for abstracting out the differences\n     * between touch and mouse devices, plus \"smart click\" functionality\n     * (don't fire click if the mouse has moved between mousedown and mouseup),\n     * and synthesized click/tap events.\n     * @class Mottle\n     * @constructor\n     * @param {Object} params Constructor params\n     * @param {Number} [params.clickThreshold=250] Threshold, in milliseconds beyond which a touchstart followed by a touchend is not considered to be a click.\n     * @param {Number} [params.dblClickThreshold=450] Threshold, in milliseconds beyond which two successive tap events are not considered to be a click.\n     * @param {Boolean} [params.smartClicks=false] If true, won't fire click events if the mouse has moved between mousedown and mouseup. Note that this functionality\n     * requires that Mottle consume the mousedown event, and so may not be viable in all use cases.\n     */\n    root.Mottle = function (params) {\n        params = params || {};\n        var clickThreshold = params.clickThreshold || 250,\n            dblClickThreshold = params.dblClickThreshold || 450,\n            mouseEnterExitHandler = new MouseEnterExitHandler(),\n            tapHandler = new TapHandler(clickThreshold, dblClickThreshold),\n            _smartClicks = params.smartClicks,\n            _doBind = function (obj, evt, fn, children) {\n                if (fn == null) return;\n                _each(obj, function () {\n                    var _el = _gel(this);\n                    if (_smartClicks && evt === \"click\")\n                        SmartClickHandler(_el, evt, fn, children);\n                    else if (evt === \"tap\" || evt === \"dbltap\" || evt === \"contextmenu\") {\n                        tapHandler(_el, evt, fn, children);\n                    }\n                    else if (evt === \"mouseenter\" || evt == \"mouseexit\")\n                        mouseEnterExitHandler(_el, evt, fn, children);\n                    else\n                        DefaultHandler(_el, evt, fn, children);\n                });\n            };\n\n        /**\n         * Removes an element from the DOM, and deregisters all event handlers for it. You should use this\n         * to ensure you don't leak memory.\n         * @method remove\n         * @param {String|Element} el Element, or id of the element, to remove.\n         * @return {Mottle} The current Mottle instance; you can chain this method.\n         */\n        this.remove = function (el) {\n            _each(el, function () {\n                var _el = _gel(this);\n                if (_el.__ta) {\n                    for (var evt in _el.__ta) {\n                        if (_el.__ta.hasOwnProperty(evt)) {\n                            for (var h in _el.__ta[evt]) {\n                                if (_el.__ta[evt].hasOwnProperty(h))\n                                    _unbind(_el, evt, _el.__ta[evt][h]);\n                            }\n                        }\n                    }\n                }\n                _el.parentNode && _el.parentNode.removeChild(_el);\n            });\n            return this;\n        };\n\n        /**\n         * Register an event handler, optionally as a delegate for some set of descendant elements. Note\n         * that this method takes either 3 or 4 arguments - if you supply 3 arguments it is assumed you have\n         * omitted the `children` parameter, and that the event handler should be bound directly to the given element.\n         * @method on\n         * @param {Element[]|Element|String} el Either an Element, or a CSS spec for a list of elements, or an array of Elements.\n         * @param {String} [children] Comma-delimited list of selectors identifying allowed children.\n         * @param {String} event Event ID.\n         * @param {Function} fn Event handler function.\n         * @return {Mottle} The current Mottle instance; you can chain this method.\n         */\n        this.on = function (el, event, children, fn) {\n            var _el = arguments[0],\n                _c = arguments.length == 4 ? arguments[2] : null,\n                _e = arguments[1],\n                _f = arguments[arguments.length - 1];\n\n            _doBind(_el, _e, _f, _c);\n            return this;\n        };\n\n        /**\n         * Cancel delegate event handling for the given function. Note that unlike with 'on' you do not supply\n         * a list of child selectors here: it removes event delegation from all of the child selectors for which the\n         * given function was registered (if any).\n         * @method off\n         * @param {Element[]|Element|String} el Element - or ID of element - from which to remove event listener.\n         * @param {String} event Event ID.\n         * @param {Function} fn Event handler function.\n         * @return {Mottle} The current Mottle instance; you can chain this method.\n         */\n        this.off = function (el, event, fn) {\n            _unbind(el, event, fn);\n            return this;\n        };\n\n        /**\n         * Triggers some event for a given element.\n         * @method trigger\n         * @param {Element} el Element for which to trigger the event.\n         * @param {String} event Event ID.\n         * @param {Event} originalEvent The original event. Should be optional of course, but currently is not, due\n         * to the jsPlumb use case that caused this method to be added.\n         * @param {Object} [payload] Optional object to set as `payload` on the generated event; useful for message passing.\n         * @return {Mottle} The current Mottle instance; you can chain this method.\n         */\n        this.trigger = function (el, event, originalEvent, payload) {\n            // MouseEvent undefined in old IE; that's how we know it's a mouse event.  A fine Microsoft paradox.\n            var originalIsMouse = isMouseDevice && (typeof MouseEvent === \"undefined\" || originalEvent == null || originalEvent.constructor === MouseEvent);\n\n            var eventToBind = (isTouchDevice && !isMouseDevice && touchMap[event]) ? touchMap[event] : event,\n                bindingAMouseEvent = !(isTouchDevice && !isMouseDevice && touchMap[event]);\n\n            var pl = _pageLocation(originalEvent), sl = _screenLocation(originalEvent), cl = _clientLocation(originalEvent);\n            _each(el, function () {\n                var _el = _gel(this), evt;\n                originalEvent = originalEvent || {\n                    screenX: sl[0],\n                    screenY: sl[1],\n                    clientX: cl[0],\n                    clientY: cl[1]\n                };\n\n                var _decorate = function (_evt) {\n                    if (payload) _evt.payload = payload;\n                };\n\n                var eventGenerators = {\n                    \"TouchEvent\": function (evt) {\n                        var touch = document.createTouch(window, _el, 0, pl[0], pl[1],\n                            sl[0], sl[1],\n                            cl[0], cl[1],\n                            0, 0, 0, 0);\n\n                        // https://gist.github.com/sstephenson/448808\n                        var touches = document.createTouchList(touch);\n                        var targetTouches = document.createTouchList(touch);\n                        var changedTouches = document.createTouchList(touch);\n                        evt.initTouchEvent(eventToBind, true, true, window, null, sl[0], sl[1],\n                            cl[0], cl[1], false, false, false, false,\n                            touches, targetTouches, changedTouches, 1, 0);\n                    },\n                    \"MouseEvents\": function (evt) {\n                        evt.initMouseEvent(eventToBind, true, true, window, 0,\n                            sl[0], sl[1],\n                            cl[0], cl[1],\n                            false, false, false, false, 1, _el);\n\n                        if (Sniff.android) {\n                            // Android's touch events are not standard.\n                            var t = document.createTouch(window, _el, 0, pl[0], pl[1],\n                                sl[0], sl[1],\n                                cl[0], cl[1],\n                                0, 0, 0, 0);\n\n                            evt.touches = evt.targetTouches = evt.changedTouches = document.createTouchList(t);\n                        }\n                    }\n                };\n\n                if (document.createEvent) {\n\n                    var ite = !bindingAMouseEvent && !originalIsMouse && (isTouchDevice && touchMap[event] && !Sniff.android),\n                        evtName = ite ? \"TouchEvent\" : \"MouseEvents\";\n\n                    evt = document.createEvent(evtName);\n                    eventGenerators[evtName](evt);\n                    _decorate(evt);\n                    _el.dispatchEvent(evt);\n                }\n                else if (document.createEventObject) {\n                    evt = document.createEventObject();\n                    evt.eventType = evt.eventName = eventToBind;\n                    evt.screenX = sl[0];\n                    evt.screenY = sl[1];\n                    evt.clientX = cl[0];\n                    evt.clientY = cl[1];\n                    _decorate(evt);\n                    _el.fireEvent('on' + eventToBind, evt);\n                }\n            });\n            return this;\n        }\n    };\n\n    /**\n     * Static method to assist in 'consuming' an element: uses `stopPropagation` where available, or sets\n     * `e.returnValue=false` where it is not.\n     * @method Mottle.consume\n     * @param {Event} e Event to consume\n     * @param {Boolean} [doNotPreventDefault=false] If true, does not call `preventDefault()` on the event.\n     */\n    root.Mottle.consume = function (e, doNotPreventDefault) {\n        if (e.stopPropagation)\n            e.stopPropagation();\n        else\n            e.returnValue = false;\n\n        if (!doNotPreventDefault && e.preventDefault)\n            e.preventDefault();\n    };\n\n    /**\n     * Gets the page location corresponding to the given event. For touch events this means get the page location of the first touch.\n     * @method Mottle.pageLocation\n     * @param {Event} e Event to get page location for.\n     * @return {Number[]} [left, top] for the given event.\n     */\n    root.Mottle.pageLocation = _pageLocation;\n\n    /**\n     * Forces touch events to be turned \"on\". Useful for testing: even if you don't have a touch device, you can still\n     * trigger a touch event when this is switched on and it will be captured and acted on.\n     * @method setForceTouchEvents\n     * @param {Boolean} value If true, force touch events to be on.\n     */\n    root.Mottle.setForceTouchEvents = function (value) {\n        isTouchDevice = value;\n    };\n\n    /**\n     * Forces mouse events to be turned \"on\". Useful for testing: even if you don't have a mouse, you can still\n     * trigger a mouse event when this is switched on and it will be captured and acted on.\n     * @method setForceMouseEvents\n     * @param {Boolean} value If true, force mouse events to be on.\n     */\n    root.Mottle.setForceMouseEvents = function (value) {\n        isMouseDevice = value;\n    };\n\n    root.Mottle.version = \"0.8.0\";\n\n    if (true) {\n        exports.Mottle = root.Mottle;\n    }\n\n}).call(typeof window === \"undefined\" ? this : window);\n\n/**\n drag/drop functionality for use with jsPlumb but with\n no knowledge of jsPlumb. supports multiple scopes (separated by whitespace), dragging\n multiple elements, constrain to parent, drop filters, drag start filters, custom\n css classes.\n\n a lot of the functionality of this script is expected to be plugged in:\n\n addClass\n removeClass\n\n addEvent\n removeEvent\n\n getPosition\n setPosition\n getSize\n\n indexOf\n intersects\n\n the name came from here:\n\n http://mrsharpoblunto.github.io/foswig.js/\n\n copyright 2016 jsPlumb\n */\n\n;(function() {\n\n    \"use strict\";\n    var root = this;\n\n    var _suggest = function(list, item, head) {\n        if (list.indexOf(item) === -1) {\n            head ? list.unshift(item) : list.push(item);\n            return true;\n        }\n        return false;\n    };\n\n    var _vanquish = function(list, item) {\n        var idx = list.indexOf(item);\n        if (idx !== -1) list.splice(idx, 1);\n    };\n\n    var _difference = function(l1, l2) {\n        var d = [];\n        for (var i = 0; i < l1.length; i++) {\n            if (l2.indexOf(l1[i]) === -1)\n                d.push(l1[i]);\n        }\n        return d;\n    };\n\n    var _isString = function(f) {\n        return f == null ? false : (typeof f === \"string\" || f.constructor === String);\n    };\n\n    var getOffsetRect = function (elem) {\n        // (1)\n        var box = elem.getBoundingClientRect(),\n            body = document.body,\n            docElem = document.documentElement,\n        // (2)\n            scrollTop = window.pageYOffset || docElem.scrollTop || body.scrollTop,\n            scrollLeft = window.pageXOffset || docElem.scrollLeft || body.scrollLeft,\n        // (3)\n            clientTop = docElem.clientTop || body.clientTop || 0,\n            clientLeft = docElem.clientLeft || body.clientLeft || 0,\n        // (4)\n            top  = box.top +  scrollTop - clientTop,\n            left = box.left + scrollLeft - clientLeft;\n\n        return { top: Math.round(top), left: Math.round(left) };\n    };\n\n    var matchesSelector = function(el, selector, ctx) {\n        ctx = ctx || el.parentNode;\n        var possibles = ctx.querySelectorAll(selector);\n        for (var i = 0; i < possibles.length; i++) {\n            if (possibles[i] === el)\n                return true;\n        }\n        return false;\n    };\n\n    var iev = (function() {\n            var rv = -1;\n            if (navigator.appName === 'Microsoft Internet Explorer') {\n                var ua = navigator.userAgent,\n                    re = new RegExp(\"MSIE ([0-9]{1,}[\\.0-9]{0,})\");\n                if (re.exec(ua) != null)\n                    rv = parseFloat(RegExp.$1);\n            }\n            return rv;\n        })(),\n        DEFAULT_GRID_X = 10,\n        DEFAULT_GRID_Y = 10,\n        isIELT9 = iev > -1 && iev < 9,\n        isIE9 = iev === 9,\n        _pl = function(e) {\n            if (isIELT9) {\n                return [ e.clientX + document.documentElement.scrollLeft, e.clientY + document.documentElement.scrollTop ];\n            }\n            else {\n                var ts = _touches(e), t = _getTouch(ts, 0);\n                // for IE9 pageX might be null if the event was synthesized. We try for pageX/pageY first,\n                // falling back to clientX/clientY if necessary. In every other browser we want to use pageX/pageY.\n                return isIE9 ? [t.pageX || t.clientX, t.pageY || t.clientY] : [t.pageX, t.pageY];\n            }\n        },\n        _getTouch = function(touches, idx) { return touches.item ? touches.item(idx) : touches[idx]; },\n        _touches = function(e) {\n            return e.touches && e.touches.length > 0 ? e.touches :\n                    e.changedTouches && e.changedTouches.length > 0 ? e.changedTouches :\n                    e.targetTouches && e.targetTouches.length > 0 ? e.targetTouches :\n                [ e ];\n        },\n        _classes = {\n            draggable:\"katavorio-draggable\",    // draggable elements\n            droppable:\"katavorio-droppable\",    // droppable elements\n            drag : \"katavorio-drag\",            // elements currently being dragged\n            selected:\"katavorio-drag-selected\", // elements in current drag selection\n            active : \"katavorio-drag-active\",   // droppables that are targets of a currently dragged element\n            hover : \"katavorio-drag-hover\",     // droppables over which a matching drag element is hovering\n            noSelect : \"katavorio-drag-no-select\", // added to the body to provide a hook to suppress text selection\n            ghostProxy:\"katavorio-ghost-proxy\",  // added to a ghost proxy element in use when a drag has exited the bounds of its parent.\n            clonedDrag:\"katavorio-clone-drag\"     // added to a node that is a clone of an element created at the start of a drag\n        },\n        _defaultScope = \"katavorio-drag-scope\",\n        _events = [ \"stop\", \"start\", \"drag\", \"drop\", \"over\", \"out\", \"beforeStart\" ],\n        _devNull = function() {},\n        _true = function() { return true; },\n        _foreach = function(l, fn, from) {\n            for (var i = 0; i < l.length; i++) {\n                if (l[i] != from)\n                    fn(l[i]);\n            }\n        },\n        _setDroppablesActive = function(dd, val, andHover, drag) {\n            _foreach(dd, function(e) {\n                e.setActive(val);\n                if (val) e.updatePosition();\n                if (andHover) e.setHover(drag, val);\n            });\n        },\n        _each = function(obj, fn) {\n            if (obj == null) return;\n            obj = !_isString(obj) && (obj.tagName == null && obj.length != null) ? obj : [ obj ];\n            for (var i = 0; i < obj.length; i++)\n                fn.apply(obj[i], [ obj[i] ]);\n        },\n        _consume = function(e) {\n            if (e.stopPropagation) {\n                e.stopPropagation();\n                e.preventDefault();\n            }\n            else {\n                e.returnValue = false;\n            }\n        },\n        _defaultInputFilterSelector = \"input,textarea,select,button,option\",\n    //\n    // filters out events on all input elements, like textarea, checkbox, input, select.\n        _inputFilter = function(e, el, _katavorio) {\n            var t = e.srcElement || e.target;\n            return !matchesSelector(t, _katavorio.getInputFilterSelector(), el);\n        };\n\n    var Super = function(el, params, css, scope) {\n        this.params = params || {};\n        this.el = el;\n        this.params.addClass(this.el, this._class);\n        this.uuid = _uuid();\n        var enabled = true;\n        this.setEnabled = function(e) { enabled = e; };\n        this.isEnabled = function() { return enabled; };\n        this.toggleEnabled = function() { enabled = !enabled; };\n        this.setScope = function(scopes) {\n            this.scopes = scopes ? scopes.split(/\\s+/) : [ scope ];\n        };\n        this.addScope = function(scopes) {\n            var m = {};\n            _each(this.scopes, function(s) { m[s] = true;});\n            _each(scopes ? scopes.split(/\\s+/) : [], function(s) { m[s] = true;});\n            this.scopes = [];\n            for (var i in m) this.scopes.push(i);\n        };\n        this.removeScope = function(scopes) {\n            var m = {};\n            _each(this.scopes, function(s) { m[s] = true;});\n            _each(scopes ? scopes.split(/\\s+/) : [], function(s) { delete m[s];});\n            this.scopes = [];\n            for (var i in m) this.scopes.push(i);\n        };\n        this.toggleScope = function(scopes) {\n            var m = {};\n            _each(this.scopes, function(s) { m[s] = true;});\n            _each(scopes ? scopes.split(/\\s+/) : [], function(s) {\n                if (m[s]) delete m[s];\n                else m[s] = true;\n            });\n            this.scopes = [];\n            for (var i in m) this.scopes.push(i);\n        };\n        this.setScope(params.scope);\n        this.k = params.katavorio;\n        return params.katavorio;\n    };\n\n    var TRUE = function() { return true; };\n    var FALSE = function() { return false; };\n\n    var Drag = function(el, params, css, scope) {\n        this._class = css.draggable;\n        var k = Super.apply(this, arguments);\n        this.rightButtonCanDrag = this.params.rightButtonCanDrag;\n        var downAt = [0,0], posAtDown = null, pagePosAtDown = null, pageDelta = [0,0], moving = false,\n            consumeStartEvent = this.params.consumeStartEvent !== false,\n            dragEl = this.el,\n            clone = this.params.clone,\n            scroll = this.params.scroll,\n            _multipleDrop = params.multipleDrop !== false,\n            isConstrained = false,\n            useGhostProxy = params.ghostProxy === true ? TRUE : params.ghostProxy && typeof params.ghostProxy === \"function\" ? params.ghostProxy : FALSE,\n            ghostProxy = function(el) { return el.cloneNode(true); };\n\n        var snapThreshold = params.snapThreshold,\n            _snap = function(pos, gridX, gridY, thresholdX, thresholdY) {\n                var _dx = Math.floor(pos[0] / gridX),\n                    _dxl = gridX * _dx,\n                    _dxt = _dxl + gridX,\n                    _x = Math.abs(pos[0] - _dxl) <= thresholdX ? _dxl : Math.abs(_dxt - pos[0]) <= thresholdX ? _dxt : pos[0];\n\n                var _dy = Math.floor(pos[1] / gridY),\n                    _dyl = gridY * _dy,\n                    _dyt = _dyl + gridY,\n                    _y = Math.abs(pos[1] - _dyl) <= thresholdY ? _dyl : Math.abs(_dyt - pos[1]) <= thresholdY ? _dyt : pos[1];\n\n                return [ _x, _y];\n            };\n\n        this.posses = [];\n        this.posseRoles = {};\n\n        this.toGrid = function(pos) {\n            if (this.params.grid == null) {\n                return pos;\n            }\n            else {\n                var tx = this.params.grid ? this.params.grid[0] / 2 : snapThreshold ? snapThreshold : DEFAULT_GRID_X / 2,\n                    ty = this.params.grid ? this.params.grid[1] / 2 : snapThreshold ? snapThreshold : DEFAULT_GRID_Y / 2;\n\n                return _snap(pos, this.params.grid[0], this.params.grid[1], tx, ty);\n            }\n        };\n\n        this.snap = function(x, y) {\n            if (dragEl == null) return;\n            x = x || (this.params.grid ? this.params.grid[0] : DEFAULT_GRID_X);\n            y = y || (this.params.grid ? this.params.grid[1] : DEFAULT_GRID_Y);\n            var p = this.params.getPosition(dragEl),\n                tx = this.params.grid ? this.params.grid[0] / 2 : snapThreshold,\n                ty = this.params.grid ? this.params.grid[1] / 2 : snapThreshold;\n\n            this.params.setPosition(dragEl, _snap(p, x, y, tx, ty));\n        };\n\n        this.setUseGhostProxy = function(val) {\n            useGhostProxy = val ? TRUE : FALSE;\n        };\n\n        var constrain;\n        var negativeFilter = function(pos) {\n            return (params.allowNegative === false) ? [ Math.max (0, pos[0]), Math.max(0, pos[1]) ] : pos;\n        };\n\n        var _setConstrain = function(value) {\n            constrain = typeof value === \"function\" ? value : value ? function(pos, dragEl, _constrainRect, _size) {\n                return negativeFilter([\n                    Math.max(0, Math.min(_constrainRect.w - _size[0], pos[0])),\n                    Math.max(0, Math.min(_constrainRect.h - _size[1], pos[1]))\n                ]);\n            }.bind(this) : function(pos) { return negativeFilter(pos); };\n        }.bind(this);\n\n        _setConstrain(typeof this.params.constrain === \"function\" ? this.params.constrain  : (this.params.constrain || this.params.containment));\n\n\n        /**\n         * Sets whether or not the Drag is constrained. A value of 'true' means constrain to parent bounds; a function\n         * will be executed and returns true if the position is allowed.\n         * @param value\n         */\n        this.setConstrain = function(value) {\n            _setConstrain(value);\n        };\n\n        var revertFunction;\n        /**\n         * Sets a function to call on drag stop, which, if it returns true, indicates that the given element should\n         * revert to its position before the previous drag.\n         * @param fn\n         */\n        this.setRevert = function(fn) {\n            revertFunction = fn;\n        };\n\n        var _assignId = function(obj) {\n                if (typeof obj === \"function\") {\n                    obj._katavorioId = _uuid();\n                    return obj._katavorioId;\n                } else {\n                    return obj;\n                }\n            },\n        // a map of { spec -> [ fn, exclusion ] } entries.\n            _filters = {},\n            _testFilter = function(e) {\n                for (var key in _filters) {\n                    var f = _filters[key];\n                    var rv = f[0](e);\n                    if (f[1]) rv = !rv;\n                    if (!rv) return false;\n                }\n                return true;\n            },\n            _setFilter = this.setFilter = function(f, _exclude) {\n                if (f) {\n                    var key = _assignId(f);\n                    _filters[key] = [\n                        function(e) {\n                            var t = e.srcElement || e.target, m;\n                            if (_isString(f)) {\n                                m = matchesSelector(t, f, el);\n                            }\n                            else if (typeof f === \"function\") {\n                                m = f(e, el);\n                            }\n                            return m;\n                        },\n                            _exclude !== false\n                    ];\n\n                }\n            },\n            _addFilter = this.addFilter = _setFilter,\n            _removeFilter = this.removeFilter = function(f) {\n                var key = typeof f === \"function\" ? f._katavorioId : f;\n                delete _filters[key];\n            };\n\n        this.clearAllFilters = function() {\n            _filters = {};\n        };\n\n        this.canDrag = this.params.canDrag || _true;\n\n        var constrainRect,\n            matchingDroppables = [],\n            intersectingDroppables = [];\n\n        this.downListener = function(e) {\n            var isNotRightClick = this.rightButtonCanDrag || (e.which !== 3 && e.button !== 2);\n            if (isNotRightClick && this.isEnabled() && this.canDrag()) {\n                var _f =  _testFilter(e) && _inputFilter(e, this.el, this.k);\n                if (_f) {\n                    if (!clone)\n                        dragEl = this.el;\n                    else {\n                        dragEl = this.el.cloneNode(true);\n                        this.params.addClass(dragEl, _classes.clonedDrag);\n\n                        dragEl.setAttribute(\"id\", null);\n                        dragEl.style.position = \"absolute\";\n\n                        if (this.params.parent != null) {\n                            var p = this.params.getPosition(this.el);\n                            dragEl.style.left = p[0] + \"px\";\n                            dragEl.style.top = p[1] + \"px\";\n                            this.params.parent.appendChild(dragEl);\n                        } else {\n                            // the clone node is added to the body; getOffsetRect gives us a value\n                            // relative to the body.\n                            var b = getOffsetRect(this.el);\n                            dragEl.style.left = b.left + \"px\";\n                            dragEl.style.top = b.top + \"px\";\n\n                            document.body.appendChild(dragEl);\n                        }\n\n                    }\n                    consumeStartEvent && _consume(e);\n                    downAt = _pl(e);\n                    //\n                    this.params.bind(document, \"mousemove\", this.moveListener);\n                    this.params.bind(document, \"mouseup\", this.upListener);\n                    k.markSelection(this);\n                    k.markPosses(this);\n                    this.params.addClass(document.body, css.noSelect);\n                    _dispatch(\"beforeStart\", {el:this.el, pos:posAtDown, e:e, drag:this});\n                }\n                else if (this.params.consumeFilteredEvents) {\n                    _consume(e);\n                }\n            }\n        }.bind(this);\n\n        this.moveListener = function(e) {\n            if (downAt) {\n                if (!moving) {\n                    var _continue = _dispatch(\"start\", {el:this.el, pos:posAtDown, e:e, drag:this});\n                    if (_continue !== false) {\n                        if (!downAt) {\n                            return;\n                        }\n                        this.mark(true);\n                        moving = true;\n                    } else {\n                        this.abort();\n                    }\n                }\n\n                // it is possible that the start event caused the drag to be aborted. So we check\n                // again that we are currently dragging.\n                if (downAt) {\n                    intersectingDroppables.length = 0;\n                    var pos = _pl(e), dx = pos[0] - downAt[0], dy = pos[1] - downAt[1],\n                        z = this.params.ignoreZoom ? 1 : k.getZoom();\n                    dx /= z;\n                    dy /= z;\n                    this.moveBy(dx, dy, e);\n                    k.updateSelection(dx, dy, this);\n                    k.updatePosses(dx, dy, this);\n                }\n            }\n        }.bind(this);\n\n        this.upListener = function(e) {\n            if (downAt) {\n                downAt = null;\n                this.params.unbind(document, \"mousemove\", this.moveListener);\n                this.params.unbind(document, \"mouseup\", this.upListener);\n                this.params.removeClass(document.body, css.noSelect);\n                this.unmark(e);\n                k.unmarkSelection(this, e);\n                k.unmarkPosses(this, e);\n                this.stop(e);\n                k.notifySelectionDragStop(this, e);\n                k.notifyPosseDragStop(this, e);\n                moving = false;\n                if (clone) {\n                    dragEl && dragEl.parentNode && dragEl.parentNode.removeChild(dragEl);\n                    dragEl = null;\n                }\n\n                intersectingDroppables.length = 0;\n\n                if (revertFunction && revertFunction(this.el, this.params.getPosition(this.el)) === true) {\n                    this.params.setPosition(this.el, posAtDown);\n                    _dispatch(\"revert\", this.el);\n                }\n            }\n        }.bind(this);\n\n        this.getFilters = function() { return _filters; };\n\n        this.abort = function() {\n            if (downAt != null)\n                this.upListener();\n        };\n\n        this.getDragElement = function() {\n            return dragEl || this.el;\n        };\n\n        var listeners = {\"start\":[], \"drag\":[], \"stop\":[], \"over\":[], \"out\":[], \"beforeStart\":[], \"revert\":[] };\n        if (params.events.start) listeners.start.push(params.events.start);\n        if (params.events.beforeStart) listeners.beforeStart.push(params.events.beforeStart);\n        if (params.events.stop) listeners.stop.push(params.events.stop);\n        if (params.events.drag) listeners.drag.push(params.events.drag);\n        if (params.events.revert) listeners.revert.push(params.events.revert);\n\n        this.on = function(evt, fn) {\n            if (listeners[evt]) listeners[evt].push(fn);\n        };\n\n        this.off = function(evt, fn) {\n            if (listeners[evt]) {\n                var l = [];\n                for (var i = 0; i < listeners[evt].length; i++) {\n                    if (listeners[evt][i] !== fn) l.push(listeners[evt][i]);\n                }\n                listeners[evt] = l;\n            }\n        };\n\n        var _dispatch = function(evt, value) {\n            var result = null;\n            if (listeners[evt]) {\n                for (var i = 0; i < listeners[evt].length; i++) {\n                    try {\n                        var v = listeners[evt][i](value);\n                        if (v != null) {\n                            result = v;\n                        }\n                    }\n                    catch (e) { }\n                }\n            }\n            return result;\n        };\n\n        this.notifyStart = function(e) {\n            _dispatch(\"start\", {el:this.el, pos:this.params.getPosition(dragEl), e:e, drag:this});\n        };\n\n        this.stop = function(e, force) {\n            if (force || moving) {\n                var positions = [],\n                    sel = k.getSelection(),\n                    dPos = this.params.getPosition(dragEl);\n\n                if (sel.length > 1) {\n                    for (var i = 0; i < sel.length; i++) {\n                        var p = this.params.getPosition(sel[i].el);\n                        positions.push([ sel[i].el, { left: p[0], top: p[1] }, sel[i] ]);\n                    }\n                }\n                else {\n                    positions.push([ dragEl, {left:dPos[0], top:dPos[1]}, this ]);\n                }\n\n                _dispatch(\"stop\", {\n                    el: dragEl,\n                    pos: ghostProxyOffsets || dPos,\n                    finalPos:dPos,\n                    e: e,\n                    drag: this,\n                    selection:positions\n                });\n            }\n        };\n\n        this.mark = function(andNotify) {\n            posAtDown = this.params.getPosition(dragEl);\n            pagePosAtDown = this.params.getPosition(dragEl, true);\n            pageDelta = [pagePosAtDown[0] - posAtDown[0], pagePosAtDown[1] - posAtDown[1]];\n            this.size = this.params.getSize(dragEl);\n            matchingDroppables = k.getMatchingDroppables(this);\n            _setDroppablesActive(matchingDroppables, true, false, this);\n            this.params.addClass(dragEl, this.params.dragClass || css.drag);\n\n            var cs;\n            if (this.params.getConstrainingRectangle) {\n                cs = this.params.getConstrainingRectangle(dragEl)\n            } else {\n                cs = this.params.getSize(dragEl.parentNode);\n            }\n            constrainRect = {w: cs[0], h: cs[1]};\n\n            if (andNotify) {\n                k.notifySelectionDragStart(this);\n            }\n        };\n        var ghostProxyOffsets;\n        this.unmark = function(e, doNotCheckDroppables) {\n            _setDroppablesActive(matchingDroppables, false, true, this);\n\n            if (isConstrained && useGhostProxy(this.el)) {\n                ghostProxyOffsets = [dragEl.offsetLeft, dragEl.offsetTop];\n                this.el.parentNode.removeChild(dragEl);\n                dragEl = this.el;\n            }\n            else {\n                ghostProxyOffsets = null;\n            }\n\n            this.params.removeClass(dragEl, this.params.dragClass || css.drag);\n            matchingDroppables.length = 0;\n            isConstrained = false;\n            if (!doNotCheckDroppables) {\n                if (intersectingDroppables.length > 0 && ghostProxyOffsets) {\n                    params.setPosition(this.el, ghostProxyOffsets);\n                }\n                intersectingDroppables.sort(_rankSort);\n                for (var i = 0; i < intersectingDroppables.length; i++) {\n                    var retVal = intersectingDroppables[i].drop(this, e);\n                    if (retVal === true) break;\n                }\n            }\n        };\n        this.moveBy = function(dx, dy, e) {\n            intersectingDroppables.length = 0;\n            var desiredLoc = this.toGrid([posAtDown[0] + dx, posAtDown[1] + dy]),\n                cPos = constrain(desiredLoc, dragEl, constrainRect, this.size);\n\n            if (useGhostProxy(this.el)) {\n                if (desiredLoc[0] !== cPos[0] || desiredLoc[1] !== cPos[1]) {\n                    if (!isConstrained) {\n                        var gp = ghostProxy(this.el);\n                        params.addClass(gp, _classes.ghostProxy);\n                        this.el.parentNode.appendChild(gp);\n                        dragEl = gp;\n                        isConstrained = true;\n                    }\n                    cPos = desiredLoc;\n                }\n                else {\n                    if (isConstrained) {\n                        this.el.parentNode.removeChild(dragEl);\n                        dragEl = this.el;\n                        isConstrained = false;\n                    }\n                }\n            }\n\n            var rect = { x:cPos[0], y:cPos[1], w:this.size[0], h:this.size[1]},\n                pageRect = { x:rect.x + pageDelta[0], y:rect.y + pageDelta[1], w:rect.w, h:rect.h},\n                focusDropElement = null;\n\n            this.params.setPosition(dragEl, cPos);\n            for (var i = 0; i < matchingDroppables.length; i++) {\n                var r2 = { x:matchingDroppables[i].pagePosition[0], y:matchingDroppables[i].pagePosition[1], w:matchingDroppables[i].size[0], h:matchingDroppables[i].size[1]};\n                if (this.params.intersects(pageRect, r2) && (_multipleDrop || focusDropElement == null || focusDropElement === matchingDroppables[i].el) && matchingDroppables[i].canDrop(this)) {\n                    if (!focusDropElement) focusDropElement = matchingDroppables[i].el;\n                    intersectingDroppables.push(matchingDroppables[i]);\n                    matchingDroppables[i].setHover(this, true, e);\n                }\n                else if (matchingDroppables[i].isHover()) {\n                    matchingDroppables[i].setHover(this, false, e);\n                }\n            }\n\n            _dispatch(\"drag\", {el:this.el, pos:cPos, e:e, drag:this});\n\n            /* test to see if the parent needs to be scrolled (future)\n             if (scroll) {\n             var pnsl = dragEl.parentNode.scrollLeft, pnst = dragEl.parentNode.scrollTop;\n             console.log(\"scroll!\", pnsl, pnst);\n             }*/\n        };\n        this.destroy = function() {\n            this.params.unbind(this.el, \"mousedown\", this.downListener);\n            this.params.unbind(document, \"mousemove\", this.moveListener);\n            this.params.unbind(document, \"mouseup\", this.upListener);\n            this.downListener = null;\n            this.upListener = null;\n            this.moveListener = null;\n        };\n\n        // init:register mousedown, and perhaps set a filter\n        this.params.bind(this.el, \"mousedown\", this.downListener);\n\n        // if handle provded, use that.  otherwise, try to set a filter.\n        // note that a `handle` selector always results in filterExclude being set to false, ie.\n        // the selector defines the handle element(s).\n        if (this.params.handle)\n            _setFilter(this.params.handle, false);\n        else\n            _setFilter(this.params.filter, this.params.filterExclude);\n    };\n\n    var Drop = function(el, params, css, scope) {\n        this._class = css.droppable;\n        this.params = params || {};\n        this.rank = params.rank || 0;\n        this._activeClass = this.params.activeClass || css.active;\n        this._hoverClass = this.params.hoverClass || css.hover;\n        Super.apply(this, arguments);\n        var hover = false;\n        this.allowLoopback = this.params.allowLoopback !== false;\n\n        this.setActive = function(val) {\n            this.params[val ? \"addClass\" : \"removeClass\"](this.el, this._activeClass);\n        };\n\n        this.updatePosition = function() {\n            this.position = this.params.getPosition(this.el);\n            this.pagePosition = this.params.getPosition(this.el, true);\n            this.size = this.params.getSize(this.el);\n        };\n\n        this.canDrop = this.params.canDrop || function(drag) {\n            return true;\n        };\n\n        this.isHover = function() { return hover; };\n\n        this.setHover = function(drag, val, e) {\n            // if turning off hover but this was not the drag that caused the hover, ignore.\n            if (val || this.el._katavorioDragHover == null || this.el._katavorioDragHover === drag.el._katavorio) {\n                this.params[val ? \"addClass\" : \"removeClass\"](this.el, this._hoverClass);\n                //this.el._katavorioDragHover = val ? drag.el._katavorio : null;\n                this.el._katavorioDragHover = val ? drag.el._katavorio : null;\n                if (hover !== val)\n                    this.params.events[val ? \"over\" : \"out\"]({el:this.el, e:e, drag:drag, drop:this});\n                hover = val;\n            }\n        };\n\n        this.drop = function(drag, event) {\n            return this.params.events[\"drop\"]({ drag:drag, e:event, drop:this });\n        };\n\n        this.destroy = function() {\n            this._class = null;\n            this._activeClass = null;\n            this._hoverClass = null;\n            //this.params = null;\n            hover = null;\n            //this.el = null;\n        };\n    };\n\n    var _uuid = function() {\n        return ('xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n            var r = Math.random()*16|0, v = c === 'x' ? r : (r&0x3|0x8);\n            return v.toString(16);\n        }));\n    };\n\n    var _rankSort = function(a,b) {\n        return a.rank < b.rank ? 1 : a.rank > b.rank ? -1 : 0;\n    };\n\n    var _gel = function(el) {\n        if (el == null) return null;\n        el = (typeof el === \"string\" || el.constructor === String)  ? document.getElementById(el) : el;\n        if (el == null) return null;\n        el._katavorio = el._katavorio || _uuid();\n        return el;\n    };\n\n    root.Katavorio = function(katavorioParams) {\n\n        var _selection = [],\n            _selectionMap = {};\n\n        this._dragsByScope = {};\n        this._dropsByScope = {};\n        var _zoom = 1,\n            _reg = function(obj, map) {\n                _each(obj, function(_obj) {\n                    for(var i = 0; i < _obj.scopes.length; i++) {\n                        map[_obj.scopes[i]] = map[_obj.scopes[i]] || [];\n                        map[_obj.scopes[i]].push(_obj);\n                    }\n                });\n            },\n            _unreg = function(obj, map) {\n                var c = 0;\n                _each(obj, function(_obj) {\n                    for(var i = 0; i < _obj.scopes.length; i++) {\n                        if (map[_obj.scopes[i]]) {\n                            var idx = katavorioParams.indexOf(map[_obj.scopes[i]], _obj);\n                            if (idx !== -1) {\n                                map[_obj.scopes[i]].splice(idx, 1);\n                                c++;\n                            }\n                        }\n                    }\n                });\n\n                return c > 0 ;\n            },\n            _getMatchingDroppables = this.getMatchingDroppables = function(drag) {\n                var dd = [], _m = {};\n                for (var i = 0; i < drag.scopes.length; i++) {\n                    var _dd = this._dropsByScope[drag.scopes[i]];\n                    if (_dd) {\n                        for (var j = 0; j < _dd.length; j++) {\n                            if (_dd[j].canDrop(drag) &&  !_m[_dd[j].uuid] && (_dd[j].allowLoopback || _dd[j].el !== drag.el)) {\n                                _m[_dd[j].uuid] = true;\n                                dd.push(_dd[j]);\n                            }\n                        }\n                    }\n                }\n                dd.sort(_rankSort);\n                return dd;\n            },\n            _prepareParams = function(p) {\n                p = p || {};\n                var _p = {\n                    events:{}\n                }, i;\n                for (i in katavorioParams) _p[i] = katavorioParams[i];\n                for (i in p) _p[i] = p[i];\n                // events\n\n                for (i = 0; i < _events.length; i++) {\n                    _p.events[_events[i]] = p[_events[i]] || _devNull;\n                }\n                _p.katavorio = this;\n                return _p;\n            }.bind(this),\n            _mistletoe = function(existingDrag, params) {\n                for (var i = 0; i < _events.length; i++) {\n                    if (params[_events[i]]) {\n                        existingDrag.on(_events[i], params[_events[i]]);\n                    }\n                }\n            }.bind(this),\n            _css = {},\n            overrideCss = katavorioParams.css || {},\n            _scope = katavorioParams.scope || _defaultScope;\n\n        // prepare map of css classes based on defaults frst, then optional overrides\n        for (var i in _classes) _css[i] = _classes[i];\n        for (var i in overrideCss) _css[i] = overrideCss[i];\n\n        var inputFilterSelector = katavorioParams.inputFilterSelector || _defaultInputFilterSelector;\n        /**\n         * Gets the selector identifying which input elements to filter from drag events.\n         * @method getInputFilterSelector\n         * @return {String} Current input filter selector.\n         */\n        this.getInputFilterSelector = function() { return inputFilterSelector; };\n\n        /**\n         * Sets the selector identifying which input elements to filter from drag events.\n         * @method setInputFilterSelector\n         * @param {String} selector Input filter selector to set.\n         * @return {Katavorio} Current instance; method may be chained.\n         */\n        this.setInputFilterSelector = function(selector) {\n            inputFilterSelector = selector;\n            return this;\n        };\n\n        this.draggable = function(el, params) {\n            var o = [];\n            _each(el, function(_el) {\n                _el = _gel(_el);\n                if (_el != null) {\n                    if (_el._katavorioDrag == null) {\n                        var p = _prepareParams(params);\n                        _el._katavorioDrag = new Drag(_el, p, _css, _scope);\n                        _reg(_el._katavorioDrag, this._dragsByScope);\n                        o.push(_el._katavorioDrag);\n                        katavorioParams.addClass(_el, _css.draggable);\n                    }\n                    else {\n                        _mistletoe(_el._katavorioDrag, params);\n                    }\n                }\n            }.bind(this));\n            return o;\n\n        };\n\n        this.droppable = function(el, params) {\n            var o = [];\n            _each(el, function(_el) {\n                _el = _gel(_el);\n                if (_el != null) {\n                    var drop = new Drop(_el, _prepareParams(params), _css, _scope);\n                    _el._katavorioDrop = _el._katavorioDrop || [];\n                    _el._katavorioDrop.push(drop);\n                    _reg(drop, this._dropsByScope);\n                    o.push(drop);\n                    katavorioParams.addClass(_el, _css.droppable);\n                }\n            }.bind(this));\n            return o;\n        };\n\n        /**\n         * @name Katavorio#select\n         * @function\n         * @desc Adds an element to the current selection (for multiple node drag)\n         * @param {Element|String} DOM element - or id of the element - to add.\n         */\n        this.select = function(el) {\n            _each(el, function() {\n                var _el = _gel(this);\n                if (_el && _el._katavorioDrag) {\n                    if (!_selectionMap[_el._katavorio]) {\n                        _selection.push(_el._katavorioDrag);\n                        _selectionMap[_el._katavorio] = [ _el, _selection.length - 1 ];\n                        katavorioParams.addClass(_el, _css.selected);\n                    }\n                }\n            });\n            return this;\n        };\n\n        /**\n         * @name Katavorio#deselect\n         * @function\n         * @desc Removes an element from the current selection (for multiple node drag)\n         * @param {Element|String} DOM element - or id of the element - to remove.\n         */\n        this.deselect = function(el) {\n            _each(el, function() {\n                var _el = _gel(this);\n                if (_el && _el._katavorio) {\n                    var e = _selectionMap[_el._katavorio];\n                    if (e) {\n                        var _s = [];\n                        for (var i = 0; i < _selection.length; i++)\n                            if (_selection[i].el !== _el) _s.push(_selection[i]);\n                        _selection = _s;\n                        delete _selectionMap[_el._katavorio];\n                        katavorioParams.removeClass(_el, _css.selected);\n                    }\n                }\n            });\n            return this;\n        };\n\n        this.deselectAll = function() {\n            for (var i in _selectionMap) {\n                var d = _selectionMap[i];\n                katavorioParams.removeClass(d[0], _css.selected);\n            }\n\n            _selection.length = 0;\n            _selectionMap = {};\n        };\n\n        this.markSelection = function(drag) {\n            _foreach(_selection, function(e) { e.mark(); }, drag);\n        };\n\n        this.markPosses = function(drag) {\n            if (drag.posses) {\n                _each(drag.posses, function(p) {\n                    if (drag.posseRoles[p] && _posses[p]) {\n                        _foreach(_posses[p].members, function (d) {\n                            d.mark();\n                        }, drag);\n                    }\n                })\n            }\n        };\n\n        this.unmarkSelection = function(drag, event) {\n            _foreach(_selection, function(e) { e.unmark(event); }, drag);\n        };\n\n        this.unmarkPosses = function(drag, event) {\n            if (drag.posses) {\n                _each(drag.posses, function(p) {\n                    if (drag.posseRoles[p] && _posses[p]) {\n                        _foreach(_posses[p].members, function (d) {\n                            d.unmark(event, true);\n                        }, drag);\n                    }\n                });\n            }\n        };\n\n        this.getSelection = function() { return _selection.slice(0); };\n\n        this.updateSelection = function(dx, dy, drag) {\n            _foreach(_selection, function(e) { e.moveBy(dx, dy); }, drag);\n        };\n\n        var _posseAction = function(fn, drag) {\n            if (drag.posses) {\n                _each(drag.posses, function(p) {\n                    if (drag.posseRoles[p] && _posses[p]) {\n                        _foreach(_posses[p].members, function (e) {\n                            fn(e);\n                        }, drag);\n                    }\n                });\n            }\n        };\n\n        this.updatePosses = function(dx, dy, drag) {\n            _posseAction(function(e) { e.moveBy(dx, dy); }, drag);\n        };\n\n        this.notifyPosseDragStop = function(drag, evt) {\n            _posseAction(function(e) { e.stop(evt, true); }, drag);\n        };\n\n        this.notifySelectionDragStop = function(drag, evt) {\n            _foreach(_selection, function(e) { e.stop(evt, true); }, drag);\n        };\n\n        this.notifySelectionDragStart = function(drag, evt) {\n            _foreach(_selection, function(e) { e.notifyStart(evt);}, drag);\n        };\n\n        this.setZoom = function(z) { _zoom = z; };\n        this.getZoom = function() { return _zoom; };\n\n        // does the work of changing scopes\n        var _scopeManip = function(kObj, scopes, map, fn) {\n            _each(kObj, function(_kObj) {\n                _unreg(_kObj, map);  // deregister existing scopes\n                _kObj[fn](scopes); // set scopes\n                _reg(_kObj, map); // register new ones\n            });\n        };\n\n        _each([ \"set\", \"add\", \"remove\", \"toggle\"], function(v) {\n            this[v + \"Scope\"] = function(el, scopes) {\n                _scopeManip(el._katavorioDrag, scopes, this._dragsByScope, v + \"Scope\");\n                _scopeManip(el._katavorioDrop, scopes, this._dropsByScope, v + \"Scope\");\n            }.bind(this);\n            this[v + \"DragScope\"] = function(el, scopes) {\n                _scopeManip(el.constructor === Drag ? el : el._katavorioDrag, scopes, this._dragsByScope, v + \"Scope\");\n            }.bind(this);\n            this[v + \"DropScope\"] = function(el, scopes) {\n                _scopeManip(el.constructor === Drop ? el : el._katavorioDrop, scopes, this._dropsByScope, v + \"Scope\");\n            }.bind(this);\n        }.bind(this));\n\n        this.snapToGrid = function(x, y) {\n            for (var s in this._dragsByScope) {\n                _foreach(this._dragsByScope[s], function(d) { d.snap(x, y); });\n            }\n        };\n\n        this.getDragsForScope = function(s) { return this._dragsByScope[s]; };\n        this.getDropsForScope = function(s) { return this._dropsByScope[s]; };\n\n        var _destroy = function(el, type, map) {\n            el = _gel(el);\n            if (el[type]) {\n\n                // remove from selection, if present.\n                var selIdx = _selection.indexOf(el[type]);\n                if (selIdx >= 0) {\n                    _selection.splice(selIdx, 1);\n                }\n\n                if (_unreg(el[type], map)) {\n                    _each(el[type], function(kObj) { kObj.destroy() });\n                }\n\n                delete el[type];\n            }\n        };\n\n        var _removeListener = function(el, type, evt, fn) {\n            el = _gel(el);\n            if (el[type]) {\n                el[type].off(evt, fn);\n            }\n        };\n\n        this.elementRemoved = function(el) {\n            this.destroyDraggable(el);\n            this.destroyDroppable(el);\n        };\n\n        /**\n         * Either completely remove drag functionality from the given element, or remove a specific event handler. If you\n         * call this method with a single argument - the element - all drag functionality is removed from it. Otherwise, if\n         * you provide an event name and listener function, this function is de-registered (if found).\n         * @param el Element to update\n         * @param {string} [evt] Optional event name to unsubscribe\n         * @param {Function} [fn] Optional function to unsubscribe\n         */\n        this.destroyDraggable = function(el, evt, fn) {\n            if (arguments.length === 1) {\n                _destroy(el, \"_katavorioDrag\", this._dragsByScope);\n            } else {\n                _removeListener(el, \"_katavorioDrag\", evt, fn);\n            }\n        };\n\n        /**\n         * Either completely remove drop functionality from the given element, or remove a specific event handler. If you\n         * call this method with a single argument - the element - all drop functionality is removed from it. Otherwise, if\n         * you provide an event name and listener function, this function is de-registered (if found).\n         * @param el Element to update\n         * @param {string} [evt] Optional event name to unsubscribe\n         * @param {Function} [fn] Optional function to unsubscribe\n         */\n        this.destroyDroppable = function(el, evt, fn) {\n            if (arguments.length === 1) {\n                _destroy(el, \"_katavorioDrop\", this._dropsByScope);\n            } else {\n                _removeListener(el, \"_katavorioDrop\", evt, fn);\n            }\n        };\n\n        this.reset = function() {\n            this._dragsByScope = {};\n            this._dropsByScope = {};\n            _selection = [];\n            _selectionMap = {};\n            _posses = {};\n        };\n\n        // ----- groups\n        var _posses = {};\n\n        var _processOneSpec = function(el, _spec, dontAddExisting) {\n            var posseId = _isString(_spec) ? _spec : _spec.id;\n            var active = _isString(_spec) ? true : _spec.active !== false;\n            var posse = _posses[posseId] || (function() {\n                var g = {name:posseId, members:[]};\n                _posses[posseId] = g;\n                return g;\n            })();\n            _each(el, function(_el) {\n                if (_el._katavorioDrag) {\n\n                    if (dontAddExisting && _el._katavorioDrag.posseRoles[posse.name] != null) return;\n\n                    _suggest(posse.members, _el._katavorioDrag);\n                    _suggest(_el._katavorioDrag.posses, posse.name);\n                    _el._katavorioDrag.posseRoles[posse.name] = active;\n                }\n            });\n            return posse;\n        };\n\n        /**\n         * Add the given element to the posse with the given id, creating the group if it at first does not exist.\n         * @method addToPosse\n         * @param {Element} el Element to add.\n         * @param {String...|Object...} spec Variable args parameters. Each argument can be a either a String, indicating\n         * the ID of a Posse to which the element should be added as an active participant, or an Object containing\n         * `{ id:\"posseId\", active:false/true}`. In the latter case, if `active` is not provided it is assumed to be\n         * true.\n         * @returns {Posse|Posse[]} The Posse(s) to which the element(s) was/were added.\n         */\n        this.addToPosse = function(el, spec) {\n\n            var posses = [];\n\n            for (var i = 1; i < arguments.length; i++) {\n                posses.push(_processOneSpec(el, arguments[i]));\n            }\n\n            return posses.length === 1 ? posses[0] : posses;\n        };\n\n        /**\n         * Sets the posse(s) for the element with the given id, creating those that do not yet exist, and removing from\n         * the element any current Posses that are not specified by this method call. This method will not change the\n         * active/passive state if it is given a posse in which the element is already a member.\n         * @method setPosse\n         * @param {Element} el Element to set posse(s) on.\n         * @param {String...|Object...} spec Variable args parameters. Each argument can be a either a String, indicating\n         * the ID of a Posse to which the element should be added as an active participant, or an Object containing\n         * `{ id:\"posseId\", active:false/true}`. In the latter case, if `active` is not provided it is assumed to be\n         * true.\n         * @returns {Posse|Posse[]} The Posse(s) to which the element(s) now belongs.\n         */\n        this.setPosse = function(el, spec) {\n\n            var posses = [];\n\n            for (var i = 1; i < arguments.length; i++) {\n                posses.push(_processOneSpec(el, arguments[i], true).name);\n            }\n\n            _each(el, function(_el) {\n                if (_el._katavorioDrag) {\n                    var diff = _difference(_el._katavorioDrag.posses, posses);\n                    var p = [];\n                    Array.prototype.push.apply(p, _el._katavorioDrag.posses);\n                    for (var i = 0; i < diff.length; i++) {\n                        this.removeFromPosse(_el, diff[i]);\n                    }\n                }\n            }.bind(this));\n\n            return posses.length === 1 ? posses[0] : posses;\n        };\n\n        /**\n         * Remove the given element from the given posse(s).\n         * @method removeFromPosse\n         * @param {Element} el Element to remove.\n         * @param {String...} posseId Varargs parameter: one value for each posse to remove the element from.\n         */\n        this.removeFromPosse = function(el, posseId) {\n            if (arguments.length < 2) throw new TypeError(\"No posse id provided for remove operation\");\n            for(var i = 1; i < arguments.length; i++) {\n                posseId = arguments[i];\n                _each(el, function (_el) {\n                    if (_el._katavorioDrag && _el._katavorioDrag.posses) {\n                        var d = _el._katavorioDrag;\n                        _each(posseId, function (p) {\n                            _vanquish(_posses[p].members, d);\n                            _vanquish(d.posses, p);\n                            delete d.posseRoles[p];\n                        });\n                    }\n                });\n            }\n        };\n\n        /**\n         * Remove the given element from all Posses to which it belongs.\n         * @method removeFromAllPosses\n         * @param {Element|Element[]} el Element to remove from Posses.\n         */\n        this.removeFromAllPosses = function(el) {\n            _each(el, function(_el) {\n                if (_el._katavorioDrag && _el._katavorioDrag.posses) {\n                    var d = _el._katavorioDrag;\n                    _each(d.posses, function(p) {\n                        _vanquish(_posses[p].members, d);\n                    });\n                    d.posses.length = 0;\n                    d.posseRoles = {};\n                }\n            });\n        };\n\n        /**\n         * Changes the participation state for the element in the Posse with the given ID.\n         * @param {Element|Element[]} el Element(s) to change state for.\n         * @param {String} posseId ID of the Posse to change element state for.\n         * @param {Boolean} state True to make active, false to make passive.\n         */\n        this.setPosseState = function(el, posseId, state) {\n            var posse = _posses[posseId];\n            if (posse) {\n                _each(el, function(_el) {\n                    if (_el._katavorioDrag && _el._katavorioDrag.posses) {\n                        _el._katavorioDrag.posseRoles[posse.name] = state;\n                    }\n                });\n            }\n        };\n\n    };\n\n    root.Katavorio.version = \"0.27.0\";\n\n    if (true) {\n        exports.Katavorio = root.Katavorio;\n    }\n\n}).call(typeof window !== 'undefined' ? window : this);\n\n;(function() {\n\n    \"use strict\";\n\n    var root = this;\n    var exports = root.jsPlumbUtil = {};\n\n    function isArray(a) {\n        return Object.prototype.toString.call(a) === \"[object Array]\";\n    }\n    function isNumber(n) {\n        return Object.prototype.toString.call(n) === \"[object Number]\";\n    }\n    function isString(s) {\n        return typeof s === \"string\";\n    }\n    function isBoolean(s) {\n        return typeof s === \"boolean\";\n    }\n    function isNull(s) {\n        return s == null;\n    }\n    function isObject(o) {\n        return o == null ? false : Object.prototype.toString.call(o) === \"[object Object]\";\n    }\n    function isDate(o) {\n        return Object.prototype.toString.call(o) === \"[object Date]\";\n    }\n    function isFunction(o) {\n        return Object.prototype.toString.call(o) === \"[object Function]\";\n    }\n    function isNamedFunction(o) {\n        return isFunction(o) && o.name != null && o.name.length > 0;\n    }\n    function isEmpty(o) {\n        for (var i in o) {\n            if (o.hasOwnProperty(i)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    function clone(a) {\n        if (isString(a)) {\n            return \"\" + a;\n        }\n        else if (isBoolean(a)) {\n            return !!a;\n        }\n        else if (isDate(a)) {\n            return new Date(a.getTime());\n        }\n        else if (isFunction(a)) {\n            return a;\n        }\n        else if (isArray(a)) {\n            var b = [];\n            for (var i = 0; i < a.length; i++) {\n                b.push(clone(a[i]));\n            }\n            return b;\n        }\n        else if (isObject(a)) {\n            var c = {};\n            for (var j in a) {\n                c[j] = clone(a[j]);\n            }\n            return c;\n        }\n        else {\n            return a;\n        }\n    }\n    function merge(a, b, collations) {\n        // first change the collations array - if present - into a lookup table, because its faster.\n        var cMap = {}, ar, i;\n        collations = collations || [];\n        for (i = 0; i < collations.length; i++) {\n            cMap[collations[i]] = true;\n        }\n        var c = clone(a);\n        for (i in b) {\n            if (c[i] == null) {\n                c[i] = b[i];\n            }\n            else if (isString(b[i]) || isBoolean(b[i])) {\n                if (!cMap[i]) {\n                    c[i] = b[i]; // if we dont want to collate, just copy it in.\n                }\n                else {\n                    ar = [];\n                    // if c's object is also an array we can keep its values.\n                    ar.push.apply(ar, isArray(c[i]) ? c[i] : [c[i]]);\n                    ar.push.apply(ar, isBoolean(b[i]) ? b[i] : [b[i]]);\n                    c[i] = ar;\n                }\n            }\n            else {\n                if (isArray(b[i])) {\n                    ar = [];\n                    // if c's object is also an array we can keep its values.\n                    if (isArray(c[i])) {\n                        ar.push.apply(ar, c[i]);\n                    }\n                    ar.push.apply(ar, b[i]);\n                    c[i] = ar;\n                }\n                else if (isObject(b[i])) {\n                    // overwrite c's value with an object if it is not already one.\n                    if (!isObject(c[i])) {\n                        c[i] = {};\n                    }\n                    for (var j in b[i]) {\n                        c[i][j] = b[i][j];\n                    }\n                }\n            }\n        }\n        return c;\n    }\n    function replace(inObj, path, value) {\n        if (inObj == null) {\n            return;\n        }\n        var q = inObj, t = q;\n        path.replace(/([^\\.])+/g, function (term, lc, pos, str) {\n            var array = term.match(/([^\\[0-9]+){1}(\\[)([0-9+])/), last = pos + term.length >= str.length, _getArray = function () {\n                return t[array[1]] || (function () {\n                        t[array[1]] = [];\n                        return t[array[1]];\n                    })();\n            };\n            if (last) {\n                // set term = value on current t, creating term as array if necessary.\n                if (array) {\n                    _getArray()[array[3]] = value;\n                }\n                else {\n                    t[term] = value;\n                }\n            }\n            else {\n                // set to current t[term], creating t[term] if necessary.\n                if (array) {\n                    var a_1 = _getArray();\n                    t = a_1[array[3]] || (function () {\n                            a_1[array[3]] = {};\n                            return a_1[array[3]];\n                        })();\n                }\n                else {\n                    t = t[term] || (function () {\n                            t[term] = {};\n                            return t[term];\n                        })();\n                }\n            }\n            return \"\";\n        });\n        return inObj;\n    }\n    //\n    // chain a list of functions, supplied by [ object, method name, args ], and return on the first\n    // one that returns the failValue. if none return the failValue, return the successValue.\n    //\n    function functionChain(successValue, failValue, fns) {\n        for (var i = 0; i < fns.length; i++) {\n            var o = fns[i][0][fns[i][1]].apply(fns[i][0], fns[i][2]);\n            if (o === failValue) {\n                return o;\n            }\n        }\n        return successValue;\n    }\n    /**\n     *\n     * Take the given model and expand out any parameters. 'functionPrefix' is optional, and if present, helps jsplumb figure out what to do if a value is a Function.\n     * if you do not provide it (and doNotExpandFunctions is null, or false), jsplumb will run the given values through any functions it finds, and use the function's\n     * output as the value in the result. if you do provide the prefix, only functions that are named and have this prefix\n     * will be executed; other functions will be passed as values to the output.\n     *\n     * @param model\n     * @param values\n     * @param functionPrefix\n     * @param doNotExpandFunctions\n     * @returns {any}\n     */\n    function populate(model, values, functionPrefix, doNotExpandFunctions) {\n        // for a string, see if it has parameter matches, and if so, try to make the substitutions.\n        var getValue = function (fromString) {\n            var matches = fromString.match(/(\\${.*?})/g);\n            if (matches != null) {\n                for (var i = 0; i < matches.length; i++) {\n                    var val = values[matches[i].substring(2, matches[i].length - 1)] || \"\";\n                    if (val != null) {\n                        fromString = fromString.replace(matches[i], val);\n                    }\n                }\n            }\n            return fromString;\n        };\n        // process one entry.\n        var _one = function (d) {\n            if (d != null) {\n                if (isString(d)) {\n                    return getValue(d);\n                }\n                else if (isFunction(d) && !doNotExpandFunctions && (functionPrefix == null || (d.name || \"\").indexOf(functionPrefix) === 0)) {\n                    return d(values);\n                }\n                else if (isArray(d)) {\n                    var r = [];\n                    for (var i = 0; i < d.length; i++) {\n                        r.push(_one(d[i]));\n                    }\n                    return r;\n                }\n                else if (isObject(d)) {\n                    var s = {};\n                    for (var j in d) {\n                        s[j] = _one(d[j]);\n                    }\n                    return s;\n                }\n                else {\n                    return d;\n                }\n            }\n        };\n        return _one(model);\n    }\n    function findWithFunction(a, f) {\n        if (a) {\n            for (var i = 0; i < a.length; i++) {\n                if (f(a[i])) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    }\n    function removeWithFunction(a, f) {\n        var idx = findWithFunction(a, f);\n        if (idx > -1) {\n            a.splice(idx, 1);\n        }\n        return idx !== -1;\n    }\n    function remove(l, v) {\n        var idx = l.indexOf(v);\n        if (idx > -1) {\n            l.splice(idx, 1);\n        }\n        return idx !== -1;\n    }\n    function addWithFunction(list, item, hashFunction) {\n        if (findWithFunction(list, hashFunction) === -1) {\n            list.push(item);\n        }\n    }\n    function addToList(map, key, value, insertAtStart) {\n        var l = map[key];\n        if (l == null) {\n            l = [];\n            map[key] = l;\n        }\n        l[insertAtStart ? \"unshift\" : \"push\"](value);\n        return l;\n    }\n    function suggest(list, item, insertAtHead) {\n        if (list.indexOf(item) === -1) {\n            if (insertAtHead) {\n                list.unshift(item);\n            }\n            else {\n                list.push(item);\n            }\n            return true;\n        }\n        return false;\n    }\n    //\n    // extends the given obj (which can be an array) with the given constructor function, prototype functions, and\n    // class members, any of which may be null.\n    //\n    function extend(child, parent, _protoFn) {\n        var i;\n        parent = isArray(parent) ? parent : [parent];\n        var _copyProtoChain = function (focus) {\n            var proto = focus.__proto__;\n            while (proto != null) {\n                if (proto.prototype != null) {\n                    for (var j in proto.prototype) {\n                        if (proto.prototype.hasOwnProperty(j) && !child.prototype.hasOwnProperty(j)) {\n                            child.prototype[j] = proto.prototype[j];\n                        }\n                    }\n                    proto = proto.prototype.__proto__;\n                }\n                else {\n                    proto = null;\n                }\n            }\n        };\n        for (i = 0; i < parent.length; i++) {\n            for (var j in parent[i].prototype) {\n                if (parent[i].prototype.hasOwnProperty(j) && !child.prototype.hasOwnProperty(j)) {\n                    child.prototype[j] = parent[i].prototype[j];\n                }\n            }\n            _copyProtoChain(parent[i]);\n        }\n        var _makeFn = function (name, protoFn) {\n            return function () {\n                for (i = 0; i < parent.length; i++) {\n                    if (parent[i].prototype[name]) {\n                        parent[i].prototype[name].apply(this, arguments);\n                    }\n                }\n                return protoFn.apply(this, arguments);\n            };\n        };\n        var _oneSet = function (fns) {\n            for (var k in fns) {\n                child.prototype[k] = _makeFn(k, fns[k]);\n            }\n        };\n        if (arguments.length > 2) {\n            for (i = 2; i < arguments.length; i++) {\n                _oneSet(arguments[i]);\n            }\n        }\n        return child;\n    }\n    function uuid() {\n        return ('xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n            var r = Math.random() * 16 | 0, v = c === 'x' ? r : (r & 0x3 | 0x8);\n            return v.toString(16);\n        }));\n    }\n    function fastTrim(s) {\n        if (s == null) {\n            return null;\n        }\n        var str = s.replace(/^\\s\\s*/, ''), ws = /\\s/, i = str.length;\n        while (ws.test(str.charAt(--i))) { }\n        return str.slice(0, i + 1);\n    }\n    function each(obj, fn) {\n        obj = obj.length == null || typeof obj === \"string\" ? [obj] : obj;\n        for (var i = 0; i < obj.length; i++) {\n            fn(obj[i]);\n        }\n    }\n    function map(obj, fn) {\n        var o = [];\n        for (var i = 0; i < obj.length; i++) {\n            o.push(fn(obj[i]));\n        }\n        return o;\n    }\n    function mergeWithParents(type, map, parentAttribute) {\n        parentAttribute = parentAttribute || \"parent\";\n        var _def = function (id) {\n            return id ? map[id] : null;\n        };\n        var _parent = function (def) {\n            return def ? _def(def[parentAttribute]) : null;\n        };\n        var _one = function (parent, def) {\n            if (parent == null) {\n                return def;\n            }\n            else {\n                var d_1 = merge(parent, def);\n                return _one(_parent(parent), d_1);\n            }\n        };\n        var _getDef = function (t) {\n            if (t == null) {\n                return {};\n            }\n            if (typeof t === \"string\") {\n                return _def(t);\n            }\n            else if (t.length) {\n                var done = false, i = 0, _dd = void 0;\n                while (!done && i < t.length) {\n                    _dd = _getDef(t[i]);\n                    if (_dd) {\n                        done = true;\n                    }\n                    else {\n                        i++;\n                    }\n                }\n                return _dd;\n            }\n        };\n        var d = _getDef(type);\n        if (d) {\n            return _one(_parent(d), d);\n        }\n        else {\n            return {};\n        }\n    }\n    var logEnabled = true;\n    function log() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (logEnabled && typeof console !== \"undefined\") {\n            try {\n                var msg = arguments[arguments.length - 1];\n                console.log(msg);\n            }\n            catch (e) {\n            }\n        }\n    }\n    /**\n     * Wraps one function with another, creating a placeholder for the\n     * wrapped function if it was null. this is used to wrap the various\n     * drag/drop event functions - to allow jsPlumb to be notified of\n     * important lifecycle events without imposing itself on the user's\n     * drag/drop functionality.\n     * @method jsPlumbUtil.wrap\n     * @param {Function} wrappedFunction original function to wrap; may be null.\n     * @param {Function} newFunction function to wrap the original with.\n     * @param {Object} [returnOnThisValue] Optional. Indicates that the wrappedFunction should\n     * not be executed if the newFunction returns a value matching 'returnOnThisValue'.\n     * note that this is a simple comparison and only works for primitives right now.\n     */\n    function wrap(wrappedFunction, newFunction, returnOnThisValue) {\n        return function () {\n            var r = null;\n            try {\n                if (newFunction != null) {\n                    r = newFunction.apply(this, arguments);\n                }\n            }\n            catch (e) {\n                log(\"jsPlumb function failed : \" + e);\n            }\n            if ((wrappedFunction != null) && (returnOnThisValue == null || (r !== returnOnThisValue))) {\n                try {\n                    r = wrappedFunction.apply(this, arguments);\n                }\n                catch (e) {\n                    log(\"wrapped function failed : \" + e);\n                }\n            }\n            return r;\n        };\n    }\n    var EventGenerator = /** @class */ (function () {\n        function EventGenerator() {\n            var _this = this;\n            this._listeners = {};\n            this.eventsSuspended = false;\n            this.tick = false;\n            // this is a list of events that should re-throw any errors that occur during their dispatch.\n            this.eventsToDieOn = { \"ready\": true };\n            this.queue = [];\n            this.bind = function (event, listener, insertAtStart) {\n                var _one = function (evt) {\n                    addToList(_this._listeners, evt, listener, insertAtStart);\n                    listener.__jsPlumb = listener.__jsPlumb || {};\n                    listener.__jsPlumb[uuid()] = evt;\n                };\n                if (typeof event === \"string\") {\n                    _one(event);\n                }\n                else if (event.length != null) {\n                    for (var i = 0; i < event.length; i++) {\n                        _one(event[i]);\n                    }\n                }\n                return _this;\n            };\n            this.fire = function (event, value, originalEvent) {\n                if (!this.tick) {\n                    this.tick = true;\n                    if (!this.eventsSuspended && this._listeners[event]) {\n                        var l = this._listeners[event].length, i = 0, _gone = false, ret = null;\n                        if (!this.shouldFireEvent || this.shouldFireEvent(event, value, originalEvent)) {\n                            while (!_gone && i < l && ret !== false) {\n                                // doing it this way rather than catching and then possibly re-throwing means that an error propagated by this\n                                // method will have the whole call stack available in the debugger.\n                                if (this.eventsToDieOn[event]) {\n                                    this._listeners[event][i].apply(this, [value, originalEvent]);\n                                }\n                                else {\n                                    try {\n                                        ret = this._listeners[event][i].apply(this, [value, originalEvent]);\n                                    }\n                                    catch (e) {\n                                        log(\"jsPlumb: fire failed for event \" + event + \" : \" + e);\n                                    }\n                                }\n                                i++;\n                                if (this._listeners == null || this._listeners[event] == null) {\n                                    _gone = true;\n                                }\n                            }\n                        }\n                    }\n                    this.tick = false;\n                    this._drain();\n                }\n                else {\n                    this.queue.unshift(arguments);\n                }\n                return this;\n            };\n            this._drain = function () {\n                var n = _this.queue.pop();\n                if (n) {\n                    _this.fire.apply(_this, n);\n                }\n            };\n            this.unbind = function (eventOrListener, listener) {\n                if (arguments.length === 0) {\n                    this._listeners = {};\n                }\n                else if (arguments.length === 1) {\n                    if (typeof eventOrListener === \"string\") {\n                        delete this._listeners[eventOrListener];\n                    }\n                    else if (eventOrListener.__jsPlumb) {\n                        var evt = void 0;\n                        for (var i in eventOrListener.__jsPlumb) {\n                            evt = eventOrListener.__jsPlumb[i];\n                            remove(this._listeners[evt] || [], eventOrListener);\n                        }\n                    }\n                }\n                else if (arguments.length === 2) {\n                    remove(this._listeners[eventOrListener] || [], listener);\n                }\n                return this;\n            };\n            this.getListener = function (forEvent) {\n                return _this._listeners[forEvent];\n            };\n            this.setSuspendEvents = function (val) {\n                _this.eventsSuspended = val;\n            };\n            this.isSuspendEvents = function () {\n                return _this.eventsSuspended;\n            };\n            this.silently = function (fn) {\n                _this.setSuspendEvents(true);\n                try {\n                    fn();\n                }\n                catch (e) {\n                    log(\"Cannot execute silent function \" + e);\n                }\n                _this.setSuspendEvents(false);\n            };\n            this.cleanupListeners = function () {\n                for (var i in _this._listeners) {\n                    _this._listeners[i] = null;\n                }\n            };\n        }\n        return EventGenerator;\n    }());\n\n    exports.isArray = isArray;\n    exports.isNumber = isNumber;\n    exports.isString = isString;\n    exports.isBoolean = isBoolean;\n    exports.isNull = isNull;\n    exports.isObject = isObject;\n    exports.isDate = isDate;\n    exports.isFunction = isFunction;\n    exports.isNamedFunction = isNamedFunction;\n    exports.isEmpty = isEmpty;\n    exports.clone = clone;\n    exports.merge = merge;\n    exports.replace = replace;\n    exports.functionChain = functionChain;\n    exports.populate = populate;\n    exports.findWithFunction = findWithFunction;\n    exports.removeWithFunction = removeWithFunction;\n    exports.remove = remove;\n    exports.addWithFunction = addWithFunction;\n    exports.addToList = addToList;\n    exports.suggest = suggest;\n    exports.extend = extend;\n    exports.uuid = uuid;\n    exports.fastTrim = fastTrim;\n    exports.each = each;\n    exports.map = map;\n    exports.mergeWithParents = mergeWithParents;\n    exports.logEnabled = logEnabled;\n    exports.log = log;\n    exports.wrap = wrap;\n    exports.EventGenerator = EventGenerator;\n\n\n}).call(typeof window !== 'undefined' ? window : this);\n\n/*\n * This file contains utility functions that run in browsers only.\n *\n * Copyright (c) 2010 - 2018 jsPlumb (hello@jsplumbtoolkit.com)\n *\n * https://jsplumbtoolkit.com\n * https://github.com/jsplumb/jsplumb\n *\n * Dual licensed under the MIT and GPL2 licenses.\n */\n ;(function() {\n\n  \"use strict\";\n\n   var root = this;\n\n    root.jsPlumbUtil.matchesSelector = function(el, selector, ctx) {\n       ctx = ctx || el.parentNode;\n       var possibles = ctx.querySelectorAll(selector);\n       for (var i = 0; i < possibles.length; i++) {\n           if (possibles[i] === el) {\n               return true;\n           }\n       }\n       return false;\n   };\n\n    root.jsPlumbUtil.consume = function(e, doNotPreventDefault) {\n       if (e.stopPropagation) {\n           e.stopPropagation();\n       }\n       else {\n           e.returnValue = false;\n       }\n\n       if (!doNotPreventDefault && e.preventDefault){\n           e.preventDefault();\n       }\n   };\n\n   /*\n    * Function: sizeElement\n    * Helper to size and position an element. You would typically use\n    * this when writing your own Connector or Endpoint implementation.\n    *\n    * Parameters:\n    *  x - [int] x position for the element origin\n    *  y - [int] y position for the element origin\n    *  w - [int] width of the element\n    *  h - [int] height of the element\n    *\n    */\n    root.jsPlumbUtil.sizeElement = function(el, x, y, w, h) {\n       if (el) {\n           el.style.height = h + \"px\";\n           el.height = h;\n           el.style.width = w + \"px\";\n           el.width = w;\n           el.style.left = x + \"px\";\n           el.style.top = y + \"px\";\n       }\n   };\n\n }).call(typeof window !== 'undefined' ? window : this);\n\n/*\n * This file contains the core code.\n *\n * Copyright (c) 2010 - 2018 jsPlumb (hello@jsplumbtoolkit.com)\n *\n * https://jsplumbtoolkit.com\n * https://github.com/jsplumb/jsplumb\n *\n * Dual licensed under the MIT and GPL2 licenses.\n */\n;(function () {\n\n    \"use strict\";\n\n    var root = this;\n\n    var _ju = root.jsPlumbUtil,\n\n        /**\n         * creates a timestamp, using milliseconds since 1970, but as a string.\n         */\n        _timestamp = function () {\n            return \"\" + (new Date()).getTime();\n        },\n\n    // helper method to update the hover style whenever it, or paintStyle, changes.\n    // we use paintStyle as the foundation and merge hoverPaintStyle over the\n    // top.\n        _updateHoverStyle = function (component) {\n            if (component._jsPlumb.paintStyle && component._jsPlumb.hoverPaintStyle) {\n                var mergedHoverStyle = {};\n                jsPlumb.extend(mergedHoverStyle, component._jsPlumb.paintStyle);\n                jsPlumb.extend(mergedHoverStyle, component._jsPlumb.hoverPaintStyle);\n                delete component._jsPlumb.hoverPaintStyle;\n                // we want the fill of paintStyle to override a gradient, if possible.\n                if (mergedHoverStyle.gradient && component._jsPlumb.paintStyle.fill) {\n                    delete mergedHoverStyle.gradient;\n                }\n                component._jsPlumb.hoverPaintStyle = mergedHoverStyle;\n            }\n        },\n        events = [\"tap\", \"dbltap\", \"click\", \"dblclick\", \"mouseover\", \"mouseout\", \"mousemove\", \"mousedown\", \"mouseup\", \"contextmenu\" ],\n        eventFilters = { \"mouseout\": \"mouseleave\", \"mouseexit\": \"mouseleave\" },\n        _updateAttachedElements = function (component, state, timestamp, sourceElement) {\n            var affectedElements = component.getAttachedElements();\n            if (affectedElements) {\n                for (var i = 0, j = affectedElements.length; i < j; i++) {\n                    if (!sourceElement || sourceElement !== affectedElements[i]) {\n                        affectedElements[i].setHover(state, true, timestamp);\t\t\t// tell the attached elements not to inform their own attached elements.\n                    }\n                }\n            }\n        },\n        _splitType = function (t) {\n            return t == null ? null : t.split(\" \");\n        },\n        _mapType = function(map, obj, typeId) {\n            for (var i in obj) {\n                map[i] = typeId;\n            }\n        },\n        _each = function(fn, obj) {\n            obj = _ju.isArray(obj) || (obj.length != null && !_ju.isString(obj)) ? obj : [ obj ];\n            for (var i = 0; i < obj.length; i++) {\n                try {\n                    fn.apply(obj[i], [ obj[i] ]);\n                }\n                catch (e) {\n                    _ju.log(\".each iteration failed : \" + e);\n                }\n            }\n        },\n        _applyTypes = function (component, params, doNotRepaint) {\n            if (component.getDefaultType) {\n                var td = component.getTypeDescriptor(), map = {};\n                var defType = component.getDefaultType();\n                var o = _ju.merge({}, defType);\n                _mapType(map, defType, \"__default\");\n                for (var i = 0, j = component._jsPlumb.types.length; i < j; i++) {\n                    var tid = component._jsPlumb.types[i];\n                    if (tid !== \"__default\") {\n                        var _t = component._jsPlumb.instance.getType(tid, td);\n                        if (_t != null) {\n                            o = _ju.merge(o, _t, [ \"cssClass\" ]);\n                            _mapType(map, _t, tid);\n                        }\n                    }\n                }\n\n                if (params) {\n                    o = _ju.populate(o, params, \"_\");\n                }\n\n                component.applyType(o, doNotRepaint, map);\n                if (!doNotRepaint) {\n                    component.repaint();\n                }\n            }\n        },\n\n// ------------------------------ BEGIN jsPlumbUIComponent --------------------------------------------\n\n        jsPlumbUIComponent = root.jsPlumbUIComponent = function (params) {\n\n            _ju.EventGenerator.apply(this, arguments);\n\n            var self = this,\n                a = arguments,\n                idPrefix = self.idPrefix,\n                id = idPrefix + (new Date()).getTime();\n\n            this._jsPlumb = {\n                instance: params._jsPlumb,\n                parameters: params.parameters || {},\n                paintStyle: null,\n                hoverPaintStyle: null,\n                paintStyleInUse: null,\n                hover: false,\n                beforeDetach: params.beforeDetach,\n                beforeDrop: params.beforeDrop,\n                overlayPlacements: [],\n                hoverClass: params.hoverClass || params._jsPlumb.Defaults.HoverClass,\n                types: [],\n                typeCache:{}\n            };\n\n            this.cacheTypeItem = function(key, item, typeId) {\n                this._jsPlumb.typeCache[typeId] = this._jsPlumb.typeCache[typeId] || {};\n                this._jsPlumb.typeCache[typeId][key] = item;\n            };\n            this.getCachedTypeItem = function(key, typeId) {\n                return this._jsPlumb.typeCache[typeId] ? this._jsPlumb.typeCache[typeId][key] : null;\n            };\n\n            this.getId = function () {\n                return id;\n            };\n\n// ----------------------------- default type --------------------------------------------\n\n\n            var o = params.overlays || [], oo = {};\n            if (this.defaultOverlayKeys) {\n                for (var i = 0; i < this.defaultOverlayKeys.length; i++) {\n                    Array.prototype.push.apply(o, this._jsPlumb.instance.Defaults[this.defaultOverlayKeys[i]] || []);\n                }\n\n                for (i = 0; i < o.length; i++) {\n                    // if a string, convert to object representation so that we can store the typeid on it.\n                    // also assign an id.\n                    var fo = jsPlumb.convertToFullOverlaySpec(o[i]);\n                    oo[fo[1].id] = fo;\n                }\n            }\n\n            var _defaultType = {\n                overlays:oo,\n                parameters: params.parameters || {},\n                scope: params.scope || this._jsPlumb.instance.getDefaultScope()\n            };\n            this.getDefaultType = function() {\n                return _defaultType;\n            };\n            this.appendToDefaultType = function(obj) {\n                for (var i in obj) {\n                    _defaultType[i] = obj[i];\n                }\n            };\n\n// ----------------------------- end default type --------------------------------------------\n\n            // all components can generate events\n\n            if (params.events) {\n                for (var evtName in params.events) {\n                    self.bind(evtName, params.events[evtName]);\n                }\n            }\n\n            // all components get this clone function.\n            // TODO issue 116 showed a problem with this - it seems 'a' that is in\n            // the clone function's scope is shared by all invocations of it, the classic\n            // JS closure problem.  for now, jsPlumb does a version of this inline where\n            // it used to call clone.  but it would be nice to find some time to look\n            // further at this.\n            this.clone = function () {\n                var o = Object.create(this.constructor.prototype);\n                this.constructor.apply(o, a);\n                return o;\n            }.bind(this);\n\n            // user can supply a beforeDetach callback, which will be executed before a detach\n            // is performed; returning false prevents the detach.\n            this.isDetachAllowed = function (connection) {\n                var r = true;\n                if (this._jsPlumb.beforeDetach) {\n                    try {\n                        r = this._jsPlumb.beforeDetach(connection);\n                    }\n                    catch (e) {\n                        _ju.log(\"jsPlumb: beforeDetach callback failed\", e);\n                    }\n                }\n                return r;\n            };\n\n            // user can supply a beforeDrop callback, which will be executed before a dropped\n            // connection is confirmed. user can return false to reject connection.\n            this.isDropAllowed = function (sourceId, targetId, scope, connection, dropEndpoint, source, target) {\n                var r = this._jsPlumb.instance.checkCondition(\"beforeDrop\", {\n                    sourceId: sourceId,\n                    targetId: targetId,\n                    scope: scope,\n                    connection: connection,\n                    dropEndpoint: dropEndpoint,\n                    source: source, target: target\n                });\n                if (this._jsPlumb.beforeDrop) {\n                    try {\n                        r = this._jsPlumb.beforeDrop({\n                            sourceId: sourceId,\n                            targetId: targetId,\n                            scope: scope,\n                            connection: connection,\n                            dropEndpoint: dropEndpoint,\n                            source: source, target: target\n                        });\n                    }\n                    catch (e) {\n                        _ju.log(\"jsPlumb: beforeDrop callback failed\", e);\n                    }\n                }\n                return r;\n            };\n\n            var domListeners = [];\n\n            // sets the component associated with listener events. for instance, an overlay delegates\n            // its events back to a connector. but if the connector is swapped on the underlying connection,\n            // then this component must be changed. This is called by setConnector in the Connection class.\n            this.setListenerComponent = function (c) {\n                for (var i = 0; i < domListeners.length; i++) {\n                    domListeners[i][3] = c;\n                }\n            };\n\n\n        };\n\n    var _removeTypeCssHelper = function (component, typeIndex) {\n        var typeId = component._jsPlumb.types[typeIndex],\n            type = component._jsPlumb.instance.getType(typeId, component.getTypeDescriptor());\n\n        if (type != null && type.cssClass && component.canvas) {\n            component._jsPlumb.instance.removeClass(component.canvas, type.cssClass);\n        }\n    };\n\n    _ju.extend(root.jsPlumbUIComponent, _ju.EventGenerator, {\n\n        getParameter: function (name) {\n            return this._jsPlumb.parameters[name];\n        },\n\n        setParameter: function (name, value) {\n            this._jsPlumb.parameters[name] = value;\n        },\n\n        getParameters: function () {\n            return this._jsPlumb.parameters;\n        },\n\n        setParameters: function (p) {\n            this._jsPlumb.parameters = p;\n        },\n\n        getClass:function() {\n            return jsPlumb.getClass(this.canvas);\n        },\n\n        hasClass:function(clazz) {\n            return jsPlumb.hasClass(this.canvas, clazz);\n        },\n\n        addClass: function (clazz) {\n            jsPlumb.addClass(this.canvas, clazz);\n        },\n\n        removeClass: function (clazz) {\n            jsPlumb.removeClass(this.canvas, clazz);\n        },\n\n        updateClasses: function (classesToAdd, classesToRemove) {\n            jsPlumb.updateClasses(this.canvas, classesToAdd, classesToRemove);\n        },\n\n        setType: function (typeId, params, doNotRepaint) {\n            this.clearTypes();\n            this._jsPlumb.types = _splitType(typeId) || [];\n            _applyTypes(this, params, doNotRepaint);\n        },\n\n        getType: function () {\n            return this._jsPlumb.types;\n        },\n\n        reapplyTypes: function (params, doNotRepaint) {\n            _applyTypes(this, params, doNotRepaint);\n        },\n\n        hasType: function (typeId) {\n            return this._jsPlumb.types.indexOf(typeId) !== -1;\n        },\n\n        addType: function (typeId, params, doNotRepaint) {\n            var t = _splitType(typeId), _cont = false;\n            if (t != null) {\n                for (var i = 0, j = t.length; i < j; i++) {\n                    if (!this.hasType(t[i])) {\n                        this._jsPlumb.types.push(t[i]);\n                        _cont = true;\n                    }\n                }\n                if (_cont) {\n                    _applyTypes(this, params, doNotRepaint);\n                }\n            }\n        },\n\n        removeType: function (typeId, params, doNotRepaint) {\n            var t = _splitType(typeId), _cont = false, _one = function (tt) {\n                var idx = this._jsPlumb.types.indexOf(tt);\n                if (idx !== -1) {\n                    // remove css class if necessary\n                    _removeTypeCssHelper(this, idx);\n                    this._jsPlumb.types.splice(idx, 1);\n                    return true;\n                }\n                return false;\n            }.bind(this);\n\n            if (t != null) {\n                for (var i = 0, j = t.length; i < j; i++) {\n                    _cont = _one(t[i]) || _cont;\n                }\n                if (_cont) {\n                    _applyTypes(this, params, doNotRepaint);\n                }\n            }\n        },\n        clearTypes: function (params, doNotRepaint) {\n            var i = this._jsPlumb.types.length;\n            for (var j = 0; j < i; j++) {\n                _removeTypeCssHelper(this, 0);\n                this._jsPlumb.types.splice(0, 1);\n            }\n            _applyTypes(this, params, doNotRepaint);\n        },\n\n        toggleType: function (typeId, params, doNotRepaint) {\n            var t = _splitType(typeId);\n            if (t != null) {\n                for (var i = 0, j = t.length; i < j; i++) {\n                    var idx = this._jsPlumb.types.indexOf(t[i]);\n                    if (idx !== -1) {\n                        _removeTypeCssHelper(this, idx);\n                        this._jsPlumb.types.splice(idx, 1);\n                    }\n                    else {\n                        this._jsPlumb.types.push(t[i]);\n                    }\n                }\n\n                _applyTypes(this, params, doNotRepaint);\n            }\n        },\n        applyType: function (t, doNotRepaint) {\n            this.setPaintStyle(t.paintStyle, doNotRepaint);\n            this.setHoverPaintStyle(t.hoverPaintStyle, doNotRepaint);\n            if (t.parameters) {\n                for (var i in t.parameters) {\n                    this.setParameter(i, t.parameters[i]);\n                }\n            }\n            this._jsPlumb.paintStyleInUse = this.getPaintStyle();\n        },\n        setPaintStyle: function (style, doNotRepaint) {\n            // this._jsPlumb.paintStyle = jsPlumb.extend({}, style);\n            // TODO figure out if we want components to clone paintStyle so as not to share it.\n            this._jsPlumb.paintStyle = style;\n            this._jsPlumb.paintStyleInUse = this._jsPlumb.paintStyle;\n            _updateHoverStyle(this);\n            if (!doNotRepaint) {\n                this.repaint();\n            }\n        },\n        getPaintStyle: function () {\n            return this._jsPlumb.paintStyle;\n        },\n        setHoverPaintStyle: function (style, doNotRepaint) {\n            //this._jsPlumb.hoverPaintStyle = jsPlumb.extend({}, style);\n            // TODO figure out if we want components to clone paintStyle so as not to share it.\n            this._jsPlumb.hoverPaintStyle = style;\n            _updateHoverStyle(this);\n            if (!doNotRepaint) {\n                this.repaint();\n            }\n        },\n        getHoverPaintStyle: function () {\n            return this._jsPlumb.hoverPaintStyle;\n        },\n        destroy: function (force) {\n            if (force || this.typeId == null) {\n                this.cleanupListeners(); // this is on EventGenerator\n                this.clone = null;\n                this._jsPlumb = null;\n            }\n        },\n\n        isHover: function () {\n            return this._jsPlumb.hover;\n        },\n\n        setHover: function (hover, ignoreAttachedElements, timestamp) {\n            // while dragging, we ignore these events.  this keeps the UI from flashing and\n            // swishing and whatevering.\n            if (this._jsPlumb && !this._jsPlumb.instance.currentlyDragging && !this._jsPlumb.instance.isHoverSuspended()) {\n\n                this._jsPlumb.hover = hover;\n                var method = hover ? \"addClass\" : \"removeClass\";\n\n                if (this.canvas != null) {\n                    if (this._jsPlumb.instance.hoverClass != null) {\n                        this._jsPlumb.instance[method](this.canvas, this._jsPlumb.instance.hoverClass);\n                    }\n                    if (this._jsPlumb.hoverClass != null) {\n                        this._jsPlumb.instance[method](this.canvas, this._jsPlumb.hoverClass);\n                    }\n                }\n                if (this._jsPlumb.hoverPaintStyle != null) {\n                    this._jsPlumb.paintStyleInUse = hover ? this._jsPlumb.hoverPaintStyle : this._jsPlumb.paintStyle;\n                    if (!this._jsPlumb.instance.isSuspendDrawing()) {\n                        timestamp = timestamp || _timestamp();\n                        this.repaint({timestamp: timestamp, recalc: false});\n                    }\n                }\n                // get the list of other affected elements, if supported by this component.\n                // for a connection, its the endpoints.  for an endpoint, its the connections! surprise.\n                if (this.getAttachedElements && !ignoreAttachedElements) {\n                    _updateAttachedElements(this, hover, _timestamp(), this);\n                }\n            }\n        }\n    });\n\n// ------------------------------ END jsPlumbUIComponent --------------------------------------------\n\n    var _jsPlumbInstanceIndex = 0,\n        getInstanceIndex = function () {\n            var i = _jsPlumbInstanceIndex + 1;\n            _jsPlumbInstanceIndex++;\n            return i;\n        };\n\n    var jsPlumbInstance = root.jsPlumbInstance = function (_defaults) {\n\n        this.version = \"2.7.9\";\n\n        this.Defaults = {\n            Anchor: \"Bottom\",\n            Anchors: [ null, null ],\n            ConnectionsDetachable: true,\n            ConnectionOverlays: [ ],\n            Connector: \"Bezier\",\n            Container: null,\n            DoNotThrowErrors: false,\n            DragOptions: { },\n            DropOptions: { },\n            Endpoint: \"Dot\",\n            EndpointOverlays: [ ],\n            Endpoints: [ null, null ],\n            EndpointStyle: { fill: \"#456\" },\n            EndpointStyles: [ null, null ],\n            EndpointHoverStyle: null,\n            EndpointHoverStyles: [ null, null ],\n            HoverPaintStyle: null,\n            LabelStyle: { color: \"black\" },\n            LogEnabled: false,\n            Overlays: [ ],\n            MaxConnections: 1,\n            PaintStyle: { \"stroke-width\": 4, stroke: \"#456\" },\n            ReattachConnections: false,\n            RenderMode: \"svg\",\n            Scope: \"jsPlumb_DefaultScope\"\n        };\n\n        if (_defaults) {\n            jsPlumb.extend(this.Defaults, _defaults);\n        }\n\n        this.logEnabled = this.Defaults.LogEnabled;\n        this._connectionTypes = {};\n        this._endpointTypes = {};\n\n        _ju.EventGenerator.apply(this);\n\n        var _currentInstance = this,\n            _instanceIndex = getInstanceIndex(),\n            _bb = _currentInstance.bind,\n            _initialDefaults = {},\n            _zoom = 1,\n            _info = function (el) {\n                if (el == null) {\n                    return null;\n                }\n                else if (el.nodeType === 3 || el.nodeType === 8) {\n                    return { el:el, text:true };\n                }\n                else {\n                    var _el = _currentInstance.getElement(el);\n                    return { el: _el, id: (_ju.isString(el) && _el == null) ? el : _getId(_el) };\n                }\n            };\n\n        this.getInstanceIndex = function () {\n            return _instanceIndex;\n        };\n\n        // CONVERTED\n        this.setZoom = function (z, repaintEverything) {\n            _zoom = z;\n            _currentInstance.fire(\"zoom\", _zoom);\n            if (repaintEverything) {\n                _currentInstance.repaintEverything();\n            }\n            return true;\n        };\n        // CONVERTED\n        this.getZoom = function () {\n            return _zoom;\n        };\n\n        for (var i in this.Defaults) {\n            _initialDefaults[i] = this.Defaults[i];\n        }\n\n        var _container, _containerDelegations = [];\n        this.unbindContainer = function() {\n            if (_container != null && _containerDelegations.length > 0) {\n                for (var i = 0; i < _containerDelegations.length; i++) {\n                    _currentInstance.off(_container, _containerDelegations[i][0], _containerDelegations[i][1]);\n                }\n            }\n        };\n        this.setContainer = function (c) {\n\n            this.unbindContainer();\n\n            // get container as dom element.\n            c = this.getElement(c);\n            // move existing connections and endpoints, if any.\n            this.select().each(function (conn) {\n                conn.moveParent(c);\n            });\n            this.selectEndpoints().each(function (ep) {\n                ep.moveParent(c);\n            });\n\n            // set container.\n            var previousContainer = _container;\n            _container = c;\n            _containerDelegations.length = 0;\n            var eventAliases = {\n                \"endpointclick\":\"endpointClick\",\n                \"endpointdblclick\":\"endpointDblClick\"\n            };\n\n            var _oneDelegateHandler = function (id, e, componentType) {\n                var t = e.srcElement || e.target,\n                    jp = (t && t.parentNode ? t.parentNode._jsPlumb : null) || (t ? t._jsPlumb : null) || (t && t.parentNode && t.parentNode.parentNode ? t.parentNode.parentNode._jsPlumb : null);\n                if (jp) {\n                    jp.fire(id, jp, e);\n                    var alias = componentType ? eventAliases[componentType + id] || id : id;\n                    // jsplumb also fires every event coming from components/overlays. That's what the test for `jp.component` is for.\n                    _currentInstance.fire(alias, jp.component || jp, e);\n                }\n            };\n\n            var _addOneDelegate = function(eventId, selector, fn) {\n                _containerDelegations.push([eventId, fn]);\n                _currentInstance.on(_container, eventId, selector, fn);\n            };\n\n            // delegate one event on the container to jsplumb elements. it might be possible to\n            // abstract this out: each of endpoint, connection and overlay could register themselves with\n            // jsplumb as \"component types\" or whatever, and provide a suitable selector. this would be\n            // done by the renderer (although admittedly from 2.0 onwards we're not supporting vml anymore)\n            var _oneDelegate = function (id) {\n                // connections.\n                _addOneDelegate(id, \".jtk-connector\", function (e) {\n                    _oneDelegateHandler(id, e);\n                });\n                // endpoints. note they can have an enclosing div, or not.\n                _addOneDelegate(id, \".jtk-endpoint\", function (e) {\n                    _oneDelegateHandler(id, e, \"endpoint\");\n                });\n                // overlays\n                _addOneDelegate(id, \".jtk-overlay\", function (e) {\n                    _oneDelegateHandler(id, e);\n                });\n            };\n\n            for (var i = 0; i < events.length; i++) {\n                _oneDelegate(events[i]);\n            }\n\n            // managed elements\n            for (var elId in managedElements) {\n                var el = managedElements[elId].el;\n                if (el.parentNode === previousContainer) {\n                    previousContainer.removeChild(el);\n                    _container.appendChild(el);\n                }\n            }\n\n        };\n        this.getContainer = function () {\n            return _container;\n        };\n\n        this.bind = function (event, fn) {\n            if (\"ready\" === event && initialized) {\n                fn();\n            }\n            else {\n                _bb.apply(_currentInstance, [event, fn]);\n            }\n        };\n\n        _currentInstance.importDefaults = function (d) {\n            for (var i in d) {\n                _currentInstance.Defaults[i] = d[i];\n            }\n            if (d.Container) {\n                _currentInstance.setContainer(d.Container);\n            }\n\n            return _currentInstance;\n        };\n\n        _currentInstance.restoreDefaults = function () {\n            _currentInstance.Defaults = jsPlumb.extend({}, _initialDefaults);\n            return _currentInstance;\n        };\n\n        var log = null,\n            initialized = false,\n        // TODO remove from window scope\n            connections = [],\n        // map of element id -> endpoint lists. an element can have an arbitrary\n        // number of endpoints on it, and not all of them have to be connected\n        // to anything.\n            endpointsByElement = {},\n            endpointsByUUID = {},\n            managedElements = {},\n            offsets = {},\n            offsetTimestamps = {},\n            draggableStates = {},\n            connectionBeingDragged = false,\n            sizes = [],\n            _suspendDrawing = false,\n            _suspendedAt = null,\n            DEFAULT_SCOPE = this.Defaults.Scope,\n            _curIdStamp = 1,\n            _idstamp = function () {\n                return \"\" + _curIdStamp++;\n            },\n\n        //\n        // appends an element to some other element, which is calculated as follows:\n        //\n        // 1. if Container exists, use that element.\n        // 2. if the 'parent' parameter exists, use that.\n        // 3. otherwise just use the root element.\n        //\n        //\n            _appendElement = function (el, parent) {\n                if (_container) {\n                    _container.appendChild(el);\n                }\n                else if (!parent) {\n                    this.appendToRoot(el);\n                }\n                else {\n                    this.getElement(parent).appendChild(el);\n                }\n            }.bind(this),\n\n        //\n        // Draws an endpoint and its connections. this is the main entry point into drawing connections as well\n        // as endpoints, since jsPlumb is endpoint-centric under the hood.\n        //\n        // @param element element to draw (of type library specific element object)\n        // @param ui UI object from current library's event system. optional.\n        // @param timestamp timestamp for this paint cycle. used to speed things up a little by cutting down the amount of offset calculations we do.\n        // @param clearEdits defaults to false; indicates that mouse edits for connectors should be cleared\n        ///\n            _draw = function (element, ui, timestamp, clearEdits) {\n\n                if (!_suspendDrawing) {\n                    var id = _getId(element),\n                        repaintEls,\n                        dm = _currentInstance.getDragManager();\n\n                    if (dm) {\n                        repaintEls = dm.getElementsForDraggable(id);\n                    }\n\n                    if (timestamp == null) {\n                        timestamp = _timestamp();\n                    }\n\n                    // update the offset of everything _before_ we try to draw anything.\n                    var o = _updateOffset({ elId: id, offset: ui, recalc: false, timestamp: timestamp });\n\n                    if (repaintEls && o && o.o) {\n                        for (var i in repaintEls) {\n                            _updateOffset({\n                                elId: repaintEls[i].id,\n                                offset: {\n                                    left: o.o.left + repaintEls[i].offset.left,\n                                    top: o.o.top + repaintEls[i].offset.top\n                                },\n                                recalc: false,\n                                timestamp: timestamp\n                            });\n                        }\n                    }\n\n                    _currentInstance.anchorManager.redraw(id, ui, timestamp, null, clearEdits);\n\n                    if (repaintEls) {\n                        for (var j in repaintEls) {\n                            _currentInstance.anchorManager.redraw(repaintEls[j].id, ui, timestamp, repaintEls[j].offset, clearEdits, true);\n                        }\n                    }\n                }\n            },\n\n        //\n        // gets an Endpoint by uuid.\n        //\n            _getEndpoint = function (uuid) {\n                return endpointsByUUID[uuid];\n            },\n\n            /**\n             * inits a draggable if it's not already initialised.\n             * TODO: somehow abstract this to the adapter, because the concept of \"draggable\" has no\n             * place on the server.\n             */\n            _initDraggableIfNecessary = function (element, isDraggable, dragOptions, id, fireEvent) {\n                // move to DragManager?\n                if (!jsPlumb.headless) {\n                    var _draggable = isDraggable == null ? false : isDraggable;\n                    if (_draggable) {\n                        if (jsPlumb.isDragSupported(element, _currentInstance)) {\n                            var options = dragOptions || _currentInstance.Defaults.DragOptions;\n                            options = jsPlumb.extend({}, options); // make a copy.\n                            if (!jsPlumb.isAlreadyDraggable(element, _currentInstance)) {\n                                var dragEvent = jsPlumb.dragEvents.drag,\n                                    stopEvent = jsPlumb.dragEvents.stop,\n                                    startEvent = jsPlumb.dragEvents.start,\n                                    _started = false;\n\n                                _manage(id, element);\n\n                                options[startEvent] = _ju.wrap(options[startEvent], function () {\n                                    _currentInstance.setHoverSuspended(true);\n                                    _currentInstance.select({source: element}).addClass(_currentInstance.elementDraggingClass + \" \" + _currentInstance.sourceElementDraggingClass, true);\n                                    _currentInstance.select({target: element}).addClass(_currentInstance.elementDraggingClass + \" \" + _currentInstance.targetElementDraggingClass, true);\n                                    _currentInstance.setConnectionBeingDragged(true);\n                                    if (options.canDrag) {\n                                        return dragOptions.canDrag();\n                                    }\n                                }, false);\n\n                                options[dragEvent] = _ju.wrap(options[dragEvent], function () {\n                                    var ui = _currentInstance.getUIPosition(arguments, _currentInstance.getZoom());\n                                    if (ui != null) {\n                                        _draw(element, ui, null, true);\n                                        if (_started) {\n                                            _currentInstance.addClass(element, \"jtk-dragged\");\n                                        }\n                                        _started = true;\n                                    }\n                                });\n                                options[stopEvent] = _ju.wrap(options[stopEvent], function () {\n                                    var elements = arguments[0].selection, uip;\n\n                                    var _one = function (_e) {\n                                        if (_e[1] != null) {\n                                            // run the reported offset through the code that takes parent containers\n                                            // into account, to adjust if necessary (issue 554)\n                                            uip = _currentInstance.getUIPosition([{\n                                                el:_e[2].el,\n                                                pos:[_e[1].left, _e[1].top]\n                                            }]);\n                                            _draw(_e[2].el, uip);\n                                        }\n                                        _currentInstance.removeClass(_e[0], \"jtk-dragged\");\n                                        _currentInstance.select({source: _e[2].el}).removeClass(_currentInstance.elementDraggingClass + \" \" + _currentInstance.sourceElementDraggingClass, true);\n                                        _currentInstance.select({target: _e[2].el}).removeClass(_currentInstance.elementDraggingClass + \" \" + _currentInstance.targetElementDraggingClass, true);\n                                        _currentInstance.getDragManager().dragEnded(_e[2].el);\n                                    };\n\n                                    for (var i = 0; i < elements.length; i++) {\n                                        _one(elements[i]);\n                                    }\n\n                                    _started = false;\n                                    _currentInstance.setHoverSuspended(false);\n                                    _currentInstance.setConnectionBeingDragged(false);\n                                });\n                                var elId = _getId(element); // need ID\n                                draggableStates[elId] = true;\n                                var draggable = draggableStates[elId];\n                                options.disabled = draggable == null ? false : !draggable;\n                                _currentInstance.initDraggable(element, options);\n                                _currentInstance.getDragManager().register(element);\n                                if (fireEvent) {\n                                    _currentInstance.fire(\"elementDraggable\", {el:element, options:options});\n                                }\n                            }\n                            else {\n                                // already draggable. attach any start, drag or stop listeners to the current Drag.\n                                if (dragOptions.force) {\n                                    _currentInstance.initDraggable(element, options);\n                                }\n                            }\n                        }\n                    }\n                }\n            },\n\n            _scopeMatch = function (e1, e2) {\n                var s1 = e1.scope.split(/\\s/), s2 = e2.scope.split(/\\s/);\n                for (var i = 0; i < s1.length; i++) {\n                    for (var j = 0; j < s2.length; j++) {\n                        if (s2[j] === s1[i]) {\n                            return true;\n                        }\n                    }\n                }\n\n                return false;\n            },\n\n            _mergeOverrides = function (def, values) {\n                var m = jsPlumb.extend({}, def);\n                for (var i in values) {\n                    if (values[i]) {\n                        m[i] = values[i];\n                    }\n                }\n                return m;\n            },\n\n        /*\n         * prepares a final params object that can be passed to _newConnection, taking into account defaults, events, etc.\n         */\n            _prepareConnectionParams = function (params, referenceParams) {\n                var _p = jsPlumb.extend({ }, params);\n                if (referenceParams) {\n                    jsPlumb.extend(_p, referenceParams);\n                }\n\n                // hotwire endpoints passed as source or target to sourceEndpoint/targetEndpoint, respectively.\n                if (_p.source) {\n                    if (_p.source.endpoint) {\n                        _p.sourceEndpoint = _p.source;\n                    }\n                    else {\n                        _p.source = _currentInstance.getElement(_p.source);\n                    }\n                }\n                if (_p.target) {\n                    if (_p.target.endpoint) {\n                        _p.targetEndpoint = _p.target;\n                    }\n                    else {\n                        _p.target = _currentInstance.getElement(_p.target);\n                    }\n                }\n\n                // test for endpoint uuids to connect\n                if (params.uuids) {\n                    _p.sourceEndpoint = _getEndpoint(params.uuids[0]);\n                    _p.targetEndpoint = _getEndpoint(params.uuids[1]);\n                }\n\n                // now ensure that if we do have Endpoints already, they're not full.\n                // source:\n                if (_p.sourceEndpoint && _p.sourceEndpoint.isFull()) {\n                    _ju.log(_currentInstance, \"could not add connection; source endpoint is full\");\n                    return;\n                }\n\n                // target:\n                if (_p.targetEndpoint && _p.targetEndpoint.isFull()) {\n                    _ju.log(_currentInstance, \"could not add connection; target endpoint is full\");\n                    return;\n                }\n\n                // if source endpoint mandates connection type and nothing specified in our params, use it.\n                if (!_p.type && _p.sourceEndpoint) {\n                    _p.type = _p.sourceEndpoint.connectionType;\n                }\n\n                // copy in any connectorOverlays that were specified on the source endpoint.\n                // it doesnt copy target endpoint overlays.  i'm not sure if we want it to or not.\n                if (_p.sourceEndpoint && _p.sourceEndpoint.connectorOverlays) {\n                    _p.overlays = _p.overlays || [];\n                    for (var i = 0, j = _p.sourceEndpoint.connectorOverlays.length; i < j; i++) {\n                        _p.overlays.push(_p.sourceEndpoint.connectorOverlays[i]);\n                    }\n                }\n\n                // scope\n                if (_p.sourceEndpoint && _p.sourceEndpoint.scope) {\n                    _p.scope = _p.sourceEndpoint.scope;\n                }\n\n                // pointer events\n                if (!_p[\"pointer-events\"] && _p.sourceEndpoint && _p.sourceEndpoint.connectorPointerEvents) {\n                    _p[\"pointer-events\"] = _p.sourceEndpoint.connectorPointerEvents;\n                }\n\n\n                var _addEndpoint = function (el, def, idx) {\n                    return _currentInstance.addEndpoint(el, _mergeOverrides(def, {\n                        anchor: _p.anchors ? _p.anchors[idx] : _p.anchor,\n                        endpoint: _p.endpoints ? _p.endpoints[idx] : _p.endpoint,\n                        paintStyle: _p.endpointStyles ? _p.endpointStyles[idx] : _p.endpointStyle,\n                        hoverPaintStyle: _p.endpointHoverStyles ? _p.endpointHoverStyles[idx] : _p.endpointHoverStyle\n                    }));\n                };\n\n                // check for makeSource/makeTarget specs.\n\n                var _oneElementDef = function (type, idx, defs, matchType) {\n                    if (_p[type] && !_p[type].endpoint && !_p[type + \"Endpoint\"] && !_p.newConnection) {\n                        var tid = _getId(_p[type]), tep = defs[tid];\n\n                        tep = tep ? tep[matchType] : null;\n\n                        if (tep) {\n                            // if not enabled, return.\n                            if (!tep.enabled) {\n                                return false;\n                            }\n                            var newEndpoint = tep.endpoint != null && tep.endpoint._jsPlumb ? tep.endpoint : _addEndpoint(_p[type], tep.def, idx);\n                            if (newEndpoint.isFull()) {\n                                return false;\n                            }\n                            _p[type + \"Endpoint\"] = newEndpoint;\n                            if (!_p.scope && tep.def.scope) {\n                                _p.scope = tep.def.scope;\n                            } // provide scope if not already provided and endpoint def has one.\n                            if (tep.uniqueEndpoint) {\n                                if (!tep.endpoint) {\n                                    tep.endpoint = newEndpoint;\n                                    newEndpoint.setDeleteOnEmpty(false);\n                                }\n                                else {\n                                    newEndpoint.finalEndpoint = tep.endpoint;\n                                }\n                            } else {\n                                newEndpoint.setDeleteOnEmpty(true);\n                            }\n\n                            //\n                            // copy in connector overlays if present on the source definition.\n                            //\n                            if (idx === 0 && tep.def.connectorOverlays) {\n                                _p.overlays = _p.overlays || [];\n                                Array.prototype.push.apply(_p.overlays, tep.def.connectorOverlays);\n                            }\n                        }\n                    }\n                };\n\n                if (_oneElementDef(\"source\", 0, this.sourceEndpointDefinitions, _p.type || \"default\") === false) {\n                    return;\n                }\n                if (_oneElementDef(\"target\", 1, this.targetEndpointDefinitions, _p.type || \"default\") === false) {\n                    return;\n                }\n\n                // last, ensure scopes match\n                if (_p.sourceEndpoint && _p.targetEndpoint) {\n                    if (!_scopeMatch(_p.sourceEndpoint, _p.targetEndpoint)) {\n                        _p = null;\n                    }\n                }\n\n                return _p;\n            }.bind(_currentInstance),\n\n            _newConnection = function (params) {\n                var connectionFunc = _currentInstance.Defaults.ConnectionType || _currentInstance.getDefaultConnectionType();\n\n                params._jsPlumb = _currentInstance;\n                params.newConnection = _newConnection;\n                params.newEndpoint = _newEndpoint;\n                params.endpointsByUUID = endpointsByUUID;\n                params.endpointsByElement = endpointsByElement;\n                params.finaliseConnection = _finaliseConnection;\n                params.id = \"con_\" + _idstamp();\n                var con = new connectionFunc(params);\n\n                // if the connection is draggable, then maybe we need to tell the target endpoint to init the\n                // dragging code. it won't run again if it already configured to be draggable.\n                if (con.isDetachable()) {\n                    con.endpoints[0].initDraggable(\"_jsPlumbSource\");\n                    con.endpoints[1].initDraggable(\"_jsPlumbTarget\");\n                }\n\n                return con;\n            },\n\n        //\n        // adds the connection to the backing model, fires an event if necessary and then redraws\n        //\n            _finaliseConnection = _currentInstance.finaliseConnection = function (jpc, params, originalEvent, doInformAnchorManager) {\n                params = params || {};\n                // add to list of connections (by scope).\n                if (!jpc.suspendedEndpoint) {\n                    connections.push(jpc);\n                }\n\n                jpc.pending = null;\n\n                // turn off isTemporarySource on the source endpoint (only viable on first draw)\n                jpc.endpoints[0].isTemporarySource = false;\n\n                // always inform the anchor manager\n                // except that if jpc has a suspended endpoint it's not true to say the\n                // connection is new; it has just (possibly) moved. the question is whether\n                // to make that call here or in the anchor manager.  i think perhaps here.\n                if (doInformAnchorManager !== false) {\n                    _currentInstance.anchorManager.newConnection(jpc);\n                }\n\n                // force a paint\n                _draw(jpc.source);\n\n                // fire an event\n                if (!params.doNotFireConnectionEvent && params.fireEvent !== false) {\n\n                    var eventArgs = {\n                        connection: jpc,\n                        source: jpc.source, target: jpc.target,\n                        sourceId: jpc.sourceId, targetId: jpc.targetId,\n                        sourceEndpoint: jpc.endpoints[0], targetEndpoint: jpc.endpoints[1]\n                    };\n\n                    _currentInstance.fire(\"connection\", eventArgs, originalEvent);\n                }\n            },\n\n        /*\n         factory method to prepare a new endpoint.  this should always be used instead of creating Endpoints\n         manually, since this method attaches event listeners and an id.\n         */\n            _newEndpoint = function (params, id) {\n                var endpointFunc = _currentInstance.Defaults.EndpointType || jsPlumb.Endpoint;\n                var _p = jsPlumb.extend({}, params);\n                _p._jsPlumb = _currentInstance;\n                _p.newConnection = _newConnection;\n                _p.newEndpoint = _newEndpoint;\n                _p.endpointsByUUID = endpointsByUUID;\n                _p.endpointsByElement = endpointsByElement;\n                _p.fireDetachEvent = fireDetachEvent;\n                _p.elementId = id || _getId(_p.source);\n                var ep = new endpointFunc(_p);\n                ep.id = \"ep_\" + _idstamp();\n                _manage(_p.elementId, _p.source);\n\n                if (!jsPlumb.headless) {\n                    _currentInstance.getDragManager().endpointAdded(_p.source, id);\n                }\n\n                return ep;\n            },\n\n        /*\n         * performs the given function operation on all the connections found\n         * for the given element id; this means we find all the endpoints for\n         * the given element, and then for each endpoint find the connectors\n         * connected to it. then we pass each connection in to the given\n         * function.\n         */\n            _operation = function (elId, func, endpointFunc) {\n                var endpoints = endpointsByElement[elId];\n                if (endpoints && endpoints.length) {\n                    for (var i = 0, ii = endpoints.length; i < ii; i++) {\n                        for (var j = 0, jj = endpoints[i].connections.length; j < jj; j++) {\n                            var retVal = func(endpoints[i].connections[j]);\n                            // if the function passed in returns true, we exit.\n                            // most functions return false.\n                            if (retVal) {\n                                return;\n                            }\n                        }\n                        if (endpointFunc) {\n                            endpointFunc(endpoints[i]);\n                        }\n                    }\n                }\n            },\n\n            _setDraggable = function (element, draggable) {\n                return jsPlumb.each(element, function (el) {\n                    if (_currentInstance.isDragSupported(el)) {\n                        draggableStates[_currentInstance.getAttribute(el, \"id\")] = draggable;\n                        _currentInstance.setElementDraggable(el, draggable);\n                    }\n                });\n            },\n        /*\n         * private method to do the business of hiding/showing.\n         *\n         * @param el\n         *            either Id of the element in question or a library specific\n         *            object for the element.\n         * @param state\n         *            String specifying a value for the css 'display' property\n         *            ('block' or 'none').\n         */\n            _setVisible = function (el, state, alsoChangeEndpoints) {\n                state = state === \"block\";\n                var endpointFunc = null;\n                if (alsoChangeEndpoints) {\n                    endpointFunc = function (ep) {\n                        ep.setVisible(state, true, true);\n                    };\n                }\n                var info = _info(el);\n                _operation(info.id, function (jpc) {\n                    if (state && alsoChangeEndpoints) {\n                        // this test is necessary because this functionality is new, and i wanted to maintain backwards compatibility.\n                        // this block will only set a connection to be visible if the other endpoint in the connection is also visible.\n                        var oidx = jpc.sourceId === info.id ? 1 : 0;\n                        if (jpc.endpoints[oidx].isVisible()) {\n                            jpc.setVisible(true);\n                        }\n                    }\n                    else { // the default behaviour for show, and what always happens for hide, is to just set the visibility without getting clever.\n                        jpc.setVisible(state);\n                    }\n                }, endpointFunc);\n            },\n        /*\n         * toggles the draggable state of the given element(s).\n         * el is either an id, or an element object, or a list of ids/element objects.\n         */\n            _toggleDraggable = function (el) {\n                var state;\n                jsPlumb.each(el, function (el) {\n                    var elId = _currentInstance.getAttribute(el, \"id\");\n                    state = draggableStates[elId] == null ? false : draggableStates[elId];\n                    state = !state;\n                    draggableStates[elId] = state;\n                    _currentInstance.setDraggable(el, state);\n                    return state;\n                }.bind(this));\n                return state;\n            },\n            /**\n             * private method to do the business of toggling hiding/showing.\n             */\n            _toggleVisible = function (elId, changeEndpoints) {\n                var endpointFunc = null;\n                if (changeEndpoints) {\n                    endpointFunc = function (ep) {\n                        var state = ep.isVisible();\n                        ep.setVisible(!state);\n                    };\n                }\n                _operation(elId, function (jpc) {\n                    var state = jpc.isVisible();\n                    jpc.setVisible(!state);\n                }, endpointFunc);\n            },\n\n        // TODO comparison performance\n            _getCachedData = function (elId) {\n                var o = offsets[elId];\n                if (!o) {\n                    return _updateOffset({elId: elId});\n                }\n                else {\n                    return {o: o, s: sizes[elId]};\n                }\n            },\n\n            /**\n             * gets an id for the given element, creating and setting one if\n             * necessary.  the id is of the form\n             *\n             *    jsPlumb_<instance index>_<index in instance>\n             *\n             * where \"index in instance\" is a monotonically increasing integer that starts at 0,\n             * for each instance.  this method is used not only to assign ids to elements that do not\n             * have them but also to connections and endpoints.\n             */\n            _getId = function (element, uuid, doNotCreateIfNotFound) {\n                if (_ju.isString(element)) {\n                    return element;\n                }\n                if (element == null) {\n                    return null;\n                }\n                var id = _currentInstance.getAttribute(element, \"id\");\n                if (!id || id === \"undefined\") {\n                    // check if fixed uuid parameter is given\n                    if (arguments.length === 2 && arguments[1] !== undefined) {\n                        id = uuid;\n                    }\n                    else if (arguments.length === 1 || (arguments.length === 3 && !arguments[2])) {\n                        id = \"jsPlumb_\" + _instanceIndex + \"_\" + _idstamp();\n                    }\n\n                    if (!doNotCreateIfNotFound) {\n                        _currentInstance.setAttribute(element, \"id\", id);\n                    }\n                }\n                return id;\n            };\n\n        this.setConnectionBeingDragged = function (v) {\n            connectionBeingDragged = v;\n        };\n        this.isConnectionBeingDragged = function () {\n            return connectionBeingDragged;\n        };\n\n        /**\n         * Returns a map of all the elements this jsPlumbInstance is currently managing.\n         * @returns {Object} Map of [id-> {el, endpoint[], connection, position}] information.\n         */\n        this.getManagedElements = function() {\n            return managedElements;\n        };\n\n        this.connectorClass = \"jtk-connector\";\n        this.connectorOutlineClass = \"jtk-connector-outline\";\n        this.connectedClass = \"jtk-connected\";\n        this.hoverClass = \"jtk-hover\";\n        this.endpointClass = \"jtk-endpoint\";\n        this.endpointConnectedClass = \"jtk-endpoint-connected\";\n        this.endpointFullClass = \"jtk-endpoint-full\";\n        this.endpointDropAllowedClass = \"jtk-endpoint-drop-allowed\";\n        this.endpointDropForbiddenClass = \"jtk-endpoint-drop-forbidden\";\n        this.overlayClass = \"jtk-overlay\";\n        this.draggingClass = \"jtk-dragging\";// CONVERTED\n        this.elementDraggingClass = \"jtk-element-dragging\";// CONVERTED\n        this.sourceElementDraggingClass = \"jtk-source-element-dragging\"; // CONVERTED\n        this.targetElementDraggingClass = \"jtk-target-element-dragging\";// CONVERTED\n        this.endpointAnchorClassPrefix = \"jtk-endpoint-anchor\";\n        this.hoverSourceClass = \"jtk-source-hover\";\n        this.hoverTargetClass = \"jtk-target-hover\";\n        this.dragSelectClass = \"jtk-drag-select\";\n\n        this.Anchors = {};\n        this.Connectors = {  \"svg\": {} };\n        this.Endpoints = { \"svg\": {} };\n        this.Overlays = { \"svg\": {} } ;\n        this.ConnectorRenderers = {};\n        this.SVG = \"svg\";\n\n// --------------------------- jsPlumbInstance public API ---------------------------------------------------------\n\n\n        this.addEndpoint = function (el, params, referenceParams) {\n            referenceParams = referenceParams || {};\n            var p = jsPlumb.extend({}, referenceParams);\n            jsPlumb.extend(p, params);\n            p.endpoint = p.endpoint || _currentInstance.Defaults.Endpoint;\n            p.paintStyle = p.paintStyle || _currentInstance.Defaults.EndpointStyle;\n\n            var results = [],\n                inputs = (_ju.isArray(el) || (el.length != null && !_ju.isString(el))) ? el : [ el ];\n\n            for (var i = 0, j = inputs.length; i < j; i++) {\n                p.source = _currentInstance.getElement(inputs[i]);\n                _ensureContainer(p.source);\n\n                var id = _getId(p.source), e = _newEndpoint(p, id);\n\n                // ensure element is managed.\n                var myOffset = _manage(id, p.source).info.o;\n                _ju.addToList(endpointsByElement, id, e);\n\n                if (!_suspendDrawing) {\n                    e.paint({\n                        anchorLoc: e.anchor.compute({ xy: [ myOffset.left, myOffset.top ], wh: sizes[id], element: e, timestamp: _suspendedAt }),\n                        timestamp: _suspendedAt\n                    });\n                }\n\n                results.push(e);\n            }\n\n            return results.length === 1 ? results[0] : results;\n        };\n\n        this.addEndpoints = function (el, endpoints, referenceParams) {\n            var results = [];\n            for (var i = 0, j = endpoints.length; i < j; i++) {\n                var e = _currentInstance.addEndpoint(el, endpoints[i], referenceParams);\n                if (_ju.isArray(e)) {\n                    Array.prototype.push.apply(results, e);\n                }\n                else {\n                    results.push(e);\n                }\n            }\n            return results;\n        };\n\n        this.animate = function (el, properties, options) {\n            if (!this.animationSupported) {\n                return false;\n            }\n\n            options = options || {};\n            var del = _currentInstance.getElement(el),\n                id = _getId(del),\n                stepFunction = jsPlumb.animEvents.step,\n                completeFunction = jsPlumb.animEvents.complete;\n\n            options[stepFunction] = _ju.wrap(options[stepFunction], function () {\n                _currentInstance.revalidate(id);\n            });\n\n            // onComplete repaints, just to make sure everything looks good at the end of the animation.\n            options[completeFunction] = _ju.wrap(options[completeFunction], function () {\n                _currentInstance.revalidate(id);\n            });\n\n            _currentInstance.doAnimate(del, properties, options);\n        };\n\n        /**\n         * checks for a listener for the given condition, executing it if found, passing in the given value.\n         * condition listeners would have been attached using \"bind\" (which is, you could argue, now overloaded, since\n         * firing click events etc is a bit different to what this does).  i thought about adding a \"bindCondition\"\n         * or something, but decided against it, for the sake of simplicity. jsPlumb will never fire one of these\n         * condition events anyway.\n         */\n        this.checkCondition = function (conditionName, args) {\n            var l = _currentInstance.getListener(conditionName),\n                r = true;\n\n            if (l && l.length > 0) {\n                var values = Array.prototype.slice.call(arguments, 1);\n                try {\n                    for (var i = 0, j = l.length; i < j; i++) {\n                        r = r && l[i].apply(l[i], values);\n                    }\n                }\n                catch (e) {\n                    _ju.log(_currentInstance, \"cannot check condition [\" + conditionName + \"]\" + e);\n                }\n            }\n            return r;\n        };\n\n        this.connect = function (params, referenceParams) {\n            // prepare a final set of parameters to create connection with\n            var _p = _prepareConnectionParams(params, referenceParams), jpc;\n            // TODO probably a nicer return value if the connection was not made.  _prepareConnectionParams\n            // will return null (and log something) if either endpoint was full.  what would be nicer is to\n            // create a dedicated 'error' object.\n            if (_p) {\n                if (_p.source == null && _p.sourceEndpoint == null) {\n                    _ju.log(\"Cannot establish connection - source does not exist\");\n                    return;\n                }\n                if (_p.target == null && _p.targetEndpoint == null) {\n                    _ju.log(\"Cannot establish connection - target does not exist\");\n                    return;\n                }\n                _ensureContainer(_p.source);\n                // create the connection.  it is not yet registered\n                jpc = _newConnection(_p);\n                // now add it the model, fire an event, and redraw\n                _finaliseConnection(jpc, _p);\n            }\n            return jpc;\n        };\n\n        var stTypes = [\n            { el: \"source\", elId: \"sourceId\", epDefs: \"sourceEndpointDefinitions\" },\n            { el: \"target\", elId: \"targetId\", epDefs: \"targetEndpointDefinitions\" }\n        ];\n\n        var _set = function (c, el, idx, doNotRepaint) {\n            var ep, _st = stTypes[idx], cId = c[_st.elId], cEl = c[_st.el], sid, sep,\n                oldEndpoint = c.endpoints[idx];\n\n            var evtParams = {\n                index: idx,\n                originalSourceId: idx === 0 ? cId : c.sourceId,\n                newSourceId: c.sourceId,\n                originalTargetId: idx === 1 ? cId : c.targetId,\n                newTargetId: c.targetId,\n                connection: c\n            };\n\n            if (el.constructor === jsPlumb.Endpoint) {\n                ep = el;\n                ep.addConnection(c);\n                el = ep.element;\n            }\n            else {\n                sid = _getId(el);\n                sep = this[_st.epDefs][sid];\n\n                if (sid === c[_st.elId]) {\n                    ep = null; // dont change source/target if the element is already the one given.\n                }\n                else if (sep) {\n                    for (var t in sep) {\n                        if (!sep[t].enabled) {\n                            return;\n                        }\n                        ep = sep[t].endpoint != null && sep[t].endpoint._jsPlumb ? sep[t].endpoint : this.addEndpoint(el, sep[t].def);\n                        if (sep[t].uniqueEndpoint) {\n                            sep[t].endpoint = ep;\n                        }\n                        ep.addConnection(c);\n                    }\n                }\n                else {\n                    ep = c.makeEndpoint(idx === 0, el, sid);\n                }\n            }\n\n            if (ep != null) {\n                oldEndpoint.detachFromConnection(c);\n                c.endpoints[idx] = ep;\n                c[_st.el] = ep.element;\n                c[_st.elId] = ep.elementId;\n                evtParams[idx === 0 ? \"newSourceId\" : \"newTargetId\"] = ep.elementId;\n\n                fireMoveEvent(evtParams);\n\n                if (!doNotRepaint) {\n                    c.repaint();\n                }\n            }\n\n            evtParams.element = el;\n            return evtParams;\n\n        }.bind(this);\n\n        this.setSource = function (connection, el, doNotRepaint) {\n            var p = _set(connection, el, 0, doNotRepaint);\n            this.anchorManager.sourceChanged(p.originalSourceId, p.newSourceId, connection, p.el);\n        };\n        this.setTarget = function (connection, el, doNotRepaint) {\n            var p = _set(connection, el, 1, doNotRepaint);\n            this.anchorManager.updateOtherEndpoint(p.originalSourceId, p.originalTargetId, p.newTargetId, connection);\n        };\n\n        this.deleteEndpoint = function (object, dontUpdateHover, deleteAttachedObjects) {\n            var endpoint = (typeof object === \"string\") ? endpointsByUUID[object] : object;\n            if (endpoint) {\n                _currentInstance.deleteObject({ endpoint: endpoint, dontUpdateHover: dontUpdateHover, deleteAttachedObjects:deleteAttachedObjects });\n            }\n            return _currentInstance;\n        };\n\n        this.deleteEveryEndpoint = function () {\n            var _is = _currentInstance.setSuspendDrawing(true);\n            for (var id in endpointsByElement) {\n                var endpoints = endpointsByElement[id];\n                if (endpoints && endpoints.length) {\n                    for (var i = 0, j = endpoints.length; i < j; i++) {\n                        _currentInstance.deleteEndpoint(endpoints[i], true);\n                    }\n                }\n            }\n            endpointsByElement = {};\n            managedElements = {};\n            endpointsByUUID = {};\n            offsets = {};\n            offsetTimestamps = {};\n            _currentInstance.anchorManager.reset();\n            var dm = _currentInstance.getDragManager();\n            if (dm) {\n                dm.reset();\n            }\n            if (!_is) {\n                _currentInstance.setSuspendDrawing(false);\n            }\n            return _currentInstance;\n        };\n\n        var fireDetachEvent = function (jpc, doFireEvent, originalEvent) {\n            // may have been given a connection, or in special cases, an object\n            var connType = _currentInstance.Defaults.ConnectionType || _currentInstance.getDefaultConnectionType(),\n                argIsConnection = jpc.constructor === connType,\n                params = argIsConnection ? {\n                    connection: jpc,\n                    source: jpc.source, target: jpc.target,\n                    sourceId: jpc.sourceId, targetId: jpc.targetId,\n                    sourceEndpoint: jpc.endpoints[0], targetEndpoint: jpc.endpoints[1]\n                } : jpc;\n\n            if (doFireEvent) {\n                _currentInstance.fire(\"connectionDetached\", params, originalEvent);\n            }\n\n            // always fire this. used by internal jsplumb stuff.\n            _currentInstance.fire(\"internal.connectionDetached\", params, originalEvent);\n\n            _currentInstance.anchorManager.connectionDetached(params);\n        };\n\n        var fireMoveEvent = _currentInstance.fireMoveEvent = function (params, evt) {\n            _currentInstance.fire(\"connectionMoved\", params, evt);\n        };\n\n        this.unregisterEndpoint = function (endpoint) {\n            if (endpoint._jsPlumb.uuid) {\n                endpointsByUUID[endpoint._jsPlumb.uuid] = null;\n            }\n            _currentInstance.anchorManager.deleteEndpoint(endpoint);\n            // TODO at least replace this with a removeWithFunction call.\n            for (var e in endpointsByElement) {\n                var endpoints = endpointsByElement[e];\n                if (endpoints) {\n                    var newEndpoints = [];\n                    for (var i = 0, j = endpoints.length; i < j; i++) {\n                        if (endpoints[i] !== endpoint) {\n                            newEndpoints.push(endpoints[i]);\n                        }\n                    }\n\n                    endpointsByElement[e] = newEndpoints;\n                }\n                if (endpointsByElement[e].length < 1) {\n                    delete endpointsByElement[e];\n                }\n            }\n        };\n\n        var IS_DETACH_ALLOWED = \"isDetachAllowed\";\n        var BEFORE_DETACH = \"beforeDetach\";\n        var CHECK_CONDITION = \"checkCondition\";\n\n        /**\n         * Deletes a Connection.\n         * @method deleteConnection\n         * @param connection Connection to delete\n         * @param {Object} [params] Optional delete parameters\n         * @param {Boolean} [params.doNotFireEvent=false] If true, a connection detached event will not be fired. Otherwise one will.\n         * @param {Boolean} [params.force=false] If true, the connection will be deleted even if a beforeDetach interceptor tries to stop the deletion.\n         * @returns {Boolean} True if the connection was deleted, false otherwise.\n         */\n        this.deleteConnection = function(connection, params) {\n\n            if (connection != null) {\n                params = params || {};\n\n                if (params.force || _ju.functionChain(true, false, [\n                    [ connection.endpoints[0], IS_DETACH_ALLOWED, [ connection ] ],\n                    [ connection.endpoints[1], IS_DETACH_ALLOWED, [ connection ] ],\n                    [ connection, IS_DETACH_ALLOWED, [ connection ] ],\n                    [ _currentInstance, CHECK_CONDITION, [ BEFORE_DETACH, connection ] ]\n                ])) {\n\n                    connection.setHover(false);\n                    fireDetachEvent(connection, !connection.pending && params.fireEvent !== false, params.originalEvent);\n\n                    connection.endpoints[0].detachFromConnection(connection);\n                    connection.endpoints[1].detachFromConnection(connection);\n                    _ju.removeWithFunction(connections, function (_c) {\n                        return connection.id === _c.id;\n                    });\n\n                    connection.cleanup();\n                    connection.destroy();\n                    return true;\n                }\n            }\n            return false;\n        };\n\n        /**\n         * Remove all Connections from all elements, but leaves Endpoints in place ((unless a connection is set to auto delete its Endpoints).\n         * @method deleteEveryConnection\n         * @param {Object} [params] optional params object for the call\n         * @param {Boolean} [params.fireEvent=true] Whether or not to fire detach events\n         * @param {Boolean} [params.forceDetach=false] If true, this call will ignore any `beforeDetach` interceptors.\n         * @returns {Number} The number of connections that were deleted.\n         */\n        this.deleteEveryConnection = function (params) {\n            params = params || {};\n            var count = connections.length, deletedCount = 0;\n            _currentInstance.batch(function () {\n                for (var i = 0; i < count; i++) {\n                    deletedCount += _currentInstance.deleteConnection(connections[0], params) ? 1 : 0;\n                }\n            });\n            return deletedCount;\n        };\n\n        /**\n         * Removes all an element's Connections.\n         * @method deleteConnectionsForElement\n         * @param {Object} el Either the id of the element, or a selector for the element.\n         * @param {Object} [params] Optional parameters.\n         * @param {Boolean} [params.fireEvent=true] Whether or not to fire the detach event.\n         * @param {Boolean} [params.forceDetach=false] If true, this call will ignore any `beforeDetach` interceptors.\n         * @return {jsPlumbInstance} The current jsPlumb instance.\n         */\n        this.deleteConnectionsForElement = function (el, params) {\n            params = params || {};\n            el = _currentInstance.getElement(el);\n            var id = _getId(el), endpoints = endpointsByElement[id];\n            if (endpoints && endpoints.length) {\n                for (var i = 0, j = endpoints.length; i < j; i++) {\n                    endpoints[i].deleteEveryConnection(params);\n                }\n            }\n            return _currentInstance;\n        };\n\n        /// not public.  but of course its exposed. how to change this.\n        this.deleteObject = function (params) {\n            var result = {\n                    endpoints: {},\n                    connections: {},\n                    endpointCount: 0,\n                    connectionCount: 0\n                },\n                deleteAttachedObjects = params.deleteAttachedObjects !== false;\n\n            var unravelConnection = function (connection) {\n                if (connection != null && result.connections[connection.id] == null) {\n                    if (!params.dontUpdateHover && connection._jsPlumb != null) {\n                        connection.setHover(false);\n                    }\n                    result.connections[connection.id] = connection;\n                    result.connectionCount++;\n                }\n            };\n            var unravelEndpoint = function (endpoint) {\n                if (endpoint != null && result.endpoints[endpoint.id] == null) {\n                    if (!params.dontUpdateHover && endpoint._jsPlumb != null) {\n                        endpoint.setHover(false);\n                    }\n                    result.endpoints[endpoint.id] = endpoint;\n                    result.endpointCount++;\n\n                    if (deleteAttachedObjects) {\n                        for (var i = 0; i < endpoint.connections.length; i++) {\n                            var c = endpoint.connections[i];\n                            unravelConnection(c);\n                        }\n                    }\n                }\n            };\n\n            if (params.connection) {\n                unravelConnection(params.connection);\n            }\n            else {\n                unravelEndpoint(params.endpoint);\n            }\n\n            // loop through connections\n            for (var i in result.connections) {\n                var c = result.connections[i];\n                if (c._jsPlumb) {\n                    _ju.removeWithFunction(connections, function (_c) {\n                        return c.id === _c.id;\n                    });\n\n                    fireDetachEvent(c, params.fireEvent === false ? false : !c.pending, params.originalEvent);\n                    var doNotCleanup = params.deleteAttachedObjects == null ? null : !params.deleteAttachedObjects;\n\n                    c.endpoints[0].detachFromConnection(c, null, doNotCleanup);\n                    c.endpoints[1].detachFromConnection(c, null, doNotCleanup);\n\n                    c.cleanup(true);\n                    c.destroy(true);\n                }\n            }\n\n            // loop through endpoints\n            for (var j in result.endpoints) {\n                var e = result.endpoints[j];\n                if (e._jsPlumb) {\n                    _currentInstance.unregisterEndpoint(e);\n                    // FIRE some endpoint deleted event?\n                    e.cleanup(true);\n                    e.destroy(true);\n                }\n            }\n\n            return result;\n        };\n\n        this.draggable = function (el, options) {\n            var info;\n            _each(function(_el) {\n                 info = _info(_el);\n                if (info.el) {\n                    _initDraggableIfNecessary(info.el, true, options, info.id, true);\n                }\n            }, el);\n            return _currentInstance;\n        };\n\n        this.droppable = function(el, options) {\n            var info;\n            options = options || {};\n            options.allowLoopback = false;\n            _each(function(_el) {\n                info = _info(_el);\n                if (info.el) {\n                    _currentInstance.initDroppable(info.el, options);\n                }\n            }, el);\n            return _currentInstance;\n        };\n\n        // helpers for select/selectEndpoints\n        var _setOperation = function (list, func, args, selector) {\n                for (var i = 0, j = list.length; i < j; i++) {\n                    list[i][func].apply(list[i], args);\n                }\n                return selector(list);\n            },\n            _getOperation = function (list, func, args) {\n                var out = [];\n                for (var i = 0, j = list.length; i < j; i++) {\n                    out.push([ list[i][func].apply(list[i], args), list[i] ]);\n                }\n                return out;\n            },\n            setter = function (list, func, selector) {\n                return function () {\n                    return _setOperation(list, func, arguments, selector);\n                };\n            },\n            getter = function (list, func) {\n                return function () {\n                    return _getOperation(list, func, arguments);\n                };\n            },\n            prepareList = function (input, doNotGetIds) {\n                var r = [];\n                if (input) {\n                    if (typeof input === 'string') {\n                        if (input === \"*\") {\n                            return input;\n                        }\n                        r.push(input);\n                    }\n                    else {\n                        if (doNotGetIds) {\n                            r = input;\n                        }\n                        else {\n                            if (input.length) {\n                                for (var i = 0, j = input.length; i < j; i++) {\n                                    r.push(_info(input[i]).id);\n                                }\n                            }\n                            else {\n                                r.push(_info(input).id);\n                            }\n                        }\n                    }\n                }\n                return r;\n            },\n            filterList = function (list, value, missingIsFalse) {\n                if (list === \"*\") {\n                    return true;\n                }\n                return list.length > 0 ? list.indexOf(value) !== -1 : !missingIsFalse;\n            };\n\n        // get some connections, specifying source/target/scope\n        this.getConnections = function (options, flat) {\n            if (!options) {\n                options = {};\n            } else if (options.constructor === String) {\n                options = { \"scope\": options };\n            }\n            var scope = options.scope || _currentInstance.getDefaultScope(),\n                scopes = prepareList(scope, true),\n                sources = prepareList(options.source),\n                targets = prepareList(options.target),\n                results = (!flat && scopes.length > 1) ? {} : [],\n                _addOne = function (scope, obj) {\n                    if (!flat && scopes.length > 1) {\n                        var ss = results[scope];\n                        if (ss == null) {\n                            ss = results[scope] = [];\n                        }\n                        ss.push(obj);\n                    } else {\n                        results.push(obj);\n                    }\n                };\n\n            for (var j = 0, jj = connections.length; j < jj; j++) {\n                var c = connections[j],\n                    sourceId = c.proxies && c.proxies[0] ? c.proxies[0].originalEp.elementId : c.sourceId,\n                    targetId = c.proxies && c.proxies[1] ? c.proxies[1].originalEp.elementId : c.targetId;\n\n                if (filterList(scopes, c.scope) && filterList(sources, sourceId) && filterList(targets, targetId)) {\n                    _addOne(c.scope, c);\n                }\n            }\n\n            return results;\n        };\n\n        var _curryEach = function (list, executor) {\n                return function (f) {\n                    for (var i = 0, ii = list.length; i < ii; i++) {\n                        f(list[i]);\n                    }\n                    return executor(list);\n                };\n            },\n            _curryGet = function (list) {\n                return function (idx) {\n                    return list[idx];\n                };\n            };\n\n        var _makeCommonSelectHandler = function (list, executor) {\n            var out = {\n                    length: list.length,\n                    each: _curryEach(list, executor),\n                    get: _curryGet(list)\n                },\n                setters = [\"setHover\", \"removeAllOverlays\", \"setLabel\", \"addClass\", \"addOverlay\", \"removeOverlay\",\n                    \"removeOverlays\", \"showOverlay\", \"hideOverlay\", \"showOverlays\", \"hideOverlays\", \"setPaintStyle\",\n                    \"setHoverPaintStyle\", \"setSuspendEvents\", \"setParameter\", \"setParameters\", \"setVisible\",\n                    \"repaint\", \"addType\", \"toggleType\", \"removeType\", \"removeClass\", \"setType\", \"bind\", \"unbind\" ],\n\n                getters = [\"getLabel\", \"getOverlay\", \"isHover\", \"getParameter\", \"getParameters\", \"getPaintStyle\",\n                    \"getHoverPaintStyle\", \"isVisible\", \"hasType\", \"getType\", \"isSuspendEvents\" ],\n                i, ii;\n\n            for (i = 0, ii = setters.length; i < ii; i++) {\n                out[setters[i]] = setter(list, setters[i], executor);\n            }\n\n            for (i = 0, ii = getters.length; i < ii; i++) {\n                out[getters[i]] = getter(list, getters[i]);\n            }\n\n            return out;\n        };\n\n        var _makeConnectionSelectHandler = function (list) {\n            var common = _makeCommonSelectHandler(list, _makeConnectionSelectHandler);\n            return jsPlumb.extend(common, {\n                // setters\n                setDetachable: setter(list, \"setDetachable\", _makeConnectionSelectHandler),\n                setReattach: setter(list, \"setReattach\", _makeConnectionSelectHandler),\n                setConnector: setter(list, \"setConnector\", _makeConnectionSelectHandler),\n                delete: function () {\n                    for (var i = 0, ii = list.length; i < ii; i++) {\n                        _currentInstance.deleteConnection(list[i]);\n                    }\n                },\n                // getters\n                isDetachable: getter(list, \"isDetachable\"),\n                isReattach: getter(list, \"isReattach\")\n            });\n        };\n\n        var _makeEndpointSelectHandler = function (list) {\n            var common = _makeCommonSelectHandler(list, _makeEndpointSelectHandler);\n            return jsPlumb.extend(common, {\n                setEnabled: setter(list, \"setEnabled\", _makeEndpointSelectHandler),\n                setAnchor: setter(list, \"setAnchor\", _makeEndpointSelectHandler),\n                isEnabled: getter(list, \"isEnabled\"),\n                deleteEveryConnection: function () {\n                    for (var i = 0, ii = list.length; i < ii; i++) {\n                        list[i].deleteEveryConnection();\n                    }\n                },\n                \"delete\": function () {\n                    for (var i = 0, ii = list.length; i < ii; i++) {\n                        _currentInstance.deleteEndpoint(list[i]);\n                    }\n                }\n            });\n        };\n\n        this.select = function (params) {\n            params = params || {};\n            params.scope = params.scope || \"*\";\n            return _makeConnectionSelectHandler(params.connections || _currentInstance.getConnections(params, true));\n        };\n\n        this.selectEndpoints = function (params) {\n            params = params || {};\n            params.scope = params.scope || \"*\";\n            var noElementFilters = !params.element && !params.source && !params.target,\n                elements = noElementFilters ? \"*\" : prepareList(params.element),\n                sources = noElementFilters ? \"*\" : prepareList(params.source),\n                targets = noElementFilters ? \"*\" : prepareList(params.target),\n                scopes = prepareList(params.scope, true);\n\n            var ep = [];\n\n            for (var el in endpointsByElement) {\n                var either = filterList(elements, el, true),\n                    source = filterList(sources, el, true),\n                    sourceMatchExact = sources !== \"*\",\n                    target = filterList(targets, el, true),\n                    targetMatchExact = targets !== \"*\";\n\n                // if they requested 'either' then just match scope. otherwise if they requested 'source' (not as a wildcard) then we have to match only endpoints that have isSource set to to true, and the same thing with isTarget.\n                if (either || source || target) {\n                    inner:\n                        for (var i = 0, ii = endpointsByElement[el].length; i < ii; i++) {\n                            var _ep = endpointsByElement[el][i];\n                            if (filterList(scopes, _ep.scope, true)) {\n\n                                var noMatchSource = (sourceMatchExact && sources.length > 0 && !_ep.isSource),\n                                    noMatchTarget = (targetMatchExact && targets.length > 0 && !_ep.isTarget);\n\n                                if (noMatchSource || noMatchTarget) {\n                                    continue inner;\n                                }\n\n                                ep.push(_ep);\n                            }\n                        }\n                }\n            }\n\n            return _makeEndpointSelectHandler(ep);\n        };\n\n        // get all connections managed by the instance of jsplumb.\n        this.getAllConnections = function () {\n            return connections;\n        };\n        this.getDefaultScope = function () {\n            return DEFAULT_SCOPE;\n        };\n        // get an endpoint by uuid.\n        this.getEndpoint = _getEndpoint;\n        /**\n         * Gets the list of Endpoints for a given element.\n         * @method getEndpoints\n         * @param {String|Element|Selector} el The element to get endpoints for.\n         * @return {Endpoint[]} An array of Endpoints for the specified element.\n         */\n        this.getEndpoints = function (el) {\n            return endpointsByElement[_info(el).id] || [];\n        };\n        // gets the default endpoint type. used when subclassing. see wiki.\n        this.getDefaultEndpointType = function () {\n            return jsPlumb.Endpoint;\n        };\n        // gets the default connection type. used when subclassing.  see wiki.\n        this.getDefaultConnectionType = function () {\n            return jsPlumb.Connection;\n        };\n        /*\n         * Gets an element's id, creating one if necessary. really only exposed\n         * for the lib-specific functionality to access; would be better to pass\n         * the current instance into the lib-specific code (even though this is\n         * a static call. i just don't want to expose it to the public API).\n         */\n        this.getId = _getId;\n\n        this.appendElement = _appendElement;\n\n        var _hoverSuspended = false;\n        this.isHoverSuspended = function () {\n            return _hoverSuspended;\n        };\n        this.setHoverSuspended = function (s) {\n            _hoverSuspended = s;\n        };\n\n        // set an element's connections to be hidden\n        this.hide = function (el, changeEndpoints) {\n            _setVisible(el, \"none\", changeEndpoints);\n            return _currentInstance;\n        };\n\n        // exposed for other objects to use to get a unique id.\n        this.idstamp = _idstamp;\n\n        // this.connectorsInitialized = false;\n        // this.registerConnectorType = function (connector, name) {\n        //     connectorTypes.push([connector, name]);\n        // };\n\n        // ensure that, if the current container exists, it is a DOM element and not a selector.\n        // if it does not exist and `candidate` is supplied, the offset parent of that element will be set as the Container.\n        // this is used to do a better default behaviour for the case that the user has not set a container:\n        // addEndpoint, makeSource, makeTarget and connect all call this method with the offsetParent of the\n        // element in question (for connect it is the source element). So if no container is set, it is inferred\n        // to be the offsetParent of the first element the user tries to connect.\n        var _ensureContainer = function (candidate) {\n            if (!_container && candidate) {\n                var can = _currentInstance.getElement(candidate);\n                if (can.offsetParent) {\n                    _currentInstance.setContainer(can.offsetParent);\n                }\n            }\n        };\n\n        var _getContainerFromDefaults = function () {\n            if (_currentInstance.Defaults.Container) {\n                _currentInstance.setContainer(_currentInstance.Defaults.Container);\n            }\n        };\n\n        // check if a given element is managed or not. if not, add to our map. if drawing is not suspended then\n        // we'll also stash its dimensions; otherwise we'll do this in a lazy way through updateOffset.\n        var _manage = _currentInstance.manage = function (id, element, _transient) {\n            if (!managedElements[id]) {\n                managedElements[id] = {\n                    el: element,\n                    endpoints: [],\n                    connections: []\n                };\n\n                managedElements[id].info = _updateOffset({ elId: id, timestamp: _suspendedAt });\n                if (!_transient) {\n                    _currentInstance.fire(\"manageElement\", { id:id, info:managedElements[id].info, el:element });\n                }\n            }\n\n            return managedElements[id];\n        };\n\n        var _unmanage = function(id) {\n            if (managedElements[id]) {\n                delete managedElements[id];\n                _currentInstance.fire(\"unmanageElement\", id);\n            }\n        };\n\n        /**\n         * updates the offset and size for a given element, and stores the\n         * values. if 'offset' is not null we use that (it would have been\n         * passed in from a drag call) because it's faster; but if it is null,\n         * or if 'recalc' is true in order to force a recalculation, we get the current values.\n         */\n        var _updateOffset = this.updateOffset = function (params) {\n\n            var timestamp = params.timestamp, recalc = params.recalc, offset = params.offset, elId = params.elId, s;\n            if (_suspendDrawing && !timestamp) {\n                timestamp = _suspendedAt;\n            }\n            if (!recalc) {\n                if (timestamp && timestamp === offsetTimestamps[elId]) {\n                    return {o: params.offset || offsets[elId], s: sizes[elId]};\n                }\n            }\n            if (recalc || (!offset && offsets[elId] == null)) { // if forced repaint or no offset available, we recalculate.\n\n                // get the current size and offset, and store them\n                s = managedElements[elId] ? managedElements[elId].el : null;\n                if (s != null) {\n                    sizes[elId] = _currentInstance.getSize(s);\n                    offsets[elId] = _currentInstance.getOffset(s);\n                    offsetTimestamps[elId] = timestamp;\n                }\n            } else {\n                offsets[elId] = offset || offsets[elId];\n                if (sizes[elId] == null) {\n                    s = managedElements[elId].el;\n                    if (s != null) {\n                        sizes[elId] = _currentInstance.getSize(s);\n                    }\n                }\n                offsetTimestamps[elId] = timestamp;\n            }\n\n            if (offsets[elId] && !offsets[elId].right) {\n                offsets[elId].right = offsets[elId].left + sizes[elId][0];\n                offsets[elId].bottom = offsets[elId].top + sizes[elId][1];\n                offsets[elId].width = sizes[elId][0];\n                offsets[elId].height = sizes[elId][1];\n                offsets[elId].centerx = offsets[elId].left + (offsets[elId].width / 2);\n                offsets[elId].centery = offsets[elId].top + (offsets[elId].height / 2);\n            }\n\n            return {o: offsets[elId], s: sizes[elId]};\n        };\n\n        /**\n         * callback from the current library to tell us to prepare ourselves (attach\n         * mouse listeners etc; can't do that until the library has provided a bind method)\n         */\n        this.init = function () {\n            if (!initialized) {\n                _getContainerFromDefaults();\n                _currentInstance.anchorManager = new root.jsPlumb.AnchorManager({jsPlumbInstance: _currentInstance});\n                initialized = true;\n                _currentInstance.fire(\"ready\", _currentInstance);\n            }\n        }.bind(this);\n\n        this.log = log;\n        this.jsPlumbUIComponent = jsPlumbUIComponent;\n\n        /*\n         * Creates an anchor with the given params.\n         *\n         *\n         * Returns: The newly created Anchor.\n         * Throws: an error if a named anchor was not found.\n         */\n        this.makeAnchor = function () {\n            var pp, _a = function (t, p) {\n                if (root.jsPlumb.Anchors[t]) {\n                    return new root.jsPlumb.Anchors[t](p);\n                }\n                if (!_currentInstance.Defaults.DoNotThrowErrors) {\n                    throw { msg: \"jsPlumb: unknown anchor type '\" + t + \"'\" };\n                }\n            };\n            if (arguments.length === 0) {\n                return null;\n            }\n            var specimen = arguments[0], elementId = arguments[1], jsPlumbInstance = arguments[2], newAnchor = null;\n            // if it appears to be an anchor already...\n            if (specimen.compute && specimen.getOrientation) {\n                return specimen;\n            }  //TODO hazy here about whether it should be added or is already added somehow.\n            // is it the name of an anchor type?\n            else if (typeof specimen === \"string\") {\n                newAnchor = _a(arguments[0], {elementId: elementId, jsPlumbInstance: _currentInstance});\n            }\n            // is it an array? it will be one of:\n            // an array of [spec, params] - this defines a single anchor, which may be dynamic, but has parameters.\n            // an array of arrays - this defines some dynamic anchors\n            // an array of numbers - this defines a single anchor.\n            else if (_ju.isArray(specimen)) {\n                if (_ju.isArray(specimen[0]) || _ju.isString(specimen[0])) {\n                    // if [spec, params] format\n                    if (specimen.length === 2 && _ju.isObject(specimen[1])) {\n                        // if first arg is a string, its a named anchor with params\n                        if (_ju.isString(specimen[0])) {\n                            pp = root.jsPlumb.extend({elementId: elementId, jsPlumbInstance: _currentInstance}, specimen[1]);\n                            newAnchor = _a(specimen[0], pp);\n                        }\n                        // otherwise first arg is array, second is params. we treat as a dynamic anchor, which is fine\n                        // even if the first arg has only one entry. you could argue all anchors should be implicitly dynamic in fact.\n                        else {\n                            pp = root.jsPlumb.extend({elementId: elementId, jsPlumbInstance: _currentInstance, anchors: specimen[0]}, specimen[1]);\n                            newAnchor = new root.jsPlumb.DynamicAnchor(pp);\n                        }\n                    }\n                    else {\n                        newAnchor = new jsPlumb.DynamicAnchor({anchors: specimen, selector: null, elementId: elementId, jsPlumbInstance: _currentInstance});\n                    }\n\n                }\n                else {\n                    var anchorParams = {\n                        x: specimen[0], y: specimen[1],\n                        orientation: (specimen.length >= 4) ? [ specimen[2], specimen[3] ] : [0, 0],\n                        offsets: (specimen.length >= 6) ? [ specimen[4], specimen[5] ] : [ 0, 0 ],\n                        elementId: elementId,\n                        jsPlumbInstance: _currentInstance,\n                        cssClass: specimen.length === 7 ? specimen[6] : null\n                    };\n                    newAnchor = new root.jsPlumb.Anchor(anchorParams);\n                    newAnchor.clone = function () {\n                        return new root.jsPlumb.Anchor(anchorParams);\n                    };\n                }\n            }\n\n            if (!newAnchor.id) {\n                newAnchor.id = \"anchor_\" + _idstamp();\n            }\n            return newAnchor;\n        };\n\n        /**\n         * makes a list of anchors from the given list of types or coords, eg\n         * [\"TopCenter\", \"RightMiddle\", \"BottomCenter\", [0, 1, -1, -1] ]\n         */\n        this.makeAnchors = function (types, elementId, jsPlumbInstance) {\n            var r = [];\n            for (var i = 0, ii = types.length; i < ii; i++) {\n                if (typeof types[i] === \"string\") {\n                    r.push(root.jsPlumb.Anchors[types[i]]({elementId: elementId, jsPlumbInstance: jsPlumbInstance}));\n                }\n                else if (_ju.isArray(types[i])) {\n                    r.push(_currentInstance.makeAnchor(types[i], elementId, jsPlumbInstance));\n                }\n            }\n            return r;\n        };\n\n        /**\n         * Makes a dynamic anchor from the given list of anchors (which may be in shorthand notation as strings or dimension arrays, or Anchor\n         * objects themselves) and the given, optional, anchorSelector function (jsPlumb uses a default if this is not provided; most people will\n         * not need to provide this - i think).\n         */\n        this.makeDynamicAnchor = function (anchors, anchorSelector) {\n            return new root.jsPlumb.DynamicAnchor({anchors: anchors, selector: anchorSelector, elementId: null, jsPlumbInstance: _currentInstance});\n        };\n\n// --------------------- makeSource/makeTarget ---------------------------------------------- \n\n        this.targetEndpointDefinitions = {};\n        this.sourceEndpointDefinitions = {};\n\n        var selectorFilter = function (evt, _el, selector, _instance, negate) {\n            var t = evt.target || evt.srcElement, ok = false,\n                sel = _instance.getSelector(_el, selector);\n            for (var j = 0; j < sel.length; j++) {\n                if (sel[j] === t) {\n                    ok = true;\n                    break;\n                }\n            }\n            return negate ? !ok : ok;\n        };\n\n        var _makeElementDropHandler = function (elInfo, p, dropOptions, isSource, isTarget) {\n            var proxyComponent = new jsPlumbUIComponent(p);\n            var _drop = p._jsPlumb.EndpointDropHandler({\n                jsPlumb: _currentInstance,\n                enabled: function () {\n                    return elInfo.def.enabled;\n                },\n                isFull: function () {\n                    var targetCount = _currentInstance.select({target: elInfo.id}).length;\n                    return elInfo.def.maxConnections > 0 && targetCount >= elInfo.def.maxConnections;\n                },\n                element: elInfo.el,\n                elementId: elInfo.id,\n                isSource: isSource,\n                isTarget: isTarget,\n                addClass: function (clazz) {\n                    _currentInstance.addClass(elInfo.el, clazz);\n                },\n                removeClass: function (clazz) {\n                    _currentInstance.removeClass(elInfo.el, clazz);\n                },\n                onDrop: function (jpc) {\n                    var source = jpc.endpoints[0];\n                    source.anchor.unlock();\n                },\n                isDropAllowed: function () {\n                    return proxyComponent.isDropAllowed.apply(proxyComponent, arguments);\n                },\n                isRedrop:function(jpc) {\n                    return (jpc.suspendedElement != null && jpc.suspendedEndpoint != null && jpc.suspendedEndpoint.element === elInfo.el);\n                },\n                getEndpoint: function (jpc) {\n\n                    // make a new Endpoint for the target, or get it from the cache if uniqueEndpoint\n                    // is set. if its a redrop the new endpoint will be immediately cleaned up.\n\n                    var newEndpoint = elInfo.def.endpoint;\n\n                    // if no cached endpoint, or there was one but it has been cleaned up\n                    // (ie. detached), create a new one\n                    if (newEndpoint == null || newEndpoint._jsPlumb == null) {\n                        var eps = _currentInstance.deriveEndpointAndAnchorSpec(jpc.getType().join(\" \"), true);\n                        var pp = eps.endpoints ? root.jsPlumb.extend(p, {\n                            endpoint:elInfo.def.def.endpoint || eps.endpoints[1]\n                        }) :p;\n                        if (eps.anchors) {\n                            pp = root.jsPlumb.extend(pp, {\n                                anchor:elInfo.def.def.anchor || eps.anchors[1]\n                            });\n                        }\n                        newEndpoint = _currentInstance.addEndpoint(elInfo.el, pp);\n                        newEndpoint._mtNew = true;\n                    }\n\n                    if (p.uniqueEndpoint) {\n                        elInfo.def.endpoint = newEndpoint;\n                    }\n\n                    newEndpoint.setDeleteOnEmpty(true);\n\n                    // if connection is detachable, init the new endpoint to be draggable, to support that happening.\n                    if (jpc.isDetachable()) {\n                        newEndpoint.initDraggable();\n                    }\n\n                    // if the anchor has a 'positionFinder' set, then delegate to that function to find\n                    // out where to locate the anchor.\n                    if (newEndpoint.anchor.positionFinder != null) {\n                        var dropPosition = _currentInstance.getUIPosition(arguments, _currentInstance.getZoom()),\n                            elPosition = _currentInstance.getOffset(elInfo.el),\n                            elSize = _currentInstance.getSize(elInfo.el),\n                            ap = dropPosition == null ? [0,0] : newEndpoint.anchor.positionFinder(dropPosition, elPosition, elSize, newEndpoint.anchor.constructorParams);\n\n                        newEndpoint.anchor.x = ap[0];\n                        newEndpoint.anchor.y = ap[1];\n                        // now figure an orientation for it..kind of hard to know what to do actually. probably the best thing i can do is to\n                        // support specifying an orientation in the anchor's spec. if one is not supplied then i will make the orientation\n                        // be what will cause the most natural link to the source: it will be pointing at the source, but it needs to be\n                        // specified in one axis only, and so how to make that choice? i think i will use whichever axis is the one in which\n                        // the target is furthest away from the source.\n                    }\n\n                    return newEndpoint;\n                },\n                maybeCleanup: function (ep) {\n                    if (ep._mtNew && ep.connections.length === 0) {\n                        _currentInstance.deleteObject({endpoint: ep});\n                    }\n                    else {\n                        delete ep._mtNew;\n                    }\n                }\n            });\n\n            // wrap drop events as needed and initialise droppable\n            var dropEvent = root.jsPlumb.dragEvents.drop;\n            dropOptions.scope = dropOptions.scope || (p.scope || _currentInstance.Defaults.Scope);\n            dropOptions[dropEvent] = _ju.wrap(dropOptions[dropEvent], _drop, true);\n            dropOptions.rank = p.rank || 0;\n\n            // if target, return true from the over event. this will cause katavorio to stop setting drops to hover\n            // if multipleDrop is set to false.\n            if (isTarget) {\n                dropOptions[root.jsPlumb.dragEvents.over] = function () { return true; };\n            }\n\n            // vanilla jsplumb only\n            if (p.allowLoopback === false) {\n                dropOptions.canDrop = function (_drag) {\n                    var de = _drag.getDragElement()._jsPlumbRelatedElement;\n                    return de !== elInfo.el;\n                };\n            }\n            _currentInstance.initDroppable(elInfo.el, dropOptions, \"internal\");\n\n            return _drop;\n\n        };\n\n        // see API docs\n        this.makeTarget = function (el, params, referenceParams) {\n\n            // put jsplumb ref into params without altering the params passed in\n            var p = root.jsPlumb.extend({_jsPlumb: this}, referenceParams);\n            root.jsPlumb.extend(p, params);\n\n            var maxConnections = p.maxConnections || -1,\n\n                _doOne = function (el) {\n\n                    // get the element's id and store the endpoint definition for it.  jsPlumb.connect calls will look for one of these,\n                    // and use the endpoint definition if found.\n                    // decode the info for this element (id and element)\n                    var elInfo = _info(el),\n                        elid = elInfo.id,\n                        dropOptions = root.jsPlumb.extend({}, p.dropOptions || {}),\n                        type = p.connectionType || \"default\";\n\n                    this.targetEndpointDefinitions[elid] = this.targetEndpointDefinitions[elid] || {};\n\n                    _ensureContainer(elid);\n\n                    // if this is a group and the user has not mandated a rank, set to -1 so that Nodes takes\n                    // precedence.\n                    if (elInfo.el._isJsPlumbGroup && dropOptions.rank == null) {\n                        dropOptions.rank = -1;\n                    }\n\n                    // store the definition\n                    var _def = {\n                        def: root.jsPlumb.extend({}, p),\n                        uniqueEndpoint: p.uniqueEndpoint,\n                        maxConnections: maxConnections,\n                        enabled: true\n                    };\n\n                    if (p.createEndpoint) {\n                        _def.uniqueEndpoint = true;\n                        _def.endpoint = _currentInstance.addEndpoint(el, _def.def);\n                        _def.endpoint.setDeleteOnEmpty(false);\n                    }\n\n                    elInfo.def = _def;\n                    this.targetEndpointDefinitions[elid][type] = _def;\n                    _makeElementDropHandler(elInfo, p, dropOptions, p.isSource === true, true);\n                    // stash the definition on the drop\n                    elInfo.el._katavorioDrop[elInfo.el._katavorioDrop.length - 1].targetDef = _def;\n\n                }.bind(this);\n\n            // make an array if only given one element\n            var inputs = el.length && el.constructor !== String ? el : [ el ];\n\n            // register each one in the list.\n            for (var i = 0, ii = inputs.length; i < ii; i++) {\n                _doOne(inputs[i]);\n            }\n\n            return this;\n        };\n\n        // see api docs\n        this.unmakeTarget = function (el, doNotClearArrays) {\n            var info = _info(el);\n            _currentInstance.destroyDroppable(info.el, \"internal\");\n            if (!doNotClearArrays) {\n                delete this.targetEndpointDefinitions[info.id];\n            }\n\n            return this;\n        };\n\n        // see api docs\n        this.makeSource = function (el, params, referenceParams) {\n            var p = root.jsPlumb.extend({_jsPlumb: this}, referenceParams);\n            root.jsPlumb.extend(p, params);\n            var type = p.connectionType || \"default\";\n            var aae = _currentInstance.deriveEndpointAndAnchorSpec(type);\n            p.endpoint = p.endpoint || aae.endpoints[0];\n            p.anchor = p.anchor || aae.anchors[0];\n            var maxConnections = p.maxConnections || -1,\n                onMaxConnections = p.onMaxConnections,\n                _doOne = function (elInfo) {\n                    // get the element's id and store the endpoint definition for it.  jsPlumb.connect calls will look for one of these,\n                    // and use the endpoint definition if found.\n                    var elid = elInfo.id,\n                        _del = this.getElement(elInfo.el);\n\n                    this.sourceEndpointDefinitions[elid] = this.sourceEndpointDefinitions[elid] || {};\n                    _ensureContainer(elid);\n\n                    var _def = {\n                        def:root.jsPlumb.extend({}, p),\n                        uniqueEndpoint: p.uniqueEndpoint,\n                        maxConnections: maxConnections,\n                        enabled: true\n                    };\n\n                    if (p.createEndpoint) {\n                        _def.uniqueEndpoint = true;\n                        _def.endpoint = _currentInstance.addEndpoint(el, _def.def);\n                        _def.endpoint.setDeleteOnEmpty(false);\n                    }\n\n                    this.sourceEndpointDefinitions[elid][type] = _def;\n                    elInfo.def = _def;\n\n                    var stopEvent = root.jsPlumb.dragEvents.stop,\n                        dragEvent = root.jsPlumb.dragEvents.drag,\n                        dragOptions = root.jsPlumb.extend({ }, p.dragOptions || {}),\n                        existingDrag = dragOptions.drag,\n                        existingStop = dragOptions.stop,\n                        ep = null,\n                        endpointAddedButNoDragYet = false;\n\n                    // set scope if its not set in dragOptions but was passed in in params\n                    dragOptions.scope = dragOptions.scope || p.scope;\n\n                    dragOptions[dragEvent] = _ju.wrap(dragOptions[dragEvent], function () {\n                        if (existingDrag) {\n                            existingDrag.apply(this, arguments);\n                        }\n                        endpointAddedButNoDragYet = false;\n                    });\n\n                    dragOptions[stopEvent] = _ju.wrap(dragOptions[stopEvent], function () {\n\n                        if (existingStop) {\n                            existingStop.apply(this, arguments);\n                        }\n                        this.currentlyDragging = false;\n                        if (ep._jsPlumb != null) { // if not cleaned up...\n\n                            // reset the anchor to the anchor that was initially provided. the one we were using to drag\n                            // the connection was just a placeholder that was located at the place the user pressed the\n                            // mouse button to initiate the drag.\n                            var anchorDef = p.anchor || this.Defaults.Anchor,\n                                oldAnchor = ep.anchor,\n                                oldConnection = ep.connections[0];\n\n                            var    newAnchor = this.makeAnchor(anchorDef, elid, this),\n                                _el = ep.element;\n\n                            // if the anchor has a 'positionFinder' set, then delegate to that function to find\n                            // out where to locate the anchor. issue 117.\n                            if (newAnchor.positionFinder != null) {\n                                var elPosition = _currentInstance.getOffset(_el),\n                                    elSize = this.getSize(_el),\n                                    dropPosition = { left: elPosition.left + (oldAnchor.x * elSize[0]), top: elPosition.top + (oldAnchor.y * elSize[1]) },\n                                    ap = newAnchor.positionFinder(dropPosition, elPosition, elSize, newAnchor.constructorParams);\n\n                                newAnchor.x = ap[0];\n                                newAnchor.y = ap[1];\n                            }\n\n                            ep.setAnchor(newAnchor, true);\n                            ep.repaint();\n                            this.repaint(ep.elementId);\n                            if (oldConnection != null) {\n                                this.repaint(oldConnection.targetId);\n                            }\n                        }\n                    }.bind(this));\n\n                    // when the user presses the mouse, add an Endpoint, if we are enabled.\n                    var mouseDownListener = function (e) {\n                        // on right mouse button, abort.\n                        if (e.which === 3 || e.button === 2) {\n                            return;\n                        }\n\n                        // TODO store def on element.\n                        var def = this.sourceEndpointDefinitions[elid][type];\n\n                        // if disabled, return.\n                        if (!def.enabled) {\n                            return;\n                        }\n\n                        elid = this.getId(this.getElement(elInfo.el)); // elid might have changed since this method was called to configure the element.\n\n                        // if a filter was given, run it, and return if it says no.\n                        if (p.filter) {\n                            var r = _ju.isString(p.filter) ? selectorFilter(e, elInfo.el, p.filter, this, p.filterExclude) : p.filter(e, elInfo.el);\n                            if (r === false) {\n                                return;\n                            }\n                        }\n\n                        // if maxConnections reached\n                        var sourceCount = this.select({source: elid}).length;\n                        if (def.maxConnections >= 0 && (sourceCount >= def.maxConnections)) {\n                            if (onMaxConnections) {\n                                onMaxConnections({\n                                    element: elInfo.el,\n                                    maxConnections: maxConnections\n                                }, e);\n                            }\n                            return false;\n                        }\n\n                        // find the position on the element at which the mouse was pressed; this is where the endpoint\n                        // will be located.\n                        var elxy = root.jsPlumb.getPositionOnElement(e, _del, _zoom);\n\n                        // we need to override the anchor in here, and force 'isSource', but we don't want to mess with\n                        // the params passed in, because after a connection is established we're going to reset the endpoint\n                        // to have the anchor we were given.\n                        var tempEndpointParams = {};\n                        root.jsPlumb.extend(tempEndpointParams, p);\n                        tempEndpointParams.isTemporarySource = true;\n                        tempEndpointParams.anchor = [ elxy[0], elxy[1] , 0, 0];\n                        tempEndpointParams.dragOptions = dragOptions;\n\n                        if (def.def.scope) {\n                            tempEndpointParams.scope = def.def.scope;\n                        }\n\n                        ep = this.addEndpoint(elid, tempEndpointParams);\n                        endpointAddedButNoDragYet = true;\n                        ep.setDeleteOnEmpty(true);\n\n                        // if unique endpoint and it's already been created, push it onto the endpoint we create. at the end\n                        // of a successful connection we'll switch to that endpoint.\n                        // TODO this is the same code as the programmatic endpoints create on line 1050 ish\n                        if (def.uniqueEndpoint) {\n                            if (!def.endpoint) {\n                                def.endpoint = ep;\n                                ep.setDeleteOnEmpty(false);\n                            }\n                            else {\n                                ep.finalEndpoint = def.endpoint;\n                            }\n                        }\n\n                        var _delTempEndpoint = function () {\n                            // this mouseup event is fired only if no dragging occurred, by jquery and yui, but for mootools\n                            // it is fired even if dragging has occurred, in which case we would blow away a perfectly\n                            // legitimate endpoint, were it not for this check.  the flag is set after adding an\n                            // endpoint and cleared in a drag listener we set in the dragOptions above.\n                            _currentInstance.off(ep.canvas, \"mouseup\", _delTempEndpoint);\n                            _currentInstance.off(elInfo.el, \"mouseup\", _delTempEndpoint);\n                            if (endpointAddedButNoDragYet) {\n                                endpointAddedButNoDragYet = false;\n                                _currentInstance.deleteEndpoint(ep);\n                            }\n                        };\n\n                        _currentInstance.on(ep.canvas, \"mouseup\", _delTempEndpoint);\n                        _currentInstance.on(elInfo.el, \"mouseup\", _delTempEndpoint);\n\n                        // optionally check for attributes to extract from the source element\n                        var payload = {};\n                        if (def.def.extract) {\n                            for (var att in def.def.extract) {\n                                var v = (e.srcElement || e.target).getAttribute(att);\n                                if (v) {\n                                    payload[def.def.extract[att]] = v;\n                                }\n                            }\n                        }\n\n                        // and then trigger its mousedown event, which will kick off a drag, which will start dragging\n                        // a new connection from this endpoint.\n                        _currentInstance.trigger(ep.canvas, \"mousedown\", e, payload);\n\n                        _ju.consume(e);\n\n                    }.bind(this);\n\n                    this.on(elInfo.el, \"mousedown\", mouseDownListener);\n                    _def.trigger = mouseDownListener;\n\n                    // if a filter was provided, set it as a dragFilter on the element,\n                    // to prevent the element drag function from kicking in when we want to\n                    // drag a new connection\n                    if (p.filter && (_ju.isString(p.filter) || _ju.isFunction(p.filter))) {\n                        _currentInstance.setDragFilter(elInfo.el, p.filter);\n                    }\n\n                    var dropOptions = root.jsPlumb.extend({}, p.dropOptions || {});\n\n                    _makeElementDropHandler(elInfo, p, dropOptions, true, p.isTarget === true);\n\n                }.bind(this);\n\n            var inputs = el.length && el.constructor !== String ? el : [ el ];\n            for (var i = 0, ii = inputs.length; i < ii; i++) {\n                _doOne(_info(inputs[i]));\n            }\n\n            return this;\n        };\n\n        // see api docs\n        this.unmakeSource = function (el, connectionType, doNotClearArrays) {\n            var info = _info(el);\n            _currentInstance.destroyDroppable(info.el, \"internal\");\n            var eldefs = this.sourceEndpointDefinitions[info.id];\n            if (eldefs) {\n                for (var def in eldefs) {\n                    if (connectionType == null || connectionType === def) {\n                        var mouseDownListener = eldefs[def].trigger;\n                        if (mouseDownListener) {\n                            _currentInstance.off(info.el, \"mousedown\", mouseDownListener);\n                        }\n                        if (!doNotClearArrays) {\n                            delete this.sourceEndpointDefinitions[info.id][def];\n                        }\n                    }\n                }\n            }\n\n            return this;\n        };\n\n        // see api docs\n        this.unmakeEverySource = function () {\n            for (var i in this.sourceEndpointDefinitions) {\n                _currentInstance.unmakeSource(i, null, true);\n            }\n\n            this.sourceEndpointDefinitions = {};\n            return this;\n        };\n\n        var _getScope = function (el, types, connectionType) {\n            types = _ju.isArray(types) ? types : [ types ];\n            var id = _getId(el);\n            connectionType = connectionType || \"default\";\n            for (var i = 0; i < types.length; i++) {\n                var eldefs = this[types[i]][id];\n                if (eldefs && eldefs[connectionType]) {\n                    return eldefs[connectionType].def.scope || this.Defaults.Scope;\n                }\n            }\n        }.bind(this);\n\n        var _setScope = function (el, scope, types, connectionType) {\n            types = _ju.isArray(types) ? types : [ types ];\n            var id = _getId(el);\n            connectionType = connectionType || \"default\";\n            for (var i = 0; i < types.length; i++) {\n                var eldefs = this[types[i]][id];\n                if (eldefs && eldefs[connectionType]) {\n                    eldefs[connectionType].def.scope = scope;\n                }\n            }\n\n        }.bind(this);\n\n        this.getScope = function (el, scope) {\n            return _getScope(el, [ \"sourceEndpointDefinitions\", \"targetEndpointDefinitions\" ]);\n        };\n        this.getSourceScope = function (el) {\n            return _getScope(el, \"sourceEndpointDefinitions\");\n        };\n        this.getTargetScope = function (el) {\n            return _getScope(el, \"targetEndpointDefinitions\");\n        };\n        this.setScope = function (el, scope, connectionType) {\n            this.setSourceScope(el, scope, connectionType);\n            this.setTargetScope(el, scope, connectionType);\n        };\n        this.setSourceScope = function (el, scope, connectionType) {\n            _setScope(el, scope, \"sourceEndpointDefinitions\", connectionType);\n            // we get the source scope during the mousedown event, but we also want to set this.\n            this.setDragScope(el, scope);\n        };\n        this.setTargetScope = function (el, scope, connectionType) {\n            _setScope(el, scope, \"targetEndpointDefinitions\", connectionType);\n            this.setDropScope(el, scope);\n        };\n\n        // see api docs\n        this.unmakeEveryTarget = function () {\n            for (var i in this.targetEndpointDefinitions) {\n                _currentInstance.unmakeTarget(i, true);\n            }\n\n            this.targetEndpointDefinitions = {};\n            return this;\n        };\n\n        // does the work of setting a source enabled or disabled.\n        var _setEnabled = function (type, el, state, toggle, connectionType) {\n            var a = type === \"source\" ? this.sourceEndpointDefinitions : this.targetEndpointDefinitions,\n                originalState, info, newState;\n\n            connectionType = connectionType || \"default\";\n\n            // a selector or an array\n            if (el.length && !_ju.isString(el)) {\n                originalState = [];\n                for (var i = 0, ii = el.length; i < ii; i++) {\n                    info = _info(el[i]);\n                    if (a[info.id] && a[info.id][connectionType]) {\n                        originalState[i] = a[info.id][connectionType].enabled;\n                        newState = toggle ? !originalState[i] : state;\n                        a[info.id][connectionType].enabled = newState;\n                        _currentInstance[newState ? \"removeClass\" : \"addClass\"](info.el, \"jtk-\" + type + \"-disabled\");\n                    }\n                }\n            }\n            // otherwise a DOM element or a String ID.\n            else {\n                info = _info(el);\n                var id = info.id;\n                if (a[id] && a[id][connectionType]) {\n                    originalState = a[id][connectionType].enabled;\n                    newState = toggle ? !originalState : state;\n                    a[id][connectionType].enabled = newState;\n                    _currentInstance[newState ? \"removeClass\" : \"addClass\"](info.el, \"jtk-\" + type + \"-disabled\");\n                }\n            }\n            return originalState;\n        }.bind(this);\n\n        var _first = function (el, fn) {\n            if (_ju.isString(el) || !el.length) {\n                return fn.apply(this, [ el ]);\n            }\n            else if (el.length) {\n                return fn.apply(this, [ el[0] ]);\n            }\n\n        }.bind(this);\n\n        this.toggleSourceEnabled = function (el, connectionType) {\n            _setEnabled(\"source\", el, null, true, connectionType);\n            return this.isSourceEnabled(el, connectionType);\n        };\n\n        this.setSourceEnabled = function (el, state, connectionType) {\n            return _setEnabled(\"source\", el, state, null, connectionType);\n        };\n        this.isSource = function (el, connectionType) {\n            connectionType = connectionType || \"default\";\n            return _first(el, function (_el) {\n                var eldefs = this.sourceEndpointDefinitions[_info(_el).id];\n                return eldefs != null && eldefs[connectionType] != null;\n            }.bind(this));\n        };\n        this.isSourceEnabled = function (el, connectionType) {\n            connectionType = connectionType || \"default\";\n            return _first(el, function (_el) {\n                var sep = this.sourceEndpointDefinitions[_info(_el).id];\n                return sep && sep[connectionType] && sep[connectionType].enabled === true;\n            }.bind(this));\n        };\n\n        this.toggleTargetEnabled = function (el, connectionType) {\n            _setEnabled(\"target\", el, null, true, connectionType);\n            return this.isTargetEnabled(el, connectionType);\n        };\n\n        this.isTarget = function (el, connectionType) {\n            connectionType = connectionType || \"default\";\n            return _first(el, function (_el) {\n                var eldefs = this.targetEndpointDefinitions[_info(_el).id];\n                return eldefs != null && eldefs[connectionType] != null;\n            }.bind(this));\n        };\n        this.isTargetEnabled = function (el, connectionType) {\n            connectionType = connectionType || \"default\";\n            return _first(el, function (_el) {\n                var tep = this.targetEndpointDefinitions[_info(_el).id];\n                return tep && tep[connectionType] && tep[connectionType].enabled === true;\n            }.bind(this));\n        };\n        this.setTargetEnabled = function (el, state, connectionType) {\n            return _setEnabled(\"target\", el, state, null, connectionType);\n        };\n\n// --------------------- end makeSource/makeTarget ----------------------------------------------\n\n        this.ready = function (fn) {\n            _currentInstance.bind(\"ready\", fn);\n        };\n\n        var _elEach = function(el, fn) {\n            // support both lists...\n            if (typeof el === 'object' && el.length) {\n                for (var i = 0, ii = el.length; i < ii; i++) {\n                    fn(el[i]);\n                }\n            }\n            else {// ...and single strings or elements.\n                fn(el);\n            }\n\n            return _currentInstance;\n        };\n\n        // repaint some element's endpoints and connections\n        this.repaint = function (el, ui, timestamp) {\n            return _elEach(el, function(_el) {\n                _draw(_el, ui, timestamp);\n            });\n        };\n\n        this.revalidate = function (el, timestamp, isIdAlready) {\n            return _elEach(el, function(_el) {\n                var elId = isIdAlready ? _el : _currentInstance.getId(_el);\n                _currentInstance.updateOffset({ elId: elId, recalc: true, timestamp:timestamp });\n                var dm = _currentInstance.getDragManager();\n                if (dm) {\n                    dm.updateOffsets(elId);\n                }\n                _currentInstance.repaint(_el);\n            });\n        };\n\n        // repaint every endpoint and connection.\n        this.repaintEverything = function () {\n            // TODO this timestamp causes continuous anchors to not repaint properly.\n            // fix this. do not just take out the timestamp. it runs a lot faster with\n            // the timestamp included.\n            var timestamp = _timestamp(), elId;\n\n            for (elId in endpointsByElement) {\n                _currentInstance.updateOffset({ elId: elId, recalc: true, timestamp: timestamp });\n            }\n\n            for (elId in endpointsByElement) {\n                _draw(elId, null, timestamp);\n            }\n\n            return this;\n        };\n\n        this.removeAllEndpoints = function (el, recurse, affectedElements) {\n            affectedElements = affectedElements || [];\n            var _one = function (_el) {\n                var info = _info(_el),\n                    ebe = endpointsByElement[info.id],\n                    i, ii;\n\n                if (ebe) {\n                    affectedElements.push(info);\n                    for (i = 0, ii = ebe.length; i < ii; i++) {\n                        _currentInstance.deleteEndpoint(ebe[i], false);\n                    }\n                }\n                delete endpointsByElement[info.id];\n\n                if (recurse) {\n                    if (info.el && info.el.nodeType !== 3 && info.el.nodeType !== 8) {\n                        for (i = 0, ii = info.el.childNodes.length; i < ii; i++) {\n                            _one(info.el.childNodes[i]);\n                        }\n                    }\n                }\n\n            };\n            _one(el);\n            return this;\n        };\n\n        var _doRemove = function(info, affectedElements) {\n            _currentInstance.removeAllEndpoints(info.id, true, affectedElements);\n            var dm = _currentInstance.getDragManager();\n            var _one = function(_info) {\n\n                if (dm) {\n                    dm.elementRemoved(_info.id);\n                }\n                _currentInstance.anchorManager.clearFor(_info.id);\n                _currentInstance.anchorManager.removeFloatingConnection(_info.id);\n\n                if (_currentInstance.isSource(_info.el)) {\n                    _currentInstance.unmakeSource(_info.el);\n                }\n                if (_currentInstance.isTarget(_info.el)) {\n                    _currentInstance.unmakeTarget(_info.el);\n                }\n                _currentInstance.destroyDraggable(_info.el);\n                _currentInstance.destroyDroppable(_info.el);\n\n\n                delete _currentInstance.floatingConnections[_info.id];\n                delete managedElements[_info.id];\n                delete offsets[_info.id];\n                if (_info.el) {\n                    _currentInstance.removeElement(_info.el);\n                    _info.el._jsPlumb = null;\n                }\n            };\n\n            // remove all affected child elements\n            for (var ae = 1; ae < affectedElements.length; ae++) {\n                _one(affectedElements[ae]);\n            }\n            // and always remove the requested one from the dom.\n            _one(info);\n        };\n\n        /**\n         * Remove the given element, including cleaning up all endpoints registered for it.\n         * This is exposed in the public API but also used internally by jsPlumb when removing the\n         * element associated with a connection drag.\n         */\n        this.remove = function (el, doNotRepaint) {\n            var info = _info(el), affectedElements = [];\n            if (info.text) {\n                info.el.parentNode.removeChild(info.el);\n            }\n            else if (info.id) {\n                _currentInstance.batch(function () {\n                    _doRemove(info, affectedElements);\n                }, doNotRepaint === true);\n            }\n            return _currentInstance;\n        };\n\n        this.empty = function (el, doNotRepaint) {\n            var affectedElements = [];\n            var _one = function(el, dontRemoveFocus) {\n                var info = _info(el);\n                if (info.text) {\n                    info.el.parentNode.removeChild(info.el);\n                }\n                else if (info.el) {\n                    while(info.el.childNodes.length > 0) {\n                        _one(info.el.childNodes[0]);\n                    }\n                    if (!dontRemoveFocus) {\n                        _doRemove(info, affectedElements);\n                    }\n                }\n            };\n\n            _currentInstance.batch(function() {\n                _one(el, true);\n            }, doNotRepaint === false);\n\n            return _currentInstance;\n        };\n\n        this.reset = function (doNotUnbindInstanceEventListeners) {\n            _currentInstance.silently(function() {\n                _hoverSuspended = false;\n                _currentInstance.removeAllGroups();\n                _currentInstance.removeGroupManager();\n                _currentInstance.deleteEveryEndpoint();\n                if (!doNotUnbindInstanceEventListeners) {\n                    _currentInstance.unbind();\n                }\n                this.targetEndpointDefinitions = {};\n                this.sourceEndpointDefinitions = {};\n                connections.length = 0;\n                if (this.doReset) {\n                    this.doReset();\n                }\n            }.bind(this));\n        };\n\n        var _clearObject = function (obj) {\n            if (obj.canvas && obj.canvas.parentNode) {\n                obj.canvas.parentNode.removeChild(obj.canvas);\n            }\n            obj.cleanup();\n            obj.destroy();\n        };\n\n        this.clear = function () {\n            _currentInstance.select().each(_clearObject);\n            _currentInstance.selectEndpoints().each(_clearObject);\n\n            endpointsByElement = {};\n            endpointsByUUID = {};\n        };\n\n        this.setDefaultScope = function (scope) {\n            DEFAULT_SCOPE = scope;\n            return _currentInstance;\n        };\n\n        // sets whether or not some element should be currently draggable.\n        this.setDraggable = _setDraggable;\n\n        this.deriveEndpointAndAnchorSpec = function(type, dontPrependDefault) {\n            var bits = ((dontPrependDefault ? \"\" : \"default \") + type).split(/[\\s]/), eps = null, ep = null, a = null, as = null;\n            for (var i = 0; i < bits.length; i++) {\n                var _t = _currentInstance.getType(bits[i], \"connection\");\n                if (_t) {\n                    if (_t.endpoints) {\n                        eps = _t.endpoints;\n                    }\n                    if (_t.endpoint) {\n                        ep = _t.endpoint;\n                    }\n                    if (_t.anchors) {\n                        as = _t.anchors;\n                    }\n                    if (_t.anchor) {\n                        a = _t.anchor;\n                    }\n                }\n            }\n            return { endpoints: eps ? eps : [ ep, ep ], anchors: as ? as : [a, a ]};\n        };\n\n        // sets the id of some element, changing whatever we need to to keep track.\n        this.setId = function (el, newId, doNotSetAttribute) {\n            //\n            var id;\n\n            if (_ju.isString(el)) {\n                id = el;\n            }\n            else {\n                el = this.getElement(el);\n                id = this.getId(el);\n            }\n\n            var sConns = this.getConnections({source: id, scope: '*'}, true),\n                tConns = this.getConnections({target: id, scope: '*'}, true);\n\n            newId = \"\" + newId;\n\n            if (!doNotSetAttribute) {\n                el = this.getElement(id);\n                this.setAttribute(el, \"id\", newId);\n            }\n            else {\n                el = this.getElement(newId);\n            }\n\n            endpointsByElement[newId] = endpointsByElement[id] || [];\n            for (var i = 0, ii = endpointsByElement[newId].length; i < ii; i++) {\n                endpointsByElement[newId][i].setElementId(newId);\n                endpointsByElement[newId][i].setReferenceElement(el);\n            }\n            delete endpointsByElement[id];\n\n            this.sourceEndpointDefinitions[newId] = this.sourceEndpointDefinitions[id];\n            delete this.sourceEndpointDefinitions[id];\n            this.targetEndpointDefinitions[newId] = this.targetEndpointDefinitions[id];\n            delete this.targetEndpointDefinitions[id];\n\n            this.anchorManager.changeId(id, newId);\n            var dm = this.getDragManager();\n            if (dm) {\n                dm.changeId(id, newId);\n            }\n            managedElements[newId] = managedElements[id];\n            delete managedElements[id];\n\n            var _conns = function (list, epIdx, type) {\n                for (var i = 0, ii = list.length; i < ii; i++) {\n                    list[i].endpoints[epIdx].setElementId(newId);\n                    list[i].endpoints[epIdx].setReferenceElement(el);\n                    list[i][type + \"Id\"] = newId;\n                    list[i][type] = el;\n                }\n            };\n            _conns(sConns, 0, \"source\");\n            _conns(tConns, 1, \"target\");\n\n            this.repaint(newId);\n        };\n\n        this.setDebugLog = function (debugLog) {\n            log = debugLog;\n        };\n\n        this.setSuspendDrawing = function (val, repaintAfterwards) {\n            var curVal = _suspendDrawing;\n            _suspendDrawing = val;\n            if (val) {\n                _suspendedAt = new Date().getTime();\n            } else {\n                _suspendedAt = null;\n            }\n            if (repaintAfterwards) {\n                this.repaintEverything();\n            }\n            return curVal;\n        };\n\n        // returns whether or not drawing is currently suspended.\n        this.isSuspendDrawing = function () {\n            return _suspendDrawing;\n        };\n\n        // return timestamp for when drawing was suspended.\n        this.getSuspendedAt = function () {\n            return _suspendedAt;\n        };\n\n        this.batch = function (fn, doNotRepaintAfterwards) {\n            var _wasSuspended = this.isSuspendDrawing();\n            if (!_wasSuspended) {\n                this.setSuspendDrawing(true);\n            }\n            try {\n                fn();\n            }\n            catch (e) {\n                _ju.log(\"Function run while suspended failed\", e);\n            }\n            if (!_wasSuspended) {\n                this.setSuspendDrawing(false, !doNotRepaintAfterwards);\n            }\n        };\n\n        this.doWhileSuspended = this.batch;\n\n        this.getCachedData = _getCachedData;\n        this.timestamp = _timestamp;\n        this.show = function (el, changeEndpoints) {\n            _setVisible(el, \"block\", changeEndpoints);\n            return _currentInstance;\n        };\n\n        // TODO: update this method to return the current state.\n        this.toggleVisible = _toggleVisible;\n        this.toggleDraggable = _toggleDraggable;\n        this.addListener = this.bind;\n\n        var floatingConnections = [];\n        this.registerFloatingConnection = function(info, conn, ep) {\n            floatingConnections[info.id] = conn;\n            // only register for the target endpoint; we will not be dragging the source at any time\n            // before this connection is either discarded or made into a permanent connection.\n            _ju.addToList(endpointsByElement, info.id, ep);\n        };\n        this.getFloatingConnectionFor = function(id) {\n            return floatingConnections[id];\n        };\n    };\n\n    _ju.extend(root.jsPlumbInstance, _ju.EventGenerator, {\n        setAttribute: function (el, a, v) {\n            this.setAttribute(el, a, v);\n        },\n        getAttribute: function (el, a) {\n            return this.getAttribute(root.jsPlumb.getElement(el), a);\n        },\n        convertToFullOverlaySpec: function(spec) {\n            if (_ju.isString(spec)) {\n                spec = [ spec, { } ];\n            }\n            spec[1].id = spec[1].id || _ju.uuid();\n            return spec;\n        },\n        registerConnectionType: function (id, type) {\n            this._connectionTypes[id] = root.jsPlumb.extend({}, type);\n            if (type.overlays) {\n                var to = {};\n                for (var i = 0; i < type.overlays.length; i++) {\n                    // if a string, convert to object representation so that we can store the typeid on it.\n                    // also assign an id.\n                    var fo = this.convertToFullOverlaySpec(type.overlays[i]);\n                    to[fo[1].id] = fo;\n                }\n                this._connectionTypes[id].overlays = to;\n            }\n        },\n        registerConnectionTypes: function (types) {\n            for (var i in types) {\n                this.registerConnectionType(i, types[i]);\n            }\n        },\n        registerEndpointType: function (id, type) {\n            this._endpointTypes[id] = root.jsPlumb.extend({}, type);\n            if (type.overlays) {\n                var to = {};\n                for (var i = 0; i < type.overlays.length; i++) {\n                    // if a string, convert to object representation so that we can store the typeid on it.\n                    // also assign an id.\n                    var fo = this.convertToFullOverlaySpec(type.overlays[i]);\n                    to[fo[1].id] = fo;\n                }\n                this._endpointTypes[id].overlays = to;\n            }\n        },\n        registerEndpointTypes: function (types) {\n            for (var i in types) {\n                this.registerEndpointType(i, types[i]);\n            }\n        },\n        getType: function (id, typeDescriptor) {\n            return typeDescriptor === \"connection\" ? this._connectionTypes[id] : this._endpointTypes[id];\n        },\n        setIdChanged: function (oldId, newId) {\n            this.setId(oldId, newId, true);\n        },\n        // set parent: change the parent for some node and update all the registrations we need to.\n        setParent: function (el, newParent) {\n            var _dom = this.getElement(el),\n                _id = this.getId(_dom),\n                _pdom = this.getElement(newParent),\n                _pid = this.getId(_pdom),\n                dm = this.getDragManager();\n\n            _dom.parentNode.removeChild(_dom);\n            _pdom.appendChild(_dom);\n            if (dm) {\n                dm.setParent(_dom, _id, _pdom, _pid);\n            }\n        },\n        extend: function (o1, o2, names) {\n            var i;\n            if (names) {\n                for (i = 0; i < names.length; i++) {\n                    o1[names[i]] = o2[names[i]];\n                }\n            }\n            else {\n                for (i in o2) {\n                    o1[i] = o2[i];\n                }\n            }\n\n            return o1;\n        },\n        floatingConnections: {},\n        getFloatingAnchorIndex: function (jpc) {\n            return jpc.endpoints[0].isFloating() ? 0 : jpc.endpoints[1].isFloating() ? 1 : -1;\n        }\n    });\n\n// --------------------- static instance + module registration -------------------------------------------\n\n// create static instance and assign to window if window exists.\t\n    var jsPlumb = new jsPlumbInstance();\n    // register on 'root' (lets us run on server or browser)\n    root.jsPlumb = jsPlumb;\n    // add 'getInstance' method to static instance\n    jsPlumb.getInstance = function (_defaults, overrideFns) {\n        var j = new jsPlumbInstance(_defaults);\n        if (overrideFns) {\n            for (var ovf in overrideFns) {\n                j[ovf] = overrideFns[ovf];\n            }\n        }\n        j.init();\n        return j;\n    };\n    jsPlumb.each = function (spec, fn) {\n        if (spec == null) {\n            return;\n        }\n        if (typeof spec === \"string\") {\n            fn(jsPlumb.getElement(spec));\n        }\n        else if (spec.length != null) {\n            for (var i = 0; i < spec.length; i++) {\n                fn(jsPlumb.getElement(spec[i]));\n            }\n        }\n        else {\n            fn(spec);\n        } // assume it's an element.\n    };\n\n    // CommonJS\n    if (true) {\n        exports.jsPlumb = jsPlumb;\n    }\n\n// --------------------- end static instance + AMD registration -------------------------------------------\t\t\n\n}).call(typeof window !== 'undefined' ? window : this);\n\n/*\n * This file contains the base functionality for DOM type adapters.\n *\n * Copyright (c) 2010 - 2018 jsPlumb (hello@jsplumbtoolkit.com)\n *\n * https://jsplumbtoolkit.com\n * https://github.com/jsplumb/jsplumb\n *\n * Dual licensed under the MIT and GPL2 licenses.\n */\n;\n(function () {\n\n    var root = this, _ju = root.jsPlumbUtil;\n\n    var _genLoc = function (prefix, e) {\n            if (e == null) {\n                return [ 0, 0 ];\n            }\n            var ts = _touches(e), t = _getTouch(ts, 0);\n            return [t[prefix + \"X\"], t[prefix + \"Y\"]];\n        },\n        _pageLocation = _genLoc.bind(this, \"page\"),\n        _screenLocation = _genLoc.bind(this, \"screen\"),\n        _clientLocation = _genLoc.bind(this, \"client\"),\n        _getTouch = function (touches, idx) {\n            return touches.item ? touches.item(idx) : touches[idx];\n        },\n        _touches = function (e) {\n            return e.touches && e.touches.length > 0 ? e.touches :\n                    e.changedTouches && e.changedTouches.length > 0 ? e.changedTouches :\n                    e.targetTouches && e.targetTouches.length > 0 ? e.targetTouches :\n                [ e ];\n        };\n\n    /**\n     Manages dragging for some instance of jsPlumb.\n\n     TODO instead of this being accessed directly, it should subscribe to events on the jsPlumb instance: every method\n     in here is called directly by jsPlumb. But what should happen is that we have unpublished events that this listens\n     to.  The only trick is getting one of these instantiated with every jsPlumb instance: it needs to have a hook somehow.\n     Basically the general idea is to pull ALL the drag code out (prototype method registrations plus this) into a\n     dedicated drag script), that does not necessarily need to be included.\n\n\n     */\n    var DragManager = function (_currentInstance) {\n        var _draggables = {}, _dlist = [], _delements = {}, _elementsWithEndpoints = {},\n        // elementids mapped to the draggable to which they belong.\n            _draggablesForElements = {};\n\n        /**\n         register some element as draggable.  right now the drag init stuff is done elsewhere, and it is\n         possible that will continue to be the case.\n         */\n        this.register = function (el) {\n            var id = _currentInstance.getId(el),\n                parentOffset = _currentInstance.getOffset(el);\n\n            if (!_draggables[id]) {\n                _draggables[id] = el;\n                _dlist.push(el);\n                _delements[id] = {};\n            }\n\n            // look for child elements that have endpoints and register them against this draggable.\n            var _oneLevel = function (p) {\n                if (p) {\n                    for (var i = 0; i < p.childNodes.length; i++) {\n                        if (p.childNodes[i].nodeType !== 3 && p.childNodes[i].nodeType !== 8) {\n                            var cEl = jsPlumb.getElement(p.childNodes[i]),\n                                cid = _currentInstance.getId(p.childNodes[i], null, true);\n                            if (cid && _elementsWithEndpoints[cid] && _elementsWithEndpoints[cid] > 0) {\n                                var cOff = _currentInstance.getOffset(cEl);\n                                _delements[id][cid] = {\n                                    id: cid,\n                                    offset: {\n                                        left: cOff.left - parentOffset.left,\n                                        top: cOff.top - parentOffset.top\n                                    }\n                                };\n                                _draggablesForElements[cid] = id;\n                            }\n                            _oneLevel(p.childNodes[i]);\n                        }\n                    }\n                }\n            };\n\n            _oneLevel(el);\n        };\n\n        // refresh the offsets for child elements of this element.\n        this.updateOffsets = function (elId, childOffsetOverrides) {\n            if (elId != null) {\n                childOffsetOverrides = childOffsetOverrides || {};\n                var domEl = jsPlumb.getElement(elId),\n                    id = _currentInstance.getId(domEl),\n                    children = _delements[id],\n                    parentOffset = _currentInstance.getOffset(domEl);\n\n                if (children) {\n                    for (var i in children) {\n                        if (children.hasOwnProperty(i)) {\n                            var cel = jsPlumb.getElement(i),\n                                cOff = childOffsetOverrides[i] || _currentInstance.getOffset(cel);\n\n                            // do not update if we have a value already and we'd just be writing 0,0\n                            if (cel.offsetParent == null && _delements[id][i] != null) {\n                                continue;\n                            }\n\n                            _delements[id][i] = {\n                                id: i,\n                                offset: {\n                                    left: cOff.left - parentOffset.left,\n                                    top: cOff.top - parentOffset.top\n                                }\n                            };\n                            _draggablesForElements[i] = id;\n                        }\n                    }\n                }\n            }\n        };\n\n        /**\n         notification that an endpoint was added to the given el.  we go up from that el's parent\n         node, looking for a parent that has been registered as a draggable. if we find one, we add this\n         el to that parent's list of elements to update on drag (if it is not there already)\n         */\n        this.endpointAdded = function (el, id) {\n\n            id = id || _currentInstance.getId(el);\n\n            var b = document.body,\n                p = el.parentNode;\n\n            _elementsWithEndpoints[id] = _elementsWithEndpoints[id] ? _elementsWithEndpoints[id] + 1 : 1;\n\n            while (p != null && p !== b) {\n                var pid = _currentInstance.getId(p, null, true);\n                if (pid && _draggables[pid]) {\n                    var pLoc = _currentInstance.getOffset(p);\n\n                    if (_delements[pid][id] == null) {\n                        var cLoc = _currentInstance.getOffset(el);\n                        _delements[pid][id] = {\n                            id: id,\n                            offset: {\n                                left: cLoc.left - pLoc.left,\n                                top: cLoc.top - pLoc.top\n                            }\n                        };\n                        _draggablesForElements[id] = pid;\n                    }\n                    break;\n                }\n                p = p.parentNode;\n            }\n        };\n\n        this.endpointDeleted = function (endpoint) {\n            if (_elementsWithEndpoints[endpoint.elementId]) {\n                _elementsWithEndpoints[endpoint.elementId]--;\n                if (_elementsWithEndpoints[endpoint.elementId] <= 0) {\n                    for (var i in _delements) {\n                        if (_delements.hasOwnProperty(i) && _delements[i]) {\n                            delete _delements[i][endpoint.elementId];\n                            delete _draggablesForElements[endpoint.elementId];\n                        }\n                    }\n                }\n            }\n        };\n\n        this.changeId = function (oldId, newId) {\n            _delements[newId] = _delements[oldId];\n            _delements[oldId] = {};\n            _draggablesForElements[newId] = _draggablesForElements[oldId];\n            _draggablesForElements[oldId] = null;\n        };\n\n        this.getElementsForDraggable = function (id) {\n            return _delements[id];\n        };\n\n        this.elementRemoved = function (elementId) {\n            var elId = _draggablesForElements[elementId];\n            if (elId) {\n                delete _delements[elId][elementId];\n                delete _draggablesForElements[elementId];\n            }\n        };\n\n        this.reset = function () {\n            _draggables = {};\n            _dlist = [];\n            _delements = {};\n            _elementsWithEndpoints = {};\n        };\n\n        //\n        // notification drag ended. We check automatically if need to update some\n        // ancestor's offsets.\n        //\n        this.dragEnded = function (el) {\n            if (el.offsetParent != null) {\n                var id = _currentInstance.getId(el),\n                    ancestor = _draggablesForElements[id];\n\n                if (ancestor) {\n                    this.updateOffsets(ancestor);\n                }\n            }\n        };\n\n        this.setParent = function (el, elId, p, pId, currentChildLocation) {\n            var current = _draggablesForElements[elId];\n            if (!_delements[pId]) {\n                _delements[pId] = {};\n            }\n            var pLoc = _currentInstance.getOffset(p),\n                cLoc = currentChildLocation || _currentInstance.getOffset(el);\n\n            if (current && _delements[current]) {\n                delete _delements[current][elId];\n            }\n\n            _delements[pId][elId] = {\n                id:elId,\n                offset : {\n                    left: cLoc.left - pLoc.left,\n                    top: cLoc.top - pLoc.top\n                }\n            };\n            _draggablesForElements[elId] = pId;\n        };\n\n        this.clearParent = function(el, elId) {\n            var current = _draggablesForElements[elId];\n            if (current) {\n                delete _delements[current][elId];\n                delete _draggablesForElements[elId];\n            }\n        };\n\n        this.revalidateParent = function(el, elId, childOffset) {\n            var current = _draggablesForElements[elId];\n            if (current) {\n                var co = {};\n                co[elId] = childOffset;\n                this.updateOffsets(current, co);\n                _currentInstance.revalidate(current);\n            }\n        };\n\n        this.getDragAncestor = function (el) {\n            var de = jsPlumb.getElement(el),\n                id = _currentInstance.getId(de),\n                aid = _draggablesForElements[id];\n\n            if (aid) {\n                return jsPlumb.getElement(aid);\n            }\n            else {\n                return null;\n            }\n        };\n\n    };\n\n    var trim = function (str) {\n            return str == null ? null : (str.replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, ''));\n        },\n        _setClassName = function (el, cn, classList) {\n            cn = trim(cn);\n            if (typeof el.className.baseVal !== \"undefined\") {\n                el.className.baseVal = cn;\n            }\n            else {\n                el.className = cn;\n            }\n\n            // recent (i currently have  61.0.3163.100) version of chrome do not update classList when you set the base val\n            // of an svg element's className. in the long run we'd like to move to just using classList anyway\n            try {\n                var cl = el.classList;\n                while (cl.length > 0) {\n                    cl.remove(cl.item(0));\n                }\n                for (var i = 0; i < classList.length; i++) {\n                    if (classList[i]) {\n                        cl.add(classList[i]);\n                    }\n                }\n            }\n            catch(e) {\n                // not fatal\n                console.log(\"JSPLUMB: cannot set class list\", e);\n            }\n        },\n        _getClassName = function (el) {\n            return (typeof el.className.baseVal === \"undefined\") ? el.className : el.className.baseVal;\n        },\n        _classManip = function (el, classesToAdd, classesToRemove) {\n            classesToAdd = classesToAdd == null ? [] : _ju.isArray(classesToAdd) ? classesToAdd : classesToAdd.split(/\\s+/);\n            classesToRemove = classesToRemove == null ? [] : _ju.isArray(classesToRemove) ? classesToRemove : classesToRemove.split(/\\s+/);\n\n            var className = _getClassName(el),\n                curClasses = className.split(/\\s+/);\n\n            var _oneSet = function (add, classes) {\n                for (var i = 0; i < classes.length; i++) {\n                    if (add) {\n                        if (curClasses.indexOf(classes[i]) === -1) {\n                            curClasses.push(classes[i]);\n                        }\n                    }\n                    else {\n                        var idx = curClasses.indexOf(classes[i]);\n                        if (idx !== -1) {\n                            curClasses.splice(idx, 1);\n                        }\n                    }\n                }\n            };\n\n            _oneSet(true, classesToAdd);\n            _oneSet(false, classesToRemove);\n\n            _setClassName(el, curClasses.join(\" \"), curClasses);\n        };\n\n    root.jsPlumb.extend(root.jsPlumbInstance.prototype, {\n\n        headless: false,\n\n        pageLocation: _pageLocation,\n        screenLocation: _screenLocation,\n        clientLocation: _clientLocation,\n\n        getDragManager:function() {\n            if (this.dragManager == null) {\n                this.dragManager = new DragManager(this);\n            }\n\n            return this.dragManager;\n        },\n\n        // NEVER CALLED IN THE CURRENT JS\n        recalculateOffsets:function(elId) {\n            this.getDragManager().updateOffsets(elId);\n        },\n\n        // CONVERTED\n        createElement:function(tag, style, clazz, atts) {\n            return this.createElementNS(null, tag, style, clazz, atts);\n        },\n\n        // CONVERTED\n        createElementNS:function(ns, tag, style, clazz, atts) {\n            var e = ns == null ? document.createElement(tag) : document.createElementNS(ns, tag);\n            var i;\n            style = style || {};\n            for (i in style) {\n                e.style[i] = style[i];\n            }\n\n            if (clazz) {\n                e.className = clazz;\n            }\n\n            atts = atts || {};\n            for (i in atts) {\n                e.setAttribute(i, \"\" + atts[i]);\n            }\n\n            return e;\n        },\n\n        // CONVERTED\n        getAttribute: function (el, attName) {\n            return el.getAttribute != null ? el.getAttribute(attName) : null;\n        },\n\n        // CONVERTED\n        setAttribute: function (el, a, v) {\n            if (el.setAttribute != null) {\n                el.setAttribute(a, v);\n            }\n        },\n\n        // CONVERTED\n        setAttributes: function (el, atts) {\n            for (var i in atts) {\n                if (atts.hasOwnProperty(i)) {\n                    el.setAttribute(i, atts[i]);\n                }\n            }\n        },\n        appendToRoot: function (node) {\n            document.body.appendChild(node);\n        },\n        getRenderModes: function () {\n            return [ \"svg\"  ];\n        },\n        getClass:_getClassName,\n        addClass: function (el, clazz) {\n            jsPlumb.each(el, function (e) {\n                _classManip(e, clazz);\n            });\n        },\n        hasClass: function (el, clazz) {\n            el = jsPlumb.getElement(el);\n            if (el.classList) {\n                return el.classList.contains(clazz);\n            }\n            else {\n                return _getClassName(el).indexOf(clazz) !== -1;\n            }\n        },\n        removeClass: function (el, clazz) {\n            jsPlumb.each(el, function (e) {\n                _classManip(e, null, clazz);\n            });\n        },\n        toggleClass:function(el, clazz) {\n            if (jsPlumb.hasClass(el, clazz)) {\n                jsPlumb.removeClass(el, clazz);\n            } else {\n                jsPlumb.addClass(el, clazz);\n            }\n        },\n        updateClasses: function (el, toAdd, toRemove) {\n            jsPlumb.each(el, function (e) {\n                _classManip(e, toAdd, toRemove);\n            });\n        },\n        setClass: function (el, clazz) {\n            if (clazz != null) {\n                jsPlumb.each(el, function (e) {\n                    _setClassName(e, clazz, clazz.split(/\\s+/));\n                });\n            }\n        },\n        setPosition: function (el, p) {\n            el.style.left = p.left + \"px\";\n            el.style.top = p.top + \"px\";\n        },\n        getPosition: function (el) {\n            var _one = function (prop) {\n                var v = el.style[prop];\n                return v ? v.substring(0, v.length - 2) : 0;\n            };\n            return {\n                left: _one(\"left\"),\n                top: _one(\"top\")\n            };\n        },\n        getStyle:function(el, prop) {\n            if (typeof window.getComputedStyle !== 'undefined') {\n                return getComputedStyle(el, null).getPropertyValue(prop);\n            } else {\n                return el.currentStyle[prop];\n            }\n        },\n        getSelector: function (ctx, spec) {\n            var sel = null;\n            if (arguments.length === 1) {\n                sel = ctx.nodeType != null ? ctx : document.querySelectorAll(ctx);\n            }\n            else {\n                sel = ctx.querySelectorAll(spec);\n            }\n\n            return sel;\n        },\n        getOffset:function(el, relativeToRoot, container) {\n            el = jsPlumb.getElement(el);\n            container = container || this.getContainer();\n            var out = {\n                    left: el.offsetLeft,\n                    top: el.offsetTop\n                },\n                op = (relativeToRoot  || (container != null && (el !== container && el.offsetParent !== container))) ?  el.offsetParent : null,\n                _maybeAdjustScroll = function(offsetParent) {\n                    if (offsetParent != null && offsetParent !== document.body && (offsetParent.scrollTop > 0 || offsetParent.scrollLeft > 0)) {\n                        out.left -= offsetParent.scrollLeft;\n                        out.top -= offsetParent.scrollTop;\n                    }\n                }.bind(this);\n\n            while (op != null) {\n                out.left += op.offsetLeft;\n                out.top += op.offsetTop;\n                _maybeAdjustScroll(op);\n                op = relativeToRoot ? op.offsetParent :\n                        op.offsetParent === container ? null : op.offsetParent;\n            }\n\n            // if container is scrolled and the element (or its offset parent) is not absolute or fixed, adjust accordingly.\n            if (container != null && !relativeToRoot && (container.scrollTop > 0 || container.scrollLeft > 0)) {\n                var pp = el.offsetParent != null ? this.getStyle(el.offsetParent, \"position\") : \"static\",\n                    p = this.getStyle(el, \"position\");\n                if (p !== \"absolute\" && p !== \"fixed\" && pp !== \"absolute\" && pp !== \"fixed\") {\n                    out.left -= container.scrollLeft;\n                    out.top -= container.scrollTop;\n                }\n            }\n            return out;\n        },\n        //\n        // return x+y proportion of the given element's size corresponding to the location of the given event.\n        //\n        getPositionOnElement: function (evt, el, zoom) {\n            var box = typeof el.getBoundingClientRect !== \"undefined\" ? el.getBoundingClientRect() : { left: 0, top: 0, width: 0, height: 0 },\n                body = document.body,\n                docElem = document.documentElement,\n                scrollTop = window.pageYOffset || docElem.scrollTop || body.scrollTop,\n                scrollLeft = window.pageXOffset || docElem.scrollLeft || body.scrollLeft,\n                clientTop = docElem.clientTop || body.clientTop || 0,\n                clientLeft = docElem.clientLeft || body.clientLeft || 0,\n                pst = 0,\n                psl = 0,\n                top = box.top + scrollTop - clientTop + (pst * zoom),\n                left = box.left + scrollLeft - clientLeft + (psl * zoom),\n                cl = jsPlumb.pageLocation(evt),\n                w = box.width || (el.offsetWidth * zoom),\n                h = box.height || (el.offsetHeight * zoom),\n                x = (cl[0] - left) / w,\n                y = (cl[1] - top) / h;\n\n            return [ x, y ];\n        },\n\n        /**\n         * Gets the absolute position of some element as read from the left/top properties in its style.\n         * @method getAbsolutePosition\n         * @param {Element} el The element to retrieve the absolute coordinates from. **Note** this is a DOM element, not a selector from the underlying library.\n         * @return {Number[]} [left, top] pixel values.\n         */\n        getAbsolutePosition: function (el) {\n            var _one = function (s) {\n                var ss = el.style[s];\n                if (ss) {\n                    return parseFloat(ss.substring(0, ss.length - 2));\n                }\n            };\n            return [ _one(\"left\"), _one(\"top\") ];\n        },\n\n        /**\n         * Sets the absolute position of some element by setting the left/top properties in its style.\n         * @method setAbsolutePosition\n         * @param {Element} el The element to set the absolute coordinates on. **Note** this is a DOM element, not a selector from the underlying library.\n         * @param {Number[]} xy x and y coordinates\n         * @param {Number[]} [animateFrom] Optional previous xy to animate from.\n         * @param {Object} [animateOptions] Options for the animation.\n         */\n        setAbsolutePosition: function (el, xy, animateFrom, animateOptions) {\n            if (animateFrom) {\n                this.animate(el, {\n                    left: \"+=\" + (xy[0] - animateFrom[0]),\n                    top: \"+=\" + (xy[1] - animateFrom[1])\n                }, animateOptions);\n            }\n            else {\n                el.style.left = xy[0] + \"px\";\n                el.style.top = xy[1] + \"px\";\n            }\n        },\n        /**\n         * gets the size for the element, in an array : [ width, height ].\n         */\n        getSize: function (el) {\n            return [ el.offsetWidth, el.offsetHeight ];\n        },\n        getWidth: function (el) {\n            return el.offsetWidth;\n        },\n        getHeight: function (el) {\n            return el.offsetHeight;\n        },\n        getRenderMode : function() { return \"svg\"; }\n\n    });\n}).call(typeof window !== 'undefined' ? window : this);\n\n/*\n * 2010 - 2018 jsPlumb (hello@jsplumbtoolkit.com)\n *\n * https://jsplumbtoolkit.com\n * https://github.com/jsplumb/jsplumb\n *\n * Dual licensed under the MIT and GPL2 licenses.\n */\n;(function() {\n\n    \"use strict\";\n    var root = this, _jp = root.jsPlumb, _ju = root.jsPlumbUtil;\n\n    // ------------------------------ BEGIN OverlayCapablejsPlumbUIComponent --------------------------------------------\n\n    var _internalLabelOverlayId = \"__label\",\n    // this is a shortcut helper method to let people add a label as\n    // overlay.\n        _makeLabelOverlay = function (component, params) {\n\n            var _params = {\n                    cssClass: params.cssClass,\n                    labelStyle: component.labelStyle,\n                    id: _internalLabelOverlayId,\n                    component: component,\n                    _jsPlumb: component._jsPlumb.instance  // TODO not necessary, since the instance can be accessed through the component.\n                },\n                mergedParams = _jp.extend(_params, params);\n\n            return new _jp.Overlays[component._jsPlumb.instance.getRenderMode()].Label(mergedParams);\n        },\n        _processOverlay = function (component, o) {\n            var _newOverlay = null;\n            if (_ju.isArray(o)) {\t// this is for the shorthand [\"Arrow\", { width:50 }] syntax\n                // there's also a three arg version:\n                // [\"Arrow\", { width:50 }, {location:0.7}]\n                // which merges the 3rd arg into the 2nd.\n                var type = o[0],\n                // make a copy of the object so as not to mess up anyone else's reference...\n                    p = _jp.extend({component: component, _jsPlumb: component._jsPlumb.instance}, o[1]);\n                if (o.length === 3) {\n                    _jp.extend(p, o[2]);\n                }\n                _newOverlay = new _jp.Overlays[component._jsPlumb.instance.getRenderMode()][type](p);\n            } else if (o.constructor === String) {\n                _newOverlay = new _jp.Overlays[component._jsPlumb.instance.getRenderMode()][o]({component: component, _jsPlumb: component._jsPlumb.instance});\n            } else {\n                _newOverlay = o;\n            }\n\n            _newOverlay.id = _newOverlay.id || _ju.uuid();\n            component.cacheTypeItem(\"overlay\", _newOverlay, _newOverlay.id);\n            component._jsPlumb.overlays[_newOverlay.id] = _newOverlay;\n\n            return _newOverlay;\n        };\n\n    _jp.OverlayCapableJsPlumbUIComponent = function (params) {\n\n        root.jsPlumbUIComponent.apply(this, arguments);\n        this._jsPlumb.overlays = {};\n        this._jsPlumb.overlayPositions = {};\n\n        if (params.label) {\n            this.getDefaultType().overlays[_internalLabelOverlayId] = [\"Label\", {\n                label: params.label,\n                location: params.labelLocation || this.defaultLabelLocation || 0.5,\n                labelStyle: params.labelStyle || this._jsPlumb.instance.Defaults.LabelStyle,\n                id:_internalLabelOverlayId\n            }];\n        }\n\n        this.setListenerComponent = function (c) {\n            if (this._jsPlumb) {\n                for (var i in this._jsPlumb.overlays) {\n                    this._jsPlumb.overlays[i].setListenerComponent(c);\n                }\n            }\n        };\n    };\n\n    _jp.OverlayCapableJsPlumbUIComponent.applyType = function (component, t) {\n        if (t.overlays) {\n            // loop through the ones in the type. if already present on the component,\n            // dont remove or re-add.\n            var keep = {}, i;\n\n            for (i in t.overlays) {\n\n                var existing = component._jsPlumb.overlays[t.overlays[i][1].id];\n                if (existing) {\n                    // maybe update from data, if there were parameterised values for instance.\n                    existing.updateFrom(t.overlays[i][1]);\n                    keep[t.overlays[i][1].id] = true;\n                }\n                else {\n                    var c = component.getCachedTypeItem(\"overlay\", t.overlays[i][1].id);\n                    if (c != null) {\n                        c.reattach(component._jsPlumb.instance, component);\n                        c.setVisible(true);\n                        // maybe update from data, if there were parameterised values for instance.\n                        c.updateFrom(t.overlays[i][1]);\n                        component._jsPlumb.overlays[c.id] = c;\n                    }\n                    else {\n                        c = component.addOverlay(t.overlays[i], true);\n                    }\n                    keep[c.id] = true;\n                }\n            }\n\n            // now loop through the full overlays and remove those that we dont want to keep\n            for (i in component._jsPlumb.overlays) {\n                if (keep[component._jsPlumb.overlays[i].id] == null) {\n                    component.removeOverlay(component._jsPlumb.overlays[i].id, true); // remove overlay but dont clean it up.\n                    // that would remove event listeners etc; overlays are never discarded by the types stuff, they are\n                    // just detached/reattached.\n                }\n            }\n        }\n    };\n\n    _ju.extend(_jp.OverlayCapableJsPlumbUIComponent, root.jsPlumbUIComponent, {\n\n        setHover: function (hover, ignoreAttachedElements) {\n            if (this._jsPlumb && !this._jsPlumb.instance.isConnectionBeingDragged()) {\n                for (var i in this._jsPlumb.overlays) {\n                    this._jsPlumb.overlays[i][hover ? \"addClass\" : \"removeClass\"](this._jsPlumb.instance.hoverClass);\n                }\n            }\n        },\n        addOverlay: function (overlay, doNotRepaint) {\n            var o = _processOverlay(this, overlay);\n            if (!doNotRepaint) {\n                this.repaint();\n            }\n            return o;\n        },\n        getOverlay: function (id) {\n            return this._jsPlumb.overlays[id];\n        },\n        getOverlays: function () {\n            return this._jsPlumb.overlays;\n        },\n        hideOverlay: function (id) {\n            var o = this.getOverlay(id);\n            if (o) {\n                o.hide();\n            }\n        },\n        hideOverlays: function () {\n            for (var i in this._jsPlumb.overlays) {\n                this._jsPlumb.overlays[i].hide();\n            }\n        },\n        showOverlay: function (id) {\n            var o = this.getOverlay(id);\n            if (o) {\n                o.show();\n            }\n        },\n        showOverlays: function () {\n            for (var i in this._jsPlumb.overlays) {\n                this._jsPlumb.overlays[i].show();\n            }\n        },\n        removeAllOverlays: function (doNotRepaint) {\n            for (var i in this._jsPlumb.overlays) {\n                if (this._jsPlumb.overlays[i].cleanup) {\n                    this._jsPlumb.overlays[i].cleanup();\n                }\n            }\n\n            this._jsPlumb.overlays = {};\n            this._jsPlumb.overlayPositions = null;\n            if (!doNotRepaint) {\n                this.repaint();\n            }\n        },\n        removeOverlay: function (overlayId, dontCleanup) {\n            var o = this._jsPlumb.overlays[overlayId];\n            if (o) {\n                o.setVisible(false);\n                if (!dontCleanup && o.cleanup) {\n                    o.cleanup();\n                }\n                delete this._jsPlumb.overlays[overlayId];\n                if (this._jsPlumb.overlayPositions) {\n                    delete this._jsPlumb.overlayPositions[overlayId];\n                }\n            }\n        },\n        removeOverlays: function () {\n            for (var i = 0, j = arguments.length; i < j; i++) {\n                this.removeOverlay(arguments[i]);\n            }\n        },\n        moveParent: function (newParent) {\n            if (this.bgCanvas) {\n                this.bgCanvas.parentNode.removeChild(this.bgCanvas);\n                newParent.appendChild(this.bgCanvas);\n            }\n\n            if (this.canvas && this.canvas.parentNode) {\n                this.canvas.parentNode.removeChild(this.canvas);\n                newParent.appendChild(this.canvas);\n\n                for (var i in this._jsPlumb.overlays) {\n                    if (this._jsPlumb.overlays[i].isAppendedAtTopLevel) {\n                        var el = this._jsPlumb.overlays[i].getElement();\n                        el.parentNode.removeChild(el);\n                        newParent.appendChild(el);\n                    }\n                }\n            }\n        },\n        getLabel: function () {\n            var lo = this.getOverlay(_internalLabelOverlayId);\n            return lo != null ? lo.getLabel() : null;\n        },\n        getLabelOverlay: function () {\n            return this.getOverlay(_internalLabelOverlayId);\n        },\n        setLabel: function (l) {\n            var lo = this.getOverlay(_internalLabelOverlayId);\n            if (!lo) {\n                var params = l.constructor === String || l.constructor === Function ? { label: l } : l;\n                lo = _makeLabelOverlay(this, params);\n                this._jsPlumb.overlays[_internalLabelOverlayId] = lo;\n            }\n            else {\n                if (l.constructor === String || l.constructor === Function) {\n                    lo.setLabel(l);\n                }\n                else {\n                    if (l.label) {\n                        lo.setLabel(l.label);\n                    }\n                    if (l.location) {\n                        lo.setLocation(l.location);\n                    }\n                }\n            }\n\n            if (!this._jsPlumb.instance.isSuspendDrawing()) {\n                this.repaint();\n            }\n        },\n        cleanup: function (force) {\n            for (var i in this._jsPlumb.overlays) {\n                this._jsPlumb.overlays[i].cleanup(force);\n                this._jsPlumb.overlays[i].destroy(force);\n            }\n            if (force) {\n                this._jsPlumb.overlays = {};\n                this._jsPlumb.overlayPositions = null;\n            }\n        },\n        setVisible: function (v) {\n            this[v ? \"showOverlays\" : \"hideOverlays\"]();\n        },\n        setAbsoluteOverlayPosition: function (overlay, xy) {\n            this._jsPlumb.overlayPositions[overlay.id] = xy;\n        },\n        getAbsoluteOverlayPosition: function (overlay) {\n            return this._jsPlumb.overlayPositions ? this._jsPlumb.overlayPositions[overlay.id] : null;\n        },\n        _clazzManip:function(action, clazz, dontUpdateOverlays) {\n            if (!dontUpdateOverlays) {\n                for (var i in this._jsPlumb.overlays) {\n                    this._jsPlumb.overlays[i][action + \"Class\"](clazz);\n                }\n            }\n        },\n        addClass:function(clazz, dontUpdateOverlays) {\n            this._clazzManip(\"add\", clazz, dontUpdateOverlays);\n        },\n        removeClass:function(clazz, dontUpdateOverlays) {\n            this._clazzManip(\"remove\", clazz, dontUpdateOverlays);\n        }\n    });\n\n// ------------------------------ END OverlayCapablejsPlumbUIComponent --------------------------------------------\n\n}).call(typeof window !== 'undefined' ? window : this);\n\n/*\n * This file contains the code for Endpoints.\n *\n * Copyright (c) 2010 - 2018 jsPlumb (hello@jsplumbtoolkit.com)\n * \n * https://jsplumbtoolkit.com\n * https://github.com/jsplumb/jsplumb\n * \n * Dual licensed under the MIT and GPL2 licenses.\n */\n;(function () {\n\n    \"use strict\";\n    var root = this, _jp = root.jsPlumb, _ju = root.jsPlumbUtil;\n\n    // create the drag handler for a connection\n    var _makeConnectionDragHandler = function (endpoint, placeholder, _jsPlumb) {\n        var stopped = false;\n        return {\n            drag: function () {\n                if (stopped) {\n                    stopped = false;\n                    return true;\n                }\n\n                if (placeholder.element) {\n                    var _ui = _jsPlumb.getUIPosition(arguments, _jsPlumb.getZoom());\n                    if (_ui != null) {\n                        _jsPlumb.setPosition(placeholder.element, _ui);\n                    }\n                    _jsPlumb.repaint(placeholder.element, _ui);\n                    // always repaint the source endpoint, because only continuous/dynamic anchors cause the endpoint\n                    // to be repainted, so static anchors need to be told (or the endpoint gets dragged around)\n                    endpoint.paint({anchorPoint:endpoint.anchor.getCurrentLocation({element:endpoint})});\n                }\n            },\n            stopDrag: function () {\n                stopped = true;\n            }\n        };\n    };\n\n    // creates a placeholder div for dragging purposes, adds it, and pre-computes its offset.\n    var _makeDraggablePlaceholder = function (placeholder, _jsPlumb, ipco, ips) {\n        var n = _jsPlumb.createElement(\"div\", { position : \"absolute\" });\n        _jsPlumb.appendElement(n);\n        var id = _jsPlumb.getId(n);\n        _jsPlumb.setPosition(n, ipco);\n        n.style.width = ips[0] + \"px\";\n        n.style.height = ips[1] + \"px\";\n        _jsPlumb.manage(id, n, true); // TRANSIENT MANAGE\n        // create and assign an id, and initialize the offset.\n        placeholder.id = id;\n        placeholder.element = n;\n    };\n\n    // create a floating endpoint (for drag connections)\n    var _makeFloatingEndpoint = function (paintStyle, referenceAnchor, endpoint, referenceCanvas, sourceElement, _jsPlumb, _newEndpoint, scope) {\n        var floatingAnchor = new _jp.FloatingAnchor({ reference: referenceAnchor, referenceCanvas: referenceCanvas, jsPlumbInstance: _jsPlumb });\n        //setting the scope here should not be the way to fix that mootools issue.  it should be fixed by not\n        // adding the floating endpoint as a droppable.  that makes more sense anyway!\n        // TRANSIENT MANAGE\n        return _newEndpoint({\n            paintStyle: paintStyle,\n            endpoint: endpoint,\n            anchor: floatingAnchor,\n            source: sourceElement,\n            scope: scope\n        });\n    };\n\n    var typeParameters = [ \"connectorStyle\", \"connectorHoverStyle\", \"connectorOverlays\",\n        \"connector\", \"connectionType\", \"connectorClass\", \"connectorHoverClass\" ];\n\n    // a helper function that tries to find a connection to the given element, and returns it if so. if elementWithPrecedence is null,\n    // or no connection to it is found, we return the first connection in our list.\n    var findConnectionToUseForDynamicAnchor = function (ep, elementWithPrecedence) {\n        var idx = 0;\n        if (elementWithPrecedence != null) {\n            for (var i = 0; i < ep.connections.length; i++) {\n                if (ep.connections[i].sourceId === elementWithPrecedence || ep.connections[i].targetId === elementWithPrecedence) {\n                    idx = i;\n                    break;\n                }\n            }\n        }\n\n        return ep.connections[idx];\n    };\n\n    _jp.Endpoint = function (params) {\n        var _jsPlumb = params._jsPlumb,\n            _newConnection = params.newConnection,\n            _newEndpoint = params.newEndpoint;\n\n        this.idPrefix = \"_jsplumb_e_\";\n        this.defaultLabelLocation = [ 0.5, 0.5 ];\n        this.defaultOverlayKeys = [\"Overlays\", \"EndpointOverlays\"];\n        _jp.OverlayCapableJsPlumbUIComponent.apply(this, arguments);\n\n// TYPE\n\n        this.appendToDefaultType({\n            connectionType:params.connectionType,\n            maxConnections: params.maxConnections == null ? this._jsPlumb.instance.Defaults.MaxConnections : params.maxConnections, // maximum number of connections this endpoint can be the source of.,\n            paintStyle: params.endpointStyle || params.paintStyle || params.style || this._jsPlumb.instance.Defaults.EndpointStyle || _jp.Defaults.EndpointStyle,\n            hoverPaintStyle: params.endpointHoverStyle || params.hoverPaintStyle || this._jsPlumb.instance.Defaults.EndpointHoverStyle || _jp.Defaults.EndpointHoverStyle,\n            connectorStyle: params.connectorStyle,\n            connectorHoverStyle: params.connectorHoverStyle,\n            connectorClass: params.connectorClass,\n            connectorHoverClass: params.connectorHoverClass,\n            connectorOverlays: params.connectorOverlays,\n            connector: params.connector,\n            connectorTooltip: params.connectorTooltip\n        });\n\n// END TYPE\n\n        this._jsPlumb.enabled = !(params.enabled === false);\n        this._jsPlumb.visible = true;\n        this.element = _jp.getElement(params.source);\n        this._jsPlumb.uuid = params.uuid;\n        this._jsPlumb.floatingEndpoint = null;\n        var inPlaceCopy = null;\n        if (this._jsPlumb.uuid) {\n            params.endpointsByUUID[this._jsPlumb.uuid] = this;\n        }\n        this.elementId = params.elementId;\n        this.dragProxy = params.dragProxy;\n\n        this._jsPlumb.connectionCost = params.connectionCost;\n        this._jsPlumb.connectionsDirected = params.connectionsDirected;\n        this._jsPlumb.currentAnchorClass = \"\";\n        this._jsPlumb.events = {};\n\n        var deleteOnEmpty = params.deleteOnEmpty === true;\n        this.setDeleteOnEmpty = function(d) {\n            deleteOnEmpty = d;\n        };\n\n        var _updateAnchorClass = function () {\n            // stash old, get new\n            var oldAnchorClass = _jsPlumb.endpointAnchorClassPrefix + \"-\" + this._jsPlumb.currentAnchorClass;\n            this._jsPlumb.currentAnchorClass = this.anchor.getCssClass();\n            var anchorClass = _jsPlumb.endpointAnchorClassPrefix + (this._jsPlumb.currentAnchorClass ? \"-\" + this._jsPlumb.currentAnchorClass : \"\");\n\n            this.removeClass(oldAnchorClass);\n            this.addClass(anchorClass);\n            // add and remove at the same time to reduce the number of reflows.\n            _jp.updateClasses(this.element, anchorClass, oldAnchorClass);\n        }.bind(this);\n\n        this.prepareAnchor = function(anchorParams) {\n            var a = this._jsPlumb.instance.makeAnchor(anchorParams, this.elementId, _jsPlumb);\n            a.bind(\"anchorChanged\", function (currentAnchor) {\n                this.fire(\"anchorChanged\", {endpoint: this, anchor: currentAnchor});\n                _updateAnchorClass();\n            }.bind(this));\n            return a;\n        };\n\n        this.setPreparedAnchor = function(anchor, doNotRepaint) {\n            this._jsPlumb.instance.continuousAnchorFactory.clear(this.elementId);\n            this.anchor = anchor;\n            _updateAnchorClass();\n\n            if (!doNotRepaint) {\n                this._jsPlumb.instance.repaint(this.elementId);\n            }\n\n            return this;\n        };\n\n        this.setAnchor = function (anchorParams, doNotRepaint) {\n            var a = this.prepareAnchor(anchorParams);\n            this.setPreparedAnchor(a, doNotRepaint);\n            return this;\n        };\n\n        var internalHover = function (state) {\n            if (this.connections.length > 0) {\n                for (var i = 0; i < this.connections.length; i++) {\n                    this.connections[i].setHover(state, false);\n                }\n            }\n            else {\n                this.setHover(state);\n            }\n        }.bind(this);\n\n        this.bind(\"mouseover\", function () {\n            internalHover(true);\n        });\n        this.bind(\"mouseout\", function () {\n            internalHover(false);\n        });\n\n        // ANCHOR MANAGER\n        if (!params._transient) { // in place copies, for example, are transient.  they will never need to be retrieved during a paint cycle, because they dont move, and then they are deleted.\n            this._jsPlumb.instance.anchorManager.add(this, this.elementId);\n        }\n\n        this.prepareEndpoint = function(ep, typeId) {\n            var _e = function (t, p) {\n                var rm = _jsPlumb.getRenderMode();\n                if (_jp.Endpoints[rm][t]) {\n                    return new _jp.Endpoints[rm][t](p);\n                }\n                if (!_jsPlumb.Defaults.DoNotThrowErrors) {\n                    throw { msg: \"jsPlumb: unknown endpoint type '\" + t + \"'\" };\n                }\n            };\n\n            var endpointArgs = {\n                _jsPlumb: this._jsPlumb.instance,\n                cssClass: params.cssClass,\n                container: params.container,\n                tooltip: params.tooltip,\n                connectorTooltip: params.connectorTooltip,\n                endpoint: this\n            };\n\n            var endpoint;\n\n            if (_ju.isString(ep)) {\n                endpoint = _e(ep, endpointArgs);\n            }\n            else if (_ju.isArray(ep)) {\n                endpointArgs = _ju.merge(ep[1], endpointArgs);\n                endpoint = _e(ep[0], endpointArgs);\n            }\n            else {\n                endpoint = ep.clone();\n            }\n\n            // assign a clone function using a copy of endpointArgs. this is used when a drag starts: the endpoint that was dragged is cloned,\n            // and the clone is left in its place while the original one goes off on a magical journey.\n            // the copy is to get around a closure problem, in which endpointArgs ends up getting shared by\n            // the whole world.\n            //var argsForClone = jsPlumb.extend({}, endpointArgs);\n            endpoint.clone = function () {\n                // TODO this, and the code above, can be refactored to be more dry.\n                if (_ju.isString(ep)) {\n                    return _e(ep, endpointArgs);\n                }\n                else if (_ju.isArray(ep)) {\n                    endpointArgs = _ju.merge(ep[1], endpointArgs);\n                    return _e(ep[0], endpointArgs);\n                }\n            }.bind(this);\n\n            endpoint.typeId = typeId;\n            return endpoint;\n        };\n\n        this.setEndpoint = function(ep, doNotRepaint) {\n            var _ep = this.prepareEndpoint(ep);\n            this.setPreparedEndpoint(_ep, true);\n        };\n\n        this.setPreparedEndpoint = function (ep, doNotRepaint) {\n            if (this.endpoint != null) {\n                this.endpoint.cleanup();\n                this.endpoint.destroy();\n            }\n            this.endpoint = ep;\n            this.type = this.endpoint.type;\n            this.canvas = this.endpoint.canvas;\n        };\n\n        _jp.extend(this, params, typeParameters);\n\n        this.isSource = params.isSource || false;\n        this.isTemporarySource = params.isTemporarySource || false;\n        this.isTarget = params.isTarget || false;\n\n        this.connections = params.connections || [];\n        this.connectorPointerEvents = params[\"connector-pointer-events\"];\n\n        this.scope = params.scope || _jsPlumb.getDefaultScope();\n        this.timestamp = null;\n        this.reattachConnections = params.reattach || _jsPlumb.Defaults.ReattachConnections;\n        this.connectionsDetachable = _jsPlumb.Defaults.ConnectionsDetachable;\n        if (params.connectionsDetachable === false || params.detachable === false) {\n            this.connectionsDetachable = false;\n        }\n        this.dragAllowedWhenFull = params.dragAllowedWhenFull !== false;\n\n        if (params.onMaxConnections) {\n            this.bind(\"maxConnections\", params.onMaxConnections);\n        }\n\n        //\n        // add a connection. not part of public API.\n        //\n        this.addConnection = function (connection) {\n            this.connections.push(connection);\n            this[(this.connections.length > 0 ? \"add\" : \"remove\") + \"Class\"](_jsPlumb.endpointConnectedClass);\n            this[(this.isFull() ? \"add\" : \"remove\") + \"Class\"](_jsPlumb.endpointFullClass);\n        };\n\n        this.detachFromConnection = function (connection, idx, doNotCleanup) {\n            idx = idx == null ? this.connections.indexOf(connection) : idx;\n            if (idx >= 0) {\n                this.connections.splice(idx, 1);\n                this[(this.connections.length > 0 ? \"add\" : \"remove\") + \"Class\"](_jsPlumb.endpointConnectedClass);\n                this[(this.isFull() ? \"add\" : \"remove\") + \"Class\"](_jsPlumb.endpointFullClass);\n            }\n\n            if (!doNotCleanup && deleteOnEmpty && this.connections.length === 0) {\n                _jsPlumb.deleteObject({\n                    endpoint: this,\n                    fireEvent: false,\n                    deleteAttachedObjects: doNotCleanup !== true\n                });\n            }\n        };\n\n        this.deleteEveryConnection = function(params) {\n            var c = this.connections.length;\n            for (var i = 0; i < c; i++) {\n                _jsPlumb.deleteConnection(this.connections[0], params);\n            }\n        };\n\n        this.detachFrom = function (targetEndpoint, fireEvent, originalEvent) {\n            var c = [];\n            for (var i = 0; i < this.connections.length; i++) {\n                if (this.connections[i].endpoints[1] === targetEndpoint || this.connections[i].endpoints[0] === targetEndpoint) {\n                    c.push(this.connections[i]);\n                }\n            }\n            for (var j = 0, count = c.length; j < count; j++) {\n                _jsPlumb.deleteConnection(c[0]);\n            }\n            return this;\n        };\n\n        this.getElement = function () {\n            return this.element;\n        };\n\n        this.setElement = function (el) {\n            var parentId = this._jsPlumb.instance.getId(el),\n                curId = this.elementId;\n            // remove the endpoint from the list for the current endpoint's element\n            _ju.removeWithFunction(params.endpointsByElement[this.elementId], function (e) {\n                return e.id === this.id;\n            }.bind(this));\n            this.element = _jp.getElement(el);\n            this.elementId = _jsPlumb.getId(this.element);\n            _jsPlumb.anchorManager.rehomeEndpoint(this, curId, this.element);\n            _jsPlumb.dragManager.endpointAdded(this.element);\n            _ju.addToList(params.endpointsByElement, parentId, this);\n            return this;\n        };\n\n        /**\n         * private but must be exposed.\n         */\n        this.makeInPlaceCopy = function () {\n            var loc = this.anchor.getCurrentLocation({element: this}),\n                o = this.anchor.getOrientation(this),\n                acc = this.anchor.getCssClass(),\n                inPlaceAnchor = {\n                    bind: function () {\n                    },\n                    compute: function () {\n                        return [ loc[0], loc[1] ];\n                    },\n                    getCurrentLocation: function () {\n                        return [ loc[0], loc[1] ];\n                    },\n                    getOrientation: function () {\n                        return o;\n                    },\n                    getCssClass: function () {\n                        return acc;\n                    }\n                };\n\n            return _newEndpoint({\n                dropOptions: params.dropOptions,\n                anchor: inPlaceAnchor,\n                source: this.element,\n                paintStyle: this.getPaintStyle(),\n                endpoint: params.hideOnDrag ? \"Blank\" : this.endpoint,\n                _transient: true,\n                scope: this.scope,\n                reference:this\n            });\n        };\n\n        /**\n         * returns a connection from the pool; used when dragging starts.  just gets the head of the array if it can.\n         */\n        this.connectorSelector = function () {\n            return this.connections[0];\n        };\n\n        this.setStyle = this.setPaintStyle;\n\n        this.paint = function (params) {\n            params = params || {};\n            var timestamp = params.timestamp, recalc = !(params.recalc === false);\n            if (!timestamp || this.timestamp !== timestamp) {\n\n                var info = _jsPlumb.updateOffset({ elId: this.elementId, timestamp: timestamp });\n\n                var xy = params.offset ? params.offset.o : info.o;\n                if (xy != null) {\n                    var ap = params.anchorPoint, connectorPaintStyle = params.connectorPaintStyle;\n                    if (ap == null) {\n                        var wh = params.dimensions || info.s,\n                            anchorParams = { xy: [ xy.left, xy.top ], wh: wh, element: this, timestamp: timestamp };\n                        if (recalc && this.anchor.isDynamic && this.connections.length > 0) {\n                            var c = findConnectionToUseForDynamicAnchor(this, params.elementWithPrecedence),\n                                oIdx = c.endpoints[0] === this ? 1 : 0,\n                                oId = oIdx === 0 ? c.sourceId : c.targetId,\n                                oInfo = _jsPlumb.getCachedData(oId),\n                                oOffset = oInfo.o, oWH = oInfo.s;\n\n                            anchorParams.index = oIdx === 0 ? 1 : 0;\n                            anchorParams.connection = c;\n                            anchorParams.txy = [ oOffset.left, oOffset.top ];\n                            anchorParams.twh = oWH;\n                            anchorParams.tElement = c.endpoints[oIdx];\n                        } else if (this.connections.length > 0) {\n                            anchorParams.connection = this.connections[0];\n                        }\n                        ap = this.anchor.compute(anchorParams);\n                    }\n\n                    this.endpoint.compute(ap, this.anchor.getOrientation(this), this._jsPlumb.paintStyleInUse, connectorPaintStyle || this.paintStyleInUse);\n                    this.endpoint.paint(this._jsPlumb.paintStyleInUse, this.anchor);\n                    this.timestamp = timestamp;\n\n                    // paint overlays\n                    for (var i in this._jsPlumb.overlays) {\n                        if (this._jsPlumb.overlays.hasOwnProperty(i)) {\n                            var o = this._jsPlumb.overlays[i];\n                            if (o.isVisible()) {\n                                this._jsPlumb.overlayPlacements[i] = o.draw(this.endpoint, this._jsPlumb.paintStyleInUse);\n                                o.paint(this._jsPlumb.overlayPlacements[i]);\n                            }\n                        }\n                    }\n                }\n            }\n        };\n\n        this.getTypeDescriptor = function () {\n            return \"endpoint\";\n        };\n        this.isVisible = function () {\n            return this._jsPlumb.visible;\n        };\n\n        this.repaint = this.paint;\n\n        var draggingInitialised = false;\n        this.initDraggable = function () {\n\n            // is this a connection source? we make it draggable and have the\n            // drag listener maintain a connection with a floating endpoint.\n            if (!draggingInitialised && _jp.isDragSupported(this.element)) {\n                var placeholderInfo = { id: null, element: null },\n                    jpc = null,\n                    existingJpc = false,\n                    existingJpcParams = null,\n                    _dragHandler = _makeConnectionDragHandler(this, placeholderInfo, _jsPlumb),\n                    dragOptions = params.dragOptions || {},\n                    defaultOpts = {},\n                    startEvent = _jp.dragEvents.start,\n                    stopEvent = _jp.dragEvents.stop,\n                    dragEvent = _jp.dragEvents.drag,\n                    beforeStartEvent = _jp.dragEvents.beforeStart,\n                    payload;\n\n                // respond to beforeStart from katavorio; this will have, optionally, a payload of attribute values\n                // that were placed there by the makeSource mousedown listener.\n                var beforeStart = function(beforeStartParams) {\n                    payload = beforeStartParams.e.payload || {};\n                };\n\n                var start = function (startParams) {\n\n// -------------   first, get a connection to drag. this may be null, in which case we are dragging a new one.\n\n                    jpc = this.connectorSelector();\n\n// -------------------------------- now a bunch of tests about whether or not to proceed -------------------------\n\n                    var _continue = true;\n                    // if not enabled, return\n                    if (!this.isEnabled()) {\n                        _continue = false;\n                    }\n                    // if no connection and we're not a source - or temporarily a source, as is the case with makeSource - return.\n                    if (jpc == null && !this.isSource && !this.isTemporarySource) {\n                        _continue = false;\n                    }\n                    // otherwise if we're full and not allowed to drag, also return false.\n                    if (this.isSource && this.isFull() && !(jpc != null && this.dragAllowedWhenFull)) {\n                        _continue = false;\n                    }\n                    // if the connection was setup as not detachable or one of its endpoints\n                    // was setup as connectionsDetachable = false, or Defaults.ConnectionsDetachable\n                    // is set to false...\n                    if (jpc != null && !jpc.isDetachable(this)) {\n                        _continue = false;\n                    }\n\n                    var beforeDrag = _jsPlumb.checkCondition(jpc == null ? \"beforeDrag\" : \"beforeStartDetach\", {\n                        endpoint:this,\n                        source:this.element,\n                        sourceId:this.elementId,\n                        connection:jpc\n                    });\n                    if (beforeDrag === false) {\n                        _continue = false;\n                    }\n                    // else we might have been given some data. we'll pass it in to a new connection as 'data'.\n                    // here we also merge in the optional payload we were given on mousedown.\n                    else if (typeof beforeDrag === \"object\") {\n                        _jp.extend(beforeDrag, payload || {});\n                    }\n                    else {\n                        // or if no beforeDrag data, maybe use the payload on its own.\n                        beforeDrag = payload || {};\n                    }\n\n                    if (_continue === false) {\n                        // this is for mootools and yui. returning false from this causes jquery to stop drag.\n                        // the events are wrapped in both mootools and yui anyway, but i don't think returning\n                        // false from the start callback would stop a drag.\n                        if (_jsPlumb.stopDrag) {\n                            _jsPlumb.stopDrag(this.canvas);\n                        }\n                        _dragHandler.stopDrag();\n                        return false;\n                    }\n\n// ---------------------------------------------------------------------------------------------------------------------\n\n                    // ok to proceed.\n\n                    // clear hover for all connections for this endpoint before continuing.\n                    for (var i = 0; i < this.connections.length; i++) {\n                        this.connections[i].setHover(false);\n                    }\n\n                    this.addClass(\"endpointDrag\");\n                    _jsPlumb.setConnectionBeingDragged(true);\n\n                    // if we're not full but there was a connection, make it null. we'll create a new one.\n                    if (jpc && !this.isFull() && this.isSource) {\n                        jpc = null;\n                    }\n\n                    _jsPlumb.updateOffset({ elId: this.elementId });\n\n// ----------------    make the element we will drag around, and position it -----------------------------\n\n                    var ipco = this._jsPlumb.instance.getOffset(this.canvas),\n                        canvasElement = this.canvas,\n                        ips = this._jsPlumb.instance.getSize(this.canvas);\n\n                    _makeDraggablePlaceholder(placeholderInfo, _jsPlumb, ipco, ips);\n\n                    // store the id of the dragging div and the source element. the drop function will pick these up.                   \n                    _jsPlumb.setAttributes(this.canvas, {\n                        \"dragId\": placeholderInfo.id,\n                        \"elId\": this.elementId\n                    });\n\n// ------------------- create an endpoint that will be our floating endpoint ------------------------------------\n\n                    var endpointToFloat = this.dragProxy || this.endpoint;\n                    if (this.dragProxy == null && this.connectionType != null) {\n                        var aae = this._jsPlumb.instance.deriveEndpointAndAnchorSpec(this.connectionType);\n                        if (aae.endpoints[1]) {\n                            endpointToFloat = aae.endpoints[1];\n                        }\n                    }\n                    var centerAnchor = this._jsPlumb.instance.makeAnchor(\"Center\");\n                    centerAnchor.isFloating = true;\n                    this._jsPlumb.floatingEndpoint = _makeFloatingEndpoint(this.getPaintStyle(), centerAnchor, endpointToFloat, this.canvas, placeholderInfo.element, _jsPlumb, _newEndpoint, this.scope);\n                    var _savedAnchor = this._jsPlumb.floatingEndpoint.anchor;\n\n\n                    if (jpc == null) {\n\n                        this.setHover(false, false);\n                        // create a connection. one end is this endpoint, the other is a floating endpoint.                    \n                        jpc = _newConnection({\n                            sourceEndpoint: this,\n                            targetEndpoint: this._jsPlumb.floatingEndpoint,\n                            source: this.element,  // for makeSource with parent option.  ensure source element is represented correctly.\n                            target: placeholderInfo.element,\n                            anchors: [ this.anchor, this._jsPlumb.floatingEndpoint.anchor ],\n                            paintStyle: params.connectorStyle, // this can be null. Connection will use the default.\n                            hoverPaintStyle: params.connectorHoverStyle,\n                            connector: params.connector, // this can also be null. Connection will use the default.\n                            overlays: params.connectorOverlays,\n                            type: this.connectionType,\n                            cssClass: this.connectorClass,\n                            hoverClass: this.connectorHoverClass,\n                            scope:params.scope,\n                            data:beforeDrag\n                        });\n                        jpc.pending = true;\n                        jpc.addClass(_jsPlumb.draggingClass);\n                        this._jsPlumb.floatingEndpoint.addClass(_jsPlumb.draggingClass);\n                        this._jsPlumb.floatingEndpoint.anchor = _savedAnchor;\n                        // fire an event that informs that a connection is being dragged\n                        _jsPlumb.fire(\"connectionDrag\", jpc);\n\n                        // register the new connection on the drag manager. This connection, at this point, is 'pending',\n                        // and has as its target a temporary element (the 'placeholder'). If the connection subsequently\n                        // becomes established, the anchor manager is informed that the target of the connection has\n                        // changed.\n\n                        _jsPlumb.anchorManager.newConnection(jpc);\n\n                    } else {\n                        existingJpc = true;\n                        jpc.setHover(false);\n                        // new anchor idx\n                        var anchorIdx = jpc.endpoints[0].id === this.id ? 0 : 1;\n                        this.detachFromConnection(jpc, null, true);                         // detach from the connection while dragging is occurring. but dont cleanup automatically.\n\n                        // store the original scope (issue 57)\n                        var dragScope = _jsPlumb.getDragScope(canvasElement);\n                        _jsPlumb.setAttribute(this.canvas, \"originalScope\", dragScope);\n\n                        // fire an event that informs that a connection is being dragged. we do this before\n                        // replacing the original target with the floating element info.\n                        _jsPlumb.fire(\"connectionDrag\", jpc);\n\n                        // now we replace ourselves with the temporary div we created above:\n                        if (anchorIdx === 0) {\n                            existingJpcParams = [ jpc.source, jpc.sourceId, canvasElement, dragScope ];\n                            _jsPlumb.anchorManager.sourceChanged(jpc.endpoints[anchorIdx].elementId, placeholderInfo.id, jpc, placeholderInfo.element);\n\n                        } else {\n                            existingJpcParams = [ jpc.target, jpc.targetId, canvasElement, dragScope ];\n                            jpc.target = placeholderInfo.element;\n                            jpc.targetId = placeholderInfo.id;\n\n                            _jsPlumb.anchorManager.updateOtherEndpoint(jpc.sourceId, jpc.endpoints[anchorIdx].elementId, jpc.targetId, jpc);\n                        }\n\n                        // store the original endpoint and assign the new floating endpoint for the drag.\n                        jpc.suspendedEndpoint = jpc.endpoints[anchorIdx];\n\n                        // PROVIDE THE SUSPENDED ELEMENT, BE IT A SOURCE OR TARGET (ISSUE 39)\n                        jpc.suspendedElement = jpc.endpoints[anchorIdx].getElement();\n                        jpc.suspendedElementId = jpc.endpoints[anchorIdx].elementId;\n                        jpc.suspendedElementType = anchorIdx === 0 ? \"source\" : \"target\";\n\n                        jpc.suspendedEndpoint.setHover(false);\n                        this._jsPlumb.floatingEndpoint.referenceEndpoint = jpc.suspendedEndpoint;\n                        jpc.endpoints[anchorIdx] = this._jsPlumb.floatingEndpoint;\n\n                        jpc.addClass(_jsPlumb.draggingClass);\n                        this._jsPlumb.floatingEndpoint.addClass(_jsPlumb.draggingClass);\n                    }\n\n                    _jsPlumb.registerFloatingConnection(placeholderInfo, jpc, this._jsPlumb.floatingEndpoint);\n\n                    // // register it and register connection on it.\n                    // _jsPlumb.floatingConnections[placeholderInfo.id] = jpc;\n                    //\n                    // // only register for the target endpoint; we will not be dragging the source at any time\n                    // // before this connection is either discarded or made into a permanent connection.\n                    // _ju.addToList(params.endpointsByElement, placeholderInfo.id, this._jsPlumb.floatingEndpoint);\n\n\n                    // tell jsplumb about it\n                    _jsPlumb.currentlyDragging = true;\n                }.bind(this);\n\n                var stop = function () {\n                    _jsPlumb.setConnectionBeingDragged(false);\n\n                    if (jpc && jpc.endpoints != null) {\n                        // get the actual drop event (decode from library args to stop function)\n                        var originalEvent = _jsPlumb.getDropEvent(arguments);\n                        // unlock the other endpoint (if it is dynamic, it would have been locked at drag start)\n                        var idx = _jsPlumb.getFloatingAnchorIndex(jpc);\n                        jpc.endpoints[idx === 0 ? 1 : 0].anchor.unlock();\n                        // TODO: Dont want to know about css classes inside jsplumb, ideally.\n                        jpc.removeClass(_jsPlumb.draggingClass);\n\n                        // if we have the floating endpoint then the connection has not been dropped\n                        // on another endpoint.  If it is a new connection we throw it away. If it is an\n                        // existing connection we check to see if we should reattach it, throwing it away\n                        // if not.\n                        if (this._jsPlumb && (jpc.deleteConnectionNow || jpc.endpoints[idx] === this._jsPlumb.floatingEndpoint)) {\n                            // 6a. if the connection was an existing one...\n                            if (existingJpc && jpc.suspendedEndpoint) {\n                                // fix for issue35, thanks Sylvain Gizard: when firing the detach event make sure the\n                                // floating endpoint has been replaced.\n                                if (idx === 0) {\n                                    jpc.floatingElement = jpc.source;\n                                    jpc.floatingId = jpc.sourceId;\n                                    jpc.floatingEndpoint = jpc.endpoints[0];\n                                    jpc.floatingIndex = 0;\n                                    jpc.source = existingJpcParams[0];\n                                    jpc.sourceId = existingJpcParams[1];\n                                } else {\n                                    // keep a copy of the floating element; the anchor manager will want to clean up.\n                                    jpc.floatingElement = jpc.target;\n                                    jpc.floatingId = jpc.targetId;\n                                    jpc.floatingEndpoint = jpc.endpoints[1];\n                                    jpc.floatingIndex = 1;\n                                    jpc.target = existingJpcParams[0];\n                                    jpc.targetId = existingJpcParams[1];\n                                }\n\n                                var fe = this._jsPlumb.floatingEndpoint; // store for later removal.\n                                // restore the original scope (issue 57)\n                                _jsPlumb.setDragScope(existingJpcParams[2], existingJpcParams[3]);\n                                jpc.endpoints[idx] = jpc.suspendedEndpoint;\n                                // if the connection should be reattached, or the other endpoint refuses detach, then\n                                // reset the connection to its original state\n                                if (jpc.isReattach() || jpc._forceReattach || jpc._forceDetach || !_jsPlumb.deleteConnection(jpc, {originalEvent: originalEvent})) {\n\n                                    jpc.setHover(false);\n                                    jpc._forceDetach = null;\n                                    jpc._forceReattach = null;\n                                    this._jsPlumb.floatingEndpoint.detachFromConnection(jpc);\n                                    jpc.suspendedEndpoint.addConnection(jpc);\n\n                                    // TODO this code is duplicated in lots of places...and there is nothing external\n                                    // in the code; it all refers to the connection itself. we could add a\n                                    // `checkSanity(connection)` method to anchorManager that did this.\n                                    if (idx === 1) {\n                                        _jsPlumb.anchorManager.updateOtherEndpoint(jpc.sourceId, jpc.floatingId, jpc.targetId, jpc);\n                                    }\n                                    else {\n                                        _jsPlumb.anchorManager.sourceChanged(jpc.floatingId, jpc.sourceId, jpc, jpc.source);\n                                    }\n\n                                    _jsPlumb.repaint(existingJpcParams[1]);\n                                }\n                                else {\n                                    _jsPlumb.deleteObject({endpoint: fe});\n                                }\n                            }\n                        }\n\n                        // makeTargets sets this flag, to tell us we have been replaced and should delete this object.\n                        if (this.deleteAfterDragStop) {\n                            _jsPlumb.deleteObject({endpoint: this});\n                        }\n                        else {\n                            if (this._jsPlumb) {\n                                 this.paint({recalc: false});\n                            }\n                        }\n\n                        // although the connection is no longer valid, there are use cases where this is useful.\n                        _jsPlumb.fire(\"connectionDragStop\", jpc, originalEvent);\n                        // fire this event to give people more fine-grained control (connectionDragStop fires a lot)\n                        if (jpc.pending) {\n                            _jsPlumb.fire(\"connectionAborted\", jpc, originalEvent);\n                        }\n                        // tell jsplumb that dragging is finished.\n                        _jsPlumb.currentlyDragging = false;\n                        jpc.suspendedElement = null;\n                        jpc.suspendedEndpoint = null;\n                        jpc = null;\n                    }\n\n                    // if no endpoints, jpc already cleaned up. but still we want to ensure we're reset properly.\n                    // remove the element associated with the floating endpoint\n                    // (and its associated floating endpoint and visual artefacts)\n                    if (placeholderInfo && placeholderInfo.element) {\n                        _jsPlumb.remove(placeholderInfo.element, false, false);\n                    }\n                    // remove the inplace copy\n                    if (inPlaceCopy) {\n                        _jsPlumb.deleteObject({endpoint: inPlaceCopy});\n                    }\n\n                    if (this._jsPlumb) {\n                        // make our canvas visible (TODO: hand off to library; we should not know about DOM)\n                        this.canvas.style.visibility = \"visible\";\n                        // unlock our anchor\n                        this.anchor.unlock();\n                        // clear floating anchor.\n                        this._jsPlumb.floatingEndpoint = null;\n                    }\n\n                }.bind(this);\n\n                dragOptions = _jp.extend(defaultOpts, dragOptions);\n                dragOptions.scope = this.scope || dragOptions.scope;\n                dragOptions[beforeStartEvent] = _ju.wrap(dragOptions[beforeStartEvent], beforeStart, false);\n                dragOptions[startEvent] = _ju.wrap(dragOptions[startEvent], start, false);\n                // extracted drag handler function so can be used by makeSource\n                dragOptions[dragEvent] = _ju.wrap(dragOptions[dragEvent], _dragHandler.drag);\n                dragOptions[stopEvent] = _ju.wrap(dragOptions[stopEvent], stop);\n                dragOptions.multipleDrop = false;\n\n                dragOptions.canDrag = function () {\n                    return this.isSource || this.isTemporarySource || /*(this.isTarget && */this.connections.length > 0/*)*/;\n                }.bind(this);\n\n                _jsPlumb.initDraggable(this.canvas, dragOptions, \"internal\");\n\n                this.canvas._jsPlumbRelatedElement = this.element;\n\n                draggingInitialised = true;\n            }\n        };\n\n        var ep = params.endpoint || this._jsPlumb.instance.Defaults.Endpoint || _jp.Defaults.Endpoint;\n        this.setEndpoint(ep, true);\n        var anchorParamsToUse = params.anchor ? params.anchor : params.anchors ? params.anchors : (_jsPlumb.Defaults.Anchor || \"Top\");\n        this.setAnchor(anchorParamsToUse, true);\n\n        // finally, set type if it was provided\n        var type = [ \"default\", (params.type || \"\")].join(\" \");\n        this.addType(type, params.data, true);\n        this.canvas = this.endpoint.canvas;\n        this.canvas._jsPlumb = this;\n\n        this.initDraggable();\n\n        // pulled this out into a function so we can reuse it for the inPlaceCopy canvas; you can now drop detached connections\n        // back onto the endpoint you detached it from.\n        var _initDropTarget = function (canvas, isTransient, endpoint, referenceEndpoint) {\n\n            if (_jp.isDropSupported(this.element)) {\n                var dropOptions = params.dropOptions || _jsPlumb.Defaults.DropOptions || _jp.Defaults.DropOptions;\n                dropOptions = _jp.extend({}, dropOptions);\n                dropOptions.scope = dropOptions.scope || this.scope;\n                var dropEvent = _jp.dragEvents.drop,\n                    overEvent = _jp.dragEvents.over,\n                    outEvent = _jp.dragEvents.out,\n                    _ep = this,\n                    drop = _jsPlumb.EndpointDropHandler({\n                        getEndpoint: function () {\n                            return _ep;\n                        },\n                        jsPlumb: _jsPlumb,\n                        enabled: function () {\n                            return endpoint != null ? endpoint.isEnabled() : true;\n                        },\n                        isFull: function () {\n                            return endpoint.isFull();\n                        },\n                        element: this.element,\n                        elementId: this.elementId,\n                        isSource: this.isSource,\n                        isTarget: this.isTarget,\n                        addClass: function (clazz) {\n                            _ep.addClass(clazz);\n                        },\n                        removeClass: function (clazz) {\n                            _ep.removeClass(clazz);\n                        },\n                        isDropAllowed: function () {\n                            return _ep.isDropAllowed.apply(_ep, arguments);\n                        },\n                        reference:referenceEndpoint,\n                        isRedrop:function(jpc, dhParams) {\n                            return jpc.suspendedEndpoint && dhParams.reference && (jpc.suspendedEndpoint.id === dhParams.reference.id);\n                        }\n                    });\n\n                dropOptions[dropEvent] = _ju.wrap(dropOptions[dropEvent], drop, true);\n                dropOptions[overEvent] = _ju.wrap(dropOptions[overEvent], function () {\n                    var draggable = _jp.getDragObject(arguments),\n                        id = _jsPlumb.getAttribute(_jp.getElement(draggable), \"dragId\"),\n                        _jpc = _jsPlumb.getFloatingConnectionFor(id);//_jsPlumb.floatingConnections[id];\n\n                    if (_jpc != null) {\n                        var idx = _jsPlumb.getFloatingAnchorIndex(_jpc);\n                        // here we should fire the 'over' event if we are a target and this is a new connection,\n                        // or we are the same as the floating endpoint.\n                        var _cont = (this.isTarget && idx !== 0) || (_jpc.suspendedEndpoint && this.referenceEndpoint && this.referenceEndpoint.id === _jpc.suspendedEndpoint.id);\n                        if (_cont) {\n                            var bb = _jsPlumb.checkCondition(\"checkDropAllowed\", {\n                                sourceEndpoint: _jpc.endpoints[idx],\n                                targetEndpoint: this,\n                                connection: _jpc\n                            });\n                            this[(bb ? \"add\" : \"remove\") + \"Class\"](_jsPlumb.endpointDropAllowedClass);\n                            this[(bb ? \"remove\" : \"add\") + \"Class\"](_jsPlumb.endpointDropForbiddenClass);\n                            _jpc.endpoints[idx].anchor.over(this.anchor, this);\n                        }\n                    }\n                }.bind(this));\n\n                dropOptions[outEvent] = _ju.wrap(dropOptions[outEvent], function () {\n                    var draggable = _jp.getDragObject(arguments),\n                        id = draggable == null ? null : _jsPlumb.getAttribute(_jp.getElement(draggable), \"dragId\"),\n                        _jpc = id ? _jsPlumb.getFloatingConnectionFor(id) : null;\n\n                    if (_jpc != null) {\n                        var idx = _jsPlumb.getFloatingAnchorIndex(_jpc);\n                        var _cont = (this.isTarget && idx !== 0) || (_jpc.suspendedEndpoint && this.referenceEndpoint && this.referenceEndpoint.id === _jpc.suspendedEndpoint.id);\n                        if (_cont) {\n                            this.removeClass(_jsPlumb.endpointDropAllowedClass);\n                            this.removeClass(_jsPlumb.endpointDropForbiddenClass);\n                            _jpc.endpoints[idx].anchor.out();\n                        }\n                    }\n                }.bind(this));\n\n                _jsPlumb.initDroppable(canvas, dropOptions, \"internal\", isTransient);\n            }\n        }.bind(this);\n\n        // Initialise the endpoint's canvas as a drop target. The drop handler will take care of the logic of whether\n        // something can actually be dropped.\n        if (!this.anchor.isFloating) {\n            _initDropTarget(this.canvas, !(params._transient || this.anchor.isFloating), this, params.reference);\n        }\n\n        return this;\n    };\n\n    _ju.extend(_jp.Endpoint, _jp.OverlayCapableJsPlumbUIComponent, {\n\n        setVisible: function (v, doNotChangeConnections, doNotNotifyOtherEndpoint) {\n            this._jsPlumb.visible = v;\n            if (this.canvas) {\n                this.canvas.style.display = v ? \"block\" : \"none\";\n            }\n            this[v ? \"showOverlays\" : \"hideOverlays\"]();\n            if (!doNotChangeConnections) {\n                for (var i = 0; i < this.connections.length; i++) {\n                    this.connections[i].setVisible(v);\n                    if (!doNotNotifyOtherEndpoint) {\n                        var oIdx = this === this.connections[i].endpoints[0] ? 1 : 0;\n                        // only change the other endpoint if this is its only connection.\n                        if (this.connections[i].endpoints[oIdx].connections.length === 1) {\n                            this.connections[i].endpoints[oIdx].setVisible(v, true, true);\n                        }\n                    }\n                }\n            }\n        },\n        getAttachedElements: function () {\n            return this.connections;\n        },\n        applyType: function (t, doNotRepaint) {\n            this.setPaintStyle(t.endpointStyle || t.paintStyle, doNotRepaint);\n            this.setHoverPaintStyle(t.endpointHoverStyle || t.hoverPaintStyle, doNotRepaint);\n            if (t.maxConnections != null) {\n                this._jsPlumb.maxConnections = t.maxConnections;\n            }\n            if (t.scope) {\n                this.scope = t.scope;\n            }\n            _jp.extend(this, t, typeParameters);\n            if (t.cssClass != null && this.canvas) {\n                this._jsPlumb.instance.addClass(this.canvas, t.cssClass);\n            }\n            _jp.OverlayCapableJsPlumbUIComponent.applyType(this, t);\n        },\n        isEnabled: function () {\n            return this._jsPlumb.enabled;\n        },\n        setEnabled: function (e) {\n            this._jsPlumb.enabled = e;\n        },\n        cleanup: function () {\n            var anchorClass = this._jsPlumb.instance.endpointAnchorClassPrefix + (this._jsPlumb.currentAnchorClass ? \"-\" + this._jsPlumb.currentAnchorClass : \"\");\n            _jp.removeClass(this.element, anchorClass);\n            this.anchor = null;\n            this.endpoint.cleanup(true);\n            this.endpoint.destroy();\n            this.endpoint = null;\n            // drag/drop\n            this._jsPlumb.instance.destroyDraggable(this.canvas, \"internal\");\n            this._jsPlumb.instance.destroyDroppable(this.canvas, \"internal\");\n        },\n        setHover: function (h) {\n            if (this.endpoint && this._jsPlumb && !this._jsPlumb.instance.isConnectionBeingDragged()) {\n                this.endpoint.setHover(h);\n            }\n        },\n        isFull: function () {\n            return this._jsPlumb.maxConnections === 0 ? true : !(this.isFloating() || this._jsPlumb.maxConnections < 0 || this.connections.length < this._jsPlumb.maxConnections);\n        },\n        /**\n         * private but needs to be exposed.\n         */\n        isFloating: function () {\n            return this.anchor != null && this.anchor.isFloating;\n        },\n        isConnectedTo: function (endpoint) {\n            var found = false;\n            if (endpoint) {\n                for (var i = 0; i < this.connections.length; i++) {\n                    if (this.connections[i].endpoints[1] === endpoint || this.connections[i].endpoints[0] === endpoint) {\n                        found = true;\n                        break;\n                    }\n                }\n            }\n            return found;\n        },\n        getConnectionCost: function () {\n            return this._jsPlumb.connectionCost;\n        },\n        setConnectionCost: function (c) {\n            this._jsPlumb.connectionCost = c;\n        },\n        areConnectionsDirected: function () {\n            return this._jsPlumb.connectionsDirected;\n        },\n        setConnectionsDirected: function (b) {\n            this._jsPlumb.connectionsDirected = b;\n        },\n        setElementId: function (_elId) {\n            this.elementId = _elId;\n            this.anchor.elementId = _elId;\n        },\n        setReferenceElement: function (_el) {\n            this.element = _jp.getElement(_el);\n        },\n        setDragAllowedWhenFull: function (allowed) {\n            this.dragAllowedWhenFull = allowed;\n        },\n        equals: function (endpoint) {\n            return this.anchor.equals(endpoint.anchor);\n        },\n        getUuid: function () {\n            return this._jsPlumb.uuid;\n        },\n        computeAnchor: function (params) {\n            return this.anchor.compute(params);\n        }\n    });\n\n    root.jsPlumbInstance.prototype.EndpointDropHandler = function (dhParams) {\n        return function (e) {\n\n            var _jsPlumb = dhParams.jsPlumb;\n\n            // remove the classes that are added dynamically. drop is neither forbidden nor allowed now that\n            // the drop is finishing.\n            dhParams.removeClass(_jsPlumb.endpointDropAllowedClass);\n            dhParams.removeClass(_jsPlumb.endpointDropForbiddenClass);\n\n            var originalEvent = _jsPlumb.getDropEvent(arguments),\n                draggable = _jsPlumb.getDragObject(arguments),\n                id = _jsPlumb.getAttribute(draggable, \"dragId\"),\n                elId = _jsPlumb.getAttribute(draggable, \"elId\"),\n                scope = _jsPlumb.getAttribute(draggable, \"originalScope\"),\n                jpc = _jsPlumb.getFloatingConnectionFor(id);\n\n            // if no active connection, bail.\n            if (jpc == null) {\n                return;\n            }\n\n            // calculate if this is an existing connection.\n            var existingConnection = jpc.suspendedEndpoint != null;\n\n            // if suspended endpoint exists but has been cleaned up, bail. This means it's an existing connection\n            // that has been detached and will shortly be discarded.\n            if (existingConnection && jpc.suspendedEndpoint._jsPlumb == null) {\n                return;\n            }\n\n            // get the drop endpoint. for a normal connection this is just the one that would replace the currently\n            // floating endpoint. for a makeTarget this is a new endpoint that is created on drop. But we leave that to\n            // the handler to figure out.\n            var _ep = dhParams.getEndpoint(jpc);\n\n            // If we're not given an endpoint to use, bail.\n            if (_ep == null) {\n                return;\n            }\n\n            // if this is a drop back where the connection came from, mark it force reattach and\n            // return; the stop handler will reattach. without firing an event.\n            if (dhParams.isRedrop(jpc, dhParams)) {\n                jpc._forceReattach = true;\n                jpc.setHover(false);\n                if (dhParams.maybeCleanup) {\n                    dhParams.maybeCleanup(_ep);\n                }\n                return;\n            }\n\n            // ensure we dont bother trying to drop sources on non-source eps, and same for target.\n            var idx = _jsPlumb.getFloatingAnchorIndex(jpc);\n            if ((idx === 0 && !dhParams.isSource)|| (idx === 1 && !dhParams.isTarget)){\n                if (dhParams.maybeCleanup) {\n                    dhParams.maybeCleanup(_ep);\n                }\n                return;\n            }\n\n            if (dhParams.onDrop) {\n                dhParams.onDrop(jpc);\n            }\n\n            // restore the original scope if necessary (issue 57)\n            if (scope) {\n                _jsPlumb.setDragScope(draggable, scope);\n            }\n\n            // if the target of the drop is full, fire an event (we abort below)\n            // makeTarget: keep.\n            var isFull = dhParams.isFull(e);\n            if (isFull) {\n                _ep.fire(\"maxConnections\", {\n                    endpoint: this,\n                    connection: jpc,\n                    maxConnections: _ep._jsPlumb.maxConnections\n                }, originalEvent);\n            }\n            //\n            // if endpoint enabled, not full, and matches the index of the floating endpoint...\n            if (!isFull &&  dhParams.enabled()) {\n                var _doContinue = true;\n\n                // before testing for beforeDrop, reset the connection's source/target to be the actual DOM elements\n                // involved (that is, stash any temporary stuff used for dragging. but we need to keep it around in\n                // order that the anchor manager can clean things up properly).\n                if (idx === 0) {\n                    jpc.floatingElement = jpc.source;\n                    jpc.floatingId = jpc.sourceId;\n                    jpc.floatingEndpoint = jpc.endpoints[0];\n                    jpc.floatingIndex = 0;\n                    jpc.source = dhParams.element;\n                    jpc.sourceId = dhParams.elementId;\n                } else {\n                    jpc.floatingElement = jpc.target;\n                    jpc.floatingId = jpc.targetId;\n                    jpc.floatingEndpoint = jpc.endpoints[1];\n                    jpc.floatingIndex = 1;\n                    jpc.target = dhParams.element;\n                    jpc.targetId = dhParams.elementId;\n                }\n\n                // if this is an existing connection and detach is not allowed we won't continue. The connection's\n                // endpoints have been reinstated; everything is back to how it was.\n                if (existingConnection && jpc.suspendedEndpoint.id !== _ep.id) {\n                    if (!jpc.isDetachAllowed(jpc) || !jpc.endpoints[idx].isDetachAllowed(jpc) || !jpc.suspendedEndpoint.isDetachAllowed(jpc) || !_jsPlumb.checkCondition(\"beforeDetach\", jpc)) {\n                        _doContinue = false;\n                    }\n                }\n\n// ------------ wrap the execution path in a function so we can support asynchronous beforeDrop\n\n                var continueFunction = function (optionalData) {\n                    // remove this jpc from the current endpoint, which is a floating endpoint that we will\n                    // subsequently discard.\n                    jpc.endpoints[idx].detachFromConnection(jpc);\n\n                    // if there's a suspended endpoint, detach it from the connection.\n                    if (jpc.suspendedEndpoint) {\n                        jpc.suspendedEndpoint.detachFromConnection(jpc);\n                    }\n\n                    jpc.endpoints[idx] = _ep;\n                    _ep.addConnection(jpc);\n\n                    // copy our parameters in to the connection:\n                    var params = _ep.getParameters();\n                    for (var aParam in params) {\n                        jpc.setParameter(aParam, params[aParam]);\n                    }\n\n                    if (!existingConnection) {\n                        // if not an existing connection and\n                        if (params.draggable) {\n                            _jsPlumb.initDraggable(this.element, dhParams.dragOptions, \"internal\", _jsPlumb);\n                        }\n                    }\n                    else {\n                        var suspendedElementId = jpc.suspendedEndpoint.elementId;\n                        _jsPlumb.fireMoveEvent({\n                            index: idx,\n                            originalSourceId: idx === 0 ? suspendedElementId : jpc.sourceId,\n                            newSourceId: idx === 0 ? _ep.elementId : jpc.sourceId,\n                            originalTargetId: idx === 1 ? suspendedElementId : jpc.targetId,\n                            newTargetId: idx === 1 ? _ep.elementId : jpc.targetId,\n                            originalSourceEndpoint: idx === 0 ? jpc.suspendedEndpoint : jpc.endpoints[0],\n                            newSourceEndpoint: idx === 0 ? _ep : jpc.endpoints[0],\n                            originalTargetEndpoint: idx === 1 ? jpc.suspendedEndpoint : jpc.endpoints[1],\n                            newTargetEndpoint: idx === 1 ? _ep : jpc.endpoints[1],\n                            connection: jpc\n                        }, originalEvent);\n                    }\n\n                    if (idx === 1) {\n                        _jsPlumb.anchorManager.updateOtherEndpoint(jpc.sourceId, jpc.floatingId, jpc.targetId, jpc);\n                    }\n                    else {\n                        _jsPlumb.anchorManager.sourceChanged(jpc.floatingId, jpc.sourceId, jpc, jpc.source);\n                    }\n\n                    // when makeSource has uniqueEndpoint:true, we want to create connections with new endpoints\n                    // that are subsequently deleted. So makeSource sets `finalEndpoint`, which is the Endpoint to\n                    // which the connection should be attached. The `detachFromConnection` call below results in the\n                    // temporary endpoint being cleaned up.\n                    if (jpc.endpoints[0].finalEndpoint) {\n                        var _toDelete = jpc.endpoints[0];\n                        _toDelete.detachFromConnection(jpc);\n                        jpc.endpoints[0] = jpc.endpoints[0].finalEndpoint;\n                        jpc.endpoints[0].addConnection(jpc);\n                    }\n\n                    // if optionalData was given, merge it onto the connection's data.\n                    if (_ju.isObject(optionalData)) {\n                        jpc.mergeData(optionalData);\n                    }\n                    // finalise will inform the anchor manager and also add to\n                    // connectionsByScope if necessary.\n                    _jsPlumb.finaliseConnection(jpc, null, originalEvent, false);\n                    jpc.setHover(false);\n\n                }.bind(this);\n\n                var dontContinueFunction = function () {\n                    // otherwise just put it back on the endpoint it was on before the drag.\n                    if (jpc.suspendedEndpoint) {\n                        jpc.endpoints[idx] = jpc.suspendedEndpoint;\n                        jpc.setHover(false);\n                        jpc._forceDetach = true;\n                        if (idx === 0) {\n                            jpc.source = jpc.suspendedEndpoint.element;\n                            jpc.sourceId = jpc.suspendedEndpoint.elementId;\n                        } else {\n                            jpc.target = jpc.suspendedEndpoint.element;\n                            jpc.targetId = jpc.suspendedEndpoint.elementId;\n                        }\n                        jpc.suspendedEndpoint.addConnection(jpc);\n\n                        // TODO checkSanity\n                        if (idx === 1) {\n                            _jsPlumb.anchorManager.updateOtherEndpoint(jpc.sourceId, jpc.floatingId, jpc.targetId, jpc);\n                        }\n                        else {\n                            _jsPlumb.anchorManager.sourceChanged(jpc.floatingId, jpc.sourceId, jpc, jpc.source);\n                        }\n\n                        _jsPlumb.repaint(jpc.sourceId);\n                        jpc._forceDetach = false;\n                    }\n                };\n\n// --------------------------------------\n                // now check beforeDrop.  this will be available only on Endpoints that are setup to\n                // have a beforeDrop condition (although, secretly, under the hood all Endpoints and\n                // the Connection have them, because they are on jsPlumbUIComponent.  shhh!), because\n                // it only makes sense to have it on a target endpoint.\n                _doContinue = _doContinue && dhParams.isDropAllowed(jpc.sourceId, jpc.targetId, jpc.scope, jpc, _ep);// && jpc.pending;\n\n                if (_doContinue) {\n                    continueFunction(_doContinue);\n                    return true;\n                }\n                else {\n                    dontContinueFunction();\n                }\n            }\n\n            if (dhParams.maybeCleanup) {\n                dhParams.maybeCleanup(_ep);\n            }\n\n            _jsPlumb.currentlyDragging = false;\n        };\n    };\n}).call(typeof window !== 'undefined' ? window : this);\n\n/*\n * This file contains the code for Connections.\n *\n * Copyright (c) 2010 - 2018 jsPlumb (hello@jsplumbtoolkit.com)\n *\n * https://jsplumbtoolkit.com\n * https://github.com/jsplumb/jsplumb\n *\n * Dual licensed under the MIT and GPL2 licenses.\n */\n;\n(function () {\n\n    \"use strict\";\n    var root = this,\n        _jp = root.jsPlumb,\n        _ju = root.jsPlumbUtil;\n\n    var makeConnector = function (_jsPlumb, renderMode, connectorName, connectorArgs, forComponent) {\n            // first make sure we have a cache for the specified renderer\n            _jp.Connectors[renderMode] = _jp.Connectors[renderMode] || {};\n\n            // now see if the one we want exists; if not we will try to make it\n            if (_jp.Connectors[renderMode][connectorName] == null) {\n\n                if (_jp.Connectors[connectorName] == null) {\n                    if (!_jsPlumb.Defaults.DoNotThrowErrors) {\n                        throw new TypeError(\"jsPlumb: unknown connector type '\" + connectorName + \"'\");\n                    } else {\n                        return null;\n                    }\n                }\n\n                _jp.Connectors[renderMode][connectorName] = function() {\n                    _jp.Connectors[connectorName].apply(this, arguments);\n                    _jp.ConnectorRenderers[renderMode].apply(this, arguments);\n                };\n\n                _ju.extend(_jp.Connectors[renderMode][connectorName], [ _jp.Connectors[connectorName], _jp.ConnectorRenderers[renderMode]]);\n\n            }\n\n            return new _jp.Connectors[renderMode][connectorName](connectorArgs, forComponent);\n        },\n        _makeAnchor = function (anchorParams, elementId, _jsPlumb) {\n            return (anchorParams) ? _jsPlumb.makeAnchor(anchorParams, elementId, _jsPlumb) : null;\n        },\n        _updateConnectedClass = function (conn, element, _jsPlumb, remove) {\n            if (element != null) {\n                element._jsPlumbConnections = element._jsPlumbConnections || {};\n                if (remove) {\n                    delete element._jsPlumbConnections[conn.id];\n                }\n                else {\n                    element._jsPlumbConnections[conn.id] = true;\n                }\n\n                if (_ju.isEmpty(element._jsPlumbConnections)) {\n                    _jsPlumb.removeClass(element, _jsPlumb.connectedClass);\n                }\n                else {\n                    _jsPlumb.addClass(element, _jsPlumb.connectedClass);\n                }\n            }\n        };\n\n    _jp.Connection = function (params) {\n        var _newEndpoint = params.newEndpoint;\n\n        this.id = params.id;\n        this.connector = null;\n        this.idPrefix = \"_jsplumb_c_\";\n        this.defaultLabelLocation = 0.5;\n        this.defaultOverlayKeys = [\"Overlays\", \"ConnectionOverlays\"];\n        // if a new connection is the result of moving some existing connection, params.previousConnection\n        // will have that Connection in it. listeners for the jsPlumbConnection event can look for that\n        // member and take action if they need to.\n        this.previousConnection = params.previousConnection;\n        this.source = _jp.getElement(params.source);\n        this.target = _jp.getElement(params.target);\n\n\n        _jp.OverlayCapableJsPlumbUIComponent.apply(this, arguments);\n\n        // sourceEndpoint and targetEndpoint override source/target, if they are present. but \n        // source is not overridden if the Endpoint has declared it is not the final target of a connection;\n        // instead we use the source that the Endpoint declares will be the final source element.\n        if (params.sourceEndpoint) {\n            this.source = params.sourceEndpoint.getElement();\n            this.sourceId = params.sourceEndpoint.elementId;\n        } else {\n            this.sourceId = this._jsPlumb.instance.getId(this.source);\n        }\n\n        if (params.targetEndpoint) {\n            this.target = params.targetEndpoint.getElement();\n            this.targetId = params.targetEndpoint.elementId;\n        } else {\n            this.targetId = this._jsPlumb.instance.getId(this.target);\n        }\n\n\n        this.scope = params.scope; // scope may have been passed in to the connect call. if it wasn't, we will pull it from the source endpoint, after having initialised the endpoints.            \n        this.endpoints = [];\n        this.endpointStyles = [];\n\n        var _jsPlumb = this._jsPlumb.instance;\n\n        _jsPlumb.manage(this.sourceId, this.source);\n        _jsPlumb.manage(this.targetId, this.target);\n\n        this._jsPlumb.visible = true;\n\n        this._jsPlumb.params = {\n            cssClass: params.cssClass,\n            container: params.container,\n            \"pointer-events\": params[\"pointer-events\"],\n            editorParams: params.editorParams,\n            overlays: params.overlays\n        };\n        this._jsPlumb.lastPaintedAt = null;\n\n        // listen to mouseover and mouseout events passed from the container delegate.\n        this.bind(\"mouseover\", function () {\n            this.setHover(true);\n        }.bind(this));\n        this.bind(\"mouseout\", function () {\n            this.setHover(false);\n        }.bind(this));\n\n\n// INITIALISATION CODE\n\n        this.makeEndpoint = function (isSource, el, elId, ep) {\n            elId = elId || this._jsPlumb.instance.getId(el);\n            return this.prepareEndpoint(_jsPlumb, _newEndpoint, this, ep, isSource ? 0 : 1, params, el, elId);\n        };\n\n        // if type given, get the endpoint definitions mapping to that type from the jsplumb instance, and use those.\n        // we apply types at the end of this constructor but endpoints are only honoured in a type definition at\n        // create time.\n        if (params.type) {\n            params.endpoints = params.endpoints || this._jsPlumb.instance.deriveEndpointAndAnchorSpec(params.type).endpoints;\n        }\n\n        var eS = this.makeEndpoint(true, this.source, this.sourceId, params.sourceEndpoint),\n            eT = this.makeEndpoint(false, this.target, this.targetId, params.targetEndpoint);\n\n        if (eS) {\n            _ju.addToList(params.endpointsByElement, this.sourceId, eS);\n        }\n        if (eT) {\n            _ju.addToList(params.endpointsByElement, this.targetId, eT);\n        }\n        // if scope not set, set it to be the scope for the source endpoint.\n        if (!this.scope) {\n            this.scope = this.endpoints[0].scope;\n        }\n\n        // if explicitly told to (or not to) delete endpoints when empty, override endpoint's preferences\n        if (params.deleteEndpointsOnEmpty != null) {\n            this.endpoints[0].setDeleteOnEmpty(params.deleteEndpointsOnEmpty);\n            this.endpoints[1].setDeleteOnEmpty(params.deleteEndpointsOnEmpty);\n        }\n\n// -------------------------- DEFAULT TYPE ---------------------------------------------\n\n        // DETACHABLE\n        var _detachable = _jsPlumb.Defaults.ConnectionsDetachable;\n        if (params.detachable === false) {\n            _detachable = false;\n        }\n        if (this.endpoints[0].connectionsDetachable === false) {\n            _detachable = false;\n        }\n        if (this.endpoints[1].connectionsDetachable === false) {\n            _detachable = false;\n        }\n        // REATTACH\n        var _reattach = params.reattach || this.endpoints[0].reattachConnections || this.endpoints[1].reattachConnections || _jsPlumb.Defaults.ReattachConnections;\n\n        this.appendToDefaultType({\n            detachable: _detachable,\n            reattach: _reattach,\n            paintStyle:this.endpoints[0].connectorStyle || this.endpoints[1].connectorStyle || params.paintStyle || _jsPlumb.Defaults.PaintStyle || _jp.Defaults.PaintStyle,\n            hoverPaintStyle:this.endpoints[0].connectorHoverStyle || this.endpoints[1].connectorHoverStyle || params.hoverPaintStyle || _jsPlumb.Defaults.HoverPaintStyle || _jp.Defaults.HoverPaintStyle\n        });\n\n        var _suspendedAt = _jsPlumb.getSuspendedAt();\n        if (!_jsPlumb.isSuspendDrawing()) {\n            // paint the endpoints\n            var myInfo = _jsPlumb.getCachedData(this.sourceId),\n                myOffset = myInfo.o, myWH = myInfo.s,\n                otherInfo = _jsPlumb.getCachedData(this.targetId),\n                otherOffset = otherInfo.o,\n                otherWH = otherInfo.s,\n                initialTimestamp = _suspendedAt || _jsPlumb.timestamp(),\n                anchorLoc = this.endpoints[0].anchor.compute({\n                    xy: [ myOffset.left, myOffset.top ], wh: myWH, element: this.endpoints[0],\n                    elementId: this.endpoints[0].elementId,\n                    txy: [ otherOffset.left, otherOffset.top ], twh: otherWH, tElement: this.endpoints[1],\n                    timestamp: initialTimestamp\n                });\n\n            this.endpoints[0].paint({ anchorLoc: anchorLoc, timestamp: initialTimestamp });\n\n            anchorLoc = this.endpoints[1].anchor.compute({\n                xy: [ otherOffset.left, otherOffset.top ], wh: otherWH, element: this.endpoints[1],\n                elementId: this.endpoints[1].elementId,\n                txy: [ myOffset.left, myOffset.top ], twh: myWH, tElement: this.endpoints[0],\n                timestamp: initialTimestamp\n            });\n            this.endpoints[1].paint({ anchorLoc: anchorLoc, timestamp: initialTimestamp });\n        }\n\n        this.getTypeDescriptor = function () {\n            return \"connection\";\n        };\n        this.getAttachedElements = function () {\n            return this.endpoints;\n        };\n\n        this.isDetachable = function () {\n            return this._jsPlumb.detachable === true;\n        };\n        this.setDetachable = function (detachable) {\n            this._jsPlumb.detachable = detachable === true;\n        };\n        this.isReattach = function () {\n            return this._jsPlumb.reattach === true || this.endpoints[0].reattachConnections === true || this.endpoints[1].reattachConnections === true;\n        };\n        this.setReattach = function (reattach) {\n            this._jsPlumb.reattach = reattach === true;\n        };\n\n// END INITIALISATION CODE\n\n\n// COST + DIRECTIONALITY\n        // if cost not supplied, try to inherit from source endpoint\n        this._jsPlumb.cost = params.cost || this.endpoints[0].getConnectionCost();\n        this._jsPlumb.directed = params.directed;\n        // inherit directed flag if set no source endpoint\n        if (params.directed == null) {\n            this._jsPlumb.directed = this.endpoints[0].areConnectionsDirected();\n        }\n// END COST + DIRECTIONALITY\n\n// PARAMETERS\n        // merge all the parameters objects into the connection.  parameters set\n        // on the connection take precedence; then source endpoint params, then\n        // finally target endpoint params.\n        var _p = _jp.extend({}, this.endpoints[1].getParameters());\n        _jp.extend(_p, this.endpoints[0].getParameters());\n        _jp.extend(_p, this.getParameters());\n        this.setParameters(_p);\n// END PARAMETERS\n\n// PAINTING\n\n        this.setConnector(this.endpoints[0].connector || this.endpoints[1].connector || params.connector || _jsPlumb.Defaults.Connector || _jp.Defaults.Connector, true);\n        var data = params.data == null || !_ju.isObject(params.data) ? {} : params.data;\n        this.getData = function() { return data; };\n        this.setData = function(d) { data = d || {}; };\n        this.mergeData = function(d) { data = _jp.extend(data, d); };\n\n        // the very last thing we do is apply types, if there are any.\n        var _types = [ \"default\", this.endpoints[0].connectionType, this.endpoints[1].connectionType,  params.type ].join(\" \");\n        if (/[^\\s]/.test(_types)) {\n            this.addType(_types, params.data, true);\n        }\n\n        this.updateConnectedClass();\n\n// END PAINTING    \n    };\n\n    _ju.extend(_jp.Connection, _jp.OverlayCapableJsPlumbUIComponent, {\n        applyType: function (t, doNotRepaint, typeMap) {\n\n            var _connector = null;\n            if (t.connector != null) {\n                _connector = this.getCachedTypeItem(\"connector\", typeMap.connector);\n                if (_connector == null) {\n                    _connector = this.prepareConnector(t.connector, typeMap.connector);\n                    this.cacheTypeItem(\"connector\", _connector, typeMap.connector);\n                }\n                this.setPreparedConnector(_connector);\n            }\n\n            // none of these things result in the creation of objects so can be ignored.\n            if (t.detachable != null) {\n                this.setDetachable(t.detachable);\n            }\n            if (t.reattach != null) {\n                this.setReattach(t.reattach);\n            }\n            if (t.scope) {\n                this.scope = t.scope;\n            }\n\n            if (t.cssClass != null && this.canvas) {\n                this._jsPlumb.instance.addClass(this.canvas, t.cssClass);\n            }\n\n            var _anchors = null;\n            // this also results in the creation of objects.\n            if (t.anchor) {\n                // note that even if the param was anchor, we store `anchors`.\n                _anchors = this.getCachedTypeItem(\"anchors\", typeMap.anchor);\n                if (_anchors == null) {\n                    _anchors = [ this._jsPlumb.instance.makeAnchor(t.anchor), this._jsPlumb.instance.makeAnchor(t.anchor) ];\n                    this.cacheTypeItem(\"anchors\", _anchors, typeMap.anchor);\n                }\n            }\n            else if (t.anchors) {\n                _anchors = this.getCachedTypeItem(\"anchors\", typeMap.anchors);\n                if (_anchors == null) {\n                    _anchors = [\n                        this._jsPlumb.instance.makeAnchor(t.anchors[0]),\n                        this._jsPlumb.instance.makeAnchor(t.anchors[1])\n                    ];\n                    this.cacheTypeItem(\"anchors\", _anchors, typeMap.anchors);\n                }\n            }\n            if (_anchors != null) {\n                this.endpoints[0].anchor = _anchors[0];\n                this.endpoints[1].anchor = _anchors[1];\n                if (this.endpoints[1].anchor.isDynamic) {\n                    this._jsPlumb.instance.repaint(this.endpoints[1].elementId);\n                }\n            }\n\n            _jp.OverlayCapableJsPlumbUIComponent.applyType(this, t);\n        },\n        addClass: function (c, informEndpoints) {\n            if (informEndpoints) {\n                this.endpoints[0].addClass(c);\n                this.endpoints[1].addClass(c);\n                if (this.suspendedEndpoint) {\n                    this.suspendedEndpoint.addClass(c);\n                }\n            }\n            if (this.connector) {\n                this.connector.addClass(c);\n            }\n        },\n        removeClass: function (c, informEndpoints) {\n            if (informEndpoints) {\n                this.endpoints[0].removeClass(c);\n                this.endpoints[1].removeClass(c);\n                if (this.suspendedEndpoint) {\n                    this.suspendedEndpoint.removeClass(c);\n                }\n            }\n            if (this.connector) {\n                this.connector.removeClass(c);\n            }\n        },\n        isVisible: function () {\n            return this._jsPlumb.visible;\n        },\n        setVisible: function (v) {\n            this._jsPlumb.visible = v;\n            if (this.connector) {\n                this.connector.setVisible(v);\n            }\n            this.repaint();\n        },\n        cleanup: function () {\n            this.updateConnectedClass(true);\n            this.endpoints = null;\n            this.source = null;\n            this.target = null;\n            if (this.connector != null) {\n                this.connector.cleanup(true);\n                this.connector.destroy(true);\n            }\n            this.connector = null;\n        },\n        updateConnectedClass:function(remove) {\n            if (this._jsPlumb) {\n                _updateConnectedClass(this, this.source, this._jsPlumb.instance, remove);\n                _updateConnectedClass(this, this.target, this._jsPlumb.instance, remove);\n            }\n        },\n        setHover: function (state) {\n            if (this.connector && this._jsPlumb && !this._jsPlumb.instance.isConnectionBeingDragged()) {\n                this.connector.setHover(state);\n                root.jsPlumb[state ? \"addClass\" : \"removeClass\"](this.source, this._jsPlumb.instance.hoverSourceClass);\n                root.jsPlumb[state ? \"addClass\" : \"removeClass\"](this.target, this._jsPlumb.instance.hoverTargetClass);\n            }\n        },\n        getUuids:function() {\n            return [ this.endpoints[0].getUuid(), this.endpoints[1].getUuid() ];\n        },\n        getCost: function () {\n            return this._jsPlumb ? this._jsPlumb.cost : -Infinity;\n        },\n        setCost: function (c) {\n            this._jsPlumb.cost = c;\n        },\n        isDirected: function () {\n            return this._jsPlumb.directed;\n        },\n        getConnector: function () {\n            return this.connector;\n        },\n        prepareConnector:function(connectorSpec, typeId) {\n            var connectorArgs = {\n                    _jsPlumb: this._jsPlumb.instance,\n                    cssClass: this._jsPlumb.params.cssClass,\n                    container: this._jsPlumb.params.container,\n                    \"pointer-events\": this._jsPlumb.params[\"pointer-events\"]\n                },\n                renderMode = this._jsPlumb.instance.getRenderMode(),\n                connector;\n\n            if (_ju.isString(connectorSpec)) {\n                connector = makeConnector(this._jsPlumb.instance, renderMode, connectorSpec, connectorArgs, this);\n            } // lets you use a string as shorthand.\n            else if (_ju.isArray(connectorSpec)) {\n                if (connectorSpec.length === 1) {\n                    connector = makeConnector(this._jsPlumb.instance, renderMode, connectorSpec[0], connectorArgs, this);\n                }\n                else {\n                    connector = makeConnector(this._jsPlumb.instance, renderMode, connectorSpec[0], _ju.merge(connectorSpec[1], connectorArgs), this);\n                }\n            }\n            if (typeId != null) {\n                connector.typeId = typeId;\n            }\n            return connector;\n        },\n        setPreparedConnector: function(connector, doNotRepaint, doNotChangeListenerComponent, typeId) {\n\n            if (this.connector !== connector) {\n\n                var previous, previousClasses = \"\";\n                // the connector will not be cleaned up if it was set as part of a type, because `typeId` will be set on it\n                // and we havent passed in `true` for \"force\" here.\n                if (this.connector != null) {\n                    previous = this.connector;\n                    previousClasses = previous.getClass();\n                    this.connector.cleanup();\n                    this.connector.destroy();\n                }\n\n                this.connector = connector;\n                if (typeId) {\n                    this.cacheTypeItem(\"connector\", connector, typeId);\n                }\n\n                this.canvas = this.connector.canvas;\n                this.bgCanvas = this.connector.bgCanvas;\n\n                // put classes from prior connector onto the canvas\n                this.addClass(previousClasses);\n\n                // new: instead of binding listeners per connector, we now just have one delegate on the container.\n                // so for that handler we set the connection as the '_jsPlumb' member of the canvas element, and\n                // bgCanvas, if it exists, which it does right now in the VML renderer, so it won't from v 2.0.0 onwards.\n                if (this.canvas) {\n                    this.canvas._jsPlumb = this;\n                }\n                if (this.bgCanvas) {\n                    this.bgCanvas._jsPlumb = this;\n                }\n\n                if (previous != null) {\n                    var o = this.getOverlays();\n                    for (var i = 0; i < o.length; i++) {\n                        if (o[i].transfer) {\n                            o[i].transfer(this.connector);\n                        }\n                    }\n                }\n\n                if (!doNotChangeListenerComponent) {\n                    this.setListenerComponent(this.connector);\n                }\n                if (!doNotRepaint) {\n                    this.repaint();\n                }\n            }\n        },\n        setConnector: function (connectorSpec, doNotRepaint, doNotChangeListenerComponent, typeId) {\n            var connector = this.prepareConnector(connectorSpec, typeId);\n            this.setPreparedConnector(connector, doNotRepaint, doNotChangeListenerComponent, typeId);\n        },\n        paint: function (params) {\n\n            if (!this._jsPlumb.instance.isSuspendDrawing() && this._jsPlumb.visible) {\n                params = params || {};\n                var timestamp = params.timestamp,\n                // if the moving object is not the source we must transpose the two references.\n                    swap = false,\n                    tId = swap ? this.sourceId : this.targetId, sId = swap ? this.targetId : this.sourceId,\n                    tIdx = swap ? 0 : 1, sIdx = swap ? 1 : 0;\n\n                if (timestamp == null || timestamp !== this._jsPlumb.lastPaintedAt) {\n                    var sourceInfo = this._jsPlumb.instance.updateOffset({elId:sId}).o,\n                        targetInfo = this._jsPlumb.instance.updateOffset({elId:tId}).o,\n                        sE = this.endpoints[sIdx], tE = this.endpoints[tIdx];\n\n                    var sAnchorP = sE.anchor.getCurrentLocation({xy: [sourceInfo.left, sourceInfo.top], wh: [sourceInfo.width, sourceInfo.height], element: sE, timestamp: timestamp}),\n                        tAnchorP = tE.anchor.getCurrentLocation({xy: [targetInfo.left, targetInfo.top], wh: [targetInfo.width, targetInfo.height], element: tE, timestamp: timestamp});\n\n                    this.connector.resetBounds();\n\n                    this.connector.compute({\n                        sourcePos: sAnchorP,\n                        targetPos: tAnchorP,\n                        sourceOrientation:sE.anchor.getOrientation(sE),\n                        targetOrientation:tE.anchor.getOrientation(tE),\n                        sourceEndpoint: this.endpoints[sIdx],\n                        targetEndpoint: this.endpoints[tIdx],\n                        \"stroke-width\": this._jsPlumb.paintStyleInUse.strokeWidth,\n                        sourceInfo: sourceInfo,\n                        targetInfo: targetInfo\n                    });\n\n                    var overlayExtents = { minX: Infinity, minY: Infinity, maxX: -Infinity, maxY: -Infinity };\n\n                    // compute overlays. we do this first so we can get their placements, and adjust the\n                    // container if needs be (if an overlay would be clipped)\n                    for (var i in this._jsPlumb.overlays) {\n                        if (this._jsPlumb.overlays.hasOwnProperty(i)) {\n                            var o = this._jsPlumb.overlays[i];\n                            if (o.isVisible()) {\n                                this._jsPlumb.overlayPlacements[i] = o.draw(this.connector, this._jsPlumb.paintStyleInUse, this.getAbsoluteOverlayPosition(o));\n                                overlayExtents.minX = Math.min(overlayExtents.minX, this._jsPlumb.overlayPlacements[i].minX);\n                                overlayExtents.maxX = Math.max(overlayExtents.maxX, this._jsPlumb.overlayPlacements[i].maxX);\n                                overlayExtents.minY = Math.min(overlayExtents.minY, this._jsPlumb.overlayPlacements[i].minY);\n                                overlayExtents.maxY = Math.max(overlayExtents.maxY, this._jsPlumb.overlayPlacements[i].maxY);\n                            }\n                        }\n                    }\n\n                    var lineWidth = parseFloat(this._jsPlumb.paintStyleInUse.strokeWidth || 1) / 2,\n                        outlineWidth = parseFloat(this._jsPlumb.paintStyleInUse.strokeWidth || 0),\n                        extents = {\n                            xmin: Math.min(this.connector.bounds.minX - (lineWidth + outlineWidth), overlayExtents.minX),\n                            ymin: Math.min(this.connector.bounds.minY - (lineWidth + outlineWidth), overlayExtents.minY),\n                            xmax: Math.max(this.connector.bounds.maxX + (lineWidth + outlineWidth), overlayExtents.maxX),\n                            ymax: Math.max(this.connector.bounds.maxY + (lineWidth + outlineWidth), overlayExtents.maxY)\n                        };\n                    // paint the connector.\n                    this.connector.paint(this._jsPlumb.paintStyleInUse, null, extents);\n                    // and then the overlays\n                    for (var j in this._jsPlumb.overlays) {\n                        if (this._jsPlumb.overlays.hasOwnProperty(j)) {\n                            var p = this._jsPlumb.overlays[j];\n                            if (p.isVisible()) {\n                                p.paint(this._jsPlumb.overlayPlacements[j], extents);\n                            }\n                        }\n                    }\n                }\n                this._jsPlumb.lastPaintedAt = timestamp;\n            }\n        },\n        repaint: function (params) {\n            var p = jsPlumb.extend(params || {}, {});\n            p.elId = this.sourceId;\n            this.paint(p);\n        },\n        prepareEndpoint: function (_jsPlumb, _newEndpoint, conn, existing, index, params, element, elementId) {\n            var e;\n            if (existing) {\n                conn.endpoints[index] = existing;\n                existing.addConnection(conn);\n            } else {\n                if (!params.endpoints) {\n                    params.endpoints = [ null, null ];\n                }\n                var ep = params.endpoints[index] || params.endpoint || _jsPlumb.Defaults.Endpoints[index] || _jp.Defaults.Endpoints[index] || _jsPlumb.Defaults.Endpoint || _jp.Defaults.Endpoint;\n                if (!params.endpointStyles) {\n                    params.endpointStyles = [ null, null ];\n                }\n                if (!params.endpointHoverStyles) {\n                    params.endpointHoverStyles = [ null, null ];\n                }\n                var es = params.endpointStyles[index] || params.endpointStyle || _jsPlumb.Defaults.EndpointStyles[index] || _jp.Defaults.EndpointStyles[index] || _jsPlumb.Defaults.EndpointStyle || _jp.Defaults.EndpointStyle;\n                // Endpoints derive their fill from the connector's stroke, if no fill was specified.\n                if (es.fill == null && params.paintStyle != null) {\n                    es.fill = params.paintStyle.stroke;\n                }\n\n                if (es.outlineStroke == null && params.paintStyle != null) {\n                    es.outlineStroke = params.paintStyle.outlineStroke;\n                }\n                if (es.outlineWidth == null && params.paintStyle != null) {\n                    es.outlineWidth = params.paintStyle.outlineWidth;\n                }\n\n                var ehs = params.endpointHoverStyles[index] || params.endpointHoverStyle || _jsPlumb.Defaults.EndpointHoverStyles[index] || _jp.Defaults.EndpointHoverStyles[index] || _jsPlumb.Defaults.EndpointHoverStyle || _jp.Defaults.EndpointHoverStyle;\n                // endpoint hover fill style is derived from connector's hover stroke style\n                if (params.hoverPaintStyle != null) {\n                    if (ehs == null) {\n                        ehs = {};\n                    }\n                    if (ehs.fill == null) {\n                        ehs.fill = params.hoverPaintStyle.stroke;\n                    }\n                }\n                var a = params.anchors ? params.anchors[index] :\n                        params.anchor ? params.anchor :\n                            _makeAnchor(_jsPlumb.Defaults.Anchors[index], elementId, _jsPlumb) ||\n                            _makeAnchor(_jp.Defaults.Anchors[index], elementId, _jsPlumb) ||\n                            _makeAnchor(_jsPlumb.Defaults.Anchor, elementId, _jsPlumb) ||\n                            _makeAnchor(_jp.Defaults.Anchor, elementId, _jsPlumb),\n                    u = params.uuids ? params.uuids[index] : null;\n\n                e = _newEndpoint({\n                    paintStyle: es, hoverPaintStyle: ehs, endpoint: ep, connections: [ conn ],\n                    uuid: u, anchor: a, source: element, scope: params.scope,\n                    reattach: params.reattach || _jsPlumb.Defaults.ReattachConnections,\n                    detachable: params.detachable || _jsPlumb.Defaults.ConnectionsDetachable\n                });\n                if (existing == null) {\n                    e.setDeleteOnEmpty(true);\n                }\n                conn.endpoints[index] = e;\n\n                if (params.drawEndpoints === false) {\n                    e.setVisible(false, true, true);\n                }\n\n            }\n            return e;\n        }\n\n    }); // END Connection class            \n}).call(typeof window !== 'undefined' ? window : this);\n\n/*\n * This file contains the code for creating and manipulating anchors.\n *\n * Copyright (c) 2010 - 2018 jsPlumb (hello@jsplumbtoolkit.com)\n *\n * https://jsplumbtoolkit.com\n * https://github.com/jsplumb/jsplumb\n *\n * Dual licensed under the MIT and GPL2 licenses.\n */\n;\n(function () {\n\n    \"use strict\";\n\n    var root = this,\n        _ju = root.jsPlumbUtil,\n        _jp = root.jsPlumb;\n\n    //\n    // manages anchors for all elements.\n    //\n    _jp.AnchorManager = function (params) {\n        var _amEndpoints = {},\n            continuousAnchorLocations = {},\n            userDefinedContinuousAnchorLocations = {},\n            continuousAnchorOrientations = {},\n            connectionsByElementId = {},\n            self = this,\n            anchorLists = {},\n            jsPlumbInstance = params.jsPlumbInstance,\n            floatingConnections = {},\n            // used by placeAnchors function\n            placeAnchorsOnLine = function (desc, elementDimensions, elementPosition, connections, horizontal, otherMultiplier, reverse) {\n                var a = [], step = elementDimensions[horizontal ? 0 : 1] / (connections.length + 1);\n\n                for (var i = 0; i < connections.length; i++) {\n                    var val = (i + 1) * step, other = otherMultiplier * elementDimensions[horizontal ? 1 : 0];\n                    if (reverse) {\n                        val = elementDimensions[horizontal ? 0 : 1] - val;\n                    }\n\n                    var dx = (horizontal ? val : other), x = elementPosition[0] + dx, xp = dx / elementDimensions[0],\n                        dy = (horizontal ? other : val), y = elementPosition[1] + dy, yp = dy / elementDimensions[1];\n\n                    a.push([ x, y, xp, yp, connections[i][1], connections[i][2] ]);\n                }\n\n                return a;\n            },\n            // used by edgeSortFunctions\n            currySort = function (reverseAngles) {\n                return function (a, b) {\n                    var r = true;\n                    if (reverseAngles) {\n                        r = a[0][0] < b[0][0];\n                    }\n                    else {\n                        r = a[0][0] > b[0][0];\n                    }\n                    return r === false ? -1 : 1;\n                };\n            },\n            // used by edgeSortFunctions\n            leftSort = function (a, b) {\n                // first get adjusted values\n                var p1 = a[0][0] < 0 ? -Math.PI - a[0][0] : Math.PI - a[0][0],\n                    p2 = b[0][0] < 0 ? -Math.PI - b[0][0] : Math.PI - b[0][0];\n                if (p1 > p2) {\n                    return 1;\n                }\n                else {\n                    return -1;\n                }\n            },\n            // used by placeAnchors\n            edgeSortFunctions = {\n                \"top\": function (a, b) {\n                    return a[0] > b[0] ? 1 : -1;\n                },\n                \"right\": currySort(true),\n                \"bottom\": currySort(true),\n                \"left\": leftSort\n            },\n            // used by placeAnchors\n            _sortHelper = function (_array, _fn) {\n                return _array.sort(_fn);\n            },\n            // used by AnchorManager.redraw\n            placeAnchors = function (elementId, _anchorLists) {\n                var cd = jsPlumbInstance.getCachedData(elementId), sS = cd.s, sO = cd.o,\n                    placeSomeAnchors = function (desc, elementDimensions, elementPosition, unsortedConnections, isHorizontal, otherMultiplier, orientation) {\n                        if (unsortedConnections.length > 0) {\n                            var sc = _sortHelper(unsortedConnections, edgeSortFunctions[desc]), // puts them in order based on the target element's pos on screen\n                                reverse = desc === \"right\" || desc === \"top\",\n                                anchors = placeAnchorsOnLine(desc, elementDimensions,\n                                    elementPosition, sc,\n                                    isHorizontal, otherMultiplier, reverse);\n\n                            // takes a computed anchor position and adjusts it for parent offset and scroll, then stores it.\n                            var _setAnchorLocation = function (endpoint, anchorPos) {\n                                continuousAnchorLocations[endpoint.id] = [ anchorPos[0], anchorPos[1], anchorPos[2], anchorPos[3] ];\n                                continuousAnchorOrientations[endpoint.id] = orientation;\n                            };\n\n                            for (var i = 0; i < anchors.length; i++) {\n                                var c = anchors[i][4], weAreSource = c.endpoints[0].elementId === elementId, weAreTarget = c.endpoints[1].elementId === elementId;\n                                if (weAreSource) {\n                                    _setAnchorLocation(c.endpoints[0], anchors[i]);\n                                }\n                                if (weAreTarget) {\n                                    _setAnchorLocation(c.endpoints[1], anchors[i]);\n                                }\n                            }\n                        }\n                    };\n\n                placeSomeAnchors(\"bottom\", sS, [sO.left, sO.top], _anchorLists.bottom, true, 1, [0, 1]);\n                placeSomeAnchors(\"top\", sS, [sO.left, sO.top], _anchorLists.top, true, 0, [0, -1]);\n                placeSomeAnchors(\"left\", sS, [sO.left, sO.top], _anchorLists.left, false, 0, [-1, 0]);\n                placeSomeAnchors(\"right\", sS, [sO.left, sO.top], _anchorLists.right, false, 1, [1, 0]);\n            };\n\n        this.reset = function () {\n            _amEndpoints = {};\n            connectionsByElementId = {};\n            anchorLists = {};\n        };\n        this.addFloatingConnection = function (key, conn) {\n            floatingConnections[key] = conn;\n        };\n        this.removeFloatingConnection = function (key) {\n            delete floatingConnections[key];\n        };\n        this.newConnection = function (conn) {\n            var sourceId = conn.sourceId, targetId = conn.targetId,\n                ep = conn.endpoints,\n                doRegisterTarget = true,\n                registerConnection = function (otherIndex, otherEndpoint, otherAnchor, elId, c) {\n                    if ((sourceId === targetId) && otherAnchor.isContinuous) {\n                        // remove the target endpoint's canvas.  we dont need it.\n                        conn._jsPlumb.instance.removeElement(ep[1].canvas);\n                        doRegisterTarget = false;\n                    }\n                    _ju.addToList(connectionsByElementId, elId, [c, otherEndpoint, otherAnchor.constructor === _jp.DynamicAnchor]);\n                };\n\n            registerConnection(0, ep[0], ep[0].anchor, targetId, conn);\n            if (doRegisterTarget) {\n                registerConnection(1, ep[1], ep[1].anchor, sourceId, conn);\n            }\n        };\n        var removeEndpointFromAnchorLists = function (endpoint) {\n            (function (list, eId) {\n                if (list) {  // transient anchors dont get entries in this list.\n                    var f = function (e) {\n                        return e[4] === eId;\n                    };\n                    _ju.removeWithFunction(list.top, f);\n                    _ju.removeWithFunction(list.left, f);\n                    _ju.removeWithFunction(list.bottom, f);\n                    _ju.removeWithFunction(list.right, f);\n                }\n            })(anchorLists[endpoint.elementId], endpoint.id);\n        };\n        this.connectionDetached = function (connInfo, doNotRedraw) {\n            var connection = connInfo.connection || connInfo,\n                sourceId = connInfo.sourceId,\n                targetId = connInfo.targetId,\n                ep = connection.endpoints,\n                removeConnection = function (otherIndex, otherEndpoint, otherAnchor, elId, c) {\n                    _ju.removeWithFunction(connectionsByElementId[elId], function (_c) {\n                        return _c[0].id === c.id;\n                    });\n                };\n\n            removeConnection(1, ep[1], ep[1].anchor, sourceId, connection);\n            removeConnection(0, ep[0], ep[0].anchor, targetId, connection);\n            if (connection.floatingId) {\n                removeConnection(connection.floatingIndex, connection.floatingEndpoint, connection.floatingEndpoint.anchor, connection.floatingId, connection);\n                removeEndpointFromAnchorLists(connection.floatingEndpoint);\n            }\n\n            // remove from anchorLists\n            removeEndpointFromAnchorLists(connection.endpoints[0]);\n            removeEndpointFromAnchorLists(connection.endpoints[1]);\n\n            if (!doNotRedraw) {\n                self.redraw(connection.sourceId);\n                if (connection.targetId !== connection.sourceId) {\n                    self.redraw(connection.targetId);\n                }\n            }\n        };\n        this.add = function (endpoint, elementId) {\n            _ju.addToList(_amEndpoints, elementId, endpoint);\n        };\n        this.changeId = function (oldId, newId) {\n            connectionsByElementId[newId] = connectionsByElementId[oldId];\n            _amEndpoints[newId] = _amEndpoints[oldId];\n            delete connectionsByElementId[oldId];\n            delete _amEndpoints[oldId];\n        };\n        this.getConnectionsFor = function (elementId) {\n            return connectionsByElementId[elementId] || [];\n        };\n        this.getEndpointsFor = function (elementId) {\n            return _amEndpoints[elementId] || [];\n        };\n        this.deleteEndpoint = function (endpoint) {\n            _ju.removeWithFunction(_amEndpoints[endpoint.elementId], function (e) {\n                return e.id === endpoint.id;\n            });\n            removeEndpointFromAnchorLists(endpoint);\n        };\n        this.clearFor = function (elementId) {\n            delete _amEndpoints[elementId];\n            _amEndpoints[elementId] = [];\n        };\n        // updates the given anchor list by either updating an existing anchor's info, or adding it. this function\n        // also removes the anchor from its previous list, if the edge it is on has changed.\n        // all connections found along the way (those that are connected to one of the faces this function\n        // operates on) are added to the connsToPaint list, as are their endpoints. in this way we know to repaint\n        // them wthout having to calculate anything else about them.\n        var _updateAnchorList = function (lists, theta, order, conn, aBoolean, otherElId, idx, reverse, edgeId, elId, connsToPaint, endpointsToPaint) {\n            // first try to find the exact match, but keep track of the first index of a matching element id along the way.s\n            var exactIdx = -1,\n                firstMatchingElIdx = -1,\n                endpoint = conn.endpoints[idx],\n                endpointId = endpoint.id,\n                oIdx = [1, 0][idx],\n                values = [\n                    [ theta, order ],\n                    conn,\n                    aBoolean,\n                    otherElId,\n                    endpointId\n                ],\n                listToAddTo = lists[edgeId],\n                listToRemoveFrom = endpoint._continuousAnchorEdge ? lists[endpoint._continuousAnchorEdge] : null,\n                i,\n                candidate;\n\n            if (listToRemoveFrom) {\n                var rIdx = _ju.findWithFunction(listToRemoveFrom, function (e) {\n                    return e[4] === endpointId;\n                });\n                if (rIdx !== -1) {\n                    listToRemoveFrom.splice(rIdx, 1);\n                    // get all connections from this list\n                    for (i = 0; i < listToRemoveFrom.length; i++) {\n                        candidate = listToRemoveFrom[i][1];\n                        _ju.addWithFunction(connsToPaint, candidate, function (c) {\n                            return c.id === candidate.id;\n                        });\n                        _ju.addWithFunction(endpointsToPaint, listToRemoveFrom[i][1].endpoints[idx], function (e) {\n                            return e.id === candidate.endpoints[idx].id;\n                        });\n                        _ju.addWithFunction(endpointsToPaint, listToRemoveFrom[i][1].endpoints[oIdx], function (e) {\n                            return e.id === candidate.endpoints[oIdx].id;\n                        });\n                    }\n                }\n            }\n\n            for (i = 0; i < listToAddTo.length; i++) {\n                candidate = listToAddTo[i][1];\n                if (params.idx === 1 && listToAddTo[i][3] === otherElId && firstMatchingElIdx === -1) {\n                    firstMatchingElIdx = i;\n                }\n                _ju.addWithFunction(connsToPaint, candidate, function (c) {\n                    return c.id === candidate.id;\n                });\n                _ju.addWithFunction(endpointsToPaint, listToAddTo[i][1].endpoints[idx], function (e) {\n                    return e.id === candidate.endpoints[idx].id;\n                });\n                _ju.addWithFunction(endpointsToPaint, listToAddTo[i][1].endpoints[oIdx], function (e) {\n                    return e.id === candidate.endpoints[oIdx].id;\n                });\n            }\n            if (exactIdx !== -1) {\n                listToAddTo[exactIdx] = values;\n            }\n            else {\n                var insertIdx = reverse ? firstMatchingElIdx !== -1 ? firstMatchingElIdx : 0 : listToAddTo.length; // of course we will get this from having looked through the array shortly.\n                listToAddTo.splice(insertIdx, 0, values);\n            }\n\n            // store this for next time.\n            endpoint._continuousAnchorEdge = edgeId;\n        };\n\n        //\n        // find the entry in an endpoint's list for this connection and update its target endpoint\n        // with the current target in the connection.\n        // This method and sourceChanged need to be folder into one.\n        //\n        this.updateOtherEndpoint = function (sourceElId, oldTargetId, newTargetId, connection) {\n            var sIndex = _ju.findWithFunction(connectionsByElementId[sourceElId], function (i) {\n                    return i[0].id === connection.id;\n                }),\n                tIndex = _ju.findWithFunction(connectionsByElementId[oldTargetId], function (i) {\n                    return i[0].id === connection.id;\n                });\n\n            // update or add data for source\n            if (sIndex !== -1) {\n                connectionsByElementId[sourceElId][sIndex][0] = connection;\n                connectionsByElementId[sourceElId][sIndex][1] = connection.endpoints[1];\n                connectionsByElementId[sourceElId][sIndex][2] = connection.endpoints[1].anchor.constructor === _jp.DynamicAnchor;\n            }\n\n            // remove entry for previous target (if there)\n            if (tIndex > -1) {\n                connectionsByElementId[oldTargetId].splice(tIndex, 1);\n                // add entry for new target\n                _ju.addToList(connectionsByElementId, newTargetId, [connection, connection.endpoints[0], connection.endpoints[0].anchor.constructor === _jp.DynamicAnchor]);\n            }\n\n            connection.updateConnectedClass();\n        };\n\n        //\n        // notification that the connection given has changed source from the originalId to the newId.\n        // This involves:\n        // 1. removing the connection from the list of connections stored for the originalId\n        // 2. updating the source information for the target of the connection\n        // 3. re-registering the connection in connectionsByElementId with the newId\n        //\n        this.sourceChanged = function (originalId, newId, connection, newElement) {\n            if (originalId !== newId) {\n\n                connection.sourceId = newId;\n                connection.source = newElement;\n\n                // remove the entry that points from the old source to the target\n                _ju.removeWithFunction(connectionsByElementId[originalId], function (info) {\n                    return info[0].id === connection.id;\n                });\n                // find entry for target and update it\n                var tIdx = _ju.findWithFunction(connectionsByElementId[connection.targetId], function (i) {\n                    return i[0].id === connection.id;\n                });\n                if (tIdx > -1) {\n                    connectionsByElementId[connection.targetId][tIdx][0] = connection;\n                    connectionsByElementId[connection.targetId][tIdx][1] = connection.endpoints[0];\n                    connectionsByElementId[connection.targetId][tIdx][2] = connection.endpoints[0].anchor.constructor === _jp.DynamicAnchor;\n                }\n                // add entry for new source\n                _ju.addToList(connectionsByElementId, newId, [connection, connection.endpoints[1], connection.endpoints[1].anchor.constructor === _jp.DynamicAnchor]);\n\n                // TODO SP not final on this yet. when a user drags an existing connection and it turns into a self\n                // loop, then this code hides the target endpoint (by removing it from the DOM) But I think this should\n                // occur only if the anchor is Continuous\n                if (connection.endpoints[1].anchor.isContinuous) {\n                    if (connection.source === connection.target) {\n                        connection._jsPlumb.instance.removeElement(connection.endpoints[1].canvas);\n                    }\n                    else {\n                        if (connection.endpoints[1].canvas.parentNode == null) {\n                            connection._jsPlumb.instance.appendElement(connection.endpoints[1].canvas);\n                        }\n                    }\n                }\n\n                connection.updateConnectedClass();\n            }\n        };\n\n        //\n        // moves the given endpoint from `currentId` to `element`.\n        // This involves:\n        //\n        // 1. changing the key in _amEndpoints under which the endpoint is stored\n        // 2. changing the source or target values in all of the endpoint's connections\n        // 3. changing the array in connectionsByElementId in which the endpoint's connections\n        //    are stored (done by either sourceChanged or updateOtherEndpoint)\n        //\n        this.rehomeEndpoint = function (ep, currentId, element) {\n            var eps = _amEndpoints[currentId] || [],\n                elementId = jsPlumbInstance.getId(element);\n\n            if (elementId !== currentId) {\n                var idx = eps.indexOf(ep);\n                if (idx > -1) {\n                    var _ep = eps.splice(idx, 1)[0];\n                    self.add(_ep, elementId);\n                }\n            }\n\n            for (var i = 0; i < ep.connections.length; i++) {\n                if (ep.connections[i].sourceId === currentId) {\n                    self.sourceChanged(currentId, ep.elementId, ep.connections[i], ep.element);\n                }\n                else if (ep.connections[i].targetId === currentId) {\n                    ep.connections[i].targetId = ep.elementId;\n                    ep.connections[i].target = ep.element;\n                    self.updateOtherEndpoint(ep.connections[i].sourceId, currentId, ep.elementId, ep.connections[i]);\n                }\n            }\n        };\n\n        this.redraw = function (elementId, ui, timestamp, offsetToUI, clearEdits, doNotRecalcEndpoint) {\n\n            if (!jsPlumbInstance.isSuspendDrawing()) {\n                // get all the endpoints for this element\n                var ep = _amEndpoints[elementId] || [],\n                    endpointConnections = connectionsByElementId[elementId] || [],\n                    connectionsToPaint = [],\n                    endpointsToPaint = [],\n                    anchorsToUpdate = [];\n\n                timestamp = timestamp || jsPlumbInstance.timestamp();\n                // offsetToUI are values that would have been calculated in the dragManager when registering\n                // an endpoint for an element that had a parent (somewhere in the hierarchy) that had been\n                // registered as draggable.\n                offsetToUI = offsetToUI || {left: 0, top: 0};\n                if (ui) {\n                    ui = {\n                        left: ui.left + offsetToUI.left,\n                        top: ui.top + offsetToUI.top\n                    };\n                }\n\n                // valid for one paint cycle.\n                var myOffset = jsPlumbInstance.updateOffset({ elId: elementId, offset: ui, recalc: false, timestamp: timestamp }),\n                    orientationCache = {};\n\n                // actually, first we should compute the orientation of this element to all other elements to which\n                // this element is connected with a continuous anchor (whether both ends of the connection have\n                // a continuous anchor or just one)\n\n                for (var i = 0; i < endpointConnections.length; i++) {\n                    var conn = endpointConnections[i][0],\n                        sourceId = conn.sourceId,\n                        targetId = conn.targetId,\n                        sourceContinuous = conn.endpoints[0].anchor.isContinuous,\n                        targetContinuous = conn.endpoints[1].anchor.isContinuous;\n\n                    if (sourceContinuous || targetContinuous) {\n                        var oKey = sourceId + \"_\" + targetId,\n                            o = orientationCache[oKey],\n                            oIdx = conn.sourceId === elementId ? 1 : 0;\n\n                        if (sourceContinuous && !anchorLists[sourceId]) {\n                            anchorLists[sourceId] = { top: [], right: [], bottom: [], left: [] };\n                        }\n                        if (targetContinuous && !anchorLists[targetId]) {\n                            anchorLists[targetId] = { top: [], right: [], bottom: [], left: [] };\n                        }\n\n                        if (elementId !== targetId) {\n                            jsPlumbInstance.updateOffset({ elId: targetId, timestamp: timestamp });\n                        }\n                        if (elementId !== sourceId) {\n                            jsPlumbInstance.updateOffset({ elId: sourceId, timestamp: timestamp });\n                        }\n\n                        var td = jsPlumbInstance.getCachedData(targetId),\n                            sd = jsPlumbInstance.getCachedData(sourceId);\n\n                        if (targetId === sourceId && (sourceContinuous || targetContinuous)) {\n                            // here we may want to improve this by somehow determining the face we'd like\n                            // to put the connector on.  ideally, when drawing, the face should be calculated\n                            // by determining which face is closest to the point at which the mouse button\n                            // was released.  for now, we're putting it on the top face.\n                            _updateAnchorList( anchorLists[sourceId], -Math.PI / 2, 0, conn, false, targetId, 0, false, \"top\", sourceId, connectionsToPaint, endpointsToPaint);\n                            _updateAnchorList( anchorLists[targetId], -Math.PI / 2, 0, conn, false, sourceId, 1, false, \"top\", targetId, connectionsToPaint, endpointsToPaint);\n                        }\n                        else {\n                            if (!o) {\n                                o = this.calculateOrientation(sourceId, targetId, sd.o, td.o, conn.endpoints[0].anchor, conn.endpoints[1].anchor, conn);\n                                orientationCache[oKey] = o;\n                                // this would be a performance enhancement, but the computed angles need to be clamped to\n                                //the (-PI/2 -> PI/2) range in order for the sorting to work properly.\n                                /*  orientationCache[oKey2] = {\n                                 orientation:o.orientation,\n                                 a:[o.a[1], o.a[0]],\n                                 theta:o.theta + Math.PI,\n                                 theta2:o.theta2 + Math.PI\n                                 };*/\n                            }\n                            if (sourceContinuous) {\n                                _updateAnchorList(anchorLists[sourceId], o.theta, 0, conn, false, targetId, 0, false, o.a[0], sourceId, connectionsToPaint, endpointsToPaint);\n                            }\n                            if (targetContinuous) {\n                                _updateAnchorList(anchorLists[targetId], o.theta2, -1, conn, true, sourceId, 1, true, o.a[1], targetId, connectionsToPaint, endpointsToPaint);\n                            }\n                        }\n\n                        if (sourceContinuous) {\n                            _ju.addWithFunction(anchorsToUpdate, sourceId, function (a) {\n                                return a === sourceId;\n                            });\n                        }\n                        if (targetContinuous) {\n                            _ju.addWithFunction(anchorsToUpdate, targetId, function (a) {\n                                return a === targetId;\n                            });\n                        }\n                        _ju.addWithFunction(connectionsToPaint, conn, function (c) {\n                            return c.id === conn.id;\n                        });\n                        if ((sourceContinuous && oIdx === 0) || (targetContinuous && oIdx === 1)) {\n                            _ju.addWithFunction(endpointsToPaint, conn.endpoints[oIdx], function (e) {\n                                return e.id === conn.endpoints[oIdx].id;\n                            });\n                        }\n                    }\n                }\n\n                // place Endpoints whose anchors are continuous but have no Connections\n                for (i = 0; i < ep.length; i++) {\n                    if (ep[i].connections.length === 0 && ep[i].anchor.isContinuous) {\n                        if (!anchorLists[elementId]) {\n                            anchorLists[elementId] = { top: [], right: [], bottom: [], left: [] };\n                        }\n                        _updateAnchorList(anchorLists[elementId], -Math.PI / 2, 0, {endpoints: [ep[i], ep[i]], paint: function () {\n                        }}, false, elementId, 0, false, ep[i].anchor.getDefaultFace(), elementId, connectionsToPaint, endpointsToPaint);\n                        _ju.addWithFunction(anchorsToUpdate, elementId, function (a) {\n                            return a === elementId;\n                        });\n                    }\n                }\n\n                // now place all the continuous anchors we need to;\n                for (i = 0; i < anchorsToUpdate.length; i++) {\n                    placeAnchors(anchorsToUpdate[i], anchorLists[anchorsToUpdate[i]]);\n                }\n\n                // now that continuous anchors have been placed, paint all the endpoints for this element\n                // TODO performance: add the endpoint ids to a temp array, and then when iterating in the next\n                // loop, check that we didn't just paint that endpoint. we can probably shave off a few more milliseconds this way.\n                for (i = 0; i < ep.length; i++) {\n                    ep[i].paint({ timestamp: timestamp, offset: myOffset, dimensions: myOffset.s, recalc: doNotRecalcEndpoint !== true });\n                }\n\n                // ... and any other endpoints we came across as a result of the continuous anchors.\n                for (i = 0; i < endpointsToPaint.length; i++) {\n                    var cd = jsPlumbInstance.getCachedData(endpointsToPaint[i].elementId);\n                    endpointsToPaint[i].paint({ timestamp: timestamp, offset: cd, dimensions: cd.s });\n                }\n\n                // paint all the standard and \"dynamic connections\", which are connections whose other anchor is\n                // static and therefore does need to be recomputed; we make sure that happens only one time.\n\n                // TODO we could have compiled a list of these in the first pass through connections; might save some time.\n                for (i = 0; i < endpointConnections.length; i++) {\n                    var otherEndpoint = endpointConnections[i][1];\n                    if (otherEndpoint.anchor.constructor === _jp.DynamicAnchor) {\n                        otherEndpoint.paint({ elementWithPrecedence: elementId, timestamp: timestamp });\n                        _ju.addWithFunction(connectionsToPaint, endpointConnections[i][0], function (c) {\n                            return c.id === endpointConnections[i][0].id;\n                        });\n                        // all the connections for the other endpoint now need to be repainted\n                        for (var k = 0; k < otherEndpoint.connections.length; k++) {\n                            if (otherEndpoint.connections[k] !== endpointConnections[i][0]) {\n                                _ju.addWithFunction(connectionsToPaint, otherEndpoint.connections[k], function (c) {\n                                    return c.id === otherEndpoint.connections[k].id;\n                                });\n                            }\n                        }\n                    } else {\n                        _ju.addWithFunction(connectionsToPaint, endpointConnections[i][0], function (c) {\n                            return c.id === endpointConnections[i][0].id;\n                        });\n                    }\n                }\n\n                // paint current floating connection for this element, if there is one.\n                var fc = floatingConnections[elementId];\n                if (fc) {\n                    fc.paint({timestamp: timestamp, recalc: false, elId: elementId});\n                }\n\n                // paint all the connections\n                for (i = 0; i < connectionsToPaint.length; i++) {\n                    connectionsToPaint[i].paint({elId: elementId, timestamp: timestamp, recalc: false, clearEdits: clearEdits});\n                }\n            }\n        };\n\n        var ContinuousAnchor = function (anchorParams) {\n            _ju.EventGenerator.apply(this);\n            this.type = \"Continuous\";\n            this.isDynamic = true;\n            this.isContinuous = true;\n            var faces = anchorParams.faces || [\"top\", \"right\", \"bottom\", \"left\"],\n                clockwise = !(anchorParams.clockwise === false),\n                availableFaces = { },\n                opposites = { \"top\": \"bottom\", \"right\": \"left\", \"left\": \"right\", \"bottom\": \"top\" },\n                clockwiseOptions = { \"top\": \"right\", \"right\": \"bottom\", \"left\": \"top\", \"bottom\": \"left\" },\n                antiClockwiseOptions = { \"top\": \"left\", \"right\": \"top\", \"left\": \"bottom\", \"bottom\": \"right\" },\n                secondBest = clockwise ? clockwiseOptions : antiClockwiseOptions,\n                lastChoice = clockwise ? antiClockwiseOptions : clockwiseOptions,\n                cssClass = anchorParams.cssClass || \"\",\n                _currentFace = null, _lockedFace = null, X_AXIS_FACES = [\"left\", \"right\"], Y_AXIS_FACES = [\"top\", \"bottom\"],\n                _lockedAxis = null;\n\n            for (var i = 0; i < faces.length; i++) {\n                availableFaces[faces[i]] = true;\n            }\n\n            this.getDefaultFace = function () {\n                return faces.length === 0 ? \"top\" : faces[0];\n            };\n\n            this.isRelocatable = function() { return true; };\n            this.isSnapOnRelocate = function() { return true; };\n\n            // if the given edge is supported, returns it. otherwise looks for a substitute that _is_\n            // supported. if none supported we also return the request edge.\n            this.verifyEdge = function (edge) {\n                if (availableFaces[edge]) {\n                    return edge;\n                }\n                else if (availableFaces[opposites[edge]]) {\n                    return opposites[edge];\n                }\n                else if (availableFaces[secondBest[edge]]) {\n                    return secondBest[edge];\n                }\n                else if (availableFaces[lastChoice[edge]]) {\n                    return lastChoice[edge];\n                }\n                return edge; // we have to give them something.\n            };\n\n            this.isEdgeSupported = function (edge) {\n                return  _lockedAxis == null ?\n\n                    (_lockedFace == null ? availableFaces[edge] === true : _lockedFace === edge)\n\n                    : _lockedAxis.indexOf(edge) !== -1;\n            };\n\n            this.setCurrentFace = function(face, overrideLock) {\n                _currentFace = face;\n                // if currently locked, and the user wants to override, do that.\n                if (overrideLock && _lockedFace != null) {\n                    _lockedFace = _currentFace;\n                }\n            };\n\n            this.getCurrentFace = function() { return _currentFace; };\n            this.getSupportedFaces = function() {\n                var af = [];\n                for (var k in availableFaces) {\n                    if (availableFaces[k]) {\n                        af.push(k);\n                    }\n                }\n                return af;\n            };\n\n            this.lock = function() {\n                _lockedFace = _currentFace;\n            };\n            this.unlock = function() {\n                _lockedFace = null;\n            };\n            this.isLocked = function() {\n                return _lockedFace != null;\n            };\n\n            this.lockCurrentAxis = function() {\n                if (_currentFace != null) {\n                    _lockedAxis = (_currentFace === \"left\" || _currentFace === \"right\") ? X_AXIS_FACES : Y_AXIS_FACES;\n                }\n            };\n\n            this.unlockCurrentAxis = function() {\n                _lockedAxis = null;\n            };\n\n            this.compute = function (params) {\n                return userDefinedContinuousAnchorLocations[params.element.id] || continuousAnchorLocations[params.element.id] || [0, 0];\n            };\n            this.getCurrentLocation = function (params) {\n                return userDefinedContinuousAnchorLocations[params.element.id] || continuousAnchorLocations[params.element.id] || [0, 0];\n            };\n            this.getOrientation = function (endpoint) {\n                return continuousAnchorOrientations[endpoint.id] || [0, 0];\n            };\n            this.clearUserDefinedLocation = function () {\n                delete userDefinedContinuousAnchorLocations[anchorParams.elementId];\n            };\n            this.setUserDefinedLocation = function (loc) {\n                userDefinedContinuousAnchorLocations[anchorParams.elementId] = loc;\n            };\n            this.getCssClass = function () {\n                return cssClass;\n            };\n        };\n\n        // continuous anchors\n        jsPlumbInstance.continuousAnchorFactory = {\n            get: function (params) {\n                return new ContinuousAnchor(params);\n            },\n            clear: function (elementId) {\n                delete userDefinedContinuousAnchorLocations[elementId];\n                delete continuousAnchorLocations[elementId];\n            }\n        };\n    };\n\n    _jp.AnchorManager.prototype.calculateOrientation = function (sourceId, targetId, sd, td, sourceAnchor, targetAnchor) {\n\n        var Orientation = { HORIZONTAL: \"horizontal\", VERTICAL: \"vertical\", DIAGONAL: \"diagonal\", IDENTITY: \"identity\" },\n            axes = [\"left\", \"top\", \"right\", \"bottom\"];\n\n        if (sourceId === targetId) {\n            return {\n                orientation: Orientation.IDENTITY,\n                a: [\"top\", \"top\"]\n            };\n        }\n\n        var theta = Math.atan2((td.centery - sd.centery), (td.centerx - sd.centerx)),\n            theta2 = Math.atan2((sd.centery - td.centery), (sd.centerx - td.centerx));\n\n// --------------------------------------------------------------------------------------\n\n        // improved face calculation. get midpoints of each face for source and target, then put in an array with all combinations of\n        // source/target faces. sort this array by distance between midpoints. the entry at index 0 is our preferred option. we can\n        // go through the array one by one until we find an entry in which each requested face is supported.\n        var candidates = [], midpoints = { };\n        (function (types, dim) {\n            for (var i = 0; i < types.length; i++) {\n                midpoints[types[i]] = {\n                    \"left\": [ dim[i].left, dim[i].centery ],\n                    \"right\": [ dim[i].right, dim[i].centery ],\n                    \"top\": [ dim[i].centerx, dim[i].top ],\n                    \"bottom\": [ dim[i].centerx , dim[i].bottom]\n                };\n            }\n        })([ \"source\", \"target\" ], [ sd, td ]);\n\n        for (var sf = 0; sf < axes.length; sf++) {\n            for (var tf = 0; tf < axes.length; tf++) {\n                candidates.push({\n                    source: axes[sf],\n                    target: axes[tf],\n                    dist: Biltong.lineLength(midpoints.source[axes[sf]], midpoints.target[axes[tf]])\n                });\n            }\n        }\n\n        candidates.sort(function (a, b) {\n            return a.dist < b.dist ? -1 : a.dist > b.dist ? 1 : 0;\n        });\n\n        // now go through this list and try to get an entry that satisfies both (there will be one, unless one of the anchors\n        // declares no available faces)\n        var sourceEdge = candidates[0].source, targetEdge = candidates[0].target;\n        for (var i = 0; i < candidates.length; i++) {\n\n            if (!sourceAnchor.isContinuous || sourceAnchor.isEdgeSupported(candidates[i].source)) {\n                sourceEdge = candidates[i].source;\n            }\n            else {\n                sourceEdge = null;\n            }\n\n            if (!targetAnchor.isContinuous || targetAnchor.isEdgeSupported(candidates[i].target)) {\n                targetEdge = candidates[i].target;\n            }\n            else {\n                targetEdge = null;\n            }\n\n            if (sourceEdge != null && targetEdge != null) {\n                break;\n            }\n        }\n\n        if (sourceAnchor.isContinuous) {\n            sourceAnchor.setCurrentFace(sourceEdge);\n        }\n\n        if (targetAnchor.isContinuous) {\n            targetAnchor.setCurrentFace(targetEdge);\n        }\n\n// --------------------------------------------------------------------------------------\n\n        return {\n            a: [ sourceEdge, targetEdge ],\n            theta: theta,\n            theta2: theta2\n        };\n    };\n\n    /**\n     * Anchors model a position on some element at which an Endpoint may be located.  They began as a first class citizen of jsPlumb, ie. a user\n     * was required to create these themselves, but over time this has been replaced by the concept of referring to them either by name (eg. \"TopMiddle\"),\n     * or by an array describing their coordinates (eg. [ 0, 0.5, 0, -1 ], which is the same as \"TopMiddle\").  jsPlumb now handles all of the\n     * creation of Anchors without user intervention.\n     */\n    _jp.Anchor = function (params) {\n        this.x = params.x || 0;\n        this.y = params.y || 0;\n        this.elementId = params.elementId;\n        this.cssClass = params.cssClass || \"\";\n        this.userDefinedLocation = null;\n        this.orientation = params.orientation || [ 0, 0 ];\n        this.lastReturnValue = null;\n        this.offsets = params.offsets || [ 0, 0 ];\n        this.timestamp = null;\n\n        var relocatable = params.relocatable !== false;\n        this.isRelocatable = function() { return relocatable; };\n        this.setRelocatable = function(_relocatable) { relocatable = _relocatable; };\n        var snapOnRelocate = params.snapOnRelocate !== false;\n        this.isSnapOnRelocate = function() { return snapOnRelocate; };\n\n        var locked = false;\n        this.lock = function() { locked = true; };\n        this.unlock = function() { locked = false; };\n        this.isLocked = function() { return locked; };\n\n        _ju.EventGenerator.apply(this);\n\n        this.compute = function (params) {\n\n            var xy = params.xy, wh = params.wh, timestamp = params.timestamp;\n\n            if (params.clearUserDefinedLocation) {\n                this.userDefinedLocation = null;\n            }\n\n            if (timestamp && timestamp === this.timestamp) {\n                return this.lastReturnValue;\n            }\n\n            if (this.userDefinedLocation != null) {\n                this.lastReturnValue = this.userDefinedLocation;\n            }\n            else {\n                this.lastReturnValue = [ xy[0] + (this.x * wh[0]) + this.offsets[0], xy[1] + (this.y * wh[1]) + this.offsets[1], this.x, this.y ];\n            }\n\n            this.timestamp = timestamp;\n            return this.lastReturnValue;\n        };\n\n        this.getCurrentLocation = function (params) {\n            params = params || {};\n            return (this.lastReturnValue == null || (params.timestamp != null && this.timestamp !== params.timestamp)) ? this.compute(params) : this.lastReturnValue;\n        };\n\n        this.setPosition = function(x, y, ox, oy, overrideLock) {\n            if (!locked || overrideLock) {\n                this.x = x;\n                this.y = y;\n                this.orientation = [ ox, oy ];\n                this.lastReturnValue = null;\n            }\n        };\n    };\n    _ju.extend(_jp.Anchor, _ju.EventGenerator, {\n        equals: function (anchor) {\n            if (!anchor) {\n                return false;\n            }\n            var ao = anchor.getOrientation(),\n                o = this.getOrientation();\n            return this.x === anchor.x && this.y === anchor.y && this.offsets[0] === anchor.offsets[0] && this.offsets[1] === anchor.offsets[1] && o[0] === ao[0] && o[1] === ao[1];\n        },\n        getUserDefinedLocation: function () {\n            return this.userDefinedLocation;\n        },\n        setUserDefinedLocation: function (l) {\n            this.userDefinedLocation = l;\n        },\n        clearUserDefinedLocation: function () {\n            this.userDefinedLocation = null;\n        },\n        getOrientation: function () {\n            return this.orientation;\n        },\n        getCssClass: function () {\n            return this.cssClass;\n        }\n    });\n\n    /**\n     * An Anchor that floats. its orientation is computed dynamically from\n     * its position relative to the anchor it is floating relative to.  It is used when creating\n     * a connection through drag and drop.\n     *\n     * TODO FloatingAnchor could totally be refactored to extend Anchor just slightly.\n     */\n    _jp.FloatingAnchor = function (params) {\n\n        _jp.Anchor.apply(this, arguments);\n\n        // this is the anchor that this floating anchor is referenced to for\n        // purposes of calculating the orientation.\n        var ref = params.reference,\n            // the canvas this refers to.\n            refCanvas = params.referenceCanvas,\n            size = _jp.getSize(refCanvas),\n            // these are used to store the current relative position of our\n            // anchor wrt the reference anchor. they only indicate\n            // direction, so have a value of 1 or -1 (or, very rarely, 0). these\n            // values are written by the compute method, and read\n            // by the getOrientation method.\n            xDir = 0, yDir = 0,\n            // temporary member used to store an orientation when the floating\n            // anchor is hovering over another anchor.\n            orientation = null,\n            _lastResult = null;\n\n        // clear from parent. we want floating anchor orientation to always be computed.\n        this.orientation = null;\n\n        // set these to 0 each; they are used by certain types of connectors in the loopback case,\n        // when the connector is trying to clear the element it is on. but for floating anchor it's not\n        // very important.\n        this.x = 0;\n        this.y = 0;\n\n        this.isFloating = true;\n\n        this.compute = function (params) {\n            var xy = params.xy,\n                result = [ xy[0] + (size[0] / 2), xy[1] + (size[1] / 2) ]; // return origin of the element. we may wish to improve this so that any object can be the drag proxy.\n            _lastResult = result;\n            return result;\n        };\n\n        this.getOrientation = function (_endpoint) {\n            if (orientation) {\n                return orientation;\n            }\n            else {\n                var o = ref.getOrientation(_endpoint);\n                // here we take into account the orientation of the other\n                // anchor: if it declares zero for some direction, we declare zero too. this might not be the most awesome. perhaps we can come\n                // up with a better way. it's just so that the line we draw looks like it makes sense. maybe this wont make sense.\n                return [ Math.abs(o[0]) * xDir * -1,\n                    Math.abs(o[1]) * yDir * -1 ];\n            }\n        };\n\n        /**\n         * notification the endpoint associated with this anchor is hovering\n         * over another anchor; we want to assume that anchor's orientation\n         * for the duration of the hover.\n         */\n        this.over = function (anchor, endpoint) {\n            orientation = anchor.getOrientation(endpoint);\n        };\n\n        /**\n         * notification the endpoint associated with this anchor is no\n         * longer hovering over another anchor; we should resume calculating\n         * orientation as we normally do.\n         */\n        this.out = function () {\n            orientation = null;\n        };\n\n        this.getCurrentLocation = function (params) {\n            return _lastResult == null ? this.compute(params) : _lastResult;\n        };\n    };\n    _ju.extend(_jp.FloatingAnchor, _jp.Anchor);\n\n    var _convertAnchor = function (anchor, jsPlumbInstance, elementId) {\n        return anchor.constructor === _jp.Anchor ? anchor : jsPlumbInstance.makeAnchor(anchor, elementId, jsPlumbInstance);\n    };\n\n    /* \n     * A DynamicAnchor is an Anchor that contains a list of other Anchors, which it cycles\n     * through at compute time to find the one that is located closest to\n     * the center of the target element, and returns that Anchor's compute\n     * method result. this causes endpoints to follow each other with\n     * respect to the orientation of their target elements, which is a useful\n     * feature for some applications.\n     * \n     */\n    _jp.DynamicAnchor = function (params) {\n        _jp.Anchor.apply(this, arguments);\n\n        this.isDynamic = true;\n        this.anchors = [];\n        this.elementId = params.elementId;\n        this.jsPlumbInstance = params.jsPlumbInstance;\n\n        for (var i = 0; i < params.anchors.length; i++) {\n            this.anchors[i] = _convertAnchor(params.anchors[i], this.jsPlumbInstance, this.elementId);\n        }\n\n        this.getAnchors = function () {\n            return this.anchors;\n        };\n\n        var _curAnchor = this.anchors.length > 0 ? this.anchors[0] : null,\n            _lastAnchor = _curAnchor,\n            self = this,\n\n            // helper method to calculate the distance between the centers of the two elements.\n            _distance = function (anchor, cx, cy, xy, wh) {\n                var ax = xy[0] + (anchor.x * wh[0]), ay = xy[1] + (anchor.y * wh[1]),\n                    acx = xy[0] + (wh[0] / 2), acy = xy[1] + (wh[1] / 2);\n                return (Math.sqrt(Math.pow(cx - ax, 2) + Math.pow(cy - ay, 2)) +\n                Math.sqrt(Math.pow(acx - ax, 2) + Math.pow(acy - ay, 2)));\n            },\n            // default method uses distance between element centers.  you can provide your own method in the dynamic anchor\n            // constructor (and also to jsPlumb.makeDynamicAnchor). the arguments to it are four arrays:\n            // xy - xy loc of the anchor's element\n            // wh - anchor's element's dimensions\n            // txy - xy loc of the element of the other anchor in the connection\n            // twh - dimensions of the element of the other anchor in the connection.\n            // anchors - the list of selectable anchors\n            _anchorSelector = params.selector || function (xy, wh, txy, twh, anchors) {\n                    var cx = txy[0] + (twh[0] / 2), cy = txy[1] + (twh[1] / 2);\n                    var minIdx = -1, minDist = Infinity;\n                    for (var i = 0; i < anchors.length; i++) {\n                        var d = _distance(anchors[i], cx, cy, xy, wh);\n                        if (d < minDist) {\n                            minIdx = i + 0;\n                            minDist = d;\n                        }\n                    }\n                    return anchors[minIdx];\n                };\n\n        this.compute = function (params) {\n            var xy = params.xy, wh = params.wh, txy = params.txy, twh = params.twh;\n\n            this.timestamp = params.timestamp;\n\n            var udl = self.getUserDefinedLocation();\n            if (udl != null) {\n                return udl;\n            }\n\n            // if anchor is locked or an opposite element was not given, we\n            // maintain our state. anchor will be locked\n            // if it is the source of a drag and drop.\n            if (this.isLocked() || txy == null || twh == null) {\n                return _curAnchor.compute(params);\n            }\n            else {\n                params.timestamp = null; // otherwise clear this, i think. we want the anchor to compute.\n            }\n\n            _curAnchor = _anchorSelector(xy, wh, txy, twh, this.anchors);\n            this.x = _curAnchor.x;\n            this.y = _curAnchor.y;\n\n            if (_curAnchor !== _lastAnchor) {\n                this.fire(\"anchorChanged\", _curAnchor);\n            }\n\n            _lastAnchor = _curAnchor;\n\n            return _curAnchor.compute(params);\n        };\n\n        this.getCurrentLocation = function (params) {\n            return this.getUserDefinedLocation() || (_curAnchor != null ? _curAnchor.getCurrentLocation(params) : null);\n        };\n\n        this.getOrientation = function (_endpoint) {\n            return _curAnchor != null ? _curAnchor.getOrientation(_endpoint) : [ 0, 0 ];\n        };\n        this.over = function (anchor, endpoint) {\n            if (_curAnchor != null) {\n                _curAnchor.over(anchor, endpoint);\n            }\n        };\n        this.out = function () {\n            if (_curAnchor != null) {\n                _curAnchor.out();\n            }\n        };\n\n        this.setAnchor = function(a) {\n            _curAnchor = a;\n        };\n\n        this.getCssClass = function () {\n            return (_curAnchor && _curAnchor.getCssClass()) || \"\";\n        };\n\n        /**\n         * Attempt to match an anchor with the given coordinates and then set it.\n         * @param coords\n         * @returns true if matching anchor found, false otherwise.\n         */\n        this.setAnchorCoordinates = function(coords) {\n            var idx = jsPlumbUtil.findWithFunction(this.anchors, function(a) {\n                return a.x === coords[0] && a.y === coords[1];\n            });\n            if (idx !== -1) {\n                this.setAnchor(this.anchors[idx]);\n                return true;\n            } else {\n                return false;\n            }\n        };\n    };\n    _ju.extend(_jp.DynamicAnchor, _jp.Anchor);\n\n// -------- basic anchors ------------------    \n    var _curryAnchor = function (x, y, ox, oy, type, fnInit) {\n        _jp.Anchors[type] = function (params) {\n            var a = params.jsPlumbInstance.makeAnchor([ x, y, ox, oy, 0, 0 ], params.elementId, params.jsPlumbInstance);\n            a.type = type;\n            if (fnInit) {\n                fnInit(a, params);\n            }\n            return a;\n        };\n    };\n\n    _curryAnchor(0.5, 0, 0, -1, \"TopCenter\");\n    _curryAnchor(0.5, 1, 0, 1, \"BottomCenter\");\n    _curryAnchor(0, 0.5, -1, 0, \"LeftMiddle\");\n    _curryAnchor(1, 0.5, 1, 0, \"RightMiddle\");\n\n    _curryAnchor(0.5, 0, 0, -1, \"Top\");\n    _curryAnchor(0.5, 1, 0, 1, \"Bottom\");\n    _curryAnchor(0, 0.5, -1, 0, \"Left\");\n    _curryAnchor(1, 0.5, 1, 0, \"Right\");\n    _curryAnchor(0.5, 0.5, 0, 0, \"Center\");\n    _curryAnchor(1, 0, 0, -1, \"TopRight\");\n    _curryAnchor(1, 1, 0, 1, \"BottomRight\");\n    _curryAnchor(0, 0, 0, -1, \"TopLeft\");\n    _curryAnchor(0, 1, 0, 1, \"BottomLeft\");\n\n// ------- dynamic anchors -------------------    \n\n    // default dynamic anchors chooses from Top, Right, Bottom, Left\n    _jp.Defaults.DynamicAnchors = function (params) {\n        return params.jsPlumbInstance.makeAnchors([\"TopCenter\", \"RightMiddle\", \"BottomCenter\", \"LeftMiddle\"], params.elementId, params.jsPlumbInstance);\n    };\n\n    // default dynamic anchors bound to name 'AutoDefault'\n    _jp.Anchors.AutoDefault = function (params) {\n        var a = params.jsPlumbInstance.makeDynamicAnchor(_jp.Defaults.DynamicAnchors(params));\n        a.type = \"AutoDefault\";\n        return a;\n    };\n\n// ------- continuous anchors -------------------    \n\n    var _curryContinuousAnchor = function (type, faces) {\n        _jp.Anchors[type] = function (params) {\n            var a = params.jsPlumbInstance.makeAnchor([\"Continuous\", { faces: faces }], params.elementId, params.jsPlumbInstance);\n            a.type = type;\n            return a;\n        };\n    };\n\n    _jp.Anchors.Continuous = function (params) {\n        return params.jsPlumbInstance.continuousAnchorFactory.get(params);\n    };\n\n    _curryContinuousAnchor(\"ContinuousLeft\", [\"left\"]);\n    _curryContinuousAnchor(\"ContinuousTop\", [\"top\"]);\n    _curryContinuousAnchor(\"ContinuousBottom\", [\"bottom\"]);\n    _curryContinuousAnchor(\"ContinuousRight\", [\"right\"]);\n\n// ------- position assign anchors -------------------    \n\n    // this anchor type lets you assign the position at connection time.\n    _curryAnchor(0, 0, 0, 0, \"Assign\", function (anchor, params) {\n        // find what to use as the \"position finder\". the user may have supplied a String which represents\n        // the id of a position finder in jsPlumb.AnchorPositionFinders, or the user may have supplied the\n        // position finder as a function.  we find out what to use and then set it on the anchor.\n        var pf = params.position || \"Fixed\";\n        anchor.positionFinder = pf.constructor === String ? params.jsPlumbInstance.AnchorPositionFinders[pf] : pf;\n        // always set the constructor params; the position finder might need them later (the Grid one does,\n        // for example)\n        anchor.constructorParams = params;\n    });\n\n    // these are the default anchor positions finders, which are used by the makeTarget function.  supplying\n    // a position finder argument to that function allows you to specify where the resulting anchor will\n    // be located\n    root.jsPlumbInstance.prototype.AnchorPositionFinders = {\n        \"Fixed\": function (dp, ep, es) {\n            return [ (dp.left - ep.left) / es[0], (dp.top - ep.top) / es[1] ];\n        },\n        \"Grid\": function (dp, ep, es, params) {\n            var dx = dp.left - ep.left, dy = dp.top - ep.top,\n                gx = es[0] / (params.grid[0]), gy = es[1] / (params.grid[1]),\n                mx = Math.floor(dx / gx), my = Math.floor(dy / gy);\n            return [ ((mx * gx) + (gx / 2)) / es[0], ((my * gy) + (gy / 2)) / es[1] ];\n        }\n    };\n\n// ------- perimeter anchors -------------------    \n\n    _jp.Anchors.Perimeter = function (params) {\n        params = params || {};\n        var anchorCount = params.anchorCount || 60,\n            shape = params.shape;\n\n        if (!shape) {\n            throw new Error(\"no shape supplied to Perimeter Anchor type\");\n        }\n\n        var _circle = function () {\n                var r = 0.5, step = Math.PI * 2 / anchorCount, current = 0, a = [];\n                for (var i = 0; i < anchorCount; i++) {\n                    var x = r + (r * Math.sin(current)),\n                        y = r + (r * Math.cos(current));\n                    a.push([ x, y, 0, 0 ]);\n                    current += step;\n                }\n                return a;\n            },\n            _path = function (segments) {\n                var anchorsPerFace = anchorCount / segments.length, a = [],\n                    _computeFace = function (x1, y1, x2, y2, fractionalLength) {\n                        anchorsPerFace = anchorCount * fractionalLength;\n                        var dx = (x2 - x1) / anchorsPerFace, dy = (y2 - y1) / anchorsPerFace;\n                        for (var i = 0; i < anchorsPerFace; i++) {\n                            a.push([\n                                x1 + (dx * i),\n                                y1 + (dy * i),\n                                0,\n                                0\n                            ]);\n                        }\n                    };\n\n                for (var i = 0; i < segments.length; i++) {\n                    _computeFace.apply(null, segments[i]);\n                }\n\n                return a;\n            },\n            _shape = function (faces) {\n                var s = [];\n                for (var i = 0; i < faces.length; i++) {\n                    s.push([faces[i][0], faces[i][1], faces[i][2], faces[i][3], 1 / faces.length]);\n                }\n                return _path(s);\n            },\n            _rectangle = function () {\n                return _shape([\n                    [ 0, 0, 1, 0 ],\n                    [ 1, 0, 1, 1 ],\n                    [ 1, 1, 0, 1 ],\n                    [ 0, 1, 0, 0 ]\n                ]);\n            };\n\n        var _shapes = {\n                \"Circle\": _circle,\n                \"Ellipse\": _circle,\n                \"Diamond\": function () {\n                    return _shape([\n                        [ 0.5, 0, 1, 0.5 ],\n                        [ 1, 0.5, 0.5, 1 ],\n                        [ 0.5, 1, 0, 0.5 ],\n                        [ 0, 0.5, 0.5, 0 ]\n                    ]);\n                },\n                \"Rectangle\": _rectangle,\n                \"Square\": _rectangle,\n                \"Triangle\": function () {\n                    return _shape([\n                        [ 0.5, 0, 1, 1 ],\n                        [ 1, 1, 0, 1 ],\n                        [ 0, 1, 0.5, 0]\n                    ]);\n                },\n                \"Path\": function (params) {\n                    var points = params.points, p = [], tl = 0;\n                    for (var i = 0; i < points.length - 1; i++) {\n                        var l = Math.sqrt(Math.pow(points[i][2] - points[i][0]) + Math.pow(points[i][3] - points[i][1]));\n                        tl += l;\n                        p.push([points[i][0], points[i][1], points[i + 1][0], points[i + 1][1], l]);\n                    }\n                    for (var j = 0; j < p.length; j++) {\n                        p[j][4] = p[j][4] / tl;\n                    }\n                    return _path(p);\n                }\n            },\n            _rotate = function (points, amountInDegrees) {\n                var o = [], theta = amountInDegrees / 180 * Math.PI;\n                for (var i = 0; i < points.length; i++) {\n                    var _x = points[i][0] - 0.5,\n                        _y = points[i][1] - 0.5;\n\n                    o.push([\n                        0.5 + ((_x * Math.cos(theta)) - (_y * Math.sin(theta))),\n                        0.5 + ((_x * Math.sin(theta)) + (_y * Math.cos(theta))),\n                        points[i][2],\n                        points[i][3]\n                    ]);\n                }\n                return o;\n            };\n\n        if (!_shapes[shape]) {\n            throw new Error(\"Shape [\" + shape + \"] is unknown by Perimeter Anchor type\");\n        }\n\n        var da = _shapes[shape](params);\n        if (params.rotation) {\n            da = _rotate(da, params.rotation);\n        }\n        var a = params.jsPlumbInstance.makeDynamicAnchor(da);\n        a.type = \"Perimeter\";\n        return a;\n    };\n}).call(typeof window !== 'undefined' ? window : this);\n/*\n * This file contains the default Connectors, Endpoint and Overlay definitions.\n *\n * Copyright (c) 2010 - 2018 jsPlumb (hello@jsplumbtoolkit.com)\n * \n * https://jsplumbtoolkit.com\n * https://github.com/jsplumb/jsplumb\n * \n * Dual licensed under the MIT and GPL2 licenses.\n */\n;\n(function () {\n\n    \"use strict\";\n    var root = this, _jp = root.jsPlumb, _ju = root.jsPlumbUtil, _jg = root.Biltong;\n\n    _jp.Segments = {\n\n        /*\n         * Class: AbstractSegment\n         * A Connector is made up of 1..N Segments, each of which has a Type, such as 'Straight', 'Arc',\n         * 'Bezier'. This is new from 1.4.2, and gives us a lot more flexibility when drawing connections: things such\n         * as rounded corners for flowchart connectors, for example, or a straight line stub for Bezier connections, are\n         * much easier to do now.\n         *\n         * A Segment is responsible for providing coordinates for painting it, and also must be able to report its length.\n         * \n         */\n        AbstractSegment: function (params) {\n            this.params = params;\n\n            /**\n             * Function: findClosestPointOnPath\n             * Finds the closest point on this segment to the given [x, y],\n             * returning both the x and y of the point plus its distance from\n             * the supplied point, and its location along the length of the\n             * path inscribed by the segment.  This implementation returns\n             * Infinity for distance and null values for everything else;\n             * subclasses are expected to override.\n             */\n            this.findClosestPointOnPath = function (x, y) {\n                return {\n                    d: Infinity,\n                    x: null,\n                    y: null,\n                    l: null\n                };\n            };\n\n            this.getBounds = function () {\n                return {\n                    minX: Math.min(params.x1, params.x2),\n                    minY: Math.min(params.y1, params.y2),\n                    maxX: Math.max(params.x1, params.x2),\n                    maxY: Math.max(params.y1, params.y2)\n                };\n            };\n        },\n        Straight: function (params) {\n            var _super = _jp.Segments.AbstractSegment.apply(this, arguments),\n                length, m, m2, x1, x2, y1, y2,\n                _recalc = function () {\n                    length = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n                    m = _jg.gradient({x: x1, y: y1}, {x: x2, y: y2});\n                    m2 = -1 / m;\n                };\n\n            this.type = \"Straight\";\n\n            this.getLength = function () {\n                return length;\n            };\n            this.getGradient = function () {\n                return m;\n            };\n\n            this.getCoordinates = function () {\n                return { x1: x1, y1: y1, x2: x2, y2: y2 };\n            };\n            this.setCoordinates = function (coords) {\n                x1 = coords.x1;\n                y1 = coords.y1;\n                x2 = coords.x2;\n                y2 = coords.y2;\n                _recalc();\n            };\n            this.setCoordinates({x1: params.x1, y1: params.y1, x2: params.x2, y2: params.y2});\n\n            this.getBounds = function () {\n                return {\n                    minX: Math.min(x1, x2),\n                    minY: Math.min(y1, y2),\n                    maxX: Math.max(x1, x2),\n                    maxY: Math.max(y1, y2)\n                };\n            };\n\n            /**\n             * returns the point on the segment's path that is 'location' along the length of the path, where 'location' is a decimal from\n             * 0 to 1 inclusive. for the straight line segment this is simple maths.\n             */\n            this.pointOnPath = function (location, absolute) {\n                if (location === 0 && !absolute) {\n                    return { x: x1, y: y1 };\n                }\n                else if (location === 1 && !absolute) {\n                    return { x: x2, y: y2 };\n                }\n                else {\n                    var l = absolute ? location > 0 ? location : length + location : location * length;\n                    return _jg.pointOnLine({x: x1, y: y1}, {x: x2, y: y2}, l);\n                }\n            };\n\n            /**\n             * returns the gradient of the segment at the given point - which for us is constant.\n             */\n            this.gradientAtPoint = function (_) {\n                return m;\n            };\n\n            /**\n             * returns the point on the segment's path that is 'distance' along the length of the path from 'location', where\n             * 'location' is a decimal from 0 to 1 inclusive, and 'distance' is a number of pixels.\n             * this hands off to jsPlumbUtil to do the maths, supplying two points and the distance.\n             */\n            this.pointAlongPathFrom = function (location, distance, absolute) {\n                var p = this.pointOnPath(location, absolute),\n                    farAwayPoint = distance <= 0 ? {x: x1, y: y1} : {x: x2, y: y2 };\n\n                /*\n                 location == 1 ? {\n                 x:x1 + ((x2 - x1) * 10),\n                 y:y1 + ((y1 - y2) * 10)\n                 } :\n                 */\n\n                if (distance <= 0 && Math.abs(distance) > 1) {\n                    distance *= -1;\n                }\n\n                return _jg.pointOnLine(p, farAwayPoint, distance);\n            };\n\n            // is c between a and b?\n            var within = function (a, b, c) {\n                return c >= Math.min(a, b) && c <= Math.max(a, b);\n            };\n            // find which of a and b is closest to c\n            var closest = function (a, b, c) {\n                return Math.abs(c - a) < Math.abs(c - b) ? a : b;\n            };\n\n            /**\n             Function: findClosestPointOnPath\n             Finds the closest point on this segment to [x,y]. See\n             notes on this method in AbstractSegment.\n             */\n            this.findClosestPointOnPath = function (x, y) {\n                var out = {\n                    d: Infinity,\n                    x: null,\n                    y: null,\n                    l: null,\n                    x1: x1,\n                    x2: x2,\n                    y1: y1,\n                    y2: y2\n                };\n\n                if (m === 0) {\n                    out.y = y1;\n                    out.x = within(x1, x2, x) ? x : closest(x1, x2, x);\n                }\n                else if (m === Infinity || m === -Infinity) {\n                    out.x = x1;\n                    out.y = within(y1, y2, y) ? y : closest(y1, y2, y);\n                }\n                else {\n                    // closest point lies on normal from given point to this line.  \n                    var b = y1 - (m * x1),\n                        b2 = y - (m2 * x),\n                    // y1 = m.x1 + b and y1 = m2.x1 + b2\n                    // so m.x1 + b = m2.x1 + b2\n                    // x1(m - m2) = b2 - b\n                    // x1 = (b2 - b) / (m - m2)\n                        _x1 = (b2 - b) / (m - m2),\n                        _y1 = (m * _x1) + b;\n\n                    out.x = within(x1, x2, _x1) ? _x1 : closest(x1, x2, _x1);//_x1;\n                    out.y = within(y1, y2, _y1) ? _y1 : closest(y1, y2, _y1);//_y1;\n                }\n\n                var fractionInSegment = _jg.lineLength([ out.x, out.y ], [ x1, y1 ]);\n                out.d = _jg.lineLength([x, y], [out.x, out.y]);\n                out.l = fractionInSegment / length;\n                return out;\n            };\n        },\n\n        /*\n         Arc Segment. You need to supply:\n\n         r   -   radius\n         cx  -   center x for the arc\n         cy  -   center y for the arc\n         ac  -   whether the arc is anticlockwise or not. default is clockwise.\n\n         and then either:\n\n         startAngle  -   startAngle for the arc.\n         endAngle    -   endAngle for the arc.\n\n         or:\n\n         x1          -   x for start point\n         y1          -   y for start point\n         x2          -   x for end point\n         y2          -   y for end point\n\n         */\n        Arc: function (params) {\n            var _super = _jp.Segments.AbstractSegment.apply(this, arguments),\n                _calcAngle = function (_x, _y) {\n                    return _jg.theta([params.cx, params.cy], [_x, _y]);\n                },\n                _calcAngleForLocation = function (segment, location) {\n                    if (segment.anticlockwise) {\n                        var sa = segment.startAngle < segment.endAngle ? segment.startAngle + TWO_PI : segment.startAngle,\n                            s = Math.abs(sa - segment.endAngle);\n                        return sa - (s * location);\n                    }\n                    else {\n                        var ea = segment.endAngle < segment.startAngle ? segment.endAngle + TWO_PI : segment.endAngle,\n                            ss = Math.abs(ea - segment.startAngle);\n\n                        return segment.startAngle + (ss * location);\n                    }\n                },\n                TWO_PI = 2 * Math.PI;\n\n            this.radius = params.r;\n            this.anticlockwise = params.ac;\n            this.type = \"Arc\";\n\n            if (params.startAngle && params.endAngle) {\n                this.startAngle = params.startAngle;\n                this.endAngle = params.endAngle;\n                this.x1 = params.cx + (this.radius * Math.cos(params.startAngle));\n                this.y1 = params.cy + (this.radius * Math.sin(params.startAngle));\n                this.x2 = params.cx + (this.radius * Math.cos(params.endAngle));\n                this.y2 = params.cy + (this.radius * Math.sin(params.endAngle));\n            }\n            else {\n                this.startAngle = _calcAngle(params.x1, params.y1);\n                this.endAngle = _calcAngle(params.x2, params.y2);\n                this.x1 = params.x1;\n                this.y1 = params.y1;\n                this.x2 = params.x2;\n                this.y2 = params.y2;\n            }\n\n            if (this.endAngle < 0) {\n                this.endAngle += TWO_PI;\n            }\n            if (this.startAngle < 0) {\n                this.startAngle += TWO_PI;\n            }\n\n            // segment is used by vml     \n            //this.segment = _jg.quadrant([this.x1, this.y1], [this.x2, this.y2]);\n\n            // we now have startAngle and endAngle as positive numbers, meaning the\n            // absolute difference (|d|) between them is the sweep (s) of this arc, unless the\n            // arc is 'anticlockwise' in which case 's' is given by 2PI - |d|.\n\n            var ea = this.endAngle < this.startAngle ? this.endAngle + TWO_PI : this.endAngle;\n            this.sweep = Math.abs(ea - this.startAngle);\n            if (this.anticlockwise) {\n                this.sweep = TWO_PI - this.sweep;\n            }\n            var circumference = 2 * Math.PI * this.radius,\n                frac = this.sweep / TWO_PI,\n                length = circumference * frac;\n\n            this.getLength = function () {\n                return length;\n            };\n\n            this.getBounds = function () {\n                return {\n                    minX: params.cx - params.r,\n                    maxX: params.cx + params.r,\n                    minY: params.cy - params.r,\n                    maxY: params.cy + params.r\n                };\n            };\n\n            var VERY_SMALL_VALUE = 0.0000000001,\n                gentleRound = function (n) {\n                    var f = Math.floor(n), r = Math.ceil(n);\n                    if (n - f < VERY_SMALL_VALUE) {\n                        return f;\n                    }\n                    else if (r - n < VERY_SMALL_VALUE) {\n                        return r;\n                    }\n                    return n;\n                };\n\n            /**\n             * returns the point on the segment's path that is 'location' along the length of the path, where 'location' is a decimal from\n             * 0 to 1 inclusive.\n             */\n            this.pointOnPath = function (location, absolute) {\n\n                if (location === 0) {\n                    return { x: this.x1, y: this.y1, theta: this.startAngle };\n                }\n                else if (location === 1) {\n                    return { x: this.x2, y: this.y2, theta: this.endAngle };\n                }\n\n                if (absolute) {\n                    location = location / length;\n                }\n\n                var angle = _calcAngleForLocation(this, location),\n                    _x = params.cx + (params.r * Math.cos(angle)),\n                    _y = params.cy + (params.r * Math.sin(angle));\n\n                return { x: gentleRound(_x), y: gentleRound(_y), theta: angle };\n            };\n\n            /**\n             * returns the gradient of the segment at the given point.\n             */\n            this.gradientAtPoint = function (location, absolute) {\n                var p = this.pointOnPath(location, absolute);\n                var m = _jg.normal([ params.cx, params.cy ], [p.x, p.y ]);\n                if (!this.anticlockwise && (m === Infinity || m === -Infinity)) {\n                    m *= -1;\n                }\n                return m;\n            };\n\n            this.pointAlongPathFrom = function (location, distance, absolute) {\n                var p = this.pointOnPath(location, absolute),\n                    arcSpan = distance / circumference * 2 * Math.PI,\n                    dir = this.anticlockwise ? -1 : 1,\n                    startAngle = p.theta + (dir * arcSpan),\n                    startX = params.cx + (this.radius * Math.cos(startAngle)),\n                    startY = params.cy + (this.radius * Math.sin(startAngle));\n\n                return {x: startX, y: startY};\n            };\n        },\n\n        Bezier: function (params) {\n            this.curve = [\n                { x: params.x1, y: params.y1},\n                { x: params.cp1x, y: params.cp1y },\n                { x: params.cp2x, y: params.cp2y },\n                { x: params.x2, y: params.y2 }\n            ];\n\n            var _super = _jp.Segments.AbstractSegment.apply(this, arguments);\n            // although this is not a strictly rigorous determination of bounds\n            // of a bezier curve, it works for the types of curves that this segment\n            // type produces.\n            this.bounds = {\n                minX: Math.min(params.x1, params.x2, params.cp1x, params.cp2x),\n                minY: Math.min(params.y1, params.y2, params.cp1y, params.cp2y),\n                maxX: Math.max(params.x1, params.x2, params.cp1x, params.cp2x),\n                maxY: Math.max(params.y1, params.y2, params.cp1y, params.cp2y)\n            };\n\n            this.type = \"Bezier\";\n\n            var _translateLocation = function (_curve, location, absolute) {\n                if (absolute) {\n                    location = root.jsBezier.locationAlongCurveFrom(_curve, location > 0 ? 0 : 1, location);\n                }\n\n                return location;\n            };\n\n            /**\n             * returns the point on the segment's path that is 'location' along the length of the path, where 'location' is a decimal from\n             * 0 to 1 inclusive.\n             */\n            this.pointOnPath = function (location, absolute) {\n                location = _translateLocation(this.curve, location, absolute);\n                return root.jsBezier.pointOnCurve(this.curve, location);\n            };\n\n            /**\n             * returns the gradient of the segment at the given point.\n             */\n            this.gradientAtPoint = function (location, absolute) {\n                location = _translateLocation(this.curve, location, absolute);\n                return root.jsBezier.gradientAtPoint(this.curve, location);\n            };\n\n            this.pointAlongPathFrom = function (location, distance, absolute) {\n                location = _translateLocation(this.curve, location, absolute);\n                return root.jsBezier.pointAlongCurveFrom(this.curve, location, distance);\n            };\n\n            this.getLength = function () {\n                return root.jsBezier.getLength(this.curve);\n            };\n\n            this.getBounds = function () {\n                return this.bounds;\n            };\n        }\n    };\n\n    _jp.SegmentRenderer = {\n        getPath: function (segment) {\n            return ({\n                \"Straight\": function () {\n                    var d = segment.getCoordinates();\n                    return \"M \" + d.x1 + \" \" + d.y1 + \" L \" + d.x2 + \" \" + d.y2;\n                },\n                \"Bezier\": function () {\n                    var d = segment.params;\n                    return \"M \" + d.x1 + \" \" + d.y1 +\n                        \" C \" + d.cp1x + \" \" + d.cp1y + \" \" + d.cp2x + \" \" + d.cp2y + \" \" + d.x2 + \" \" + d.y2;\n                },\n                \"Arc\": function () {\n                    var d = segment.params,\n                        laf = segment.sweep > Math.PI ? 1 : 0,\n                        sf = segment.anticlockwise ? 0 : 1;\n\n                    return \"M\" + segment.x1 + \" \" + segment.y1 + \" A \" + segment.radius + \" \" + d.r + \" 0 \" + laf + \",\" + sf + \" \" + segment.x2 + \" \" + segment.y2;\n                }\n            })[segment.type]();\n        }\n    };\n\n    /*\n     Class: UIComponent\n     Superclass for Connector and AbstractEndpoint.\n     */\n    var AbstractComponent = function () {\n        this.resetBounds = function () {\n            this.bounds = { minX: Infinity, minY: Infinity, maxX: -Infinity, maxY: -Infinity };\n        };\n        this.resetBounds();\n    };\n\n    /*\n     * Class: Connector\n     * Superclass for all Connectors; here is where Segments are managed.  This is exposed on jsPlumb just so it\n     * can be accessed from other files. You should not try to instantiate one of these directly.\n     *\n     * When this class is asked for a pointOnPath, or gradient etc, it must first figure out which segment to dispatch\n     * that request to. This is done by keeping track of the total connector length as segments are added, and also\n     * their cumulative ratios to the total length.  Then when the right segment is found it is a simple case of dispatching\n     * the request to it (and adjusting 'location' so that it is relative to the beginning of that segment.)\n     */\n    _jp.Connectors.AbstractConnector = function (params) {\n\n        AbstractComponent.apply(this, arguments);\n\n        var segments = [],\n            totalLength = 0,\n            segmentProportions = [],\n            segmentProportionalLengths = [],\n            stub = params.stub || 0,\n            sourceStub = _ju.isArray(stub) ? stub[0] : stub,\n            targetStub = _ju.isArray(stub) ? stub[1] : stub,\n            gap = params.gap || 0,\n            sourceGap = _ju.isArray(gap) ? gap[0] : gap,\n            targetGap = _ju.isArray(gap) ? gap[1] : gap,\n            userProvidedSegments = null,\n            paintInfo = null;\n\n        this.getPathData = function() {\n            var p = \"\";\n            for (var i = 0; i < segments.length; i++) {\n                p += _jp.SegmentRenderer.getPath(segments[i]);\n                p += \" \";\n            }\n            return p;\n        };\n\n        /**\n         * Function: findSegmentForPoint\n         * Returns the segment that is closest to the given [x,y],\n         * null if nothing found.  This function returns a JS\n         * object with:\n         *\n         *   d   -   distance from segment\n         *   l   -   proportional location in segment\n         *   x   -   x point on the segment\n         *   y   -   y point on the segment\n         *   s   -   the segment itself.\n         */\n        this.findSegmentForPoint = function (x, y) {\n            var out = { d: Infinity, s: null, x: null, y: null, l: null };\n            for (var i = 0; i < segments.length; i++) {\n                var _s = segments[i].findClosestPointOnPath(x, y);\n                if (_s.d < out.d) {\n                    out.d = _s.d;\n                    out.l = _s.l;\n                    out.x = _s.x;\n                    out.y = _s.y;\n                    out.s = segments[i];\n                    out.x1 = _s.x1;\n                    out.x2 = _s.x2;\n                    out.y1 = _s.y1;\n                    out.y2 = _s.y2;\n                    out.index = i;\n                }\n            }\n\n            return out;\n        };\n\n        var _updateSegmentProportions = function () {\n                var curLoc = 0;\n                for (var i = 0; i < segments.length; i++) {\n                    var sl = segments[i].getLength();\n                    segmentProportionalLengths[i] = sl / totalLength;\n                    segmentProportions[i] = [curLoc, (curLoc += (sl / totalLength)) ];\n                }\n            },\n\n            /**\n             * returns [segment, proportion of travel in segment, segment index] for the segment\n             * that contains the point which is 'location' distance along the entire path, where\n             * 'location' is a decimal between 0 and 1 inclusive. in this connector type, paths\n             * are made up of a list of segments, each of which contributes some fraction to\n             * the total length.\n             * From 1.3.10 this also supports the 'absolute' property, which lets us specify a location\n             * as the absolute distance in pixels, rather than a proportion of the total path.\n             */\n            _findSegmentForLocation = function (location, absolute) {\n                if (absolute) {\n                    location = location > 0 ? location / totalLength : (totalLength + location) / totalLength;\n                }\n                var idx = segmentProportions.length - 1, inSegmentProportion = 1;\n                for (var i = 0; i < segmentProportions.length; i++) {\n                    if (segmentProportions[i][1] >= location) {\n                        idx = i;\n                        // todo is this correct for all connector path types?\n                        inSegmentProportion = location === 1 ? 1 : location === 0 ? 0 : (location - segmentProportions[i][0]) / segmentProportionalLengths[i];\n                        break;\n                    }\n                }\n                return { segment: segments[idx], proportion: inSegmentProportion, index: idx };\n            },\n            _addSegment = function (conn, type, params) {\n                if (params.x1 === params.x2 && params.y1 === params.y2) {\n                    return;\n                }\n                var s = new _jp.Segments[type](params);\n                segments.push(s);\n                totalLength += s.getLength();\n                conn.updateBounds(s);\n            },\n            _clearSegments = function () {\n                totalLength = segments.length = segmentProportions.length = segmentProportionalLengths.length = 0;\n            };\n\n        this.setSegments = function (_segs) {\n            userProvidedSegments = [];\n            totalLength = 0;\n            for (var i = 0; i < _segs.length; i++) {\n                userProvidedSegments.push(_segs[i]);\n                totalLength += _segs[i].getLength();\n            }\n        };\n\n        this.getLength = function() {\n            return totalLength;\n        };\n\n        var _prepareCompute = function (params) {\n            this.strokeWidth = params.strokeWidth;\n            var segment = _jg.quadrant(params.sourcePos, params.targetPos),\n                swapX = params.targetPos[0] < params.sourcePos[0],\n                swapY = params.targetPos[1] < params.sourcePos[1],\n                lw = params.strokeWidth || 1,\n                so = params.sourceEndpoint.anchor.getOrientation(params.sourceEndpoint),\n                to = params.targetEndpoint.anchor.getOrientation(params.targetEndpoint),\n                x = swapX ? params.targetPos[0] : params.sourcePos[0],\n                y = swapY ? params.targetPos[1] : params.sourcePos[1],\n                w = Math.abs(params.targetPos[0] - params.sourcePos[0]),\n                h = Math.abs(params.targetPos[1] - params.sourcePos[1]);\n\n            // if either anchor does not have an orientation set, we derive one from their relative\n            // positions.  we fix the axis to be the one in which the two elements are further apart, and\n            // point each anchor at the other element.  this is also used when dragging a new connection.\n            if (so[0] === 0 && so[1] === 0 || to[0] === 0 && to[1] === 0) {\n                var index = w > h ? 0 : 1, oIndex = [1, 0][index];\n                so = [];\n                to = [];\n                so[index] = params.sourcePos[index] > params.targetPos[index] ? -1 : 1;\n                to[index] = params.sourcePos[index] > params.targetPos[index] ? 1 : -1;\n                so[oIndex] = 0;\n                to[oIndex] = 0;\n            }\n\n            var sx = swapX ? w + (sourceGap * so[0]) : sourceGap * so[0],\n                sy = swapY ? h + (sourceGap * so[1]) : sourceGap * so[1],\n                tx = swapX ? targetGap * to[0] : w + (targetGap * to[0]),\n                ty = swapY ? targetGap * to[1] : h + (targetGap * to[1]),\n                oProduct = ((so[0] * to[0]) + (so[1] * to[1]));\n\n            var result = {\n                sx: sx, sy: sy, tx: tx, ty: ty, lw: lw,\n                xSpan: Math.abs(tx - sx),\n                ySpan: Math.abs(ty - sy),\n                mx: (sx + tx) / 2,\n                my: (sy + ty) / 2,\n                so: so, to: to, x: x, y: y, w: w, h: h,\n                segment: segment,\n                startStubX: sx + (so[0] * sourceStub),\n                startStubY: sy + (so[1] * sourceStub),\n                endStubX: tx + (to[0] * targetStub),\n                endStubY: ty + (to[1] * targetStub),\n                isXGreaterThanStubTimes2: Math.abs(sx - tx) > (sourceStub + targetStub),\n                isYGreaterThanStubTimes2: Math.abs(sy - ty) > (sourceStub + targetStub),\n                opposite: oProduct === -1,\n                perpendicular: oProduct === 0,\n                orthogonal: oProduct === 1,\n                sourceAxis: so[0] === 0 ? \"y\" : \"x\",\n                points: [x, y, w, h, sx, sy, tx, ty ],\n                stubs:[sourceStub, targetStub]\n            };\n            result.anchorOrientation = result.opposite ? \"opposite\" : result.orthogonal ? \"orthogonal\" : \"perpendicular\";\n            return result;\n        };\n\n        this.getSegments = function () {\n            return segments;\n        };\n\n        this.updateBounds = function (segment) {\n            var segBounds = segment.getBounds();\n            this.bounds.minX = Math.min(this.bounds.minX, segBounds.minX);\n            this.bounds.maxX = Math.max(this.bounds.maxX, segBounds.maxX);\n            this.bounds.minY = Math.min(this.bounds.minY, segBounds.minY);\n            this.bounds.maxY = Math.max(this.bounds.maxY, segBounds.maxY);\n        };\n\n        var dumpSegmentsToConsole = function () {\n            console.log(\"SEGMENTS:\");\n            for (var i = 0; i < segments.length; i++) {\n                console.log(segments[i].type, segments[i].getLength(), segmentProportions[i]);\n            }\n        };\n\n        this.pointOnPath = function (location, absolute) {\n            var seg = _findSegmentForLocation(location, absolute);\n            return seg.segment && seg.segment.pointOnPath(seg.proportion, false) || [0, 0];\n        };\n\n        this.gradientAtPoint = function (location, absolute) {\n            var seg = _findSegmentForLocation(location, absolute);\n            return seg.segment && seg.segment.gradientAtPoint(seg.proportion, false) || 0;\n        };\n\n        this.pointAlongPathFrom = function (location, distance, absolute) {\n            var seg = _findSegmentForLocation(location, absolute);\n            // TODO what happens if this crosses to the next segment?\n            return seg.segment && seg.segment.pointAlongPathFrom(seg.proportion, distance, false) || [0, 0];\n        };\n\n        this.compute = function (params) {\n            paintInfo = _prepareCompute.call(this, params);\n\n            _clearSegments();\n            this._compute(paintInfo, params);\n            this.x = paintInfo.points[0];\n            this.y = paintInfo.points[1];\n            this.w = paintInfo.points[2];\n            this.h = paintInfo.points[3];\n            this.segment = paintInfo.segment;\n            _updateSegmentProportions();\n        };\n\n        return {\n            addSegment: _addSegment,\n            prepareCompute: _prepareCompute,\n            sourceStub: sourceStub,\n            targetStub: targetStub,\n            maxStub: Math.max(sourceStub, targetStub),\n            sourceGap: sourceGap,\n            targetGap: targetGap,\n            maxGap: Math.max(sourceGap, targetGap)\n        };\n    };\n    _ju.extend(_jp.Connectors.AbstractConnector, AbstractComponent);\n\n\n    // ********************************* END OF CONNECTOR TYPES *******************************************************************\n\n    // ********************************* ENDPOINT TYPES *******************************************************************\n\n    _jp.Endpoints.AbstractEndpoint = function (params) {\n        AbstractComponent.apply(this, arguments);\n        var compute = this.compute = function (anchorPoint, orientation, endpointStyle, connectorPaintStyle) {\n            var out = this._compute.apply(this, arguments);\n            this.x = out[0];\n            this.y = out[1];\n            this.w = out[2];\n            this.h = out[3];\n            this.bounds.minX = this.x;\n            this.bounds.minY = this.y;\n            this.bounds.maxX = this.x + this.w;\n            this.bounds.maxY = this.y + this.h;\n            return out;\n        };\n        return {\n            compute: compute,\n            cssClass: params.cssClass\n        };\n    };\n    _ju.extend(_jp.Endpoints.AbstractEndpoint, AbstractComponent);\n\n    /**\n     * Class: Endpoints.Dot\n     * A round endpoint, with default radius 10 pixels.\n     */\n\n    /**\n     * Function: Constructor\n     *\n     * Parameters:\n     *\n     *    radius    -    radius of the endpoint.  defaults to 10 pixels.\n     */\n    _jp.Endpoints.Dot = function (params) {\n        this.type = \"Dot\";\n        var _super = _jp.Endpoints.AbstractEndpoint.apply(this, arguments);\n        params = params || {};\n        this.radius = params.radius || 10;\n        this.defaultOffset = 0.5 * this.radius;\n        this.defaultInnerRadius = this.radius / 3;\n\n        this._compute = function (anchorPoint, orientation, endpointStyle, connectorPaintStyle) {\n            this.radius = endpointStyle.radius || this.radius;\n            var x = anchorPoint[0] - this.radius,\n                y = anchorPoint[1] - this.radius,\n                w = this.radius * 2,\n                h = this.radius * 2;\n\n            if (endpointStyle.stroke) {\n                var lw = endpointStyle.strokeWidth || 1;\n                x -= lw;\n                y -= lw;\n                w += (lw * 2);\n                h += (lw * 2);\n            }\n            return [ x, y, w, h, this.radius ];\n        };\n    };\n    _ju.extend(_jp.Endpoints.Dot, _jp.Endpoints.AbstractEndpoint);\n\n    _jp.Endpoints.Rectangle = function (params) {\n        this.type = \"Rectangle\";\n        var _super = _jp.Endpoints.AbstractEndpoint.apply(this, arguments);\n        params = params || {};\n        this.width = params.width || 20;\n        this.height = params.height || 20;\n\n        this._compute = function (anchorPoint, orientation, endpointStyle, connectorPaintStyle) {\n            var width = endpointStyle.width || this.width,\n                height = endpointStyle.height || this.height,\n                x = anchorPoint[0] - (width / 2),\n                y = anchorPoint[1] - (height / 2);\n\n            return [ x, y, width, height];\n        };\n    };\n    _ju.extend(_jp.Endpoints.Rectangle, _jp.Endpoints.AbstractEndpoint);\n\n    var DOMElementEndpoint = function (params) {\n        _jp.jsPlumbUIComponent.apply(this, arguments);\n        this._jsPlumb.displayElements = [];\n    };\n    _ju.extend(DOMElementEndpoint, _jp.jsPlumbUIComponent, {\n        getDisplayElements: function () {\n            return this._jsPlumb.displayElements;\n        },\n        appendDisplayElement: function (el) {\n            this._jsPlumb.displayElements.push(el);\n        }\n    });\n\n    /**\n     * Class: Endpoints.Image\n     * Draws an image as the Endpoint.\n     */\n    /**\n     * Function: Constructor\n     *\n     * Parameters:\n     *\n     *    src    -    location of the image to use.\n\n     TODO: multiple references to self. not sure quite how to get rid of them entirely. perhaps self = null in the cleanup\n     function will suffice\n\n     TODO this class still might leak memory.\n\n     */\n    _jp.Endpoints.Image = function (params) {\n\n        this.type = \"Image\";\n        DOMElementEndpoint.apply(this, arguments);\n        _jp.Endpoints.AbstractEndpoint.apply(this, arguments);\n\n        var _onload = params.onload,\n            src = params.src || params.url,\n            clazz = params.cssClass ? \" \" + params.cssClass : \"\";\n\n        this._jsPlumb.img = new Image();\n        this._jsPlumb.ready = false;\n        this._jsPlumb.initialized = false;\n        this._jsPlumb.deleted = false;\n        this._jsPlumb.widthToUse = params.width;\n        this._jsPlumb.heightToUse = params.height;\n        this._jsPlumb.endpoint = params.endpoint;\n\n        this._jsPlumb.img.onload = function () {\n            if (this._jsPlumb != null) {\n                this._jsPlumb.ready = true;\n                this._jsPlumb.widthToUse = this._jsPlumb.widthToUse || this._jsPlumb.img.width;\n                this._jsPlumb.heightToUse = this._jsPlumb.heightToUse || this._jsPlumb.img.height;\n                if (_onload) {\n                    _onload(this);\n                }\n            }\n        }.bind(this);\n\n        /*\n         Function: setImage\n         Sets the Image to use in this Endpoint.\n\n         Parameters:\n         img         -   may be a URL or an Image object\n         onload      -   optional; a callback to execute once the image has loaded.\n         */\n        this._jsPlumb.endpoint.setImage = function (_img, onload) {\n            var s = _img.constructor === String ? _img : _img.src;\n            _onload = onload;\n            this._jsPlumb.img.src = s;\n\n            if (this.canvas != null) {\n                this.canvas.setAttribute(\"src\", this._jsPlumb.img.src);\n            }\n        }.bind(this);\n\n        this._jsPlumb.endpoint.setImage(src, _onload);\n        this._compute = function (anchorPoint, orientation, endpointStyle, connectorPaintStyle) {\n            this.anchorPoint = anchorPoint;\n            if (this._jsPlumb.ready) {\n                return [anchorPoint[0] - this._jsPlumb.widthToUse / 2, anchorPoint[1] - this._jsPlumb.heightToUse / 2,\n                    this._jsPlumb.widthToUse, this._jsPlumb.heightToUse];\n            }\n            else {\n                return [0, 0, 0, 0];\n            }\n        };\n\n        this.canvas = _jp.createElement(\"img\", {\n            position:\"absolute\",\n            margin:0,\n            padding:0,\n            outline:0\n        }, this._jsPlumb.instance.endpointClass + clazz);\n\n        if (this._jsPlumb.widthToUse) {\n            this.canvas.setAttribute(\"width\", this._jsPlumb.widthToUse);\n        }\n        if (this._jsPlumb.heightToUse) {\n            this.canvas.setAttribute(\"height\", this._jsPlumb.heightToUse);\n        }\n        this._jsPlumb.instance.appendElement(this.canvas);\n\n        this.actuallyPaint = function (d, style, anchor) {\n            if (!this._jsPlumb.deleted) {\n                if (!this._jsPlumb.initialized) {\n                    this.canvas.setAttribute(\"src\", this._jsPlumb.img.src);\n                    this.appendDisplayElement(this.canvas);\n                    this._jsPlumb.initialized = true;\n                }\n                var x = this.anchorPoint[0] - (this._jsPlumb.widthToUse / 2),\n                    y = this.anchorPoint[1] - (this._jsPlumb.heightToUse / 2);\n                _ju.sizeElement(this.canvas, x, y, this._jsPlumb.widthToUse, this._jsPlumb.heightToUse);\n            }\n        };\n\n        this.paint = function (style, anchor) {\n            if (this._jsPlumb != null) {  // may have been deleted\n                if (this._jsPlumb.ready) {\n                    this.actuallyPaint(style, anchor);\n                }\n                else {\n                    root.setTimeout(function () {\n                        this.paint(style, anchor);\n                    }.bind(this), 200);\n                }\n            }\n        };\n    };\n    _ju.extend(_jp.Endpoints.Image, [ DOMElementEndpoint, _jp.Endpoints.AbstractEndpoint ], {\n        cleanup: function (force) {\n            if (force) {\n                this._jsPlumb.deleted = true;\n                if (this.canvas) {\n                    this.canvas.parentNode.removeChild(this.canvas);\n                }\n                this.canvas = null;\n            }\n        }\n    });\n\n    /*\n     * Class: Endpoints.Blank\n     * An Endpoint that paints nothing (visible) on the screen.  Supports cssClass and hoverClass parameters like all Endpoints.\n     */\n    _jp.Endpoints.Blank = function (params) {\n        var _super = _jp.Endpoints.AbstractEndpoint.apply(this, arguments);\n        this.type = \"Blank\";\n        DOMElementEndpoint.apply(this, arguments);\n        this._compute = function (anchorPoint, orientation, endpointStyle, connectorPaintStyle) {\n            return [anchorPoint[0], anchorPoint[1], 10, 0];\n        };\n\n        var clazz = params.cssClass ? \" \" + params.cssClass : \"\";\n\n        this.canvas = _jp.createElement(\"div\", {\n            display: \"block\",\n            width: \"1px\",\n            height: \"1px\",\n            background: \"transparent\",\n            position: \"absolute\"\n        }, this._jsPlumb.instance.endpointClass + clazz);\n\n        this._jsPlumb.instance.appendElement(this.canvas);\n\n        this.paint = function (style, anchor) {\n            _ju.sizeElement(this.canvas, this.x, this.y, this.w, this.h);\n        };\n    };\n    _ju.extend(_jp.Endpoints.Blank, [_jp.Endpoints.AbstractEndpoint, DOMElementEndpoint], {\n        cleanup: function () {\n            if (this.canvas && this.canvas.parentNode) {\n                this.canvas.parentNode.removeChild(this.canvas);\n            }\n        }\n    });\n\n    /*\n     * Class: Endpoints.Triangle\n     * A triangular Endpoint.\n     */\n    /*\n     * Function: Constructor\n     *\n     * Parameters:\n     *\n     * width   width of the triangle's base.  defaults to 55 pixels.\n     * height  height of the triangle from base to apex.  defaults to 55 pixels.\n     */\n    _jp.Endpoints.Triangle = function (params) {\n        this.type = \"Triangle\";\n        _jp.Endpoints.AbstractEndpoint.apply(this, arguments);\n        var self = this;\n        params = params || {  };\n        params.width = params.width || 55;\n        params.height = params.height || 55;\n        this.width = params.width;\n        this.height = params.height;\n        this._compute = function (anchorPoint, orientation, endpointStyle, connectorPaintStyle) {\n            var width = endpointStyle.width || self.width,\n                height = endpointStyle.height || self.height,\n                x = anchorPoint[0] - (width / 2),\n                y = anchorPoint[1] - (height / 2);\n            return [ x, y, width, height ];\n        };\n    };\n// ********************************* END OF ENDPOINT TYPES *******************************************************************\n\n\n// ********************************* OVERLAY DEFINITIONS ***********************************************************************    \n\n    var AbstractOverlay = _jp.Overlays.AbstractOverlay = function (params) {\n        this.visible = true;\n        this.isAppendedAtTopLevel = true;\n        this.component = params.component;\n        this.loc = params.location == null ? 0.5 : params.location;\n        this.endpointLoc = params.endpointLocation == null ? [ 0.5, 0.5] : params.endpointLocation;\n        this.visible = params.visible !== false;\n    };\n    AbstractOverlay.prototype = {\n        cleanup: function (force) {\n            if (force) {\n                this.component = null;\n                this.canvas = null;\n                this.endpointLoc = null;\n            }\n        },\n        reattach:function(instance, component) { },\n        setVisible: function (val) {\n            this.visible = val;\n            this.component.repaint();\n        },\n        isVisible: function () {\n            return this.visible;\n        },\n        hide: function () {\n            this.setVisible(false);\n        },\n        show: function () {\n            this.setVisible(true);\n        },\n        incrementLocation: function (amount) {\n            this.loc += amount;\n            this.component.repaint();\n        },\n        setLocation: function (l) {\n            this.loc = l;\n            this.component.repaint();\n        },\n        getLocation: function () {\n            return this.loc;\n        },\n        updateFrom:function() { }\n    };\n\n\n    /*\n     * Class: Overlays.Arrow\n     *\n     * An arrow overlay, defined by four points: the head, the two sides of the tail, and a 'foldback' point at some distance along the length\n     * of the arrow that lines from each tail point converge into.  The foldback point is defined using a decimal that indicates some fraction\n     * of the length of the arrow and has a default value of 0.623.  A foldback point value of 1 would mean that the arrow had a straight line\n     * across the tail.\n     */\n    /*\n     * @constructor\n     *\n     * @param {Object} params Constructor params.\n     * @param {Number} [params.length] Distance in pixels from head to tail baseline. default 20.\n     * @param {Number} [params.width] Width in pixels of the tail baseline. default 20.\n     * @param {String} [params.fill] Style to use when filling the arrow.  defaults to \"black\".\n     * @param {String} [params.stroke] Style to use when stroking the arrow. defaults to null, which means the arrow is not stroked.\n     * @param {Number} [params.stroke-width] Line width to use when stroking the arrow. defaults to 1, but only used if stroke is not null.\n     * @param {Number} [params.foldback] Distance (as a decimal from 0 to 1 inclusive) along the length of the arrow marking the point the tail points should fold back to.  defaults to 0.623.\n     * @param {Number} [params.location] Distance (as a decimal from 0 to 1 inclusive) marking where the arrow should sit on the connector. defaults to 0.5.\n     * @param {NUmber} [params.direction] Indicates the direction the arrow points in. valid values are -1 and 1; 1 is default.\n     */\n    _jp.Overlays.Arrow = function (params) {\n        this.type = \"Arrow\";\n        AbstractOverlay.apply(this, arguments);\n        this.isAppendedAtTopLevel = false;\n        params = params || {};\n        var self = this;\n\n        this.length = params.length || 20;\n        this.width = params.width || 20;\n        this.id = params.id;\n        var direction = (params.direction || 1) < 0 ? -1 : 1,\n            paintStyle = params.paintStyle || { \"stroke-width\": 1 },\n        // how far along the arrow the lines folding back in come to. default is 62.3%.\n            foldback = params.foldback || 0.623;\n\n        this.computeMaxSize = function () {\n            return self.width * 1.5;\n        };\n\n        this.elementCreated = function(p, component) {\n            this.path = p;\n            if (params.events) {\n                for (var i in params.events) {\n                    _jp.on(p, i, params.events[i]);\n                }\n            }\n        };\n\n        this.draw = function (component, currentConnectionPaintStyle) {\n\n            var hxy, mid, txy, tail, cxy;\n            if (component.pointAlongPathFrom) {\n\n                if (_ju.isString(this.loc) || this.loc > 1 || this.loc < 0) {\n                    var l = parseInt(this.loc, 10),\n                        fromLoc = this.loc < 0 ? 1 : 0;\n                    hxy = component.pointAlongPathFrom(fromLoc, l, false);\n                    mid = component.pointAlongPathFrom(fromLoc, l - (direction * this.length / 2), false);\n                    txy = _jg.pointOnLine(hxy, mid, this.length);\n                }\n                else if (this.loc === 1) {\n                    hxy = component.pointOnPath(this.loc);\n                    mid = component.pointAlongPathFrom(this.loc, -(this.length));\n                    txy = _jg.pointOnLine(hxy, mid, this.length);\n\n                    if (direction === -1) {\n                        var _ = txy;\n                        txy = hxy;\n                        hxy = _;\n                    }\n                }\n                else if (this.loc === 0) {\n                    txy = component.pointOnPath(this.loc);\n                    mid = component.pointAlongPathFrom(this.loc, this.length);\n                    hxy = _jg.pointOnLine(txy, mid, this.length);\n                    if (direction === -1) {\n                        var __ = txy;\n                        txy = hxy;\n                        hxy = __;\n                    }\n                }\n                else {\n                    hxy = component.pointAlongPathFrom(this.loc, direction * this.length / 2);\n                    mid = component.pointOnPath(this.loc);\n                    txy = _jg.pointOnLine(hxy, mid, this.length);\n                }\n\n                tail = _jg.perpendicularLineTo(hxy, txy, this.width);\n                cxy = _jg.pointOnLine(hxy, txy, foldback * this.length);\n\n                var d = { hxy: hxy, tail: tail, cxy: cxy },\n                    stroke = paintStyle.stroke || currentConnectionPaintStyle.stroke,\n                    fill = paintStyle.fill || currentConnectionPaintStyle.stroke,\n                    lineWidth = paintStyle.strokeWidth || currentConnectionPaintStyle.strokeWidth;\n\n                return {\n                    component: component,\n                    d: d,\n                    \"stroke-width\": lineWidth,\n                    stroke: stroke,\n                    fill: fill,\n                    minX: Math.min(hxy.x, tail[0].x, tail[1].x),\n                    maxX: Math.max(hxy.x, tail[0].x, tail[1].x),\n                    minY: Math.min(hxy.y, tail[0].y, tail[1].y),\n                    maxY: Math.max(hxy.y, tail[0].y, tail[1].y)\n                };\n            }\n            else {\n                return {component: component, minX: 0, maxX: 0, minY: 0, maxY: 0};\n            }\n        };\n    };\n    _ju.extend(_jp.Overlays.Arrow, AbstractOverlay, {\n        updateFrom:function(d) {\n            this.length = d.length || this.length;\n            this.width = d.width|| this.width;\n            this.direction = d.direction != null ? d.direction : this.direction;\n            this.foldback = d.foldback|| this.foldback;\n        }\n    });\n\n    /*\n     * Class: Overlays.PlainArrow\n     *\n     * A basic arrow.  This is in fact just one instance of the more generic case in which the tail folds back on itself to some\n     * point along the length of the arrow: in this case, that foldback point is the full length of the arrow.  so it just does\n     * a 'call' to Arrow with foldback set appropriately.\n     */\n    /*\n     * Function: Constructor\n     * See <Overlays.Arrow> for allowed parameters for this overlay.\n     */\n    _jp.Overlays.PlainArrow = function (params) {\n        params = params || {};\n        var p = _jp.extend(params, {foldback: 1});\n        _jp.Overlays.Arrow.call(this, p);\n        this.type = \"PlainArrow\";\n    };\n    _ju.extend(_jp.Overlays.PlainArrow, _jp.Overlays.Arrow);\n\n    /*\n     * Class: Overlays.Diamond\n     * \n     * A diamond. Like PlainArrow, this is a concrete case of the more generic case of the tail points converging on some point...it just\n     * happens that in this case, that point is greater than the length of the the arrow.\n     *\n     *      this could probably do with some help with positioning...due to the way it reuses the Arrow paint code, what Arrow thinks is the\n     *      center is actually 1/4 of the way along for this guy.  but we don't have any knowledge of pixels at this point, so we're kind of\n     *      stuck when it comes to helping out the Arrow class. possibly we could pass in a 'transpose' parameter or something. the value\n     *      would be -l/4 in this case - move along one quarter of the total length.\n     */\n    /*\n     * Function: Constructor\n     * See <Overlays.Arrow> for allowed parameters for this overlay.\n     */\n    _jp.Overlays.Diamond = function (params) {\n        params = params || {};\n        var l = params.length || 40,\n            p = _jp.extend(params, {length: l / 2, foldback: 2});\n        _jp.Overlays.Arrow.call(this, p);\n        this.type = \"Diamond\";\n    };\n    _ju.extend(_jp.Overlays.Diamond, _jp.Overlays.Arrow);\n\n    var _getDimensions = function (component, forceRefresh) {\n        if (component._jsPlumb.cachedDimensions == null || forceRefresh) {\n            component._jsPlumb.cachedDimensions = component.getDimensions();\n        }\n        return component._jsPlumb.cachedDimensions;\n    };\n\n    // abstract superclass for overlays that add an element to the DOM.\n    var AbstractDOMOverlay = function (params) {\n        _jp.jsPlumbUIComponent.apply(this, arguments);\n        AbstractOverlay.apply(this, arguments);\n\n        // hand off fired events to associated component.\n        var _f = this.fire;\n        this.fire = function () {\n            _f.apply(this, arguments);\n            if (this.component) {\n                this.component.fire.apply(this.component, arguments);\n            }\n        };\n\n        this.detached=false;\n        this.id = params.id;\n        this._jsPlumb.div = null;\n        this._jsPlumb.initialised = false;\n        this._jsPlumb.component = params.component;\n        this._jsPlumb.cachedDimensions = null;\n        this._jsPlumb.create = params.create;\n        this._jsPlumb.initiallyInvisible = params.visible === false;\n\n        this.getElement = function () {\n            if (this._jsPlumb.div == null) {\n                var div = this._jsPlumb.div = _jp.getElement(this._jsPlumb.create(this._jsPlumb.component));\n                div.style.position = \"absolute\";\n                div.className = this._jsPlumb.instance.overlayClass + \" \" +\n                    (this.cssClass ? this.cssClass :\n                        params.cssClass ? params.cssClass : \"\");\n                this._jsPlumb.instance.appendElement(div);\n                this._jsPlumb.instance.getId(div);\n                this.canvas = div;\n\n                // in IE the top left corner is what it placed at the desired location.  This will not\n                // be fixed. IE8 is not going to be supported for much longer.\n                var ts = \"translate(-50%, -50%)\";\n                div.style.webkitTransform = ts;\n                div.style.mozTransform = ts;\n                div.style.msTransform = ts;\n                div.style.oTransform = ts;\n                div.style.transform = ts;\n\n                // write the related component into the created element\n                div._jsPlumb = this;\n\n                if (params.visible === false) {\n                    div.style.display = \"none\";\n                }\n            }\n            return this._jsPlumb.div;\n        };\n\n        this.draw = function (component, currentConnectionPaintStyle, absolutePosition) {\n            var td = _getDimensions(this);\n            if (td != null && td.length === 2) {\n                var cxy = { x: 0, y: 0 };\n\n                // absolutePosition would have been set by a call to connection.setAbsoluteOverlayPosition.\n                if (absolutePosition) {\n                    cxy = { x: absolutePosition[0], y: absolutePosition[1] };\n                }\n                else if (component.pointOnPath) {\n                    var loc = this.loc, absolute = false;\n                    if (_ju.isString(this.loc) || this.loc < 0 || this.loc > 1) {\n                        loc = parseInt(this.loc, 10);\n                        absolute = true;\n                    }\n                    cxy = component.pointOnPath(loc, absolute);  // a connection\n                }\n                else {\n                    var locToUse = this.loc.constructor === Array ? this.loc : this.endpointLoc;\n                    cxy = { x: locToUse[0] * component.w,\n                        y: locToUse[1] * component.h };\n                }\n\n                var minx = cxy.x - (td[0] / 2),\n                    miny = cxy.y - (td[1] / 2);\n\n                return {\n                    component: component,\n                    d: { minx: minx, miny: miny, td: td, cxy: cxy },\n                    minX: minx,\n                    maxX: minx + td[0],\n                    minY: miny,\n                    maxY: miny + td[1]\n                };\n            }\n            else {\n                return {minX: 0, maxX: 0, minY: 0, maxY: 0};\n            }\n        };\n    };\n    _ju.extend(AbstractDOMOverlay, [_jp.jsPlumbUIComponent, AbstractOverlay], {\n        getDimensions: function () {\n            return [1,1];\n        },\n        setVisible: function (state) {\n            if (this._jsPlumb.div) {\n                this._jsPlumb.div.style.display = state ? \"block\" : \"none\";\n                // if initially invisible, dimensions are 0,0 and never get updated\n                if (state && this._jsPlumb.initiallyInvisible) {\n                    _getDimensions(this, true);\n                    this.component.repaint();\n                    this._jsPlumb.initiallyInvisible = false;\n                }\n            }\n        },\n        /*\n         * Function: clearCachedDimensions\n         * Clears the cached dimensions for the label. As a performance enhancement, label dimensions are\n         * cached from 1.3.12 onwards. The cache is cleared when you change the label text, of course, but\n         * there are other reasons why the text dimensions might change - if you make a change through CSS, for\n         * example, you might change the font size.  in that case you should explicitly call this method.\n         */\n        clearCachedDimensions: function () {\n            this._jsPlumb.cachedDimensions = null;\n        },\n        cleanup: function (force) {\n            if (force) {\n                if (this._jsPlumb.div != null) {\n                    this._jsPlumb.div._jsPlumb = null;\n                    this._jsPlumb.instance.removeElement(this._jsPlumb.div);\n                }\n            }\n            else {\n                // if not a forced cleanup, just detach child from parent for now.\n                if (this._jsPlumb && this._jsPlumb.div && this._jsPlumb.div.parentNode) {\n                    this._jsPlumb.div.parentNode.removeChild(this._jsPlumb.div);\n                }\n                this.detached = true;\n            }\n\n        },\n        reattach:function(instance, component) {\n            if (this._jsPlumb.div != null) {\n                instance.getContainer().appendChild(this._jsPlumb.div);\n            }\n            this.detached = false;\n        },\n        computeMaxSize: function () {\n            var td = _getDimensions(this);\n            return Math.max(td[0], td[1]);\n        },\n        paint: function (p, containerExtents) {\n            if (!this._jsPlumb.initialised) {\n                this.getElement();\n                p.component.appendDisplayElement(this._jsPlumb.div);\n                this._jsPlumb.initialised = true;\n                if (this.detached) {\n                    this._jsPlumb.div.parentNode.removeChild(this._jsPlumb.div);\n                }\n            }\n            this._jsPlumb.div.style.left = (p.component.x + p.d.minx) + \"px\";\n            this._jsPlumb.div.style.top = (p.component.y + p.d.miny) + \"px\";\n        }\n    });\n\n    /*\n     * Class: Overlays.Custom\n     * A Custom overlay. You supply a 'create' function which returns some DOM element, and jsPlumb positions it.\n     * The 'create' function is passed a Connection or Endpoint.\n     */\n    /*\n     * Function: Constructor\n     * \n     * Parameters:\n     * create - function for jsPlumb to call that returns a DOM element.\n     * location - distance (as a decimal from 0 to 1 inclusive) marking where the label should sit on the connector. defaults to 0.5.\n     * id - optional id to use for later retrieval of this overlay.\n     *\n     */\n    _jp.Overlays.Custom = function (params) {\n        this.type = \"Custom\";\n        AbstractDOMOverlay.apply(this, arguments);\n    };\n    _ju.extend(_jp.Overlays.Custom, AbstractDOMOverlay);\n\n    _jp.Overlays.GuideLines = function () {\n        var self = this;\n        self.length = 50;\n        self.strokeWidth = 5;\n        this.type = \"GuideLines\";\n        AbstractOverlay.apply(this, arguments);\n        _jp.jsPlumbUIComponent.apply(this, arguments);\n        this.draw = function (connector, currentConnectionPaintStyle) {\n\n            var head = connector.pointAlongPathFrom(self.loc, self.length / 2),\n                mid = connector.pointOnPath(self.loc),\n                tail = _jg.pointOnLine(head, mid, self.length),\n                tailLine = _jg.perpendicularLineTo(head, tail, 40),\n                headLine = _jg.perpendicularLineTo(tail, head, 20);\n\n            return {\n                connector: connector,\n                head: head,\n                tail: tail,\n                headLine: headLine,\n                tailLine: tailLine,\n                minX: Math.min(head.x, tail.x, headLine[0].x, headLine[1].x),\n                minY: Math.min(head.y, tail.y, headLine[0].y, headLine[1].y),\n                maxX: Math.max(head.x, tail.x, headLine[0].x, headLine[1].x),\n                maxY: Math.max(head.y, tail.y, headLine[0].y, headLine[1].y)\n            };\n        };\n\n        // this.cleanup = function() { };  // nothing to clean up for GuideLines\n    };\n\n    /*\n     * Class: Overlays.Label\n\n     */\n    /*\n     * Function: Constructor\n     * \n     * Parameters:\n     * cssClass - optional css class string to append to css class. This string is appended \"as-is\", so you can of course have multiple classes\n     *             defined.  This parameter is preferred to using labelStyle, borderWidth and borderStyle.\n     * label - the label to paint.  May be a string or a function that returns a string.  Nothing will be painted if your label is null or your\n     *         label function returns null.  empty strings _will_ be painted.\n     * location - distance (as a decimal from 0 to 1 inclusive) marking where the label should sit on the connector. defaults to 0.5.\n     * id - optional id to use for later retrieval of this overlay.\n     * \n     *\n     */\n    _jp.Overlays.Label = function (params) {\n        this.labelStyle = params.labelStyle;\n\n        var labelWidth = null, labelHeight = null, labelText = null, labelPadding = null;\n        this.cssClass = this.labelStyle != null ? this.labelStyle.cssClass : null;\n        var p = _jp.extend({\n            create: function () {\n                return _jp.createElement(\"div\");\n            }}, params);\n        _jp.Overlays.Custom.call(this, p);\n        this.type = \"Label\";\n        this.label = params.label || \"\";\n        this.labelText = null;\n        if (this.labelStyle) {\n            var el = this.getElement();\n            this.labelStyle.font = this.labelStyle.font || \"12px sans-serif\";\n            el.style.font = this.labelStyle.font;\n            el.style.color = this.labelStyle.color || \"black\";\n            if (this.labelStyle.fill) {\n                el.style.background = this.labelStyle.fill;\n            }\n            if (this.labelStyle.borderWidth > 0) {\n                var dStyle = this.labelStyle.borderStyle ? this.labelStyle.borderStyle : \"black\";\n                el.style.border = this.labelStyle.borderWidth + \"px solid \" + dStyle;\n            }\n            if (this.labelStyle.padding) {\n                el.style.padding = this.labelStyle.padding;\n            }\n        }\n\n    };\n    _ju.extend(_jp.Overlays.Label, _jp.Overlays.Custom, {\n        cleanup: function (force) {\n            if (force) {\n                this.div = null;\n                this.label = null;\n                this.labelText = null;\n                this.cssClass = null;\n                this.labelStyle = null;\n            }\n        },\n        getLabel: function () {\n            return this.label;\n        },\n        /*\n         * Function: setLabel\n         * sets the label's, um, label.  you would think i'd call this function\n         * 'setText', but you can pass either a Function or a String to this, so\n         * it makes more sense as 'setLabel'. This uses innerHTML on the label div, so keep\n         * that in mind if you need escaped HTML.\n         */\n        setLabel: function (l) {\n            this.label = l;\n            this.labelText = null;\n            this.clearCachedDimensions();\n            this.update();\n            this.component.repaint();\n        },\n        getDimensions: function () {\n            this.update();\n            return AbstractDOMOverlay.prototype.getDimensions.apply(this, arguments);\n        },\n        update: function () {\n            if (typeof this.label === \"function\") {\n                var lt = this.label(this);\n                this.getElement().innerHTML = lt.replace(/\\r\\n/g, \"<br/>\");\n            }\n            else {\n                if (this.labelText == null) {\n                    this.labelText = this.label;\n                    this.getElement().innerHTML = this.labelText.replace(/\\r\\n/g, \"<br/>\");\n                }\n            }\n        },\n        updateFrom:function(d) {\n            if(d.label != null){\n                this.setLabel(d.label);\n            }\n        }\n    });\n\n    // ********************************* END OF OVERLAY DEFINITIONS ***********************************************************************\n\n}).call(typeof window !== 'undefined' ? window : this);\n\n/*\n * This file contains the base class for library adapters.\n *\n * Copyright (c) 2010 - 2018 jsPlumb (hello@jsplumbtoolkit.com)\n *\n * https://jsplumbtoolkit.com\n * https://github.com/jsplumb/jsplumb\n *\n * Dual licensed under the MIT and GPL2 licenses.\n */\n;(function() {\n    \"use strict\";\n    var root = this,\n        _jp = root.jsPlumb;\n\n    var _getEventManager = function(instance) {\n        var e = instance._mottle;\n        if (!e) {\n            e = instance._mottle = new root.Mottle();\n        }\n        return e;\n    };\n\n    _jp.extend(root.jsPlumbInstance.prototype, {\n        getEventManager:function() {\n            return _getEventManager(this);\n        },\n        on : function(el, event, callback) {\n            // TODO: here we would like to map the tap event if we know its\n            // an internal bind to a click. we have to know its internal because only\n            // then can we be sure that the UP event wont be consumed (tap is a synthesized\n            // event from a mousedown followed by a mouseup).\n            //event = { \"click\":\"tap\", \"dblclick\":\"dbltap\"}[event] || event;\n            this.getEventManager().on.apply(this, arguments);\n            return this;\n        },\n        off : function(el, event, callback) {\n            this.getEventManager().off.apply(this, arguments);\n            return this;\n        }\n    });\n\n\n}).call(typeof window !== 'undefined' ? window : this);\n/*\n * Copyright (c) 2010 - 2018 jsPlumb (hello@jsplumbtoolkit.com)\n *\n * https://jsplumbtoolkit.com\n * https://github.com/jsplumb/jsplumb\n *\n * Dual licensed under the MIT and GPL2 licenses.\n */\n;(function() {\n    \"use strict\";\n\n    var root = this,\n        _ju = root.jsPlumbUtil,\n        _jpi = root.jsPlumbInstance;\n\n    var GROUP_COLLAPSED_CLASS = \"jtk-group-collapsed\";\n    var GROUP_EXPANDED_CLASS = \"jtk-group-expanded\";\n    var GROUP_CONTAINER_SELECTOR = \"[jtk-group-content]\";\n    var ELEMENT_DRAGGABLE_EVENT = \"elementDraggable\";\n    var STOP = \"stop\";\n    var REVERT = \"revert\";\n    var GROUP_MANAGER = \"_groupManager\";\n    var GROUP = \"_jsPlumbGroup\";\n    var GROUP_DRAG_SCOPE = \"_jsPlumbGroupDrag\";\n    var EVT_CHILD_ADDED = \"group:addMember\";\n    var EVT_CHILD_REMOVED = \"group:removeMember\";\n    var EVT_GROUP_ADDED = \"group:add\";\n    var EVT_GROUP_REMOVED = \"group:remove\";\n    var EVT_EXPAND = \"group:expand\";\n    var EVT_COLLAPSE = \"group:collapse\";\n    var EVT_GROUP_DRAG_STOP = \"groupDragStop\";\n    var EVT_CONNECTION_MOVED = \"connectionMoved\";\n    var EVT_INTERNAL_CONNECTION_DETACHED = \"internal.connectionDetached\";\n\n    var CMD_REMOVE_ALL = \"removeAll\";\n    var CMD_ORPHAN_ALL = \"orphanAll\";\n    var CMD_SHOW = \"show\";\n    var CMD_HIDE = \"hide\";\n\n    var GroupManager = function(_jsPlumb) {\n        var _managedGroups = {}, _connectionSourceMap = {}, _connectionTargetMap = {}, self = this;\n\n        _jsPlumb.bind(\"connection\", function(p) {\n            if (p.source[GROUP] != null && p.target[GROUP] != null && p.source[GROUP] === p.target[GROUP]) {\n                _connectionSourceMap[p.connection.id] = p.source[GROUP];\n                _connectionTargetMap[p.connection.id] = p.source[GROUP];\n            }\n            else {\n                if (p.source[GROUP] != null) {\n                    _ju.suggest(p.source[GROUP].connections.source, p.connection);\n                    _connectionSourceMap[p.connection.id] = p.source[GROUP];\n                }\n                if (p.target[GROUP] != null) {\n                    _ju.suggest(p.target[GROUP].connections.target, p.connection);\n                    _connectionTargetMap[p.connection.id] = p.target[GROUP];\n                }\n            }\n        });\n\n        function _cleanupDetachedConnection(conn) {\n            delete conn.proxies;\n            var group = _connectionSourceMap[conn.id], f;\n            if (group != null) {\n                f = function(c) { return c.id === conn.id; };\n                _ju.removeWithFunction(group.connections.source, f);\n                _ju.removeWithFunction(group.connections.target, f);\n                delete _connectionSourceMap[conn.id];\n            }\n\n            group = _connectionTargetMap[conn.id];\n            if (group != null) {\n                f = function(c) { return c.id === conn.id; };\n                _ju.removeWithFunction(group.connections.source, f);\n                _ju.removeWithFunction(group.connections.target, f);\n                delete _connectionTargetMap[conn.id];\n            }\n        }\n\n        _jsPlumb.bind(EVT_INTERNAL_CONNECTION_DETACHED, function(p) {\n            _cleanupDetachedConnection(p.connection);\n        });\n\n        _jsPlumb.bind(EVT_CONNECTION_MOVED, function(p) {\n            var connMap = p.index === 0 ? _connectionSourceMap : _connectionTargetMap;\n            var group = connMap[p.connection.id];\n            if (group) {\n                var list = group.connections[p.index === 0 ? \"source\" : \"target\"];\n                var idx = list.indexOf(p.connection);\n                if (idx !== -1) {\n                    list.splice(idx, 1);\n                }\n            }\n        });\n\n        this.addGroup = function(group) {\n            _jsPlumb.addClass(group.getEl(), GROUP_EXPANDED_CLASS);\n            _managedGroups[group.id] = group;\n            group.manager = this;\n            _updateConnectionsForGroup(group);\n            _jsPlumb.fire(EVT_GROUP_ADDED, { group:group });\n        };\n\n        this.addToGroup = function(group, el, doNotFireEvent) {\n            group = this.getGroup(group);\n            if (group) {\n                //group.add(el, doNotFireEvent);\n                var groupEl = group.getEl();\n\n                if (el._isJsPlumbGroup) {\n                    return;\n                }\n                var currentGroup = el._jsPlumbGroup;\n                // if already a member of this group, do nothing\n                if (currentGroup !== group) {\n                    var elpos = _jsPlumb.getOffset(el, true);\n                    var cpos = group.collapsed ? _jsPlumb.getOffset(groupEl, true) : _jsPlumb.getOffset(group.getDragArea(), true);\n\n                    // otherwise, transfer to this group.\n                    if (currentGroup != null) {\n                        currentGroup.remove(el, false, doNotFireEvent, false, group);\n                        self.updateConnectionsForGroup(currentGroup);\n                    }\n                    group.add(el, doNotFireEvent, currentGroup);\n\n                    var handleDroppedConnections = function (list, index) {\n                        var oidx = index === 0 ? 1 : 0;\n                        list.each(function (c) {\n                            c.setVisible(false);\n                            if (c.endpoints[oidx].element._jsPlumbGroup === group) {\n                                c.endpoints[oidx].setVisible(false);\n                                self.expandConnection(c, oidx, group);\n                            }\n                            else {\n                                c.endpoints[index].setVisible(false);\n                                self.collapseConnection(c, index, group);\n                            }\n                        });\n                    };\n\n                    if (group.collapsed) {\n                        handleDroppedConnections(_jsPlumb.select({source: el}), 0);\n                        handleDroppedConnections(_jsPlumb.select({target: el}), 1);\n                    }\n\n                    var elId = _jsPlumb.getId(el);\n                    _jsPlumb.dragManager.setParent(el, elId, groupEl, _jsPlumb.getId(groupEl), elpos);\n\n                    var newPosition = { left: elpos.left - cpos.left, top: elpos.top - cpos.top };\n\n                    _jsPlumb.setPosition(el, newPosition);\n\n                    _jsPlumb.dragManager.revalidateParent(el, elId, elpos);\n\n                    self.updateConnectionsForGroup(group);\n\n                    _jsPlumb.revalidate(elId);\n\n                    setTimeout(function () {\n                        _jsPlumb.fire(EVT_CHILD_ADDED, {group: group, el: el});\n                    }, 0);\n                }\n            }\n        };\n\n        this.removeFromGroup = function(group, el, doNotFireEvent) {\n            group = this.getGroup(group);\n            if (group) {\n                group.remove(el, null, doNotFireEvent);\n            }\n        };\n\n        this.getGroup = function(groupId) {\n            var group = groupId;\n            if (_ju.isString(groupId)) {\n                group = _managedGroups[groupId];\n                if (group == null) {\n                    throw new TypeError(\"No such group [\" + groupId + \"]\");\n                }\n            }\n            return group;\n        };\n\n        this.getGroups = function() {\n            var o = [];\n            for (var g in _managedGroups) {\n                o.push(_managedGroups[g]);\n            }\n            return o;\n        };\n\n        this.removeGroup = function(group, deleteMembers, manipulateDOM, doNotFireEvent) {\n            group = this.getGroup(group);\n            this.expandGroup(group, true); // this reinstates any original connections and removes all proxies, but does not fire an event.\n            group[deleteMembers ? CMD_REMOVE_ALL : CMD_ORPHAN_ALL](manipulateDOM, doNotFireEvent);\n            _jsPlumb.remove(group.getEl());\n            delete _managedGroups[group.id];\n            delete _jsPlumb._groups[group.id];\n            _jsPlumb.fire(EVT_GROUP_REMOVED, { group:group });\n        };\n\n        this.removeAllGroups = function(deleteMembers, manipulateDOM, doNotFireEvent) {\n            for (var g in _managedGroups) {\n                this.removeGroup(_managedGroups[g], deleteMembers, manipulateDOM, doNotFireEvent);\n            }\n        };\n\n        function _setVisible(group, state) {\n            var m = group.getMembers();\n            for (var i = 0; i < m.length; i++) {\n                _jsPlumb[state ? CMD_SHOW : CMD_HIDE](m[i], true);\n            }\n        }\n\n        var _collapseConnection = this.collapseConnection = function(c, index, group) {\n\n            var proxyEp, groupEl = group.getEl(), groupElId = _jsPlumb.getId(groupEl),\n                originalElementId = c.endpoints[index].elementId;\n\n            var otherEl = c.endpoints[index === 0 ? 1 : 0].element;\n            if (otherEl[GROUP] && (!otherEl[GROUP].shouldProxy() && otherEl[GROUP].collapsed)) {\n                return;\n            }\n\n            c.proxies = c.proxies || [];\n            if(c.proxies[index]) {\n                proxyEp = c.proxies[index].ep;\n            }else {\n                proxyEp = _jsPlumb.addEndpoint(groupEl, {\n                    endpoint:group.getEndpoint(c, index),\n                    anchor:group.getAnchor(c, index),\n                    parameters:{\n                        isProxyEndpoint:true\n                    }\n                });\n            }\n            proxyEp.setDeleteOnEmpty(true);\n\n            // for this index, stash proxy info: the new EP, the original EP.\n            c.proxies[index] = { ep:proxyEp, originalEp: c.endpoints[index] };\n\n            // and advise the anchor manager\n            if (index === 0) {\n                // TODO why are there two differently named methods? Why is there not one method that says \"some end of this\n                // connection changed (you give the index), and here's the new element and element id.\"\n                _jsPlumb.anchorManager.sourceChanged(originalElementId, groupElId, c, groupEl);\n            }\n            else {\n                _jsPlumb.anchorManager.updateOtherEndpoint(c.endpoints[0].elementId, originalElementId, groupElId, c);\n                c.target = groupEl;\n                c.targetId = groupElId;\n            }\n\n\n            // detach the original EP from the connection.\n            c.proxies[index].originalEp.detachFromConnection(c, null, true);\n\n            // set the proxy as the new ep\n            proxyEp.connections = [ c ];\n            c.endpoints[index] = proxyEp;\n\n            c.setVisible(true);\n        };\n\n        this.collapseGroup = function(group) {\n            group = this.getGroup(group);\n            if (group == null || group.collapsed) {\n                return;\n            }\n            var groupEl = group.getEl();\n\n            // todo remove old proxy endpoints first, just in case?\n            //group.proxies.length = 0;\n\n            // hide all connections\n            _setVisible(group, false);\n\n            if (group.shouldProxy()) {\n                // collapses all connections in a group.\n                var _collapseSet = function (conns, index) {\n                    for (var i = 0; i < conns.length; i++) {\n                        var c = conns[i];\n                        _collapseConnection(c, index, group);\n                    }\n                };\n\n                // setup proxies for sources and targets\n                _collapseSet(group.connections.source, 0);\n                _collapseSet(group.connections.target, 1);\n            }\n\n            group.collapsed = true;\n            _jsPlumb.removeClass(groupEl, GROUP_EXPANDED_CLASS);\n            _jsPlumb.addClass(groupEl, GROUP_COLLAPSED_CLASS);\n            _jsPlumb.revalidate(groupEl);\n            _jsPlumb.fire(EVT_COLLAPSE, { group:group  });\n        };\n\n        var _expandConnection = this.expandConnection = function(c, index, group) {\n\n            // if no proxies or none for this end of the connection, abort.\n            if (c.proxies == null || c.proxies[index] == null) {\n                return;\n            }\n\n            var groupElId = _jsPlumb.getId(group.getEl()),\n                originalElement = c.proxies[index].originalEp.element,\n                originalElementId = c.proxies[index].originalEp.elementId;\n\n            c.endpoints[index] = c.proxies[index].originalEp;\n            // and advise the anchor manager\n            if (index === 0) {\n                // TODO why are there two differently named methods? Why is there not one method that says \"some end of this\n                // connection changed (you give the index), and here's the new element and element id.\"\n                _jsPlumb.anchorManager.sourceChanged(groupElId, originalElementId, c, originalElement);\n            }\n            else {\n                _jsPlumb.anchorManager.updateOtherEndpoint(c.endpoints[0].elementId, groupElId, originalElementId, c);\n                c.target = originalElement;\n                c.targetId = originalElementId;\n            }\n\n            // detach the proxy EP from the connection (which will cause it to be removed as we no longer need it)\n            c.proxies[index].ep.detachFromConnection(c, null);\n\n            c.proxies[index].originalEp.addConnection(c);\n\n            // cleanup\n            delete c.proxies[index];\n        };\n\n        this.expandGroup = function(group, doNotFireEvent) {\n\n            group = this.getGroup(group);\n\n            if (group == null || !group.collapsed) {\n                return;\n            }\n            var groupEl = group.getEl();\n\n            _setVisible(group, true);\n\n            if (group.shouldProxy()) {\n                // collapses all connections in a group.\n                var _expandSet = function (conns, index) {\n                    for (var i = 0; i < conns.length; i++) {\n                        var c = conns[i];\n                        _expandConnection(c, index, group);\n                    }\n                };\n\n                // setup proxies for sources and targets\n                _expandSet(group.connections.source, 0);\n                _expandSet(group.connections.target, 1);\n            }\n\n            group.collapsed = false;\n            _jsPlumb.addClass(groupEl, GROUP_EXPANDED_CLASS);\n            _jsPlumb.removeClass(groupEl, GROUP_COLLAPSED_CLASS);\n            _jsPlumb.revalidate(groupEl);\n            this.repaintGroup(group);\n            if (!doNotFireEvent) {\n                _jsPlumb.fire(EVT_EXPAND, { group: group});\n            }\n        };\n\n        this.repaintGroup = function(group) {\n            group = this.getGroup(group);\n            var m = group.getMembers();\n            for (var i = 0; i < m.length; i++) {\n                _jsPlumb.revalidate(m[i]);\n            }\n        };\n\n        // TODO refactor this with the code that responds to `connection` events.\n        function _updateConnectionsForGroup(group) {\n            var members = group.getMembers();\n            var c1 = _jsPlumb.getConnections({source:members, scope:\"*\"}, true);\n            var c2 = _jsPlumb.getConnections({target:members, scope:\"*\"}, true);\n            var processed = {};\n            group.connections.source.length = 0;\n            group.connections.target.length = 0;\n            var oneSet = function(c) {\n                for (var i = 0; i < c.length; i++) {\n                    if (processed[c[i].id]) {\n                        continue;\n                    }\n                    processed[c[i].id] = true;\n                    if (c[i].source._jsPlumbGroup === group) {\n                        if (c[i].target._jsPlumbGroup !== group) {\n                            group.connections.source.push(c[i]);\n                        }\n                        _connectionSourceMap[c[i].id] = group;\n                    }\n                    else if (c[i].target._jsPlumbGroup === group) {\n                        group.connections.target.push(c[i]);\n                        _connectionTargetMap[c[i].id] = group;\n                    }\n                }\n            };\n            oneSet(c1); oneSet(c2);\n        }\n\n        this.updateConnectionsForGroup = _updateConnectionsForGroup;\n        this.refreshAllGroups = function() {\n            for (var g in _managedGroups) {\n                _updateConnectionsForGroup(_managedGroups[g]);\n                _jsPlumb.dragManager.updateOffsets(_jsPlumb.getId(_managedGroups[g].getEl()));\n            }\n        };\n    };\n\n    /**\n     *\n     * @param {jsPlumbInstance} _jsPlumb Associated jsPlumb instance.\n     * @param {Object} params\n     * @param {Element} params.el The DOM element representing the Group.\n     * @param {String} [params.id] Optional ID for the Group. A UUID will be assigned as the Group's ID if you do not provide one.\n     * @param {Boolean} [params.constrain=false] If true, child elements will not be able to be dragged outside of the Group container.\n     * @param {Boolean} [params.revert=true] By default, child elements revert to the container if dragged outside. You can change this by setting `revert:false`. This behaviour is also overridden if you set `orphan` or `prune`.\n     * @param {Boolean} [params.orphan=false] If true, child elements dropped outside of the Group container will be removed from the Group (but not from the DOM).\n     * @param {Boolean} [params.prune=false] If true, child elements dropped outside of the Group container will be removed from the Group and also from the DOM.\n     * @param {Boolean} [params.dropOverride=false] If true, a child element that has been dropped onto some other Group will not be subject to the controls imposed by `prune`, `revert` or `orphan`.\n     * @constructor\n     */\n    var Group = function(_jsPlumb, params) {\n        var self = this;\n        var el = params.el;\n        this.getEl = function() { return el; };\n        this.id = params.id || _ju.uuid();\n        el._isJsPlumbGroup = true;\n\n        var getDragArea = this.getDragArea = function() {\n            var da = _jsPlumb.getSelector(el, GROUP_CONTAINER_SELECTOR);\n            return da && da.length > 0 ? da[0] : el;\n        };\n\n        var ghost = params.ghost === true;\n        var constrain = ghost || (params.constrain === true);\n        var revert = params.revert !== false;\n        var orphan = params.orphan === true;\n        var prune = params.prune === true;\n        var dropOverride = params.dropOverride === true;\n        var proxied = params.proxied !== false;\n        var elements = [];\n        this.connections = { source:[], target:[], internal:[] };\n\n        // this function, and getEndpoint below, are stubs for a future setup in which we can choose endpoint\n        // and anchor based upon the connection and the index (source/target) of the endpoint to be proxied.\n        this.getAnchor = function(conn, endpointIndex) {\n            return params.anchor || \"Continuous\";\n        };\n\n        this.getEndpoint = function(conn, endpointIndex) {\n            return params.endpoint || [ \"Dot\", { radius:10 }];\n        };\n\n        this.collapsed = false;\n        if (params.draggable !== false) {\n            var opts = {\n                stop:function(params) {\n                    _jsPlumb.fire(EVT_GROUP_DRAG_STOP, jsPlumb.extend(params, {group:self}));\n                },\n                scope:GROUP_DRAG_SCOPE\n            };\n            if (params.dragOptions) {\n                root.jsPlumb.extend(opts, params.dragOptions);\n            }\n            _jsPlumb.draggable(params.el, opts);\n        }\n        if (params.droppable !== false) {\n            _jsPlumb.droppable(params.el, {\n                drop:function(p) {\n                    var el = p.drag.el;\n                    if (el._isJsPlumbGroup) {\n                        return;\n                    }\n                    var currentGroup = el._jsPlumbGroup;\n                    if (currentGroup !== self) {\n                        if (currentGroup != null) {\n                            if (currentGroup.overrideDrop(el, self)) {\n                                return;\n                            }\n                        }\n                        _jsPlumb.getGroupManager().addToGroup(self, el, false);\n                    }\n\n                }\n            });\n        }\n        var _each = function(_el, fn) {\n            var els = _el.nodeType == null ?  _el : [ _el ];\n            for (var i = 0; i < els.length; i++) {\n                fn(els[i]);\n            }\n        };\n\n        this.overrideDrop = function(_el, targetGroup) {\n            return dropOverride && (revert || prune || orphan);\n        };\n\n        this.add = function(_el, doNotFireEvent, sourceGroup) {\n            var dragArea = getDragArea();\n            _each(_el, function(__el) {\n\n                if (__el._jsPlumbGroup != null) {\n                    if (__el._jsPlumbGroup === self) {\n                        return;\n                    } else {\n                        __el._jsPlumbGroup.remove(__el, true, doNotFireEvent, false);\n                    }\n                }\n\n                __el._jsPlumbGroup = self;\n                elements.push(__el);\n                // test if draggable and add handlers if so.\n                if (_jsPlumb.isAlreadyDraggable(__el)) {\n                    _bindDragHandlers(__el);\n                }\n\n                if (__el.parentNode !== dragArea) {\n                    dragArea.appendChild(__el);\n                }\n\n                if (!doNotFireEvent) {\n                    var p = {group: self, el: __el};\n                    if (sourceGroup) {\n                        p.sourceGroup = sourceGroup;\n                    }\n                    _jsPlumb.fire(EVT_CHILD_ADDED, p);\n                }\n            });\n\n            _jsPlumb.getGroupManager().updateConnectionsForGroup(self);\n        };\n\n        this.remove = function(el, manipulateDOM, doNotFireEvent, doNotUpdateConnections, targetGroup) {\n\n            _each(el, function(__el) {\n                delete __el._jsPlumbGroup;\n                _ju.removeWithFunction(elements, function(e) {\n                    return e === __el;\n                });\n\n                if (manipulateDOM) {\n                    try { self.getDragArea().removeChild(__el); }\n                    catch (e) {\n                        jsPlumbUtil.log(\"Could not remove element from Group \" + e);\n                    }\n                }\n                _unbindDragHandlers(__el);\n                if (!doNotFireEvent) {\n                    var p = {group: self, el: __el};\n                    if (targetGroup) {\n                        p.targetGroup = targetGroup;\n                    }\n                    _jsPlumb.fire(EVT_CHILD_REMOVED, p);\n                }\n            });\n            if (!doNotUpdateConnections) {\n                _jsPlumb.getGroupManager().updateConnectionsForGroup(self);\n            }\n        };\n        this.removeAll = function(manipulateDOM, doNotFireEvent) {\n            for (var i = 0, l = elements.length; i < l; i++) {\n                self.remove(elements[0], manipulateDOM, doNotFireEvent, true);\n            }\n            elements.length = 0;\n            _jsPlumb.getGroupManager().updateConnectionsForGroup(self);\n        };\n        this.orphanAll = function() {\n            for (var i = 0; i < elements.length; i++) {\n                _orphan(elements[i]);\n            }\n            elements.length = 0;\n        };\n        this.getMembers = function() { return elements; };\n\n        el[GROUP] = this;\n\n        _jsPlumb.bind(ELEMENT_DRAGGABLE_EVENT, function(dragParams) {\n            // if its for the current group,\n            if (dragParams.el._jsPlumbGroup === this) {\n                _bindDragHandlers(dragParams.el);\n            }\n        }.bind(this));\n\n        function _findParent(_el) {\n            return _el.offsetParent;\n        }\n\n        function _isInsideParent(_el, pos) {\n            var p = _findParent(_el),\n                s = _jsPlumb.getSize(p),\n                ss = _jsPlumb.getSize(_el),\n                leftEdge = pos[0],\n                rightEdge = leftEdge + ss[0],\n                topEdge = pos[1],\n                bottomEdge = topEdge + ss[1];\n\n            return rightEdge > 0 && leftEdge < s[0] && bottomEdge > 0 && topEdge < s[1];\n        }\n\n        //\n        // orphaning an element means taking it out of the group and adding it to the main jsplumb container.\n        //\n        function _orphan(_el) {\n            var id = _jsPlumb.getId(_el);\n            var pos = _jsPlumb.getOffset(_el);\n            _el.parentNode.removeChild(_el);\n            _jsPlumb.getContainer().appendChild(_el);\n            _jsPlumb.setPosition(_el, pos);\n            delete _el._jsPlumbGroup;\n            _unbindDragHandlers(_el);\n            _jsPlumb.dragManager.clearParent(_el, id);\n        }\n\n        //\n        // remove an element from the group, then either prune it from the jsplumb instance, or just orphan it.\n        //\n        function _pruneOrOrphan(p) {\n            if (!_isInsideParent(p.el, p.pos)) {\n                var group = p.el._jsPlumbGroup;\n                if (prune) {\n                    _jsPlumb.remove(p.el);\n                } else {\n                    _orphan(p.el);\n                }\n\n                group.remove(p.el);\n            }\n        }\n\n        //\n        // redraws the element\n        //\n        function _revalidate(_el) {\n            var id = _jsPlumb.getId(_el);\n            _jsPlumb.revalidate(_el);\n            _jsPlumb.dragManager.revalidateParent(_el, id);\n        }\n\n        //\n        // unbind the group specific drag/revert handlers.\n        //\n        function _unbindDragHandlers(_el) {\n            if (!_el._katavorioDrag) {\n                return;\n            }\n            if (prune || orphan) {\n                _el._katavorioDrag.off(STOP, _pruneOrOrphan);\n            }\n            if (!prune && !orphan && revert) {\n                _el._katavorioDrag.off(REVERT, _revalidate);\n                _el._katavorioDrag.setRevert(null);\n            }\n        }\n\n        function _bindDragHandlers(_el) {\n            if (!_el._katavorioDrag) {\n                return;\n            }\n            if (prune || orphan) {\n                _el._katavorioDrag.on(STOP, _pruneOrOrphan);\n            }\n\n            if (constrain) {\n                _el._katavorioDrag.setConstrain(true);\n            }\n\n            if (ghost) {\n                _el._katavorioDrag.setUseGhostProxy(true);\n            }\n\n            if (!prune && !orphan && revert) {\n                _el._katavorioDrag.on(REVERT, _revalidate);\n                _el._katavorioDrag.setRevert(function(__el, pos) {\n                    return !_isInsideParent(__el, pos);\n                });\n            }\n        }\n\n        this.shouldProxy = function() {\n            return proxied;\n        };\n\n        _jsPlumb.getGroupManager().addGroup(this);\n    };\n\n    /**\n     * Adds a group to the jsPlumb instance.\n     * @method addGroup\n     * @param {Object} params\n     * @return {Group} The newly created Group.\n     */\n    _jpi.prototype.addGroup = function(params) {\n        var j = this;\n        j._groups = j._groups || {};\n        if (j._groups[params.id] != null) {\n            throw new TypeError(\"cannot create Group [\" + params.id + \"]; a Group with that ID exists\");\n        }\n        if (params.el[GROUP] != null) {\n            throw new TypeError(\"cannot create Group [\" + params.id + \"]; the given element is already a Group\");\n        }\n        var group = new Group(j, params);\n        j._groups[group.id] = group;\n        if (params.collapsed) {\n            this.collapseGroup(group);\n        }\n        return group;\n    };\n\n    /**\n     * Add an element to a group.\n     * @method addToGroup\n     * @param {String} group Group, or ID of the group, to add the element to.\n     * @param {Element} el Element to add to the group.\n     */\n    _jpi.prototype.addToGroup = function(group, el, doNotFireEvent) {\n\n        var _one = function(_el) {\n            var id = this.getId(_el);\n            this.manage(id, _el);\n            this.getGroupManager().addToGroup(group, _el, doNotFireEvent);\n        }.bind(this);\n\n        if (Array.isArray(el)) {\n            for (var i = 0; i < el.length; i++) {\n                _one(el[i]);\n            }\n        } else {\n            _one(el);\n        }\n    };\n\n    /**\n     * Remove an element from a group.\n     * @method removeFromGroup\n     * @param {String} group Group, or ID of the group, to remove the element from.\n     * @param {Element} el Element to add to the group.\n     */\n    _jpi.prototype.removeFromGroup = function(group, el, doNotFireEvent) {\n        this.getGroupManager().removeFromGroup(group, el, doNotFireEvent);\n    };\n\n    /**\n     * Remove a group, and optionally remove its members from the jsPlumb instance.\n     * @method removeGroup\n     * @param {String|Group} group Group to delete, or ID of Group to delete.\n     * @param {Boolean} [deleteMembers=false] If true, group members will be removed along with the group. Otherwise they will\n     * just be 'orphaned' (returned to the main container).\n     */\n    _jpi.prototype.removeGroup = function(group, deleteMembers, manipulateDOM, doNotFireEvent) {\n        this.getGroupManager().removeGroup(group, deleteMembers, manipulateDOM, doNotFireEvent);\n    };\n\n    /**\n     * Remove all groups, and optionally remove their members from the jsPlumb instance.\n     * @method removeAllGroup\n     * @param {Boolean} [deleteMembers=false] If true, group members will be removed along with the groups. Otherwise they will\n     * just be 'orphaned' (returned to the main container).\n     */\n    _jpi.prototype.removeAllGroups = function(deleteMembers, manipulateDOM, doNotFireEvent) {\n        this.getGroupManager().removeAllGroups(deleteMembers, manipulateDOM, doNotFireEvent);\n    };\n\n    /**\n     * Get a Group\n     * @method getGroup\n     * @param {String} groupId ID of the group to get\n     * @return {Group} Group with the given ID, null if not found.\n     */\n    _jpi.prototype.getGroup = function(groupId) {\n        return this.getGroupManager().getGroup(groupId);\n    };\n\n    /**\n     * Gets all the Groups managed by the jsPlumb instance.\n     * @returns {Group[]} List of Groups. Empty if none.\n     */\n    _jpi.prototype.getGroups = function() {\n        return this.getGroupManager().getGroups();\n    };\n\n    /**\n     * Expands a group element. jsPlumb doesn't do \"everything\" for you here, because what it means to expand a Group\n     * will vary from application to application. jsPlumb does these things:\n     *\n     * - Hides any connections that are internal to the group (connections between members, and connections from member of\n     * the group to the group itself)\n     * - Proxies all connections for which the source or target is a member of the group.\n     * - Hides the proxied connections.\n     * - Adds the jtk-group-expanded class to the group's element\n     * - Removes the jtk-group-collapsed class from the group's element.\n     *\n     * @method expandGroup\n     * @param {String|Group} group Group to expand, or ID of Group to expand.\n     */\n    _jpi.prototype.expandGroup = function(group) {\n        this.getGroupManager().expandGroup(group);\n    };\n\n    /**\n     * Collapses a group element. jsPlumb doesn't do \"everything\" for you here, because what it means to collapse a Group\n     * will vary from application to application. jsPlumb does these things:\n     *\n     * - Shows any connections that are internal to the group (connections between members, and connections from member of\n     * the group to the group itself)\n     * - Removes proxies for all connections for which the source or target is a member of the group.\n     * - Shows the previously proxied connections.\n     * - Adds the jtk-group-collapsed class to the group's element\n     * - Removes the jtk-group-expanded class from the group's element.\n     *\n     * @method expandGroup\n     * @param {String|Group} group Group to expand, or ID of Group to expand.\n     */\n    _jpi.prototype.collapseGroup = function(groupId) {\n        this.getGroupManager().collapseGroup(groupId);\n    };\n\n\n    _jpi.prototype.repaintGroup = function(group) {\n        this.getGroupManager().repaintGroup(group);\n    };\n\n    /**\n     * Collapses or expands a group element depending on its current state. See notes in the collapseGroup and expandGroup method.\n     *\n     * @method toggleGroup\n     * @param {String|Group} group Group to expand/collapse, or ID of Group to expand/collapse.\n     */\n    _jpi.prototype.toggleGroup = function(group) {\n        group = this.getGroupManager().getGroup(group);\n        if (group != null) {\n            this.getGroupManager()[group.collapsed ? \"expandGroup\" : \"collapseGroup\"](group);\n        }\n    };\n\n    //\n    // lazy init a group manager for the given jsplumb instance.\n    //\n    _jpi.prototype.getGroupManager = function() {\n        var mgr = this[GROUP_MANAGER];\n        if (mgr == null) {\n            mgr = this[GROUP_MANAGER] = new GroupManager(this);\n        }\n        return mgr;\n    };\n\n    _jpi.prototype.removeGroupManager = function() {\n        delete this[GROUP_MANAGER];\n    };\n\n    /**\n     * Gets the Group that the given element belongs to, null if none.\n     * @method getGroupFor\n     * @param {String|Element} el Element, or element ID.\n     * @returns {Group} A Group, if found, or null.\n     */\n    _jpi.prototype.getGroupFor = function(el) {\n        el = this.getElement(el);\n        if (el) {\n            return el[GROUP];\n        }\n    };\n\n}).call(typeof window !== 'undefined' ? window : this);\n\n\n/*\n * This file contains the 'flowchart' connectors, consisting of vertical and horizontal line segments.\n *\n * Copyright (c) 2010 - 2018 jsPlumb (hello@jsplumbtoolkit.com)\n *\n * https://jsplumbtoolkit.com\n * https://github.com/jsplumb/jsplumb\n *\n * Dual licensed under the MIT and GPL2 licenses.\n */\n;\n(function () {\n\n    \"use strict\";\n    var root = this, _jp = root.jsPlumb, _ju = root.jsPlumbUtil;\n    var STRAIGHT = \"Straight\";\n    var ARC = \"Arc\";\n\n    var Flowchart = function (params) {\n        this.type = \"Flowchart\";\n        params = params || {};\n        params.stub = params.stub == null ? 30 : params.stub;\n        var segments,\n            _super = _jp.Connectors.AbstractConnector.apply(this, arguments),\n            midpoint = params.midpoint == null ? 0.5 : params.midpoint,\n            alwaysRespectStubs = params.alwaysRespectStubs === true,\n            lastx = null, lasty = null, lastOrientation,\n            cornerRadius = params.cornerRadius != null ? params.cornerRadius : 0,\n\n            // TODO now common between this and AbstractBezierEditor; refactor into superclass?\n            loopbackRadius = params.loopbackRadius || 25,\n            isLoopbackCurrently = false,\n\n            sgn = function (n) {\n                return n < 0 ? -1 : n === 0 ? 0 : 1;\n            },\n            segmentDirections = function(segment) {\n            return [\n                    sgn( segment[2] - segment[0] ),\n                    sgn( segment[3] - segment[1] )\n                ];\n            },\n            /**\n             * helper method to add a segment.\n             */\n            addSegment = function (segments, x, y, paintInfo) {\n                if (lastx === x && lasty === y) {\n                    return;\n                }\n                var lx = lastx == null ? paintInfo.sx : lastx,\n                    ly = lasty == null ? paintInfo.sy : lasty,\n                    o = lx === x ? \"v\" : \"h\";\n\n                lastx = x;\n                lasty = y;\n                segments.push([ lx, ly, x, y, o ]);\n            },\n            segLength = function (s) {\n                return Math.sqrt(Math.pow(s[0] - s[2], 2) + Math.pow(s[1] - s[3], 2));\n            },\n            _cloneArray = function (a) {\n                var _a = [];\n                _a.push.apply(_a, a);\n                return _a;\n            },\n            writeSegments = function (conn, segments, paintInfo) {\n                var current = null, next, currentDirection, nextDirection;\n                for (var i = 0; i < segments.length - 1; i++) {\n\n                    current = current || _cloneArray(segments[i]);\n                    next = _cloneArray(segments[i + 1]);\n\n                    currentDirection = segmentDirections(current);\n                    nextDirection = segmentDirections(next);\n\n                    if (cornerRadius > 0 && current[4] !== next[4]) {\n\n                        var minSegLength = Math.min(segLength(current), segLength(next));\n                        var radiusToUse = Math.min(cornerRadius, minSegLength / 2);\n\n                        current[2] -= currentDirection[0] * radiusToUse;\n                        current[3] -= currentDirection[1] * radiusToUse;\n                        next[0] += nextDirection[0] * radiusToUse;\n                        next[1] += nextDirection[1] * radiusToUse;\n\n                        var ac = (currentDirection[1] === nextDirection[0] && nextDirection[0] === 1) ||\n                                ((currentDirection[1] === nextDirection[0] && nextDirection[0] === 0) && currentDirection[0] !== nextDirection[1]) ||\n                                (currentDirection[1] === nextDirection[0] && nextDirection[0] === -1),\n                                sgny = next[1] > current[3] ? 1 : -1,\n                                sgnx = next[0] > current[2] ? 1 : -1,\n                                sgnEqual = sgny === sgnx,\n                                cx = (sgnEqual && ac || (!sgnEqual && !ac)) ? next[0] : current[2],\n                                cy = (sgnEqual && ac || (!sgnEqual && !ac)) ? current[3] : next[1];\n\n                        _super.addSegment(conn, STRAIGHT, {\n                            x1: current[0], y1: current[1], x2: current[2], y2: current[3]\n                        });\n\n                        _super.addSegment(conn, ARC, {\n                            r: radiusToUse,\n                            x1: current[2],\n                            y1: current[3],\n                            x2: next[0],\n                            y2: next[1],\n                            cx: cx,\n                            cy: cy,\n                            ac: ac\n                        });\n                    }\n                    else {\n                        // dx + dy are used to adjust for line width.\n                        var dx = (current[2] === current[0]) ? 0 : (current[2] > current[0]) ? (paintInfo.lw / 2) : -(paintInfo.lw / 2),\n                            dy = (current[3] === current[1]) ? 0 : (current[3] > current[1]) ? (paintInfo.lw / 2) : -(paintInfo.lw / 2);\n\n                        _super.addSegment(conn, STRAIGHT, {\n                            x1: current[0] - dx, y1: current[1] - dy, x2: current[2] + dx, y2: current[3] + dy\n                        });\n                    }\n                    current = next;\n                }\n                if (next != null) {\n                    // last segment\n                    _super.addSegment(conn, STRAIGHT, {\n                        x1: next[0], y1: next[1], x2: next[2], y2: next[3]\n                    });\n                }\n            };\n\n        this._compute = function (paintInfo, params) {\n\n            segments = [];\n            lastx = null;\n            lasty = null;\n            lastOrientation = null;\n\n            var commonStubCalculator = function () {\n                    return [paintInfo.startStubX, paintInfo.startStubY, paintInfo.endStubX, paintInfo.endStubY];\n                },\n                stubCalculators = {\n                    perpendicular: commonStubCalculator,\n                    orthogonal: commonStubCalculator,\n                    opposite: function (axis) {\n                        var pi = paintInfo,\n                            idx = axis === \"x\" ? 0 : 1,\n                            areInProximity = {\n                                \"x\": function () {\n                                    return ( (pi.so[idx] === 1 && (\n                                        ( (pi.startStubX > pi.endStubX) && (pi.tx > pi.startStubX) ) ||\n                                        ( (pi.sx > pi.endStubX) && (pi.tx > pi.sx))))) ||\n\n                                        ( (pi.so[idx] === -1 && (\n                                        ( (pi.startStubX < pi.endStubX) && (pi.tx < pi.startStubX) ) ||\n                                        ( (pi.sx < pi.endStubX) && (pi.tx < pi.sx)))));\n                                },\n                                \"y\": function () {\n                                    return ( (pi.so[idx] === 1 && (\n                                        ( (pi.startStubY > pi.endStubY) && (pi.ty > pi.startStubY) ) ||\n                                        ( (pi.sy > pi.endStubY) && (pi.ty > pi.sy))))) ||\n\n                                        ( (pi.so[idx] === -1 && (\n                                        ( (pi.startStubY < pi.endStubY) && (pi.ty < pi.startStubY) ) ||\n                                        ( (pi.sy < pi.endStubY) && (pi.ty < pi.sy)))));\n                                }\n                            };\n\n                        if (!alwaysRespectStubs && areInProximity[axis]()) {\n                            return {\n                                \"x\": [(paintInfo.sx + paintInfo.tx) / 2, paintInfo.startStubY, (paintInfo.sx + paintInfo.tx) / 2, paintInfo.endStubY],\n                                \"y\": [paintInfo.startStubX, (paintInfo.sy + paintInfo.ty) / 2, paintInfo.endStubX, (paintInfo.sy + paintInfo.ty) / 2]\n                            }[axis];\n                        }\n                        else {\n                            return [paintInfo.startStubX, paintInfo.startStubY, paintInfo.endStubX, paintInfo.endStubY];\n                        }\n                    }\n                };\n\n            // calculate Stubs.\n            var stubs = stubCalculators[paintInfo.anchorOrientation](paintInfo.sourceAxis),\n                idx = paintInfo.sourceAxis === \"x\" ? 0 : 1,\n                oidx = paintInfo.sourceAxis === \"x\" ? 1 : 0,\n                ss = stubs[idx],\n                oss = stubs[oidx],\n                es = stubs[idx + 2],\n                oes = stubs[oidx + 2];\n\n            // add the start stub segment. use stubs for loopback as it will look better, with the loop spaced\n            // away from the element.\n            addSegment(segments, stubs[0], stubs[1], paintInfo);\n\n            // if its a loopback and we should treat it differently.\n            // if (false && params.sourcePos[0] === params.targetPos[0] && params.sourcePos[1] === params.targetPos[1]) {\n            //\n            //     // we use loopbackRadius here, as statemachine connectors do.\n            //     // so we go radius to the left from stubs[0], then upwards by 2*radius, to the right by 2*radius,\n            //     // down by 2*radius, left by radius.\n            //     addSegment(segments, stubs[0] - loopbackRadius, stubs[1], paintInfo);\n            //     addSegment(segments, stubs[0] - loopbackRadius, stubs[1] - (2 * loopbackRadius), paintInfo);\n            //     addSegment(segments, stubs[0] + loopbackRadius, stubs[1] - (2 * loopbackRadius), paintInfo);\n            //     addSegment(segments, stubs[0] + loopbackRadius, stubs[1], paintInfo);\n            //     addSegment(segments, stubs[0], stubs[1], paintInfo);\n            //\n            // }\n            // else {\n\n\n                var midx = paintInfo.startStubX + ((paintInfo.endStubX - paintInfo.startStubX) * midpoint),\n                    midy = paintInfo.startStubY + ((paintInfo.endStubY - paintInfo.startStubY) * midpoint);\n\n                var orientations = {x: [0, 1], y: [1, 0]},\n                    lineCalculators = {\n                        perpendicular: function (axis) {\n                            var pi = paintInfo,\n                                sis = {\n                                    x: [\n                                        [[1, 2, 3, 4], null, [2, 1, 4, 3]],\n                                        null,\n                                        [[4, 3, 2, 1], null, [3, 4, 1, 2]]\n                                    ],\n                                    y: [\n                                        [[3, 2, 1, 4], null, [2, 3, 4, 1]],\n                                        null,\n                                        [[4, 1, 2, 3], null, [1, 4, 3, 2]]\n                                    ]\n                                },\n                                stubs = {\n                                    x: [[pi.startStubX, pi.endStubX], null, [pi.endStubX, pi.startStubX]],\n                                    y: [[pi.startStubY, pi.endStubY], null, [pi.endStubY, pi.startStubY]]\n                                },\n                                midLines = {\n                                    x: [[midx, pi.startStubY], [midx, pi.endStubY]],\n                                    y: [[pi.startStubX, midy], [pi.endStubX, midy]]\n                                },\n                                linesToEnd = {\n                                    x: [[pi.endStubX, pi.startStubY]],\n                                    y: [[pi.startStubX, pi.endStubY]]\n                                },\n                                startToEnd = {\n                                    x: [[pi.startStubX, pi.endStubY], [pi.endStubX, pi.endStubY]],\n                                    y: [[pi.endStubX, pi.startStubY], [pi.endStubX, pi.endStubY]]\n                                },\n                                startToMidToEnd = {\n                                    x: [[pi.startStubX, midy], [pi.endStubX, midy], [pi.endStubX, pi.endStubY]],\n                                    y: [[midx, pi.startStubY], [midx, pi.endStubY], [pi.endStubX, pi.endStubY]]\n                                },\n                                otherStubs = {\n                                    x: [pi.startStubY, pi.endStubY],\n                                    y: [pi.startStubX, pi.endStubX]\n                                },\n                                soIdx = orientations[axis][0], toIdx = orientations[axis][1],\n                                _so = pi.so[soIdx] + 1,\n                                _to = pi.to[toIdx] + 1,\n                                otherFlipped = (pi.to[toIdx] === -1 && (otherStubs[axis][1] < otherStubs[axis][0])) || (pi.to[toIdx] === 1 && (otherStubs[axis][1] > otherStubs[axis][0])),\n                                stub1 = stubs[axis][_so][0],\n                                stub2 = stubs[axis][_so][1],\n                                segmentIndexes = sis[axis][_so][_to];\n\n                            if (pi.segment === segmentIndexes[3] || (pi.segment === segmentIndexes[2] && otherFlipped)) {\n                                return midLines[axis];\n                            }\n                            else if (pi.segment === segmentIndexes[2] && stub2 < stub1) {\n                                return linesToEnd[axis];\n                            }\n                            else if ((pi.segment === segmentIndexes[2] && stub2 >= stub1) || (pi.segment === segmentIndexes[1] && !otherFlipped)) {\n                                return startToMidToEnd[axis];\n                            }\n                            else if (pi.segment === segmentIndexes[0] || (pi.segment === segmentIndexes[1] && otherFlipped)) {\n                                return startToEnd[axis];\n                            }\n                        },\n                        orthogonal: function (axis, startStub, otherStartStub, endStub, otherEndStub) {\n                            var pi = paintInfo,\n                                extent = {\n                                    \"x\": pi.so[0] === -1 ? Math.min(startStub, endStub) : Math.max(startStub, endStub),\n                                    \"y\": pi.so[1] === -1 ? Math.min(startStub, endStub) : Math.max(startStub, endStub)\n                                }[axis];\n\n                            return {\n                                \"x\": [\n                                    [extent, otherStartStub],\n                                    [extent, otherEndStub],\n                                    [endStub, otherEndStub]\n                                ],\n                                \"y\": [\n                                    [otherStartStub, extent],\n                                    [otherEndStub, extent],\n                                    [otherEndStub, endStub]\n                                ]\n                            }[axis];\n                        },\n                        opposite: function (axis, ss, oss, es) {\n                            var pi = paintInfo,\n                                otherAxis = {\"x\": \"y\", \"y\": \"x\"}[axis],\n                                dim = {\"x\": \"height\", \"y\": \"width\"}[axis],\n                                comparator = pi[\"is\" + axis.toUpperCase() + \"GreaterThanStubTimes2\"];\n\n                            if (params.sourceEndpoint.elementId === params.targetEndpoint.elementId) {\n                                var _val = oss + ((1 - params.sourceEndpoint.anchor[otherAxis]) * params.sourceInfo[dim]) + _super.maxStub;\n                                return {\n                                    \"x\": [\n                                        [ss, _val],\n                                        [es, _val]\n                                    ],\n                                    \"y\": [\n                                        [_val, ss],\n                                        [_val, es]\n                                    ]\n                                }[axis];\n\n                            }\n                            else if (!comparator || (pi.so[idx] === 1 && ss > es) || (pi.so[idx] === -1 && ss < es)) {\n                                return {\n                                    \"x\": [\n                                        [ss, midy],\n                                        [es, midy]\n                                    ],\n                                    \"y\": [\n                                        [midx, ss],\n                                        [midx, es]\n                                    ]\n                                }[axis];\n                            }\n                            else if ((pi.so[idx] === 1 && ss < es) || (pi.so[idx] === -1 && ss > es)) {\n                                return {\n                                    \"x\": [\n                                        [midx, pi.sy],\n                                        [midx, pi.ty]\n                                    ],\n                                    \"y\": [\n                                        [pi.sx, midy],\n                                        [pi.tx, midy]\n                                    ]\n                                }[axis];\n                            }\n                        }\n                    };\n\n                // compute the rest of the line\n                var p = lineCalculators[paintInfo.anchorOrientation](paintInfo.sourceAxis, ss, oss, es, oes);\n                if (p) {\n                    for (var i = 0; i < p.length; i++) {\n                        addSegment(segments, p[i][0], p[i][1], paintInfo);\n                    }\n                }\n\n                // line to end stub\n                addSegment(segments, stubs[2], stubs[3], paintInfo);\n\n            //}\n\n            // end stub to end (common)\n            addSegment(segments, paintInfo.tx, paintInfo.ty, paintInfo);\n\n\n\n            // write out the segments.\n            writeSegments(this, segments, paintInfo);\n\n        };\n    };\n\n    _jp.Connectors.Flowchart = Flowchart;\n    _ju.extend(_jp.Connectors.Flowchart, _jp.Connectors.AbstractConnector);\n\n}).call(typeof window !== 'undefined' ? window : this);\n/*\n * This file contains the code for the Bezier connector type.\n *\n * Copyright (c) 2010 - 2018 jsPlumb (hello@jsplumbtoolkit.com)\n *\n * https://jsplumbtoolkit.com\n * https://github.com/jsplumb/jsplumb\n *\n * Dual licensed under the MIT and GPL2 licenses.\n */\n;\n(function () {\n\n    \"use strict\";\n    var root = this, _jp = root.jsPlumb, _ju = root.jsPlumbUtil;\n\n    _jp.Connectors.AbstractBezierConnector = function(params) {\n        params = params || {};\n        var showLoopback = params.showLoopback !== false,\n            curviness = params.curviness || 10,\n            margin = params.margin || 5,\n            proximityLimit = params.proximityLimit || 80,\n            clockwise = params.orientation && params.orientation === \"clockwise\",\n            loopbackRadius = params.loopbackRadius || 25,\n            isLoopbackCurrently = false,\n            _super;\n\n        this._compute = function (paintInfo, p) {\n\n            var sp = p.sourcePos,\n                tp = p.targetPos,\n                _w = Math.abs(sp[0] - tp[0]),\n                _h = Math.abs(sp[1] - tp[1]);\n\n            if (!showLoopback || (p.sourceEndpoint.elementId !== p.targetEndpoint.elementId)) {\n                isLoopbackCurrently = false;\n                this._computeBezier(paintInfo, p, sp, tp, _w, _h);\n            } else {\n                isLoopbackCurrently = true;\n                // a loopback connector.  draw an arc from one anchor to the other.\n                var x1 = p.sourcePos[0], y1 = p.sourcePos[1] - margin,\n                    cx = x1, cy = y1 - loopbackRadius,\n                // canvas sizing stuff, to ensure the whole painted area is visible.\n                    _x = cx - loopbackRadius,\n                    _y = cy - loopbackRadius;\n\n                _w = 2 * loopbackRadius;\n                _h = 2 * loopbackRadius;\n\n                paintInfo.points[0] = _x;\n                paintInfo.points[1] = _y;\n                paintInfo.points[2] = _w;\n                paintInfo.points[3] = _h;\n\n                // ADD AN ARC SEGMENT.\n                _super.addSegment(this, \"Arc\", {\n                    loopback: true,\n                    x1: (x1 - _x) + 4,\n                    y1: y1 - _y,\n                    startAngle: 0,\n                    endAngle: 2 * Math.PI,\n                    r: loopbackRadius,\n                    ac: !clockwise,\n                    x2: (x1 - _x) - 4,\n                    y2: y1 - _y,\n                    cx: cx - _x,\n                    cy: cy - _y\n                });\n            }\n        };\n\n        _super = _jp.Connectors.AbstractConnector.apply(this, arguments);\n        return _super;\n    };\n    _ju.extend(_jp.Connectors.AbstractBezierConnector, _jp.Connectors.AbstractConnector);\n\n    var Bezier = function (params) {\n        params = params || {};\n        this.type = \"Bezier\";\n\n        var _super = _jp.Connectors.AbstractBezierConnector.apply(this, arguments),\n            majorAnchor = params.curviness || 150,\n            minorAnchor = 10;\n\n        this.getCurviness = function () {\n            return majorAnchor;\n        };\n\n        this._findControlPoint = function (point, sourceAnchorPosition, targetAnchorPosition, sourceEndpoint, targetEndpoint, soo, too) {\n            // determine if the two anchors are perpendicular to each other in their orientation.  we swap the control\n            // points around if so (code could be tightened up)\n            var perpendicular = soo[0] !== too[0] || soo[1] === too[1],\n                p = [];\n\n            if (!perpendicular) {\n                if (soo[0] === 0) {\n                    p.push(sourceAnchorPosition[0] < targetAnchorPosition[0] ? point[0] + minorAnchor : point[0] - minorAnchor);\n                }\n                else {\n                    p.push(point[0] - (majorAnchor * soo[0]));\n                }\n\n                if (soo[1] === 0) {\n                    p.push(sourceAnchorPosition[1] < targetAnchorPosition[1] ? point[1] + minorAnchor : point[1] - minorAnchor);\n                }\n                else {\n                    p.push(point[1] + (majorAnchor * too[1]));\n                }\n            }\n            else {\n                if (too[0] === 0) {\n                    p.push(targetAnchorPosition[0] < sourceAnchorPosition[0] ? point[0] + minorAnchor : point[0] - minorAnchor);\n                }\n                else {\n                    p.push(point[0] + (majorAnchor * too[0]));\n                }\n\n                if (too[1] === 0) {\n                    p.push(targetAnchorPosition[1] < sourceAnchorPosition[1] ? point[1] + minorAnchor : point[1] - minorAnchor);\n                }\n                else {\n                    p.push(point[1] + (majorAnchor * soo[1]));\n                }\n            }\n\n            return p;\n        };\n\n        this._computeBezier = function (paintInfo, p, sp, tp, _w, _h) {\n\n            var _CP, _CP2,\n                _sx = sp[0] < tp[0] ? _w : 0,\n                _sy = sp[1] < tp[1] ? _h : 0,\n                _tx = sp[0] < tp[0] ? 0 : _w,\n                _ty = sp[1] < tp[1] ? 0 : _h;\n\n            _CP = this._findControlPoint([_sx, _sy], sp, tp, p.sourceEndpoint, p.targetEndpoint, paintInfo.so, paintInfo.to);\n            _CP2 = this._findControlPoint([_tx, _ty], tp, sp, p.targetEndpoint, p.sourceEndpoint, paintInfo.to, paintInfo.so);\n\n\n            _super.addSegment(this, \"Bezier\", {\n                x1: _sx, y1: _sy, x2: _tx, y2: _ty,\n                cp1x: _CP[0], cp1y: _CP[1], cp2x: _CP2[0], cp2y: _CP2[1]\n            });\n        };\n\n\n    };\n\n    _jp.Connectors.Bezier = Bezier;\n    _ju.extend(Bezier, _jp.Connectors.AbstractBezierConnector);\n\n}).call(typeof window !== 'undefined' ? window : this);\n/*\n * This file contains the state machine connectors, which extend AbstractBezierConnector.\n *\n * Copyright (c) 2010 - 2018 jsPlumb (hello@jsplumbtoolkit.com)\n *\n * https://jsplumbtoolkit.com\n * https://github.com/jsplumb/jsplumb\n * \n * Dual licensed under the MIT and GPL2 licenses.\n */\n;\n(function () {\n\n    \"use strict\";\n    var root = this, _jp = root.jsPlumb, _ju = root.jsPlumbUtil;\n\n    var _segment = function (x1, y1, x2, y2) {\n            if (x1 <= x2 && y2 <= y1) {\n                return 1;\n            }\n            else if (x1 <= x2 && y1 <= y2) {\n                return 2;\n            }\n            else if (x2 <= x1 && y2 >= y1) {\n                return 3;\n            }\n            return 4;\n        },\n\n    // the control point we will use depends on the faces to which each end of the connection is assigned, specifically whether or not the\n    // two faces are parallel or perpendicular.  if they are parallel then the control point lies on the midpoint of the axis in which they\n    // are parellel and varies only in the other axis; this variation is proportional to the distance that the anchor points lie from the\n    // center of that face.  if the two faces are perpendicular then the control point is at some distance from both the midpoints; the amount and\n    // direction are dependent on the orientation of the two elements. 'seg', passed in to this method, tells you which segment the target element\n    // lies in with respect to the source: 1 is top right, 2 is bottom right, 3 is bottom left, 4 is top left.\n    //\n    // sourcePos and targetPos are arrays of info about where on the source and target each anchor is located.  their contents are:\n    //\n    // 0 - absolute x\n    // 1 - absolute y\n    // 2 - proportional x in element (0 is left edge, 1 is right edge)\n    // 3 - proportional y in element (0 is top edge, 1 is bottom edge)\n    //\n        _findControlPoint = function (midx, midy, segment, sourceEdge, targetEdge, dx, dy, distance, proximityLimit) {\n            // TODO (maybe)\n            // - if anchor pos is 0.5, make the control point take into account the relative position of the elements.\n            if (distance <= proximityLimit) {\n                return [midx, midy];\n            }\n\n            if (segment === 1) {\n                if (sourceEdge[3] <= 0 && targetEdge[3] >= 1) {\n                    return [ midx + (sourceEdge[2] < 0.5 ? -1 * dx : dx), midy ];\n                }\n                else if (sourceEdge[2] >= 1 && targetEdge[2] <= 0) {\n                    return [ midx, midy + (sourceEdge[3] < 0.5 ? -1 * dy : dy) ];\n                }\n                else {\n                    return [ midx + (-1 * dx) , midy + (-1 * dy) ];\n                }\n            }\n            else if (segment === 2) {\n                if (sourceEdge[3] >= 1 && targetEdge[3] <= 0) {\n                    return [ midx + (sourceEdge[2] < 0.5 ? -1 * dx : dx), midy ];\n                }\n                else if (sourceEdge[2] >= 1 && targetEdge[2] <= 0) {\n                    return [ midx, midy + (sourceEdge[3] < 0.5 ? -1 * dy : dy) ];\n                }\n                else {\n                    return [ midx + dx, midy + (-1 * dy) ];\n                }\n            }\n            else if (segment === 3) {\n                if (sourceEdge[3] >= 1 && targetEdge[3] <= 0) {\n                    return [ midx + (sourceEdge[2] < 0.5 ? -1 * dx : dx), midy ];\n                }\n                else if (sourceEdge[2] <= 0 && targetEdge[2] >= 1) {\n                    return [ midx, midy + (sourceEdge[3] < 0.5 ? -1 * dy : dy) ];\n                }\n                else {\n                    return [ midx + (-1 * dx) , midy + (-1 * dy) ];\n                }\n            }\n            else if (segment === 4) {\n                if (sourceEdge[3] <= 0 && targetEdge[3] >= 1) {\n                    return [ midx + (sourceEdge[2] < 0.5 ? -1 * dx : dx), midy ];\n                }\n                else if (sourceEdge[2] <= 0 && targetEdge[2] >= 1) {\n                    return [ midx, midy + (sourceEdge[3] < 0.5 ? -1 * dy : dy) ];\n                }\n                else {\n                    return [ midx + dx , midy + (-1 * dy) ];\n                }\n            }\n\n        };\n\n    var StateMachine = function (params) {\n        params = params || {};\n        this.type = \"StateMachine\";\n\n        var _super = _jp.Connectors.AbstractBezierConnector.apply(this, arguments),\n            curviness = params.curviness || 10,\n            margin = params.margin || 5,\n            proximityLimit = params.proximityLimit || 80,\n            clockwise = params.orientation && params.orientation === \"clockwise\",\n            _controlPoint;\n\n        this._computeBezier = function(paintInfo, params, sp, tp, w, h) {\n            var _sx = params.sourcePos[0] < params.targetPos[0] ? 0 : w,\n                _sy = params.sourcePos[1] < params.targetPos[1] ? 0 : h,\n                _tx = params.sourcePos[0] < params.targetPos[0] ? w : 0,\n                _ty = params.sourcePos[1] < params.targetPos[1] ? h : 0;\n\n            // now adjust for the margin\n            if (params.sourcePos[2] === 0) {\n                _sx -= margin;\n            }\n            if (params.sourcePos[2] === 1) {\n                _sx += margin;\n            }\n            if (params.sourcePos[3] === 0) {\n                _sy -= margin;\n            }\n            if (params.sourcePos[3] === 1) {\n                _sy += margin;\n            }\n            if (params.targetPos[2] === 0) {\n                _tx -= margin;\n            }\n            if (params.targetPos[2] === 1) {\n                _tx += margin;\n            }\n            if (params.targetPos[3] === 0) {\n                _ty -= margin;\n            }\n            if (params.targetPos[3] === 1) {\n                _ty += margin;\n            }\n\n            //\n            // these connectors are quadratic bezier curves, having a single control point. if both anchors\n            // are located at 0.5 on their respective faces, the control point is set to the midpoint and you\n            // get a straight line.  this is also the case if the two anchors are within 'proximityLimit', since\n            // it seems to make good aesthetic sense to do that. outside of that, the control point is positioned\n            // at 'curviness' pixels away along the normal to the straight line connecting the two anchors.\n            //\n            // there may be two improvements to this.  firstly, we might actually support the notion of avoiding nodes\n            // in the UI, or at least making a good effort at doing so.  if a connection would pass underneath some node,\n            // for example, we might increase the distance the control point is away from the midpoint in a bid to\n            // steer it around that node.  this will work within limits, but i think those limits would also be the likely\n            // limits for, once again, aesthetic good sense in the layout of a chart using these connectors.\n            //\n            // the second possible change is actually two possible changes: firstly, it is possible we should gradually\n            // decrease the 'curviness' as the distance between the anchors decreases; start tailing it off to 0 at some\n            // point (which should be configurable).  secondly, we might slightly increase the 'curviness' for connectors\n            // with respect to how far their anchor is from the center of its respective face. this could either look cool,\n            // or stupid, and may indeed work only in a way that is so subtle as to have been a waste of time.\n            //\n\n            var _midx = (_sx + _tx) / 2,\n                _midy = (_sy + _ty) / 2,\n                segment = _segment(_sx, _sy, _tx, _ty),\n                distance = Math.sqrt(Math.pow(_tx - _sx, 2) + Math.pow(_ty - _sy, 2)),\n                cp1x, cp2x, cp1y, cp2y;\n\n\n            // calculate the control point.  this code will be where we'll put in a rudimentary element avoidance scheme; it\n            // will work by extending the control point to force the curve to be, um, curvier.\n            _controlPoint = _findControlPoint(_midx,\n                _midy,\n                segment,\n                params.sourcePos,\n                params.targetPos,\n                curviness, curviness,\n                distance,\n                proximityLimit);\n\n            cp1x = _controlPoint[0];\n            cp2x = _controlPoint[0];\n            cp1y = _controlPoint[1];\n            cp2y = _controlPoint[1];\n\n            _super.addSegment(this, \"Bezier\", {\n                x1: _tx, y1: _ty, x2: _sx, y2: _sy,\n                cp1x: cp1x, cp1y: cp1y,\n                cp2x: cp2x, cp2y: cp2y\n            });\n        };\n    };\n\n    _jp.Connectors.StateMachine = StateMachine;\n    _ju.extend(StateMachine, _jp.Connectors.AbstractBezierConnector);\n\n}).call(typeof window !== 'undefined' ? window : this);\n/*\n * This file contains the 'flowchart' connectors, consisting of vertical and horizontal line segments.\n *\n * Copyright (c) 2010 - 2018 jsPlumb (hello@jsplumbtoolkit.com)\n *\n * https://jsplumbtoolkit.com\n * https://github.com/jsplumb/jsplumb\n *\n * Dual licensed under the MIT and GPL2 licenses.\n */\n;\n(function () {\n\n    \"use strict\";\n    var root = this, _jp = root.jsPlumb, _ju = root.jsPlumbUtil;\n    var STRAIGHT = \"Straight\";\n\n    var Straight = function (params) {\n        this.type = STRAIGHT;\n        var _super = _jp.Connectors.AbstractConnector.apply(this, arguments);\n\n        this._compute = function (paintInfo, _) {\n            _super.addSegment(this, STRAIGHT, {x1: paintInfo.sx, y1: paintInfo.sy, x2: paintInfo.startStubX, y2: paintInfo.startStubY});\n            _super.addSegment(this, STRAIGHT, {x1: paintInfo.startStubX, y1: paintInfo.startStubY, x2: paintInfo.endStubX, y2: paintInfo.endStubY});\n            _super.addSegment(this, STRAIGHT, {x1: paintInfo.endStubX, y1: paintInfo.endStubY, x2: paintInfo.tx, y2: paintInfo.ty});\n        };\n    };\n\n    _jp.Connectors.Straight = Straight;\n    _ju.extend(Straight, _jp.Connectors.AbstractConnector);\n\n}).call(typeof window !== 'undefined' ? window : this);\n/*\n * This file contains the SVG renderers.\n *\n * Copyright (c) 2010 - 2018 jsPlumb (hello@jsplumbtoolkit.com)\n * \n * https://jsplumbtoolkit.com\n * https://github.com/jsplumb/jsplumb\n * \n * Dual licensed under the MIT and GPL2 licenses.\n */\n;\n(function () {\n\n// ************************** SVG utility methods ********************************************\t\n\n    \"use strict\";\n    var root = this, _jp = root.jsPlumb, _ju = root.jsPlumbUtil;\n\n    var svgAttributeMap = {\n            \"stroke-linejoin\": \"stroke-linejoin\",\n            \"stroke-dashoffset\": \"stroke-dashoffset\",\n            \"stroke-linecap\": \"stroke-linecap\"\n        },\n        STROKE_DASHARRAY = \"stroke-dasharray\",\n        DASHSTYLE = \"dashstyle\",\n        LINEAR_GRADIENT = \"linearGradient\",\n        RADIAL_GRADIENT = \"radialGradient\",\n        DEFS = \"defs\",\n        FILL = \"fill\",\n        STOP = \"stop\",\n        STROKE = \"stroke\",\n        STROKE_WIDTH = \"stroke-width\",\n        STYLE = \"style\",\n        NONE = \"none\",\n        JSPLUMB_GRADIENT = \"jsplumb_gradient_\",\n        LINE_WIDTH = \"strokeWidth\",\n        ns = {\n            svg: \"http://www.w3.org/2000/svg\"\n        },\n        _attr = function (node, attributes) {\n            for (var i in attributes) {\n                node.setAttribute(i, \"\" + attributes[i]);\n            }\n        },\n        _node = function (name, attributes) {\n            attributes = attributes || {};\n            attributes.version = \"1.1\";\n            attributes.xmlns = ns.svg;\n            return _jp.createElementNS(ns.svg, name, null, null, attributes);\n        },\n        _pos = function (d) {\n            return \"position:absolute;left:\" + d[0] + \"px;top:\" + d[1] + \"px\";\n        },\n        _clearGradient = function (parent) {\n            var els = parent.querySelectorAll(\" defs,linearGradient,radialGradient\");\n            for (var i = 0; i < els.length; i++) {\n                els[i].parentNode.removeChild(els[i]);\n            }\n        },\n        _updateGradient = function (parent, node, style, dimensions, uiComponent) {\n            var id = JSPLUMB_GRADIENT + uiComponent._jsPlumb.instance.idstamp();\n            // first clear out any existing gradient\n            _clearGradient(parent);\n            // this checks for an 'offset' property in the gradient, and in the absence of it, assumes\n            // we want a linear gradient. if it's there, we create a radial gradient.\n            // it is possible that a more explicit means of defining the gradient type would be\n            // better. relying on 'offset' means that we can never have a radial gradient that uses\n            // some default offset, for instance.\n            // issue 244 suggested the 'gradientUnits' attribute; without this, straight/flowchart connectors with gradients would\n            // not show gradients when the line was perfectly horizontal or vertical.\n            var g;\n            if (!style.gradient.offset) {\n                g = _node(LINEAR_GRADIENT, {id: id, gradientUnits: \"userSpaceOnUse\"});\n            }\n            else {\n                g = _node(RADIAL_GRADIENT, { id: id });\n            }\n\n            var defs = _node(DEFS);\n            parent.appendChild(defs);\n            defs.appendChild(g);\n\n            // the svg radial gradient seems to treat stops in the reverse\n            // order to how canvas does it.  so we want to keep all the maths the same, but\n            // iterate the actual style declarations in reverse order, if the x indexes are not in order.\n            for (var i = 0; i < style.gradient.stops.length; i++) {\n                var styleToUse = uiComponent.segment === 1 || uiComponent.segment === 2 ? i : style.gradient.stops.length - 1 - i,\n                    stopColor = style.gradient.stops[styleToUse][1],\n                    s = _node(STOP, {\"offset\": Math.floor(style.gradient.stops[i][0] * 100) + \"%\", \"stop-color\": stopColor});\n\n                g.appendChild(s);\n            }\n            var applyGradientTo = style.stroke ? STROKE : FILL;\n            node.setAttribute(applyGradientTo, \"url(#\" + id + \")\");\n        },\n        _applyStyles = function (parent, node, style, dimensions, uiComponent) {\n\n            node.setAttribute(FILL, style.fill ? style.fill : NONE);\n            node.setAttribute(STROKE, style.stroke ? style.stroke : NONE);\n\n            if (style.gradient) {\n                _updateGradient(parent, node, style, dimensions, uiComponent);\n            }\n            else {\n                // make sure we clear any existing gradient\n                _clearGradient(parent);\n                node.setAttribute(STYLE, \"\");\n            }\n\n            if (style.strokeWidth) {\n                node.setAttribute(STROKE_WIDTH, style.strokeWidth);\n            }\n\n            // in SVG there is a stroke-dasharray attribute we can set, and its syntax looks like\n            // the syntax in VML but is actually kind of nasty: values are given in the pixel\n            // coordinate space, whereas in VML they are multiples of the width of the stroked\n            // line, which makes a lot more sense.  for that reason, jsPlumb is supporting both\n            // the native svg 'stroke-dasharray' attribute, and also the 'dashstyle' concept from\n            // VML, which will be the preferred method.  the code below this converts a dashstyle\n            // attribute given in terms of stroke width into a pixel representation, by using the\n            // stroke's lineWidth.\n            if (style[DASHSTYLE] && style[LINE_WIDTH] && !style[STROKE_DASHARRAY]) {\n                var sep = style[DASHSTYLE].indexOf(\",\") === -1 ? \" \" : \",\",\n                    parts = style[DASHSTYLE].split(sep),\n                    styleToUse = \"\";\n                parts.forEach(function (p) {\n                    styleToUse += (Math.floor(p * style.strokeWidth) + sep);\n                });\n                node.setAttribute(STROKE_DASHARRAY, styleToUse);\n            }\n            else if (style[STROKE_DASHARRAY]) {\n                node.setAttribute(STROKE_DASHARRAY, style[STROKE_DASHARRAY]);\n            }\n\n            // extra attributes such as join type, dash offset.\n            for (var i in svgAttributeMap) {\n                if (style[i]) {\n                    node.setAttribute(svgAttributeMap[i], style[i]);\n                }\n            }\n        },\n        _appendAtIndex = function (svg, path, idx) {\n            if (svg.childNodes.length > idx) {\n                svg.insertBefore(path, svg.childNodes[idx]);\n            }\n            else {\n                svg.appendChild(path);\n            }\n        };\n\n    /**\n     utility methods for other objects to use.\n     */\n    _ju.svg = {\n        node: _node,\n        attr: _attr,\n        pos: _pos\n    };\n\n    // ************************** / SVG utility methods ********************************************\n\n    /*\n     * Base class for SVG components.\n     */\n    var SvgComponent = function (params) {\n        var pointerEventsSpec = params.pointerEventsSpec || \"all\", renderer = {};\n\n        _jp.jsPlumbUIComponent.apply(this, params.originalArgs);\n        this.canvas = null;\n        this.path = null;\n        this.svg = null;\n        this.bgCanvas = null;\n\n        var clazz = params.cssClass + \" \" + (params.originalArgs[0].cssClass || \"\"),\n            svgParams = {\n                \"style\": \"\",\n                \"width\": 0,\n                \"height\": 0,\n                \"pointer-events\": pointerEventsSpec,\n                \"position\": \"absolute\"\n            };\n\n        this.svg = _node(\"svg\", svgParams);\n\n        if (params.useDivWrapper) {\n            this.canvas = _jp.createElement(\"div\", { position : \"absolute\" });\n            _ju.sizeElement(this.canvas, 0, 0, 1, 1);\n            this.canvas.className = clazz;\n        }\n        else {\n            _attr(this.svg, { \"class\": clazz });\n            this.canvas = this.svg;\n        }\n\n        params._jsPlumb.appendElement(this.canvas, params.originalArgs[0].parent);\n        if (params.useDivWrapper) {\n            this.canvas.appendChild(this.svg);\n        }\n\n        var displayElements = [ this.canvas ];\n        this.getDisplayElements = function () {\n            return displayElements;\n        };\n\n        this.appendDisplayElement = function (el) {\n            displayElements.push(el);\n        };\n\n        this.paint = function (style, anchor, extents) {\n            if (style != null) {\n\n                var xy = [ this.x, this.y ], wh = [ this.w, this.h ], p;\n                if (extents != null) {\n                    if (extents.xmin < 0) {\n                        xy[0] += extents.xmin;\n                    }\n                    if (extents.ymin < 0) {\n                        xy[1] += extents.ymin;\n                    }\n                    wh[0] = extents.xmax + ((extents.xmin < 0) ? -extents.xmin : 0);\n                    wh[1] = extents.ymax + ((extents.ymin < 0) ? -extents.ymin : 0);\n                }\n\n                if (params.useDivWrapper) {\n                    _ju.sizeElement(this.canvas, xy[0], xy[1], wh[0], wh[1]);\n                    xy[0] = 0;\n                    xy[1] = 0;\n                    p = _pos([ 0, 0 ]);\n                }\n                else {\n                    p = _pos([ xy[0], xy[1] ]);\n                }\n\n                renderer.paint.apply(this, arguments);\n\n                _attr(this.svg, {\n                    \"style\": p,\n                    \"width\": wh[0] || 0,\n                    \"height\": wh[1] || 0\n                });\n            }\n        };\n\n        return {\n            renderer: renderer\n        };\n    };\n\n    _ju.extend(SvgComponent, _jp.jsPlumbUIComponent, {\n        cleanup: function (force) {\n            if (force || this.typeId == null) {\n                if (this.canvas) {\n                    this.canvas._jsPlumb = null;\n                }\n                if (this.svg) {\n                    this.svg._jsPlumb = null;\n                }\n                if (this.bgCanvas) {\n                    this.bgCanvas._jsPlumb = null;\n                }\n\n                if (this.canvas && this.canvas.parentNode) {\n                    this.canvas.parentNode.removeChild(this.canvas);\n                }\n                if (this.bgCanvas && this.bgCanvas.parentNode) {\n                    this.canvas.parentNode.removeChild(this.canvas);\n                }\n\n                this.svg = null;\n                this.canvas = null;\n                this.path = null;\n                this.group = null;\n            }\n            else {\n                // if not a forced cleanup, just detach from DOM for now.\n                if (this.canvas && this.canvas.parentNode) {\n                    this.canvas.parentNode.removeChild(this.canvas);\n                }\n                if (this.bgCanvas && this.bgCanvas.parentNode) {\n                    this.bgCanvas.parentNode.removeChild(this.bgCanvas);\n                }\n            }\n        },\n        reattach:function(instance) {\n            var c = instance.getContainer();\n            if (this.canvas && this.canvas.parentNode == null) {\n                c.appendChild(this.canvas);\n            }\n            if (this.bgCanvas && this.bgCanvas.parentNode == null) {\n                c.appendChild(this.bgCanvas);\n            }\n        },\n        setVisible: function (v) {\n            if (this.canvas) {\n                this.canvas.style.display = v ? \"block\" : \"none\";\n            }\n        }\n    });\n\n    /*\n     * Base class for SVG connectors.\n     */\n    _jp.ConnectorRenderers.svg = function (params) {\n        var self = this,\n            _super = SvgComponent.apply(this, [\n                {\n                    cssClass: params._jsPlumb.connectorClass,\n                    originalArgs: arguments,\n                    pointerEventsSpec: \"none\",\n                    _jsPlumb: params._jsPlumb\n                }\n            ]);\n\n        _super.renderer.paint = function (style, anchor, extents) {\n\n            var segments = self.getSegments(), p = \"\", offset = [0, 0];\n            if (extents.xmin < 0) {\n                offset[0] = -extents.xmin;\n            }\n            if (extents.ymin < 0) {\n                offset[1] = -extents.ymin;\n            }\n\n            if (segments.length > 0) {\n\n                p = self.getPathData();\n\n                var a = {\n                        d: p,\n                        transform: \"translate(\" + offset[0] + \",\" + offset[1] + \")\",\n                        \"pointer-events\": params[\"pointer-events\"] || \"visibleStroke\"\n                    },\n                    outlineStyle = null,\n                    d = [self.x, self.y, self.w, self.h];\n\n                // outline style.  actually means drawing an svg object underneath the main one.\n                if (style.outlineStroke) {\n                    var outlineWidth = style.outlineWidth || 1,\n                        outlineStrokeWidth = style.strokeWidth + (2 * outlineWidth);\n                    outlineStyle = _jp.extend({}, style);\n                    delete outlineStyle.gradient;\n                    outlineStyle.stroke = style.outlineStroke;\n                    outlineStyle.strokeWidth = outlineStrokeWidth;\n\n                    if (self.bgPath == null) {\n                        self.bgPath = _node(\"path\", a);\n                        _jp.addClass(self.bgPath, _jp.connectorOutlineClass);\n                        _appendAtIndex(self.svg, self.bgPath, 0);\n                    }\n                    else {\n                        _attr(self.bgPath, a);\n                    }\n\n                    _applyStyles(self.svg, self.bgPath, outlineStyle, d, self);\n                }\n\n                if (self.path == null) {\n                    self.path = _node(\"path\", a);\n                    _appendAtIndex(self.svg, self.path, style.outlineStroke ? 1 : 0);\n                }\n                else {\n                    _attr(self.path, a);\n                }\n\n                _applyStyles(self.svg, self.path, style, d, self);\n            }\n        };\n    };\n    _ju.extend(_jp.ConnectorRenderers.svg, SvgComponent);\n\n// ******************************* svg segment renderer *****************************************************\t\n\n\n// ******************************* /svg segments *****************************************************\n\n    /*\n     * Base class for SVG endpoints.\n     */\n    var SvgEndpoint = _jp.SvgEndpoint = function (params) {\n        var _super = SvgComponent.apply(this, [\n            {\n                cssClass: params._jsPlumb.endpointClass,\n                originalArgs: arguments,\n                pointerEventsSpec: \"all\",\n                useDivWrapper: true,\n                _jsPlumb: params._jsPlumb\n            }\n        ]);\n\n        _super.renderer.paint = function (style) {\n            var s = _jp.extend({}, style);\n            if (s.outlineStroke) {\n                s.stroke = s.outlineStroke;\n            }\n\n            if (this.node == null) {\n                this.node = this.makeNode(s);\n                this.svg.appendChild(this.node);\n            }\n            else if (this.updateNode != null) {\n                this.updateNode(this.node);\n            }\n            _applyStyles(this.svg, this.node, s, [ this.x, this.y, this.w, this.h ], this);\n            _pos(this.node, [ this.x, this.y ]);\n        }.bind(this);\n\n    };\n    _ju.extend(SvgEndpoint, SvgComponent);\n\n    /*\n     * SVG Dot Endpoint\n     */\n    _jp.Endpoints.svg.Dot = function () {\n        _jp.Endpoints.Dot.apply(this, arguments);\n        SvgEndpoint.apply(this, arguments);\n        this.makeNode = function (style) {\n            return _node(\"circle\", {\n                \"cx\": this.w / 2,\n                \"cy\": this.h / 2,\n                \"r\": this.radius\n            });\n        };\n        this.updateNode = function (node) {\n            _attr(node, {\n                \"cx\": this.w / 2,\n                \"cy\": this.h / 2,\n                \"r\": this.radius\n            });\n        };\n    };\n    _ju.extend(_jp.Endpoints.svg.Dot, [_jp.Endpoints.Dot, SvgEndpoint]);\n\n    /*\n     * SVG Rectangle Endpoint\n     */\n    _jp.Endpoints.svg.Rectangle = function () {\n        _jp.Endpoints.Rectangle.apply(this, arguments);\n        SvgEndpoint.apply(this, arguments);\n        this.makeNode = function (style) {\n            return _node(\"rect\", {\n                \"width\": this.w,\n                \"height\": this.h\n            });\n        };\n        this.updateNode = function (node) {\n            _attr(node, {\n                \"width\": this.w,\n                \"height\": this.h\n            });\n        };\n    };\n    _ju.extend(_jp.Endpoints.svg.Rectangle, [_jp.Endpoints.Rectangle, SvgEndpoint]);\n\n    /*\n     * SVG Image Endpoint is the default image endpoint.\n     */\n    _jp.Endpoints.svg.Image = _jp.Endpoints.Image;\n    /*\n     * Blank endpoint in svg renderer is the default Blank endpoint.\n     */\n    _jp.Endpoints.svg.Blank = _jp.Endpoints.Blank;\n    /*\n     * Label overlay in svg renderer is the default Label overlay.\n     */\n    _jp.Overlays.svg.Label = _jp.Overlays.Label;\n    /*\n     * Custom overlay in svg renderer is the default Custom overlay.\n     */\n    _jp.Overlays.svg.Custom = _jp.Overlays.Custom;\n\n    var AbstractSvgArrowOverlay = function (superclass, originalArgs) {\n        superclass.apply(this, originalArgs);\n        _jp.jsPlumbUIComponent.apply(this, originalArgs);\n        this.isAppendedAtTopLevel = false;\n        var self = this;\n        this.path = null;\n        this.paint = function (params, containerExtents) {\n            // only draws on connections, not endpoints.\n            if (params.component.svg && containerExtents) {\n                if (this.path == null) {\n                    this.path = _node(\"path\", {\n                        \"pointer-events\": \"all\"\n                    });\n                    params.component.svg.appendChild(this.path);\n                    if (this.elementCreated) {\n                        this.elementCreated(this.path, params.component);\n                    }\n\n                    this.canvas = params.component.svg; // for the sake of completeness; this behaves the same as other overlays\n                }\n                var clazz = originalArgs && (originalArgs.length === 1) ? (originalArgs[0].cssClass || \"\") : \"\",\n                    offset = [0, 0];\n\n                if (containerExtents.xmin < 0) {\n                    offset[0] = -containerExtents.xmin;\n                }\n                if (containerExtents.ymin < 0) {\n                    offset[1] = -containerExtents.ymin;\n                }\n\n                _attr(this.path, {\n                    \"d\": makePath(params.d),\n                    \"class\": clazz,\n                    stroke: params.stroke ? params.stroke : null,\n                    fill: params.fill ? params.fill : null,\n                    transform: \"translate(\" + offset[0] + \",\" + offset[1] + \")\"\n                });\n            }\n        };\n        var makePath = function (d) {\n            return (isNaN(d.cxy.x) || isNaN(d.cxy.y)) ? \"\" : \"M\" + d.hxy.x + \",\" + d.hxy.y +\n                \" L\" + d.tail[0].x + \",\" + d.tail[0].y +\n                \" L\" + d.cxy.x + \",\" + d.cxy.y +\n                \" L\" + d.tail[1].x + \",\" + d.tail[1].y +\n                \" L\" + d.hxy.x + \",\" + d.hxy.y;\n        };\n        this.transfer = function(target) {\n            if (target.canvas && this.path && this.path.parentNode) {\n                this.path.parentNode.removeChild(this.path);\n                target.canvas.appendChild(this.path);\n            }\n        };\n    };\n    _ju.extend(AbstractSvgArrowOverlay, [_jp.jsPlumbUIComponent, _jp.Overlays.AbstractOverlay], {\n        cleanup: function (force) {\n            if (this.path != null) {\n                if (force) {\n                    this._jsPlumb.instance.removeElement(this.path);\n                }\n                else {\n                    if (this.path.parentNode) {\n                        this.path.parentNode.removeChild(this.path);\n                    }\n                }\n            }\n        },\n        reattach:function(instance, component) {\n            if (this.path && component.canvas) {\n                component.canvas.appendChild(this.path);\n            }\n        },\n        setVisible: function (v) {\n            if (this.path != null) {\n                (this.path.style.display = (v ? \"block\" : \"none\"));\n            }\n        }\n    });\n\n    _jp.Overlays.svg.Arrow = function () {\n        AbstractSvgArrowOverlay.apply(this, [_jp.Overlays.Arrow, arguments]);\n    };\n    _ju.extend(_jp.Overlays.svg.Arrow, [ _jp.Overlays.Arrow, AbstractSvgArrowOverlay ]);\n\n    _jp.Overlays.svg.PlainArrow = function () {\n        AbstractSvgArrowOverlay.apply(this, [_jp.Overlays.PlainArrow, arguments]);\n    };\n    _ju.extend(_jp.Overlays.svg.PlainArrow, [ _jp.Overlays.PlainArrow, AbstractSvgArrowOverlay ]);\n\n    _jp.Overlays.svg.Diamond = function () {\n        AbstractSvgArrowOverlay.apply(this, [_jp.Overlays.Diamond, arguments]);\n    };\n    _ju.extend(_jp.Overlays.svg.Diamond, [ _jp.Overlays.Diamond, AbstractSvgArrowOverlay ]);\n\n    // a test\n    _jp.Overlays.svg.GuideLines = function () {\n        var path = null, self = this, p1_1, p1_2;\n        _jp.Overlays.GuideLines.apply(this, arguments);\n        this.paint = function (params, containerExtents) {\n            if (path == null) {\n                path = _node(\"path\");\n                params.connector.svg.appendChild(path);\n                self.attachListeners(path, params.connector);\n                self.attachListeners(path, self);\n\n                p1_1 = _node(\"path\");\n                params.connector.svg.appendChild(p1_1);\n                self.attachListeners(p1_1, params.connector);\n                self.attachListeners(p1_1, self);\n\n                p1_2 = _node(\"path\");\n                params.connector.svg.appendChild(p1_2);\n                self.attachListeners(p1_2, params.connector);\n                self.attachListeners(p1_2, self);\n            }\n\n            var offset = [0, 0];\n            if (containerExtents.xmin < 0) {\n                offset[0] = -containerExtents.xmin;\n            }\n            if (containerExtents.ymin < 0) {\n                offset[1] = -containerExtents.ymin;\n            }\n\n            _attr(path, {\n                \"d\": makePath(params.head, params.tail),\n                stroke: \"red\",\n                fill: null,\n                transform: \"translate(\" + offset[0] + \",\" + offset[1] + \")\"\n            });\n\n            _attr(p1_1, {\n                \"d\": makePath(params.tailLine[0], params.tailLine[1]),\n                stroke: \"blue\",\n                fill: null,\n                transform: \"translate(\" + offset[0] + \",\" + offset[1] + \")\"\n            });\n\n            _attr(p1_2, {\n                \"d\": makePath(params.headLine[0], params.headLine[1]),\n                stroke: \"green\",\n                fill: null,\n                transform: \"translate(\" + offset[0] + \",\" + offset[1] + \")\"\n            });\n        };\n\n        var makePath = function (d1, d2) {\n            return \"M \" + d1.x + \",\" + d1.y +\n                \" L\" + d2.x + \",\" + d2.y;\n        };\n    };\n    _ju.extend(_jp.Overlays.svg.GuideLines, _jp.Overlays.GuideLines);\n}).call(typeof window !== 'undefined' ? window : this);\n\n/*\n * This file contains the 'vanilla' adapter - having no external dependencies other than bundled libs.\n *\n * Copyright (c) 2010 - 2018 jsPlumb (hello@jsplumbtoolkit.com)\n * \n * https://jsplumbtoolkit.com\n * https://github.com/jsplumb/jsplumb\n * \n * Dual licensed under the MIT and GPL2 licenses.\n */\n;\n(function () {\n\n    \"use strict\";\n    var root = this, _jp = root.jsPlumb, _ju = root.jsPlumbUtil,\n        _jk = root.Katavorio, _jg = root.Biltong;\n\n    var _getDragManager = function (instance, category) {\n\n        category = category || \"main\";\n        var key = \"_katavorio_\" + category;\n        var k = instance[key],\n            e = instance.getEventManager();\n\n        if (!k) {\n            k = new _jk({\n                bind: e.on,\n                unbind: e.off,\n                getSize: _jp.getSize,\n                getConstrainingRectangle:function(el) {\n                    return [ el.parentNode.scrollWidth, el.parentNode.scrollHeight ];\n                },\n                getPosition: function (el, relativeToRoot) {\n                    // if this is a nested draggable then compute the offset against its own offsetParent, otherwise\n                    // compute against the Container's origin. see also the getUIPosition method below.\n                    var o = instance.getOffset(el, relativeToRoot, el._katavorioDrag ? el.offsetParent : null);\n                    return [o.left, o.top];\n                },\n                setPosition: function (el, xy) {\n                    el.style.left = xy[0] + \"px\";\n                    el.style.top = xy[1] + \"px\";\n                },\n                addClass: _jp.addClass,\n                removeClass: _jp.removeClass,\n                intersects: _jg.intersects,\n                indexOf: function(l, i) { return l.indexOf(i); },\n                scope:instance.getDefaultScope(),\n                css: {\n                    noSelect: instance.dragSelectClass,\n                    droppable: \"jtk-droppable\",\n                    draggable: \"jtk-draggable\",\n                    drag: \"jtk-drag\",\n                    selected: \"jtk-drag-selected\",\n                    active: \"jtk-drag-active\",\n                    hover: \"jtk-drag-hover\",\n                    ghostProxy:\"jtk-ghost-proxy\"\n                }\n            });\n            k.setZoom(instance.getZoom());\n            instance[key] = k;\n            instance.bind(\"zoom\", k.setZoom);\n        }\n        return k;\n    };\n\n    var _animProps = function (o, p) {\n        var _one = function (pName) {\n            if (p[pName] != null) {\n                if (_ju.isString(p[pName])) {\n                    var m = p[pName].match(/-=/) ? -1 : 1,\n                        v = p[pName].substring(2);\n                    return o[pName] + (m * v);\n                }\n                else {\n                    return p[pName];\n                }\n            }\n            else {\n                return o[pName];\n            }\n        };\n        return [ _one(\"left\"), _one(\"top\") ];\n    };\n\n    _jp.extend(root.jsPlumbInstance.prototype, {\n\n        animationSupported:true,\n        getElement: function (el) {\n            if (el == null) {\n                return null;\n            }\n            // here we pluck the first entry if el was a list of entries.\n            // this is not my favourite thing to do, but previous versions of\n            // jsplumb supported jquery selectors, and it is possible a selector\n            // will be passed in here.\n            el = typeof el === \"string\" ? el : el.length != null && el.enctype == null ? el[0] : el;\n            return typeof el === \"string\" ? document.getElementById(el) : el;\n        },\n        removeElement: function (element) {\n            _getDragManager(this).elementRemoved(element);\n            this.getEventManager().remove(element);\n        },\n        //\n        // this adapter supports a rudimentary animation function. no easing is supported.  only\n        // left/top properties are supported. property delta args are expected to be in the form\n        //\n        // +=x.xxxx\n        //\n        // or\n        //\n        // -=x.xxxx\n        //\n        doAnimate: function (el, properties, options) {\n            options = options || {};\n            var o = this.getOffset(el),\n                ap = _animProps(o, properties),\n                ldist = ap[0] - o.left,\n                tdist = ap[1] - o.top,\n                d = options.duration || 250,\n                step = 15, steps = d / step,\n                linc = (step / d) * ldist,\n                tinc = (step / d) * tdist,\n                idx = 0,\n                _int = setInterval(function () {\n                    _jp.setPosition(el, {\n                        left: o.left + (linc * (idx + 1)),\n                        top: o.top + (tinc * (idx + 1))\n                    });\n                    if (options.step != null) {\n                        options.step(idx, Math.ceil(steps));\n                    }\n                    idx++;\n                    if (idx >= steps) {\n                        window.clearInterval(_int);\n                        if (options.complete != null) {\n                            options.complete();\n                        }\n                    }\n                }, step);\n        },\n        // DRAG/DROP\n        destroyDraggable: function (el, category) {\n            _getDragManager(this, category).destroyDraggable(el);\n        },\n        unbindDraggable: function (el, evt, fn, category) {\n            _getDragManager(this, category).destroyDraggable(el, evt, fn);\n        },\n        destroyDroppable: function (el, category) {\n            _getDragManager(this, category).destroyDroppable(el);\n        },\n        unbindDroppable: function (el, evt, fn, category) {\n            _getDragManager(this, category).destroyDroppable(el, evt, fn);\n        },\n        initDraggable: function (el, options, category) {\n            _getDragManager(this, category).draggable(el, options);\n        },\n        initDroppable: function (el, options, category) {\n            _getDragManager(this, category).droppable(el, options);\n        },\n        isAlreadyDraggable: function (el) {\n            return el._katavorioDrag != null;\n        },\n        isDragSupported: function (el, options) {\n            return true;\n        },\n        isDropSupported: function (el, options) {\n            return true;\n        },\n        isElementDraggable: function (el) {\n            el = _jp.getElement(el);\n            return el._katavorioDrag && el._katavorioDrag.isEnabled();\n        },\n        getDragObject: function (eventArgs) {\n            return eventArgs[0].drag.getDragElement();\n        },\n        getDragScope: function (el) {\n            return el._katavorioDrag && el._katavorioDrag.scopes.join(\" \") || \"\";\n        },\n        getDropEvent: function (args) {\n            return args[0].e;\n        },\n        getUIPosition: function (eventArgs, zoom) {\n            // here the position reported to us by Katavorio is relative to the element's offsetParent. For top\n            // level nodes that is fine, but if we have a nested draggable then its offsetParent is actually\n            // not going to be the jsplumb container; it's going to be some child of that element. In that case\n            // we want to adjust the UI position to account for the offsetParent's position relative to the Container\n            // origin.\n            var el = eventArgs[0].el;\n            if (el.offsetParent == null) {\n                return null;\n            }\n            var finalPos = eventArgs[0].finalPos || eventArgs[0].pos;\n            var p = { left:finalPos[0], top:finalPos[1] };\n            if (el._katavorioDrag && el.offsetParent !== this.getContainer()) {\n                var oc = this.getOffset(el.offsetParent);\n                p.left += oc.left;\n                p.top += oc.top;\n            }\n            return p;\n        },\n        setDragFilter: function (el, filter, _exclude) {\n            if (el._katavorioDrag) {\n                el._katavorioDrag.setFilter(filter, _exclude);\n            }\n        },\n        setElementDraggable: function (el, draggable) {\n            el = _jp.getElement(el);\n            if (el._katavorioDrag) {\n                el._katavorioDrag.setEnabled(draggable);\n            }\n        },\n        setDragScope: function (el, scope) {\n            if (el._katavorioDrag) {\n                el._katavorioDrag.k.setDragScope(el, scope);\n            }\n        },\n        setDropScope:function(el, scope) {\n            if (el._katavorioDrop && el._katavorioDrop.length > 0) {\n                el._katavorioDrop[0].k.setDropScope(el, scope);\n            }\n        },\n        addToPosse:function(el, spec) {\n            var specs = Array.prototype.slice.call(arguments, 1);\n            var dm = _getDragManager(this);\n            _jp.each(el, function(_el) {\n                _el = [ _jp.getElement(_el) ];\n                _el.push.apply(_el, specs );\n                dm.addToPosse.apply(dm, _el);\n            });\n        },\n        setPosse:function(el, spec) {\n            var specs = Array.prototype.slice.call(arguments, 1);\n            var dm = _getDragManager(this);\n            _jp.each(el, function(_el) {\n                _el = [ _jp.getElement(_el) ];\n                _el.push.apply(_el, specs );\n                dm.setPosse.apply(dm, _el);\n            });\n        },\n        removeFromPosse:function(el, posseId) {\n            var specs = Array.prototype.slice.call(arguments, 1);\n            var dm = _getDragManager(this);\n            _jp.each(el, function(_el) {\n                _el = [ _jp.getElement(_el) ];\n                _el.push.apply(_el, specs );\n                dm.removeFromPosse.apply(dm, _el);\n            });\n        },\n        removeFromAllPosses:function(el) {\n            var dm = _getDragManager(this);\n            _jp.each(el, function(_el) { dm.removeFromAllPosses(_jp.getElement(_el)); });\n        },\n        setPosseState:function(el, posseId, state) {\n            var dm = _getDragManager(this);\n            _jp.each(el, function(_el) { dm.setPosseState(_jp.getElement(_el), posseId, state); });\n        },\n        dragEvents: {\n            'start': 'start', 'stop': 'stop', 'drag': 'drag', 'step': 'step',\n            'over': 'over', 'out': 'out', 'drop': 'drop', 'complete': 'complete',\n            'beforeStart':'beforeStart'\n        },\n        animEvents: {\n            'step': \"step\", 'complete': 'complete'\n        },\n        stopDrag: function (el) {\n            if (el._katavorioDrag) {\n                el._katavorioDrag.abort();\n            }\n        },\n        addToDragSelection: function (spec) {\n            _getDragManager(this).select(spec);\n        },\n        removeFromDragSelection: function (spec) {\n            _getDragManager(this).deselect(spec);\n        },\n        clearDragSelection: function () {\n            _getDragManager(this).deselectAll();\n        },\n        trigger: function (el, event, originalEvent, payload) {\n            this.getEventManager().trigger(el, event, originalEvent, payload);\n        },\n        doReset:function() {\n            // look for katavorio instances and reset each one if found.\n            for (var key in this) {\n                if (key.indexOf(\"_katavorio_\") === 0) {\n                    this[key].reset();\n                }\n            }\n        }\n    });\n\n    var ready = function (f) {\n        var _do = function () {\n            if (/complete|loaded|interactive/.test(document.readyState) && typeof(document.body) !== \"undefined\" && document.body != null) {\n                f();\n            }\n            else {\n                setTimeout(_do, 9);\n            }\n        };\n\n        _do();\n    };\n    ready(_jp.init);\n\n}).call(typeof window !== 'undefined' ? window : this);\n\n\n/***/ }),\n/* 39 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/*\nCopyright (c) 2012-2014 Chris Pettitt\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n*/\n\nmodule.exports = {\n  graphlib: __webpack_require__(3),\n\n  layout: __webpack_require__(54),\n  debug: __webpack_require__(76),\n  util: {\n    time: __webpack_require__(1).time,\n    notime: __webpack_require__(1).notime\n  },\n  version: __webpack_require__(77)\n};\n\n\n/***/ }),\n/* 40 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Copyright (c) 2014, Chris Pettitt\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice, this\n * list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n * this list of conditions and the following disclaimer in the documentation\n * and/or other materials provided with the distribution.\n *\n * 3. Neither the name of the copyright holder nor the names of its contributors\n * may be used to endorse or promote products derived from this software without\n * specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nvar lib = __webpack_require__(41);\n\nmodule.exports = {\n  Graph: lib.Graph,\n  json: __webpack_require__(44),\n  alg: __webpack_require__(45),\n  version: lib.version\n};\n\n\n/***/ }),\n/* 41 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// Includes only the \"core\" of graphlib\nmodule.exports = {\n  Graph: __webpack_require__(7),\n  version: __webpack_require__(43)\n};\n\n\n/***/ }),\n/* 42 */\n/***/ (function(module, exports) {\n\nmodule.exports = function(module) {\n\tif(!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif(!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n\n\n/***/ }),\n/* 43 */\n/***/ (function(module, exports) {\n\nmodule.exports = '2.1.5';\n\n\n/***/ }),\n/* 44 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _ = __webpack_require__(2),\n    Graph = __webpack_require__(7);\n\nmodule.exports = {\n  write: write,\n  read: read\n};\n\nfunction write(g) {\n  var json = {\n    options: {\n      directed: g.isDirected(),\n      multigraph: g.isMultigraph(),\n      compound: g.isCompound()\n    },\n    nodes: writeNodes(g),\n    edges: writeEdges(g)\n  };\n  if (!_.isUndefined(g.graph())) {\n    json.value = _.clone(g.graph());\n  }\n  return json;\n}\n\nfunction writeNodes(g) {\n  return _.map(g.nodes(), function(v) {\n    var nodeValue = g.node(v),\n        parent = g.parent(v),\n        node = { v: v };\n    if (!_.isUndefined(nodeValue)) {\n      node.value = nodeValue;\n    }\n    if (!_.isUndefined(parent)) {\n      node.parent = parent;\n    }\n    return node;\n  });\n}\n\nfunction writeEdges(g) {\n  return _.map(g.edges(), function(e) {\n    var edgeValue = g.edge(e),\n        edge = { v: e.v, w: e.w };\n    if (!_.isUndefined(e.name)) {\n      edge.name = e.name;\n    }\n    if (!_.isUndefined(edgeValue)) {\n      edge.value = edgeValue;\n    }\n    return edge;\n  });\n}\n\nfunction read(json) {\n  var g = new Graph(json.options).setGraph(json.value);\n  _.each(json.nodes, function(entry) {\n    g.setNode(entry.v, entry.value);\n    if (entry.parent) {\n      g.setParent(entry.v, entry.parent);\n    }\n  });\n  _.each(json.edges, function(entry) {\n    g.setEdge({ v: entry.v, w: entry.w, name: entry.name }, entry.value);\n  });\n  return g;\n}\n\n\n/***/ }),\n/* 45 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\n  components: __webpack_require__(46),\n  dijkstra: __webpack_require__(14),\n  dijkstraAll: __webpack_require__(47),\n  findCycles: __webpack_require__(48),\n  floydWarshall: __webpack_require__(49),\n  isAcyclic: __webpack_require__(50),\n  postorder: __webpack_require__(51),\n  preorder: __webpack_require__(52),\n  prim: __webpack_require__(53),\n  tarjan: __webpack_require__(16),\n  topsort: __webpack_require__(17)\n};\n\n\n/***/ }),\n/* 46 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _ = __webpack_require__(2);\n\nmodule.exports = components;\n\nfunction components(g) {\n  var visited = {},\n      cmpts = [],\n      cmpt;\n\n  function dfs(v) {\n    if (_.has(visited, v)) return;\n    visited[v] = true;\n    cmpt.push(v);\n    _.each(g.successors(v), dfs);\n    _.each(g.predecessors(v), dfs);\n  }\n\n  _.each(g.nodes(), function(v) {\n    cmpt = [];\n    dfs(v);\n    if (cmpt.length) {\n      cmpts.push(cmpt);\n    }\n  });\n\n  return cmpts;\n}\n\n\n/***/ }),\n/* 47 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar dijkstra = __webpack_require__(14),\n    _ = __webpack_require__(2);\n\nmodule.exports = dijkstraAll;\n\nfunction dijkstraAll(g, weightFunc, edgeFunc) {\n  return _.transform(g.nodes(), function(acc, v) {\n    acc[v] = dijkstra(g, v, weightFunc, edgeFunc);\n  }, {});\n}\n\n\n/***/ }),\n/* 48 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _ = __webpack_require__(2),\n    tarjan = __webpack_require__(16);\n\nmodule.exports = findCycles;\n\nfunction findCycles(g) {\n  return _.filter(tarjan(g), function(cmpt) {\n    return cmpt.length > 1 || (cmpt.length === 1 && g.hasEdge(cmpt[0], cmpt[0]));\n  });\n}\n\n\n/***/ }),\n/* 49 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _ = __webpack_require__(2);\n\nmodule.exports = floydWarshall;\n\nvar DEFAULT_WEIGHT_FUNC = _.constant(1);\n\nfunction floydWarshall(g, weightFn, edgeFn) {\n  return runFloydWarshall(g,\n                          weightFn || DEFAULT_WEIGHT_FUNC,\n                          edgeFn || function(v) { return g.outEdges(v); });\n}\n\nfunction runFloydWarshall(g, weightFn, edgeFn) {\n  var results = {},\n      nodes = g.nodes();\n\n  nodes.forEach(function(v) {\n    results[v] = {};\n    results[v][v] = { distance: 0 };\n    nodes.forEach(function(w) {\n      if (v !== w) {\n        results[v][w] = { distance: Number.POSITIVE_INFINITY };\n      }\n    });\n    edgeFn(v).forEach(function(edge) {\n      var w = edge.v === v ? edge.w : edge.v,\n          d = weightFn(edge);\n      results[v][w] = { distance: d, predecessor: v };\n    });\n  });\n\n  nodes.forEach(function(k) {\n    var rowK = results[k];\n    nodes.forEach(function(i) {\n      var rowI = results[i];\n      nodes.forEach(function(j) {\n        var ik = rowI[k];\n        var kj = rowK[j];\n        var ij = rowI[j];\n        var altDistance = ik.distance + kj.distance;\n        if (altDistance < ij.distance) {\n          ij.distance = altDistance;\n          ij.predecessor = kj.predecessor;\n        }\n      });\n    });\n  });\n\n  return results;\n}\n\n\n/***/ }),\n/* 50 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar topsort = __webpack_require__(17);\n\nmodule.exports = isAcyclic;\n\nfunction isAcyclic(g) {\n  try {\n    topsort(g);\n  } catch (e) {\n    if (e instanceof topsort.CycleException) {\n      return false;\n    }\n    throw e;\n  }\n  return true;\n}\n\n\n/***/ }),\n/* 51 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar dfs = __webpack_require__(18);\n\nmodule.exports = postorder;\n\nfunction postorder(g, vs) {\n  return dfs(g, vs, \"post\");\n}\n\n\n/***/ }),\n/* 52 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar dfs = __webpack_require__(18);\n\nmodule.exports = preorder;\n\nfunction preorder(g, vs) {\n  return dfs(g, vs, \"pre\");\n}\n\n\n/***/ }),\n/* 53 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _ = __webpack_require__(2),\n    Graph = __webpack_require__(7),\n    PriorityQueue = __webpack_require__(15);\n\nmodule.exports = prim;\n\nfunction prim(g, weightFunc) {\n  var result = new Graph(),\n      parents = {},\n      pq = new PriorityQueue(),\n      v;\n\n  function updateNeighbors(edge) {\n    var w = edge.v === v ? edge.w : edge.v,\n        pri = pq.priority(w);\n    if (pri !== undefined) {\n      var edgeWeight = weightFunc(edge);\n      if (edgeWeight < pri) {\n        parents[w] = v;\n        pq.decrease(w, edgeWeight);\n      }\n    }\n  }\n\n  if (g.nodeCount() === 0) {\n    return result;\n  }\n\n  _.each(g.nodes(), function(v) {\n    pq.add(v, Number.POSITIVE_INFINITY);\n    result.setNode(v);\n  });\n\n  // Start from an arbitrary node\n  pq.decrease(g.nodes()[0], 0);\n\n  var init = false;\n  while (pq.size() > 0) {\n    v = pq.removeMin();\n    if (_.has(parents, v)) {\n      result.setEdge(v, parents[v]);\n    } else if (init) {\n      throw new Error(\"Input graph is not connected: \" + g);\n    } else {\n      init = true;\n    }\n\n    g.nodeEdges(v).forEach(updateNeighbors);\n  }\n\n  return result;\n}\n\n\n/***/ }),\n/* 54 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _ = __webpack_require__(0),\n    acyclic = __webpack_require__(55),\n    normalize = __webpack_require__(58),\n    rank = __webpack_require__(59),\n    normalizeRanks = __webpack_require__(1).normalizeRanks,\n    parentDummyChains = __webpack_require__(61),\n    removeEmptyRanks = __webpack_require__(1).removeEmptyRanks,\n    nestingGraph = __webpack_require__(62),\n    addBorderSegments = __webpack_require__(63),\n    coordinateSystem = __webpack_require__(64),\n    order = __webpack_require__(65),\n    position = __webpack_require__(74),\n    util = __webpack_require__(1),\n    Graph = __webpack_require__(3).Graph;\n\nmodule.exports = layout;\n\nfunction layout(g, opts) {\n  var time = opts && opts.debugTiming ? util.time : util.notime;\n  time(\"layout\", function() {\n    var layoutGraph = time(\"  buildLayoutGraph\",\n                               function() { return buildLayoutGraph(g); });\n    time(\"  runLayout\",        function() { runLayout(layoutGraph, time); });\n    time(\"  updateInputGraph\", function() { updateInputGraph(g, layoutGraph); });\n  });\n}\n\nfunction runLayout(g, time) {\n  time(\"    makeSpaceForEdgeLabels\", function() { makeSpaceForEdgeLabels(g); });\n  time(\"    removeSelfEdges\",        function() { removeSelfEdges(g); });\n  time(\"    acyclic\",                function() { acyclic.run(g); });\n  time(\"    nestingGraph.run\",       function() { nestingGraph.run(g); });\n  time(\"    rank\",                   function() { rank(util.asNonCompoundGraph(g)); });\n  time(\"    injectEdgeLabelProxies\", function() { injectEdgeLabelProxies(g); });\n  time(\"    removeEmptyRanks\",       function() { removeEmptyRanks(g); });\n  time(\"    nestingGraph.cleanup\",   function() { nestingGraph.cleanup(g); });\n  time(\"    normalizeRanks\",         function() { normalizeRanks(g); });\n  time(\"    assignRankMinMax\",       function() { assignRankMinMax(g); });\n  time(\"    removeEdgeLabelProxies\", function() { removeEdgeLabelProxies(g); });\n  time(\"    normalize.run\",          function() { normalize.run(g); });\n  time(\"    parentDummyChains\",      function() { parentDummyChains(g); });\n  time(\"    addBorderSegments\",      function() { addBorderSegments(g); });\n  time(\"    order\",                  function() { order(g); });\n  time(\"    insertSelfEdges\",        function() { insertSelfEdges(g); });\n  time(\"    adjustCoordinateSystem\", function() { coordinateSystem.adjust(g); });\n  time(\"    position\",               function() { position(g); });\n  time(\"    positionSelfEdges\",      function() { positionSelfEdges(g); });\n  time(\"    removeBorderNodes\",      function() { removeBorderNodes(g); });\n  time(\"    normalize.undo\",         function() { normalize.undo(g); });\n  time(\"    fixupEdgeLabelCoords\",   function() { fixupEdgeLabelCoords(g); });\n  time(\"    undoCoordinateSystem\",   function() { coordinateSystem.undo(g); });\n  time(\"    translateGraph\",         function() { translateGraph(g); });\n  time(\"    assignNodeIntersects\",   function() { assignNodeIntersects(g); });\n  time(\"    reversePoints\",          function() { reversePointsForReversedEdges(g); });\n  time(\"    acyclic.undo\",           function() { acyclic.undo(g); });\n}\n\n/*\n * Copies final layout information from the layout graph back to the input\n * graph. This process only copies whitelisted attributes from the layout graph\n * to the input graph, so it serves as a good place to determine what\n * attributes can influence layout.\n */\nfunction updateInputGraph(inputGraph, layoutGraph) {\n  _.forEach(inputGraph.nodes(), function(v) {\n    var inputLabel = inputGraph.node(v),\n        layoutLabel = layoutGraph.node(v);\n\n    if (inputLabel) {\n      inputLabel.x = layoutLabel.x;\n      inputLabel.y = layoutLabel.y;\n\n      if (layoutGraph.children(v).length) {\n        inputLabel.width = layoutLabel.width;\n        inputLabel.height = layoutLabel.height;\n      }\n    }\n  });\n\n  _.forEach(inputGraph.edges(), function(e) {\n    var inputLabel = inputGraph.edge(e),\n        layoutLabel = layoutGraph.edge(e);\n\n    inputLabel.points = layoutLabel.points;\n    if (_.has(layoutLabel, \"x\")) {\n      inputLabel.x = layoutLabel.x;\n      inputLabel.y = layoutLabel.y;\n    }\n  });\n\n  inputGraph.graph().width = layoutGraph.graph().width;\n  inputGraph.graph().height = layoutGraph.graph().height;\n}\n\nvar graphNumAttrs = [\"nodesep\", \"edgesep\", \"ranksep\", \"marginx\", \"marginy\"],\n    graphDefaults = { ranksep: 50, edgesep: 20, nodesep: 50, rankdir: \"tb\" },\n    graphAttrs = [\"acyclicer\", \"ranker\", \"rankdir\", \"align\"],\n    nodeNumAttrs = [\"width\", \"height\"],\n    nodeDefaults = { width: 0, height: 0 },\n    edgeNumAttrs = [\"minlen\", \"weight\", \"width\", \"height\", \"labeloffset\"],\n    edgeDefaults = {\n      minlen: 1, weight: 1, width: 0, height: 0,\n      labeloffset: 10, labelpos: \"r\"\n    },\n    edgeAttrs = [\"labelpos\"];\n\n/*\n * Constructs a new graph from the input graph, which can be used for layout.\n * This process copies only whitelisted attributes from the input graph to the\n * layout graph. Thus this function serves as a good place to determine what\n * attributes can influence layout.\n */\nfunction buildLayoutGraph(inputGraph) {\n  var g = new Graph({ multigraph: true, compound: true }),\n      graph = canonicalize(inputGraph.graph());\n\n  g.setGraph(_.merge({},\n    graphDefaults,\n    selectNumberAttrs(graph, graphNumAttrs),\n    _.pick(graph, graphAttrs)));\n\n  _.forEach(inputGraph.nodes(), function(v) {\n    var node = canonicalize(inputGraph.node(v));\n    g.setNode(v, _.defaults(selectNumberAttrs(node, nodeNumAttrs), nodeDefaults));\n    g.setParent(v, inputGraph.parent(v));\n  });\n\n  _.forEach(inputGraph.edges(), function(e) {\n    var edge = canonicalize(inputGraph.edge(e));\n    g.setEdge(e, _.merge({},\n      edgeDefaults,\n      selectNumberAttrs(edge, edgeNumAttrs),\n      _.pick(edge, edgeAttrs)));\n  });\n\n  return g;\n}\n\n/*\n * This idea comes from the Gansner paper: to account for edge labels in our\n * layout we split each rank in half by doubling minlen and halving ranksep.\n * Then we can place labels at these mid-points between nodes.\n *\n * We also add some minimal padding to the width to push the label for the edge\n * away from the edge itself a bit.\n */\nfunction makeSpaceForEdgeLabels(g) {\n  var graph = g.graph();\n  graph.ranksep /= 2;\n  _.forEach(g.edges(), function(e) {\n    var edge = g.edge(e);\n    edge.minlen *= 2;\n    if (edge.labelpos.toLowerCase() !== \"c\") {\n      if (graph.rankdir === \"TB\" || graph.rankdir === \"BT\") {\n        edge.width += edge.labeloffset;\n      } else {\n        edge.height += edge.labeloffset;\n      }\n    }\n  });\n}\n\n/*\n * Creates temporary dummy nodes that capture the rank in which each edge's\n * label is going to, if it has one of non-zero width and height. We do this\n * so that we can safely remove empty ranks while preserving balance for the\n * label's position.\n */\nfunction injectEdgeLabelProxies(g) {\n  _.forEach(g.edges(), function(e) {\n    var edge = g.edge(e);\n    if (edge.width && edge.height) {\n      var v = g.node(e.v),\n          w = g.node(e.w),\n          label = { rank: (w.rank - v.rank) / 2 + v.rank, e: e };\n      util.addDummyNode(g, \"edge-proxy\", label, \"_ep\");\n    }\n  });\n}\n\nfunction assignRankMinMax(g) {\n  var maxRank = 0;\n  _.forEach(g.nodes(), function(v) {\n    var node = g.node(v);\n    if (node.borderTop) {\n      node.minRank = g.node(node.borderTop).rank;\n      node.maxRank = g.node(node.borderBottom).rank;\n      maxRank = _.max(maxRank, node.maxRank);\n    }\n  });\n  g.graph().maxRank = maxRank;\n}\n\nfunction removeEdgeLabelProxies(g) {\n  _.forEach(g.nodes(), function(v) {\n    var node = g.node(v);\n    if (node.dummy === \"edge-proxy\") {\n      g.edge(node.e).labelRank = node.rank;\n      g.removeNode(v);\n    }\n  });\n}\n\nfunction translateGraph(g) {\n  var minX = Number.POSITIVE_INFINITY,\n      maxX = 0,\n      minY = Number.POSITIVE_INFINITY,\n      maxY = 0,\n      graphLabel = g.graph(),\n      marginX = graphLabel.marginx || 0,\n      marginY = graphLabel.marginy || 0;\n\n  function getExtremes(attrs) {\n    var x = attrs.x,\n        y = attrs.y,\n        w = attrs.width,\n        h = attrs.height;\n    minX = Math.min(minX, x - w / 2);\n    maxX = Math.max(maxX, x + w / 2);\n    minY = Math.min(minY, y - h / 2);\n    maxY = Math.max(maxY, y + h / 2);\n  }\n\n  _.forEach(g.nodes(), function(v) { getExtremes(g.node(v)); });\n  _.forEach(g.edges(), function(e) {\n    var edge = g.edge(e);\n    if (_.has(edge, \"x\")) {\n      getExtremes(edge);\n    }\n  });\n\n  minX -= marginX;\n  minY -= marginY;\n\n  _.forEach(g.nodes(), function(v) {\n    var node = g.node(v);\n    node.x -= minX;\n    node.y -= minY;\n  });\n\n  _.forEach(g.edges(), function(e) {\n    var edge = g.edge(e);\n    _.forEach(edge.points, function(p) {\n      p.x -= minX;\n      p.y -= minY;\n    });\n    if (_.has(edge, \"x\")) { edge.x -= minX; }\n    if (_.has(edge, \"y\")) { edge.y -= minY; }\n  });\n\n  graphLabel.width = maxX - minX + marginX;\n  graphLabel.height = maxY - minY + marginY;\n}\n\nfunction assignNodeIntersects(g) {\n  _.forEach(g.edges(), function(e) {\n    var edge = g.edge(e),\n        nodeV = g.node(e.v),\n        nodeW = g.node(e.w),\n        p1, p2;\n    if (!edge.points) {\n      edge.points = [];\n      p1 = nodeW;\n      p2 = nodeV;\n    } else {\n      p1 = edge.points[0];\n      p2 = edge.points[edge.points.length - 1];\n    }\n    edge.points.unshift(util.intersectRect(nodeV, p1));\n    edge.points.push(util.intersectRect(nodeW, p2));\n  });\n}\n\nfunction fixupEdgeLabelCoords(g) {\n  _.forEach(g.edges(), function(e) {\n    var edge = g.edge(e);\n    if (_.has(edge, \"x\")) {\n      if (edge.labelpos === \"l\" || edge.labelpos === \"r\") {\n        edge.width -= edge.labeloffset;\n      }\n      switch (edge.labelpos) {\n        case \"l\": edge.x -= edge.width / 2 + edge.labeloffset; break;\n        case \"r\": edge.x += edge.width / 2 + edge.labeloffset; break;\n      }\n    }\n  });\n}\n\nfunction reversePointsForReversedEdges(g) {\n  _.forEach(g.edges(), function(e) {\n    var edge = g.edge(e);\n    if (edge.reversed) {\n      edge.points.reverse();\n    }\n  });\n}\n\nfunction removeBorderNodes(g) {\n  _.forEach(g.nodes(), function(v) {\n    if (g.children(v).length) {\n      var node = g.node(v),\n          t = g.node(node.borderTop),\n          b = g.node(node.borderBottom),\n          l = g.node(_.last(node.borderLeft)),\n          r = g.node(_.last(node.borderRight));\n\n      node.width = Math.abs(r.x - l.x);\n      node.height = Math.abs(b.y - t.y);\n      node.x = l.x + node.width / 2;\n      node.y = t.y + node.height / 2;\n    }\n  });\n\n  _.forEach(g.nodes(), function(v) {\n    if (g.node(v).dummy === \"border\") {\n      g.removeNode(v);\n    }\n  });\n}\n\nfunction removeSelfEdges(g) {\n  _.forEach(g.edges(), function(e) {\n    if (e.v === e.w) {\n      var node = g.node(e.v);\n      if (!node.selfEdges) {\n        node.selfEdges = [];\n      }\n      node.selfEdges.push({ e: e, label: g.edge(e) });\n      g.removeEdge(e);\n    }\n  });\n}\n\nfunction insertSelfEdges(g) {\n  var layers = util.buildLayerMatrix(g);\n  _.forEach(layers, function(layer) {\n    var orderShift = 0;\n    _.forEach(layer, function(v, i) {\n      var node = g.node(v);\n      node.order = i + orderShift;\n      _.forEach(node.selfEdges, function(selfEdge) {\n        util.addDummyNode(g, \"selfedge\", {\n          width: selfEdge.label.width,\n          height: selfEdge.label.height,\n          rank: node.rank,\n          order: i + (++orderShift),\n          e: selfEdge.e,\n          label: selfEdge.label\n        }, \"_se\");\n      });\n      delete node.selfEdges;\n    });\n  });\n}\n\nfunction positionSelfEdges(g) {\n  _.forEach(g.nodes(), function(v) {\n    var node = g.node(v);\n    if (node.dummy === \"selfedge\") {\n      var selfNode = g.node(node.e.v),\n          x = selfNode.x + selfNode.width / 2,\n          y = selfNode.y,\n          dx = node.x - x,\n          dy = selfNode.height / 2;\n      g.setEdge(node.e, node.label);\n      g.removeNode(v);\n      node.label.points = [\n        { x: x + 2 * dx / 3, y: y - dy },\n        { x: x + 5 * dx / 6, y: y - dy },\n        { x: x +     dx    , y: y },\n        { x: x + 5 * dx / 6, y: y + dy },\n        { x: x + 2 * dx / 3, y: y + dy }\n      ];\n      node.label.x = node.x;\n      node.label.y = node.y;\n    }\n  });\n}\n\nfunction selectNumberAttrs(obj, attrs) {\n  return _.mapValues(_.pick(obj, attrs), Number);\n}\n\nfunction canonicalize(attrs) {\n  var newAttrs = {};\n  _.forEach(attrs, function(v, k) {\n    newAttrs[k.toLowerCase()] = v;\n  });\n  return newAttrs;\n}\n\n\n/***/ }),\n/* 55 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _ = __webpack_require__(0),\n    greedyFAS = __webpack_require__(56);\n\nmodule.exports = {\n  run: run,\n  undo: undo\n};\n\nfunction run(g) {\n  var fas = (g.graph().acyclicer === \"greedy\"\n                ? greedyFAS(g, weightFn(g))\n                : dfsFAS(g));\n  _.forEach(fas, function(e) {\n    var label = g.edge(e);\n    g.removeEdge(e);\n    label.forwardName = e.name;\n    label.reversed = true;\n    g.setEdge(e.w, e.v, label, _.uniqueId(\"rev\"));\n  });\n\n  function weightFn(g) {\n    return function(e) {\n      return g.edge(e).weight;\n    };\n  }\n}\n\nfunction dfsFAS(g) {\n  var fas = [],\n      stack = {},\n      visited = {};\n\n  function dfs(v) {\n    if (_.has(visited, v)) {\n      return;\n    }\n    visited[v] = true;\n    stack[v] = true;\n    _.forEach(g.outEdges(v), function(e) {\n      if (_.has(stack, e.w)) {\n        fas.push(e);\n      } else {\n        dfs(e.w);\n      }\n    });\n    delete stack[v];\n  }\n\n  _.forEach(g.nodes(), dfs);\n  return fas;\n}\n\nfunction undo(g) {\n  _.forEach(g.edges(), function(e) {\n    var label = g.edge(e);\n    if (label.reversed) {\n      g.removeEdge(e);\n\n      var forwardName = label.forwardName;\n      delete label.reversed;\n      delete label.forwardName;\n      g.setEdge(e.w, e.v, label, forwardName);\n    }\n  });\n}\n\n\n/***/ }),\n/* 56 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _ = __webpack_require__(0),\n    Graph = __webpack_require__(3).Graph,\n    List = __webpack_require__(57);\n\n/*\n * A greedy heuristic for finding a feedback arc set for a graph. A feedback\n * arc set is a set of edges that can be removed to make a graph acyclic.\n * The algorithm comes from: P. Eades, X. Lin, and W. F. Smyth, \"A fast and\n * effective heuristic for the feedback arc set problem.\" This implementation\n * adjusts that from the paper to allow for weighted edges.\n */\nmodule.exports = greedyFAS;\n\nvar DEFAULT_WEIGHT_FN = _.constant(1);\n\nfunction greedyFAS(g, weightFn) {\n  if (g.nodeCount() <= 1) {\n    return [];\n  }\n  var state = buildState(g, weightFn || DEFAULT_WEIGHT_FN);\n  var results = doGreedyFAS(state.graph, state.buckets, state.zeroIdx);\n\n  // Expand multi-edges\n  return _.flatten(_.map(results, function(e) {\n    return g.outEdges(e.v, e.w);\n  }), true);\n}\n\nfunction doGreedyFAS(g, buckets, zeroIdx) {\n  var results = [],\n      sources = buckets[buckets.length - 1],\n      sinks = buckets[0];\n\n  var entry;\n  while (g.nodeCount()) {\n    while ((entry = sinks.dequeue()))   { removeNode(g, buckets, zeroIdx, entry); }\n    while ((entry = sources.dequeue())) { removeNode(g, buckets, zeroIdx, entry); }\n    if (g.nodeCount()) {\n      for (var i = buckets.length - 2; i > 0; --i) {\n        entry = buckets[i].dequeue();\n        if (entry) {\n          results = results.concat(removeNode(g, buckets, zeroIdx, entry, true));\n          break;\n        }\n      }\n    }\n  }\n\n  return results;\n}\n\nfunction removeNode(g, buckets, zeroIdx, entry, collectPredecessors) {\n  var results = collectPredecessors ? [] : undefined;\n\n  _.forEach(g.inEdges(entry.v), function(edge) {\n    var weight = g.edge(edge),\n        uEntry = g.node(edge.v);\n\n    if (collectPredecessors) {\n      results.push({ v: edge.v, w: edge.w });\n    }\n\n    uEntry.out -= weight;\n    assignBucket(buckets, zeroIdx, uEntry);\n  });\n\n  _.forEach(g.outEdges(entry.v), function(edge) {\n    var weight = g.edge(edge),\n        w = edge.w,\n        wEntry = g.node(w);\n    wEntry[\"in\"] -= weight;\n    assignBucket(buckets, zeroIdx, wEntry);\n  });\n\n  g.removeNode(entry.v);\n\n  return results;\n}\n\nfunction buildState(g, weightFn) {\n  var fasGraph = new Graph(),\n      maxIn = 0,\n      maxOut = 0;\n\n  _.forEach(g.nodes(), function(v) {\n    fasGraph.setNode(v, { v: v, \"in\": 0, out: 0 });\n  });\n\n  // Aggregate weights on nodes, but also sum the weights across multi-edges\n  // into a single edge for the fasGraph.\n  _.forEach(g.edges(), function(e) {\n    var prevWeight = fasGraph.edge(e.v, e.w) || 0,\n        weight = weightFn(e),\n        edgeWeight = prevWeight + weight;\n    fasGraph.setEdge(e.v, e.w, edgeWeight);\n    maxOut = Math.max(maxOut, fasGraph.node(e.v).out += weight);\n    maxIn  = Math.max(maxIn,  fasGraph.node(e.w)[\"in\"]  += weight);\n  });\n\n  var buckets = _.range(maxOut + maxIn + 3).map(function() { return new List(); });\n  var zeroIdx = maxIn + 1;\n\n  _.forEach(fasGraph.nodes(), function(v) {\n    assignBucket(buckets, zeroIdx, fasGraph.node(v));\n  });\n\n  return { graph: fasGraph, buckets: buckets, zeroIdx: zeroIdx };\n}\n\nfunction assignBucket(buckets, zeroIdx, entry) {\n  if (!entry.out) {\n    buckets[0].enqueue(entry);\n  } else if (!entry[\"in\"]) {\n    buckets[buckets.length - 1].enqueue(entry);\n  } else {\n    buckets[entry.out - entry[\"in\"] + zeroIdx].enqueue(entry);\n  }\n}\n\n\n/***/ }),\n/* 57 */\n/***/ (function(module, exports) {\n\n/*\n * Simple doubly linked list implementation derived from Cormen, et al.,\n * \"Introduction to Algorithms\".\n */\n\nmodule.exports = List;\n\nfunction List() {\n  var sentinel = {};\n  sentinel._next = sentinel._prev = sentinel;\n  this._sentinel = sentinel;\n}\n\nList.prototype.dequeue = function() {\n  var sentinel = this._sentinel,\n      entry = sentinel._prev;\n  if (entry !== sentinel) {\n    unlink(entry);\n    return entry;\n  }\n};\n\nList.prototype.enqueue = function(entry) {\n  var sentinel = this._sentinel;\n  if (entry._prev && entry._next) {\n    unlink(entry);\n  }\n  entry._next = sentinel._next;\n  sentinel._next._prev = entry;\n  sentinel._next = entry;\n  entry._prev = sentinel;\n};\n\nList.prototype.toString = function() {\n  var strs = [],\n      sentinel = this._sentinel,\n      curr = sentinel._prev;\n  while (curr !== sentinel) {\n    strs.push(JSON.stringify(curr, filterOutLinks));\n    curr = curr._prev;\n  }\n  return \"[\" + strs.join(\", \") + \"]\";\n};\n\nfunction unlink(entry) {\n  entry._prev._next = entry._next;\n  entry._next._prev = entry._prev;\n  delete entry._next;\n  delete entry._prev;\n}\n\nfunction filterOutLinks(k, v) {\n  if (k !== \"_next\" && k !== \"_prev\") {\n    return v;\n  }\n}\n\n\n/***/ }),\n/* 58 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _ = __webpack_require__(0),\n    util = __webpack_require__(1);\n\nmodule.exports = {\n  run: run,\n  undo: undo\n};\n\n/*\n * Breaks any long edges in the graph into short segments that span 1 layer\n * each. This operation is undoable with the denormalize function.\n *\n * Pre-conditions:\n *\n *    1. The input graph is a DAG.\n *    2. Each node in the graph has a \"rank\" property.\n *\n * Post-condition:\n *\n *    1. All edges in the graph have a length of 1.\n *    2. Dummy nodes are added where edges have been split into segments.\n *    3. The graph is augmented with a \"dummyChains\" attribute which contains\n *       the first dummy in each chain of dummy nodes produced.\n */\nfunction run(g) {\n  g.graph().dummyChains = [];\n  _.forEach(g.edges(), function(edge) { normalizeEdge(g, edge); });\n}\n\nfunction normalizeEdge(g, e) {\n  var v = e.v,\n      vRank = g.node(v).rank,\n      w = e.w,\n      wRank = g.node(w).rank,\n      name = e.name,\n      edgeLabel = g.edge(e),\n      labelRank = edgeLabel.labelRank;\n\n  if (wRank === vRank + 1) return;\n\n  g.removeEdge(e);\n\n  var dummy, attrs, i;\n  for (i = 0, ++vRank; vRank < wRank; ++i, ++vRank) {\n    edgeLabel.points = [];\n    attrs = {\n      width: 0, height: 0,\n      edgeLabel: edgeLabel, edgeObj: e,\n      rank: vRank\n    };\n    dummy = util.addDummyNode(g, \"edge\", attrs, \"_d\");\n    if (vRank === labelRank) {\n      attrs.width = edgeLabel.width;\n      attrs.height = edgeLabel.height;\n      attrs.dummy = \"edge-label\";\n      attrs.labelpos = edgeLabel.labelpos;\n    }\n    g.setEdge(v, dummy, { weight: edgeLabel.weight }, name);\n    if (i === 0) {\n      g.graph().dummyChains.push(dummy);\n    }\n    v = dummy;\n  }\n\n  g.setEdge(v, w, { weight: edgeLabel.weight }, name);\n}\n\nfunction undo(g) {\n  _.forEach(g.graph().dummyChains, function(v) {\n    var node = g.node(v),\n        origLabel = node.edgeLabel,\n        w;\n    g.setEdge(node.edgeObj, origLabel);\n    while (node.dummy) {\n      w = g.successors(v)[0];\n      g.removeNode(v);\n      origLabel.points.push({ x: node.x, y: node.y });\n      if (node.dummy === \"edge-label\") {\n        origLabel.x = node.x;\n        origLabel.y = node.y;\n        origLabel.width = node.width;\n        origLabel.height = node.height;\n      }\n      v = w;\n      node = g.node(v);\n    }\n  });\n}\n\n\n/***/ }),\n/* 59 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar rankUtil = __webpack_require__(4),\n    longestPath = rankUtil.longestPath,\n    feasibleTree = __webpack_require__(19),\n    networkSimplex = __webpack_require__(60);\n\nmodule.exports = rank;\n\n/*\n * Assigns a rank to each node in the input graph that respects the \"minlen\"\n * constraint specified on edges between nodes.\n *\n * This basic structure is derived from Gansner, et al., \"A Technique for\n * Drawing Directed Graphs.\"\n *\n * Pre-conditions:\n *\n *    1. Graph must be a connected DAG\n *    2. Graph nodes must be objects\n *    3. Graph edges must have \"weight\" and \"minlen\" attributes\n *\n * Post-conditions:\n *\n *    1. Graph nodes will have a \"rank\" attribute based on the results of the\n *       algorithm. Ranks can start at any index (including negative), we'll\n *       fix them up later.\n */\nfunction rank(g) {\n  switch(g.graph().ranker) {\n    case \"network-simplex\": networkSimplexRanker(g); break;\n    case \"tight-tree\": tightTreeRanker(g); break;\n    case \"longest-path\": longestPathRanker(g); break;\n    default: networkSimplexRanker(g);\n  }\n}\n\n// A fast and simple ranker, but results are far from optimal.\nvar longestPathRanker = longestPath;\n\nfunction tightTreeRanker(g) {\n  longestPath(g);\n  feasibleTree(g);\n}\n\nfunction networkSimplexRanker(g) {\n  networkSimplex(g);\n}\n\n\n/***/ }),\n/* 60 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _ = __webpack_require__(0),\n    feasibleTree = __webpack_require__(19),\n    slack = __webpack_require__(4).slack,\n    initRank = __webpack_require__(4).longestPath,\n    preorder = __webpack_require__(3).alg.preorder,\n    postorder = __webpack_require__(3).alg.postorder,\n    simplify = __webpack_require__(1).simplify;\n\nmodule.exports = networkSimplex;\n\n// Expose some internals for testing purposes\nnetworkSimplex.initLowLimValues = initLowLimValues;\nnetworkSimplex.initCutValues = initCutValues;\nnetworkSimplex.calcCutValue = calcCutValue;\nnetworkSimplex.leaveEdge = leaveEdge;\nnetworkSimplex.enterEdge = enterEdge;\nnetworkSimplex.exchangeEdges = exchangeEdges;\n\n/*\n * The network simplex algorithm assigns ranks to each node in the input graph\n * and iteratively improves the ranking to reduce the length of edges.\n *\n * Preconditions:\n *\n *    1. The input graph must be a DAG.\n *    2. All nodes in the graph must have an object value.\n *    3. All edges in the graph must have \"minlen\" and \"weight\" attributes.\n *\n * Postconditions:\n *\n *    1. All nodes in the graph will have an assigned \"rank\" attribute that has\n *       been optimized by the network simplex algorithm. Ranks start at 0.\n *\n *\n * A rough sketch of the algorithm is as follows:\n *\n *    1. Assign initial ranks to each node. We use the longest path algorithm,\n *       which assigns ranks to the lowest position possible. In general this\n *       leads to very wide bottom ranks and unnecessarily long edges.\n *    2. Construct a feasible tight tree. A tight tree is one such that all\n *       edges in the tree have no slack (difference between length of edge\n *       and minlen for the edge). This by itself greatly improves the assigned\n *       rankings by shorting edges.\n *    3. Iteratively find edges that have negative cut values. Generally a\n *       negative cut value indicates that the edge could be removed and a new\n *       tree edge could be added to produce a more compact graph.\n *\n * Much of the algorithms here are derived from Gansner, et al., \"A Technique\n * for Drawing Directed Graphs.\" The structure of the file roughly follows the\n * structure of the overall algorithm.\n */\nfunction networkSimplex(g) {\n  g = simplify(g);\n  initRank(g);\n  var t = feasibleTree(g);\n  initLowLimValues(t);\n  initCutValues(t, g);\n\n  var e, f;\n  while ((e = leaveEdge(t))) {\n    f = enterEdge(t, g, e);\n    exchangeEdges(t, g, e, f);\n  }\n}\n\n/*\n * Initializes cut values for all edges in the tree.\n */\nfunction initCutValues(t, g) {\n  var vs = postorder(t, t.nodes());\n  vs = vs.slice(0, vs.length - 1);\n  _.forEach(vs, function(v) {\n    assignCutValue(t, g, v);\n  });\n}\n\nfunction assignCutValue(t, g, child) {\n  var childLab = t.node(child),\n      parent = childLab.parent;\n  t.edge(child, parent).cutvalue = calcCutValue(t, g, child);\n}\n\n/*\n * Given the tight tree, its graph, and a child in the graph calculate and\n * return the cut value for the edge between the child and its parent.\n */\nfunction calcCutValue(t, g, child) {\n  var childLab = t.node(child),\n      parent = childLab.parent,\n      // True if the child is on the tail end of the edge in the directed graph\n      childIsTail = true,\n      // The graph's view of the tree edge we're inspecting\n      graphEdge = g.edge(child, parent),\n      // The accumulated cut value for the edge between this node and its parent\n      cutValue = 0;\n\n  if (!graphEdge) {\n    childIsTail = false;\n    graphEdge = g.edge(parent, child);\n  }\n\n  cutValue = graphEdge.weight;\n\n  _.forEach(g.nodeEdges(child), function(e) {\n    var isOutEdge = e.v === child,\n        other = isOutEdge ? e.w : e.v;\n\n    if (other !== parent) {\n      var pointsToHead = isOutEdge === childIsTail,\n          otherWeight = g.edge(e).weight;\n\n      cutValue += pointsToHead ? otherWeight : -otherWeight;\n      if (isTreeEdge(t, child, other)) {\n        var otherCutValue = t.edge(child, other).cutvalue;\n        cutValue += pointsToHead ? -otherCutValue : otherCutValue;\n      }\n    }\n  });\n\n  return cutValue;\n}\n\nfunction initLowLimValues(tree, root) {\n  if (arguments.length < 2) {\n    root = tree.nodes()[0];\n  }\n  dfsAssignLowLim(tree, {}, 1, root);\n}\n\nfunction dfsAssignLowLim(tree, visited, nextLim, v, parent) {\n  var low = nextLim,\n      label = tree.node(v);\n\n  visited[v] = true;\n  _.forEach(tree.neighbors(v), function(w) {\n    if (!_.has(visited, w)) {\n      nextLim = dfsAssignLowLim(tree, visited, nextLim, w, v);\n    }\n  });\n\n  label.low = low;\n  label.lim = nextLim++;\n  if (parent) {\n    label.parent = parent;\n  } else {\n    // TODO should be able to remove this when we incrementally update low lim\n    delete label.parent;\n  }\n\n  return nextLim;\n}\n\nfunction leaveEdge(tree) {\n  return _.find(tree.edges(), function(e) {\n    return tree.edge(e).cutvalue < 0;\n  });\n}\n\nfunction enterEdge(t, g, edge) {\n  var v = edge.v,\n      w = edge.w;\n\n  // For the rest of this function we assume that v is the tail and w is the\n  // head, so if we don't have this edge in the graph we should flip it to\n  // match the correct orientation.\n  if (!g.hasEdge(v, w)) {\n    v = edge.w;\n    w = edge.v;\n  }\n\n  var vLabel = t.node(v),\n      wLabel = t.node(w),\n      tailLabel = vLabel,\n      flip = false;\n\n  // If the root is in the tail of the edge then we need to flip the logic that\n  // checks for the head and tail nodes in the candidates function below.\n  if (vLabel.lim > wLabel.lim) {\n    tailLabel = wLabel;\n    flip = true;\n  }\n\n  var candidates = _.filter(g.edges(), function(edge) {\n    return flip === isDescendant(t, t.node(edge.v), tailLabel) &&\n           flip !== isDescendant(t, t.node(edge.w), tailLabel);\n  });\n\n  return _.minBy(candidates, function(edge) { return slack(g, edge); });\n}\n\nfunction exchangeEdges(t, g, e, f) {\n  var v = e.v,\n      w = e.w;\n  t.removeEdge(v, w);\n  t.setEdge(f.v, f.w, {});\n  initLowLimValues(t);\n  initCutValues(t, g);\n  updateRanks(t, g);\n}\n\nfunction updateRanks(t, g) {\n  var root = _.find(t.nodes(), function(v) { return !g.node(v).parent; }),\n      vs = preorder(t, root);\n  vs = vs.slice(1);\n  _.forEach(vs, function(v) {\n    var parent = t.node(v).parent,\n        edge = g.edge(v, parent),\n        flipped = false;\n\n    if (!edge) {\n      edge = g.edge(parent, v);\n      flipped = true;\n    }\n\n    g.node(v).rank = g.node(parent).rank + (flipped ? edge.minlen : -edge.minlen);\n  });\n}\n\n/*\n * Returns true if the edge is in the tree.\n */\nfunction isTreeEdge(tree, u, v) {\n  return tree.hasEdge(u, v);\n}\n\n/*\n * Returns true if the specified node is descendant of the root node per the\n * assigned low and lim attributes in the tree.\n */\nfunction isDescendant(tree, vLabel, rootLabel) {\n  return rootLabel.low <= vLabel.lim && vLabel.lim <= rootLabel.lim;\n}\n\n\n/***/ }),\n/* 61 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _ = __webpack_require__(0);\n\nmodule.exports = parentDummyChains;\n\nfunction parentDummyChains(g) {\n  var postorderNums = postorder(g);\n\n  _.forEach(g.graph().dummyChains, function(v) {\n    var node = g.node(v),\n        edgeObj = node.edgeObj,\n        pathData = findPath(g, postorderNums, edgeObj.v, edgeObj.w),\n        path = pathData.path,\n        lca = pathData.lca,\n        pathIdx = 0,\n        pathV = path[pathIdx],\n        ascending = true;\n\n    while (v !== edgeObj.w) {\n      node = g.node(v);\n\n      if (ascending) {\n        while ((pathV = path[pathIdx]) !== lca &&\n               g.node(pathV).maxRank < node.rank) {\n          pathIdx++;\n        }\n\n        if (pathV === lca) {\n          ascending = false;\n        }\n      }\n\n      if (!ascending) {\n        while (pathIdx < path.length - 1 &&\n               g.node(pathV = path[pathIdx + 1]).minRank <= node.rank) {\n          pathIdx++;\n        }\n        pathV = path[pathIdx];\n      }\n\n      g.setParent(v, pathV);\n      v = g.successors(v)[0];\n    }\n  });\n}\n\n// Find a path from v to w through the lowest common ancestor (LCA). Return the\n// full path and the LCA.\nfunction findPath(g, postorderNums, v, w) {\n  var vPath = [],\n      wPath = [],\n      low = Math.min(postorderNums[v].low, postorderNums[w].low),\n      lim = Math.max(postorderNums[v].lim, postorderNums[w].lim),\n      parent,\n      lca;\n\n  // Traverse up from v to find the LCA\n  parent = v;\n  do {\n    parent = g.parent(parent);\n    vPath.push(parent);\n  } while (parent &&\n           (postorderNums[parent].low > low || lim > postorderNums[parent].lim));\n  lca = parent;\n\n  // Traverse from w to LCA\n  parent = w;\n  while ((parent = g.parent(parent)) !== lca) {\n    wPath.push(parent);\n  }\n\n  return { path: vPath.concat(wPath.reverse()), lca: lca };\n}\n\nfunction postorder(g) {\n  var result = {},\n      lim = 0;\n\n  function dfs(v) {\n    var low = lim;\n    _.forEach(g.children(v), dfs);\n    result[v] = { low: low, lim: lim++ };\n  }\n  _.forEach(g.children(), dfs);\n\n  return result;\n}\n\n\n/***/ }),\n/* 62 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _ = __webpack_require__(0),\n    util = __webpack_require__(1);\n\nmodule.exports = {\n  run: run,\n  cleanup: cleanup\n};\n\n/*\n * A nesting graph creates dummy nodes for the tops and bottoms of subgraphs,\n * adds appropriate edges to ensure that all cluster nodes are placed between\n * these boundries, and ensures that the graph is connected.\n *\n * In addition we ensure, through the use of the minlen property, that nodes\n * and subgraph border nodes to not end up on the same rank.\n *\n * Preconditions:\n *\n *    1. Input graph is a DAG\n *    2. Nodes in the input graph has a minlen attribute\n *\n * Postconditions:\n *\n *    1. Input graph is connected.\n *    2. Dummy nodes are added for the tops and bottoms of subgraphs.\n *    3. The minlen attribute for nodes is adjusted to ensure nodes do not\n *       get placed on the same rank as subgraph border nodes.\n *\n * The nesting graph idea comes from Sander, \"Layout of Compound Directed\n * Graphs.\"\n */\nfunction run(g) {\n  var root = util.addDummyNode(g, \"root\", {}, \"_root\");\n  var depths = treeDepths(g);\n  var height = _.max(_.values(depths)) - 1; // Note: depths is an Object not an array\n  var nodeSep = 2 * height + 1;\n\n  g.graph().nestingRoot = root;\n\n  // Multiply minlen by nodeSep to align nodes on non-border ranks.\n  _.forEach(g.edges(), function(e) { g.edge(e).minlen *= nodeSep; });\n\n  // Calculate a weight that is sufficient to keep subgraphs vertically compact\n  var weight = sumWeights(g) + 1;\n\n  // Create border nodes and link them up\n  _.forEach(g.children(), function(child) {\n    dfs(g, root, nodeSep, weight, height, depths, child);\n  });\n\n  // Save the multiplier for node layers for later removal of empty border\n  // layers.\n  g.graph().nodeRankFactor = nodeSep;\n}\n\nfunction dfs(g, root, nodeSep, weight, height, depths, v) {\n  var children = g.children(v);\n  if (!children.length) {\n    if (v !== root) {\n      g.setEdge(root, v, { weight: 0, minlen: nodeSep });\n    }\n    return;\n  }\n\n  var top = util.addBorderNode(g, \"_bt\"),\n      bottom = util.addBorderNode(g, \"_bb\"),\n      label = g.node(v);\n\n  g.setParent(top, v);\n  label.borderTop = top;\n  g.setParent(bottom, v);\n  label.borderBottom = bottom;\n\n  _.forEach(children, function(child) {\n    dfs(g, root, nodeSep, weight, height, depths, child);\n\n    var childNode = g.node(child),\n        childTop = childNode.borderTop ? childNode.borderTop : child,\n        childBottom = childNode.borderBottom ? childNode.borderBottom : child,\n        thisWeight = childNode.borderTop ? weight : 2 * weight,\n        minlen = childTop !== childBottom ? 1 : height - depths[v] + 1;\n\n    g.setEdge(top, childTop, {\n      weight: thisWeight,\n      minlen: minlen,\n      nestingEdge: true\n    });\n\n    g.setEdge(childBottom, bottom, {\n      weight: thisWeight,\n      minlen: minlen,\n      nestingEdge: true\n    });\n  });\n\n  if (!g.parent(v)) {\n    g.setEdge(root, top, { weight: 0, minlen: height + depths[v] });\n  }\n}\n\nfunction treeDepths(g) {\n  var depths = {};\n  function dfs(v, depth) {\n    var children = g.children(v);\n    if (children && children.length) {\n      _.forEach(children, function(child) {\n        dfs(child, depth + 1);\n      });\n    }\n    depths[v] = depth;\n  }\n  _.forEach(g.children(), function(v) { dfs(v, 1); });\n  return depths;\n}\n\nfunction sumWeights(g) {\n  return _.reduce(g.edges(), function(acc, e) {\n    return acc + g.edge(e).weight;\n  }, 0);\n}\n\nfunction cleanup(g) {\n  var graphLabel = g.graph();\n  g.removeNode(graphLabel.nestingRoot);\n  delete graphLabel.nestingRoot;\n  _.forEach(g.edges(), function(e) {\n    var edge = g.edge(e);\n    if (edge.nestingEdge) {\n      g.removeEdge(e);\n    }\n  });\n}\n\n\n/***/ }),\n/* 63 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _ = __webpack_require__(0),\n    util = __webpack_require__(1);\n\nmodule.exports = addBorderSegments;\n\nfunction addBorderSegments(g) {\n  function dfs(v) {\n    var children = g.children(v),\n        node = g.node(v);\n    if (children.length) {\n      _.forEach(children, dfs);\n    }\n\n    if (_.has(node, \"minRank\")) {\n      node.borderLeft = [];\n      node.borderRight = [];\n      for (var rank = node.minRank, maxRank = node.maxRank + 1;\n           rank < maxRank;\n           ++rank) {\n        addBorderNode(g, \"borderLeft\", \"_bl\", v, node, rank);\n        addBorderNode(g, \"borderRight\", \"_br\", v, node, rank);\n      }\n    }\n  }\n\n  _.forEach(g.children(), dfs);\n}\n\nfunction addBorderNode(g, prop, prefix, sg, sgNode, rank) {\n  var label = { width: 0, height: 0, rank: rank, borderType: prop },\n      prev = sgNode[prop][rank - 1],\n      curr = util.addDummyNode(g, \"border\", label, prefix);\n  sgNode[prop][rank] = curr;\n  g.setParent(curr, sg);\n  if (prev) {\n    g.setEdge(prev, curr, { weight: 1 });\n  }\n}\n\n\n/***/ }),\n/* 64 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _ = __webpack_require__(0);\n\nmodule.exports = {\n  adjust: adjust,\n  undo: undo\n};\n\nfunction adjust(g) {\n  var rankDir = g.graph().rankdir.toLowerCase();\n  if (rankDir === \"lr\" || rankDir === \"rl\") {\n    swapWidthHeight(g);\n  }\n}\n\nfunction undo(g) {\n  var rankDir = g.graph().rankdir.toLowerCase();\n  if (rankDir === \"bt\" || rankDir === \"rl\") {\n    reverseY(g);\n  }\n\n  if (rankDir === \"lr\" || rankDir === \"rl\") {\n    swapXY(g);\n    swapWidthHeight(g);\n  }\n}\n\nfunction swapWidthHeight(g) {\n  _.forEach(g.nodes(), function(v) { swapWidthHeightOne(g.node(v)); });\n  _.forEach(g.edges(), function(e) { swapWidthHeightOne(g.edge(e)); });\n}\n\nfunction swapWidthHeightOne(attrs) {\n  var w = attrs.width;\n  attrs.width = attrs.height;\n  attrs.height = w;\n}\n\nfunction reverseY(g) {\n  _.forEach(g.nodes(), function(v) { reverseYOne(g.node(v)); });\n\n  _.forEach(g.edges(), function(e) {\n    var edge = g.edge(e);\n    _.forEach(edge.points, reverseYOne);\n    if (_.has(edge, \"y\")) {\n      reverseYOne(edge);\n    }\n  });\n}\n\nfunction reverseYOne(attrs) {\n  attrs.y = -attrs.y;\n}\n\nfunction swapXY(g) {\n  _.forEach(g.nodes(), function(v) { swapXYOne(g.node(v)); });\n\n  _.forEach(g.edges(), function(e) {\n    var edge = g.edge(e);\n    _.forEach(edge.points, swapXYOne);\n    if (_.has(edge, \"x\")) {\n      swapXYOne(edge);\n    }\n  });\n}\n\nfunction swapXYOne(attrs) {\n  var x = attrs.x;\n  attrs.x = attrs.y;\n  attrs.y = x;\n}\n\n\n/***/ }),\n/* 65 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _ = __webpack_require__(0),\n    initOrder = __webpack_require__(66),\n    crossCount = __webpack_require__(67),\n    sortSubgraph = __webpack_require__(68),\n    buildLayerGraph = __webpack_require__(72),\n    addSubgraphConstraints = __webpack_require__(73),\n    Graph = __webpack_require__(3).Graph,\n    util = __webpack_require__(1);\n\nmodule.exports = order;\n\n/*\n * Applies heuristics to minimize edge crossings in the graph and sets the best\n * order solution as an order attribute on each node.\n *\n * Pre-conditions:\n *\n *    1. Graph must be DAG\n *    2. Graph nodes must be objects with a \"rank\" attribute\n *    3. Graph edges must have the \"weight\" attribute\n *\n * Post-conditions:\n *\n *    1. Graph nodes will have an \"order\" attribute based on the results of the\n *       algorithm.\n */\nfunction order(g) {\n  var maxRank = util.maxRank(g),\n      downLayerGraphs = buildLayerGraphs(g, _.range(1, maxRank + 1), \"inEdges\"),\n      upLayerGraphs = buildLayerGraphs(g, _.range(maxRank - 1, -1, -1), \"outEdges\");\n\n  var layering = initOrder(g);\n  assignOrder(g, layering);\n\n  var bestCC = Number.POSITIVE_INFINITY,\n      best;\n\n  for (var i = 0, lastBest = 0; lastBest < 4; ++i, ++lastBest) {\n    sweepLayerGraphs(i % 2 ? downLayerGraphs : upLayerGraphs, i % 4 >= 2);\n\n    layering = util.buildLayerMatrix(g);\n    var cc = crossCount(g, layering);\n    if (cc < bestCC) {\n      lastBest = 0;\n      best = _.cloneDeep(layering);\n      bestCC = cc;\n    }\n  }\n\n  assignOrder(g, best);\n}\n\nfunction buildLayerGraphs(g, ranks, relationship) {\n  return _.map(ranks, function(rank) {\n    return buildLayerGraph(g, rank, relationship);\n  });\n}\n\nfunction sweepLayerGraphs(layerGraphs, biasRight) {\n  var cg = new Graph();\n  _.forEach(layerGraphs, function(lg) {\n    var root = lg.graph().root;\n    var sorted = sortSubgraph(lg, root, cg, biasRight);\n    _.forEach(sorted.vs, function(v, i) {\n      lg.node(v).order = i;\n    });\n    addSubgraphConstraints(lg, cg, sorted.vs);\n  });\n}\n\nfunction assignOrder(g, layering) {\n  _.forEach(layering, function(layer) {\n    _.forEach(layer, function(v, i) {\n      g.node(v).order = i;\n    });\n  });\n}\n\n\n/***/ }),\n/* 66 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _ = __webpack_require__(0);\n\nmodule.exports = initOrder;\n\n/*\n * Assigns an initial order value for each node by performing a DFS search\n * starting from nodes in the first rank. Nodes are assigned an order in their\n * rank as they are first visited.\n *\n * This approach comes from Gansner, et al., \"A Technique for Drawing Directed\n * Graphs.\"\n *\n * Returns a layering matrix with an array per layer and each layer sorted by\n * the order of its nodes.\n */\nfunction initOrder(g) {\n  var visited = {},\n      simpleNodes = _.filter(g.nodes(), function(v) {\n        return !g.children(v).length;\n      }),\n      maxRank = _.max(_.map(simpleNodes, function(v) { return g.node(v).rank; })),\n      layers = _.map(_.range(maxRank + 1), function() { return []; });\n\n  function dfs(v) {\n    if (_.has(visited, v)) return;\n    visited[v] = true;\n    var node = g.node(v);\n    layers[node.rank].push(v);\n    _.forEach(g.successors(v), dfs);\n  }\n\n  var orderedVs = _.sortBy(simpleNodes, function(v) { return g.node(v).rank; });\n  _.forEach(orderedVs, dfs);\n\n  return layers;\n}\n\n\n/***/ }),\n/* 67 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _ = __webpack_require__(0);\n\nmodule.exports = crossCount;\n\n/*\n * A function that takes a layering (an array of layers, each with an array of\n * ordererd nodes) and a graph and returns a weighted crossing count.\n *\n * Pre-conditions:\n *\n *    1. Input graph must be simple (not a multigraph), directed, and include\n *       only simple edges.\n *    2. Edges in the input graph must have assigned weights.\n *\n * Post-conditions:\n *\n *    1. The graph and layering matrix are left unchanged.\n *\n * This algorithm is derived from Barth, et al., \"Bilayer Cross Counting.\"\n */\nfunction crossCount(g, layering) {\n  var cc = 0;\n  for (var i = 1; i < layering.length; ++i) {\n    cc += twoLayerCrossCount(g, layering[i-1], layering[i]);\n  }\n  return cc;\n}\n\nfunction twoLayerCrossCount(g, northLayer, southLayer) {\n  // Sort all of the edges between the north and south layers by their position\n  // in the north layer and then the south. Map these edges to the position of\n  // their head in the south layer.\n  var southPos = _.zipObject(southLayer,\n                             _.map(southLayer, function (v, i) { return i; }));\n  var southEntries = _.flatten(_.map(northLayer, function(v) {\n    return _.chain(g.outEdges(v))\n            .map(function(e) {\n              return { pos: southPos[e.w], weight: g.edge(e).weight };\n            })\n            .sortBy(\"pos\")\n            .value();\n  }), true);\n\n  // Build the accumulator tree\n  var firstIndex = 1;\n  while (firstIndex < southLayer.length) firstIndex <<= 1;\n  var treeSize = 2 * firstIndex - 1;\n  firstIndex -= 1;\n  var tree = _.map(new Array(treeSize), function() { return 0; });\n\n  // Calculate the weighted crossings\n  var cc = 0;\n  _.forEach(southEntries.forEach(function(entry) {\n    var index = entry.pos + firstIndex;\n    tree[index] += entry.weight;\n    var weightSum = 0;\n    while (index > 0) {\n      if (index % 2) {\n        weightSum += tree[index + 1];\n      }\n      index = (index - 1) >> 1;\n      tree[index] += entry.weight;\n    }\n    cc += entry.weight * weightSum;\n  }));\n\n  return cc;\n}\n\n\n/***/ }),\n/* 68 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _ = __webpack_require__(0),\n    barycenter = __webpack_require__(69),\n    resolveConflicts = __webpack_require__(70),\n    sort = __webpack_require__(71);\n\nmodule.exports = sortSubgraph;\n\nfunction sortSubgraph(g, v, cg, biasRight) {\n  var movable = g.children(v),\n      node = g.node(v),\n      bl = node ? node.borderLeft : undefined,\n      br = node ? node.borderRight: undefined,\n      subgraphs = {};\n\n  if (bl) {\n    movable = _.filter(movable, function(w) {\n      return w !== bl && w !== br;\n    });\n  }\n\n  var barycenters = barycenter(g, movable);\n  _.forEach(barycenters, function(entry) {\n    if (g.children(entry.v).length) {\n      var subgraphResult = sortSubgraph(g, entry.v, cg, biasRight);\n      subgraphs[entry.v] = subgraphResult;\n      if (_.has(subgraphResult, \"barycenter\")) {\n        mergeBarycenters(entry, subgraphResult);\n      }\n    }\n  });\n\n  var entries = resolveConflicts(barycenters, cg);\n  expandSubgraphs(entries, subgraphs);\n\n  var result = sort(entries, biasRight);\n\n  if (bl) {\n    result.vs = _.flatten([bl, result.vs, br], true);\n    if (g.predecessors(bl).length) {\n      var blPred = g.node(g.predecessors(bl)[0]),\n          brPred = g.node(g.predecessors(br)[0]);\n      if (!_.has(result, \"barycenter\")) {\n        result.barycenter = 0;\n        result.weight = 0;\n      }\n      result.barycenter = (result.barycenter * result.weight +\n                           blPred.order + brPred.order) / (result.weight + 2);\n      result.weight += 2;\n    }\n  }\n\n  return result;\n}\n\nfunction expandSubgraphs(entries, subgraphs) {\n  _.forEach(entries, function(entry) {\n    entry.vs = _.flatten(entry.vs.map(function(v) {\n      if (subgraphs[v]) {\n        return subgraphs[v].vs;\n      }\n      return v;\n    }), true);\n  });\n}\n\nfunction mergeBarycenters(target, other) {\n  if (!_.isUndefined(target.barycenter)) {\n    target.barycenter = (target.barycenter * target.weight +\n                         other.barycenter * other.weight) /\n                        (target.weight + other.weight);\n    target.weight += other.weight;\n  } else {\n    target.barycenter = other.barycenter;\n    target.weight = other.weight;\n  }\n}\n\n\n/***/ }),\n/* 69 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _ = __webpack_require__(0);\n\nmodule.exports = barycenter;\n\nfunction barycenter(g, movable) {\n  return _.map(movable, function(v) {\n    var inV = g.inEdges(v);\n    if (!inV.length) {\n      return { v: v };\n    } else {\n      var result = _.reduce(inV, function(acc, e) {\n        var edge = g.edge(e),\n            nodeU = g.node(e.v);\n        return {\n          sum: acc.sum + (edge.weight * nodeU.order),\n          weight: acc.weight + edge.weight\n        };\n      }, { sum: 0, weight: 0 });\n\n      return {\n        v: v,\n        barycenter: result.sum / result.weight,\n        weight: result.weight\n      };\n    }\n  });\n}\n\n\n\n/***/ }),\n/* 70 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _ = __webpack_require__(0);\n\nmodule.exports = resolveConflicts;\n\n/*\n * Given a list of entries of the form {v, barycenter, weight} and a\n * constraint graph this function will resolve any conflicts between the\n * constraint graph and the barycenters for the entries. If the barycenters for\n * an entry would violate a constraint in the constraint graph then we coalesce\n * the nodes in the conflict into a new node that respects the contraint and\n * aggregates barycenter and weight information.\n *\n * This implementation is based on the description in Forster, \"A Fast and\n * Simple Hueristic for Constrained Two-Level Crossing Reduction,\" thought it\n * differs in some specific details.\n *\n * Pre-conditions:\n *\n *    1. Each entry has the form {v, barycenter, weight}, or if the node has\n *       no barycenter, then {v}.\n *\n * Returns:\n *\n *    A new list of entries of the form {vs, i, barycenter, weight}. The list\n *    `vs` may either be a singleton or it may be an aggregation of nodes\n *    ordered such that they do not violate constraints from the constraint\n *    graph. The property `i` is the lowest original index of any of the\n *    elements in `vs`.\n */\nfunction resolveConflicts(entries, cg) {\n  var mappedEntries = {};\n  _.forEach(entries, function(entry, i) {\n    var tmp = mappedEntries[entry.v] = {\n      indegree: 0,\n      \"in\": [],\n      out: [],\n      vs: [entry.v],\n      i: i\n    };\n    if (!_.isUndefined(entry.barycenter)) {\n      tmp.barycenter = entry.barycenter;\n      tmp.weight = entry.weight;\n    }\n  });\n\n  _.forEach(cg.edges(), function(e) {\n    var entryV = mappedEntries[e.v],\n        entryW = mappedEntries[e.w];\n    if (!_.isUndefined(entryV) && !_.isUndefined(entryW)) {\n      entryW.indegree++;\n      entryV.out.push(mappedEntries[e.w]);\n    }\n  });\n\n  var sourceSet = _.filter(mappedEntries, function(entry) {\n    return !entry.indegree;\n  });\n\n  return doResolveConflicts(sourceSet);\n}\n\nfunction doResolveConflicts(sourceSet) {\n  var entries = [];\n\n  function handleIn(vEntry) {\n    return function(uEntry) {\n      if (uEntry.merged) {\n        return;\n      }\n      if (_.isUndefined(uEntry.barycenter) ||\n          _.isUndefined(vEntry.barycenter) ||\n          uEntry.barycenter >= vEntry.barycenter) {\n        mergeEntries(vEntry, uEntry);\n      }\n    };\n  }\n\n  function handleOut(vEntry) {\n    return function(wEntry) {\n      wEntry[\"in\"].push(vEntry);\n      if (--wEntry.indegree === 0) {\n        sourceSet.push(wEntry);\n      }\n    };\n  }\n\n  while (sourceSet.length) {\n    var entry = sourceSet.pop();\n    entries.push(entry);\n    _.forEach(entry[\"in\"].reverse(), handleIn(entry));\n    _.forEach(entry.out, handleOut(entry));\n  }\n\n  return _.chain(entries)\n          .filter(function(entry) { return !entry.merged; })\n          .map(function(entry) {\n            return _.pick(entry, [\"vs\", \"i\", \"barycenter\", \"weight\"]);\n          })\n          .value();\n}\n\nfunction mergeEntries(target, source) {\n  var sum = 0,\n      weight = 0;\n\n  if (target.weight) {\n    sum += target.barycenter * target.weight;\n    weight += target.weight;\n  }\n\n  if (source.weight) {\n    sum += source.barycenter * source.weight;\n    weight += source.weight;\n  }\n\n  target.vs = source.vs.concat(target.vs);\n  target.barycenter = sum / weight;\n  target.weight = weight;\n  target.i = Math.min(source.i, target.i);\n  source.merged = true;\n}\n\n\n/***/ }),\n/* 71 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _ = __webpack_require__(0),\n    util = __webpack_require__(1);\n\nmodule.exports = sort;\n\nfunction sort(entries, biasRight) {\n  var parts = util.partition(entries, function(entry) {\n    return _.has(entry, \"barycenter\");\n  });\n  var sortable = parts.lhs,\n      unsortable = _.sortBy(parts.rhs, function(entry) { return -entry.i; }),\n      vs = [],\n      sum = 0,\n      weight = 0,\n      vsIndex = 0;\n\n  sortable.sort(compareWithBias(!!biasRight));\n\n  vsIndex = consumeUnsortable(vs, unsortable, vsIndex);\n\n  _.forEach(sortable, function (entry) {\n    vsIndex += entry.vs.length;\n    vs.push(entry.vs);\n    sum += entry.barycenter * entry.weight;\n    weight += entry.weight;\n    vsIndex = consumeUnsortable(vs, unsortable, vsIndex);\n  });\n\n  var result = { vs: _.flatten(vs, true) };\n  if (weight) {\n    result.barycenter = sum / weight;\n    result.weight = weight;\n  }\n  return result;\n}\n\nfunction consumeUnsortable(vs, unsortable, index) {\n  var last;\n  while (unsortable.length && (last = _.last(unsortable)).i <= index) {\n    unsortable.pop();\n    vs.push(last.vs);\n    index++;\n  }\n  return index;\n}\n\nfunction compareWithBias(bias) {\n  return function(entryV, entryW) {\n    if (entryV.barycenter < entryW.barycenter) {\n      return -1;\n    } else if (entryV.barycenter > entryW.barycenter) {\n      return 1;\n    }\n\n    return !bias ? entryV.i - entryW.i : entryW.i - entryV.i;\n  };\n}\n\n\n/***/ }),\n/* 72 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _ = __webpack_require__(0),\n    Graph = __webpack_require__(3).Graph;\n\nmodule.exports = buildLayerGraph;\n\n/*\n * Constructs a graph that can be used to sort a layer of nodes. The graph will\n * contain all base and subgraph nodes from the request layer in their original\n * hierarchy and any edges that are incident on these nodes and are of the type\n * requested by the \"relationship\" parameter.\n *\n * Nodes from the requested rank that do not have parents are assigned a root\n * node in the output graph, which is set in the root graph attribute. This\n * makes it easy to walk the hierarchy of movable nodes during ordering.\n *\n * Pre-conditions:\n *\n *    1. Input graph is a DAG\n *    2. Base nodes in the input graph have a rank attribute\n *    3. Subgraph nodes in the input graph has minRank and maxRank attributes\n *    4. Edges have an assigned weight\n *\n * Post-conditions:\n *\n *    1. Output graph has all nodes in the movable rank with preserved\n *       hierarchy.\n *    2. Root nodes in the movable layer are made children of the node\n *       indicated by the root attribute of the graph.\n *    3. Non-movable nodes incident on movable nodes, selected by the\n *       relationship parameter, are included in the graph (without hierarchy).\n *    4. Edges incident on movable nodes, selected by the relationship\n *       parameter, are added to the output graph.\n *    5. The weights for copied edges are aggregated as need, since the output\n *       graph is not a multi-graph.\n */\nfunction buildLayerGraph(g, rank, relationship) {\n  var root = createRootNode(g),\n      result = new Graph({ compound: true }).setGraph({ root: root })\n                  .setDefaultNodeLabel(function(v) { return g.node(v); });\n\n  _.forEach(g.nodes(), function(v) {\n    var node = g.node(v),\n        parent = g.parent(v);\n\n    if (node.rank === rank || node.minRank <= rank && rank <= node.maxRank) {\n      result.setNode(v);\n      result.setParent(v, parent || root);\n\n      // This assumes we have only short edges!\n      _.forEach(g[relationship](v), function(e) {\n        var u = e.v === v ? e.w : e.v,\n            edge = result.edge(u, v),\n            weight = !_.isUndefined(edge) ? edge.weight : 0;\n        result.setEdge(u, v, { weight: g.edge(e).weight + weight });\n      });\n\n      if (_.has(node, \"minRank\")) {\n        result.setNode(v, {\n          borderLeft: node.borderLeft[rank],\n          borderRight: node.borderRight[rank]\n        });\n      }\n    }\n  });\n\n  return result;\n}\n\nfunction createRootNode(g) {\n  var v;\n  while (g.hasNode((v = _.uniqueId(\"_root\"))));\n  return v;\n}\n\n\n/***/ }),\n/* 73 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _ = __webpack_require__(0);\n\nmodule.exports = addSubgraphConstraints;\n\nfunction addSubgraphConstraints(g, cg, vs) {\n  var prev = {},\n      rootPrev;\n\n  _.forEach(vs, function(v) {\n    var child = g.parent(v),\n        parent,\n        prevChild;\n    while (child) {\n      parent = g.parent(child);\n      if (parent) {\n        prevChild = prev[parent];\n        prev[parent] = child;\n      } else {\n        prevChild = rootPrev;\n        rootPrev = child;\n      }\n      if (prevChild && prevChild !== child) {\n        cg.setEdge(prevChild, child);\n        return;\n      }\n      child = parent;\n    }\n  });\n\n  /*\n  function dfs(v) {\n    var children = v ? g.children(v) : g.children();\n    if (children.length) {\n      var min = Number.POSITIVE_INFINITY,\n          subgraphs = [];\n      _.each(children, function(child) {\n        var childMin = dfs(child);\n        if (g.children(child).length) {\n          subgraphs.push({ v: child, order: childMin });\n        }\n        min = Math.min(min, childMin);\n      });\n      _.reduce(_.sortBy(subgraphs, \"order\"), function(prev, curr) {\n        cg.setEdge(prev.v, curr.v);\n        return curr;\n      });\n      return min;\n    }\n    return g.node(v).order;\n  }\n  dfs(undefined);\n  */\n}\n\n\n/***/ }),\n/* 74 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _ = __webpack_require__(0),\n    util = __webpack_require__(1),\n    positionX = __webpack_require__(75).positionX;\n\nmodule.exports = position;\n\nfunction position(g) {\n  g = util.asNonCompoundGraph(g);\n\n  positionY(g);\n  _.forEach(positionX(g), function(x, v) {\n    g.node(v).x = x;\n  });\n}\n\nfunction positionY(g) {\n  var layering = util.buildLayerMatrix(g),\n      rankSep = g.graph().ranksep,\n      prevY = 0;\n  _.forEach(layering, function(layer) {\n    var maxHeight = _.max(_.map(layer, function(v) { return g.node(v).height; }));\n    _.forEach(layer, function(v) {\n      g.node(v).y = prevY + maxHeight / 2;\n    });\n    prevY += maxHeight + rankSep;\n  });\n}\n\n\n\n/***/ }),\n/* 75 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _ = __webpack_require__(0),\n    Graph = __webpack_require__(3).Graph,\n    util = __webpack_require__(1);\n\n/*\n * This module provides coordinate assignment based on Brandes and Köpf, \"Fast\n * and Simple Horizontal Coordinate Assignment.\"\n */\n\nmodule.exports = {\n  positionX: positionX,\n  findType1Conflicts: findType1Conflicts,\n  findType2Conflicts: findType2Conflicts,\n  addConflict: addConflict,\n  hasConflict: hasConflict,\n  verticalAlignment: verticalAlignment,\n  horizontalCompaction: horizontalCompaction,\n  alignCoordinates: alignCoordinates,\n  findSmallestWidthAlignment: findSmallestWidthAlignment,\n  balance: balance\n};\n\n/*\n * Marks all edges in the graph with a type-1 conflict with the \"type1Conflict\"\n * property. A type-1 conflict is one where a non-inner segment crosses an\n * inner segment. An inner segment is an edge with both incident nodes marked\n * with the \"dummy\" property.\n *\n * This algorithm scans layer by layer, starting with the second, for type-1\n * conflicts between the current layer and the previous layer. For each layer\n * it scans the nodes from left to right until it reaches one that is incident\n * on an inner segment. It then scans predecessors to determine if they have\n * edges that cross that inner segment. At the end a final scan is done for all\n * nodes on the current rank to see if they cross the last visited inner\n * segment.\n *\n * This algorithm (safely) assumes that a dummy node will only be incident on a\n * single node in the layers being scanned.\n */\nfunction findType1Conflicts(g, layering) {\n  var conflicts = {};\n\n  function visitLayer(prevLayer, layer) {\n    var\n      // last visited node in the previous layer that is incident on an inner\n      // segment.\n      k0 = 0,\n      // Tracks the last node in this layer scanned for crossings with a type-1\n      // segment.\n      scanPos = 0,\n      prevLayerLength = prevLayer.length,\n      lastNode = _.last(layer);\n\n    _.forEach(layer, function(v, i) {\n      var w = findOtherInnerSegmentNode(g, v),\n          k1 = w ? g.node(w).order : prevLayerLength;\n\n      if (w || v === lastNode) {\n        _.forEach(layer.slice(scanPos, i +1), function(scanNode) {\n          _.forEach(g.predecessors(scanNode), function(u) {\n            var uLabel = g.node(u),\n                uPos = uLabel.order;\n            if ((uPos < k0 || k1 < uPos) &&\n                !(uLabel.dummy && g.node(scanNode).dummy)) {\n              addConflict(conflicts, u, scanNode);\n            }\n          });\n        });\n        scanPos = i + 1;\n        k0 = k1;\n      }\n    });\n\n    return layer;\n  }\n\n  _.reduce(layering, visitLayer);\n  return conflicts;\n}\n\nfunction findType2Conflicts(g, layering) {\n  var conflicts = {};\n\n  function scan(south, southPos, southEnd, prevNorthBorder, nextNorthBorder) {\n    var v;\n    _.forEach(_.range(southPos, southEnd), function(i) {\n      v = south[i];\n      if (g.node(v).dummy) {\n        _.forEach(g.predecessors(v), function(u) {\n          var uNode = g.node(u);\n          if (uNode.dummy &&\n              (uNode.order < prevNorthBorder || uNode.order > nextNorthBorder)) {\n            addConflict(conflicts, u, v);\n          }\n        });\n      }\n    });\n  }\n\n\n  function visitLayer(north, south) {\n    var prevNorthPos = -1,\n        nextNorthPos,\n        southPos = 0;\n\n    _.forEach(south, function(v, southLookahead) {\n      if (g.node(v).dummy === \"border\") {\n        var predecessors = g.predecessors(v);\n        if (predecessors.length) {\n          nextNorthPos = g.node(predecessors[0]).order;\n          scan(south, southPos, southLookahead, prevNorthPos, nextNorthPos);\n          southPos = southLookahead;\n          prevNorthPos = nextNorthPos;\n        }\n      }\n      scan(south, southPos, south.length, nextNorthPos, north.length);\n    });\n\n    return south;\n  }\n\n  _.reduce(layering, visitLayer);\n  return conflicts;\n}\n\nfunction findOtherInnerSegmentNode(g, v) {\n  if (g.node(v).dummy) {\n    return _.find(g.predecessors(v), function(u) {\n      return g.node(u).dummy;\n    });\n  }\n}\n\nfunction addConflict(conflicts, v, w) {\n  if (v > w) {\n    var tmp = v;\n    v = w;\n    w = tmp;\n  }\n\n  var conflictsV = conflicts[v];\n  if (!conflictsV) {\n    conflicts[v] = conflictsV = {};\n  }\n  conflictsV[w] = true;\n}\n\nfunction hasConflict(conflicts, v, w) {\n  if (v > w) {\n    var tmp = v;\n    v = w;\n    w = tmp;\n  }\n  return _.has(conflicts[v], w);\n}\n\n/*\n * Try to align nodes into vertical \"blocks\" where possible. This algorithm\n * attempts to align a node with one of its median neighbors. If the edge\n * connecting a neighbor is a type-1 conflict then we ignore that possibility.\n * If a previous node has already formed a block with a node after the node\n * we're trying to form a block with, we also ignore that possibility - our\n * blocks would be split in that scenario.\n */\nfunction verticalAlignment(g, layering, conflicts, neighborFn) {\n  var root = {},\n      align = {},\n      pos = {};\n\n  // We cache the position here based on the layering because the graph and\n  // layering may be out of sync. The layering matrix is manipulated to\n  // generate different extreme alignments.\n  _.forEach(layering, function(layer) {\n    _.forEach(layer, function(v, order) {\n      root[v] = v;\n      align[v] = v;\n      pos[v] = order;\n    });\n  });\n\n  _.forEach(layering, function(layer) {\n    var prevIdx = -1;\n    _.forEach(layer, function(v) {\n      var ws = neighborFn(v);\n      if (ws.length) {\n        ws = _.sortBy(ws, function(w) { return pos[w]; });\n        var mp = (ws.length - 1) / 2;\n        for (var i = Math.floor(mp), il = Math.ceil(mp); i <= il; ++i) {\n          var w = ws[i];\n          if (align[v] === v &&\n              prevIdx < pos[w] &&\n              !hasConflict(conflicts, v, w)) {\n            align[w] = v;\n            align[v] = root[v] = root[w];\n            prevIdx = pos[w];\n          }\n        }\n      }\n    });\n  });\n\n  return { root: root, align: align };\n}\n\nfunction horizontalCompaction(g, layering, root, align, reverseSep) {\n  // This portion of the algorithm differs from BK due to a number of problems.\n  // Instead of their algorithm we construct a new block graph and do two\n  // sweeps. The first sweep places blocks with the smallest possible\n  // coordinates. The second sweep removes unused space by moving blocks to the\n  // greatest coordinates without violating separation.\n  var xs = {},\n      blockG = buildBlockGraph(g, layering, root, reverseSep),\n      borderType = reverseSep ? \"borderLeft\" : \"borderRight\";\n\n  function iterate(setXsFunc, nextNodesFunc) {\n    var stack = blockG.nodes();\n    var elem = stack.pop();\n    var visited = {};\n    while (elem) {\n      if (visited[elem]) {\n        setXsFunc(elem);\n      } else {\n        visited[elem] = true;\n        stack.push(elem);\n        stack = stack.concat(nextNodesFunc(elem));\n      }\n\n      elem = stack.pop();\n    }\n  }\n\n  // First pass, assign smallest coordinates\n  function pass1(elem) {\n    xs[elem] = blockG.inEdges(elem).reduce(function(acc, e) {\n      return Math.max(acc, xs[e.v] + blockG.edge(e));\n    }, 0);\n  }\n\n  // Second pass, assign greatest coordinates\n  function pass2(elem) {\n    var min = blockG.outEdges(elem).reduce(function(acc, e) {\n      return Math.min(acc, xs[e.w] - blockG.edge(e));\n    }, Number.POSITIVE_INFINITY);\n\n    var node = g.node(elem);\n    if (min !== Number.POSITIVE_INFINITY && node.borderType !== borderType) {\n      xs[elem] = Math.max(xs[elem], min);\n    }\n  }\n\n  iterate(pass1, _.bind(blockG.predecessors, blockG));\n  iterate(pass2, _.bind(blockG.successors, blockG));\n\n  // Assign x coordinates to all nodes\n  _.forEach(align, function(v) {\n    xs[v] = xs[root[v]];\n  });\n\n  return xs;\n}\n\n\nfunction buildBlockGraph(g, layering, root, reverseSep) {\n  var blockGraph = new Graph(),\n      graphLabel = g.graph(),\n      sepFn = sep(graphLabel.nodesep, graphLabel.edgesep, reverseSep);\n\n  _.forEach(layering, function(layer) {\n    var u;\n    _.forEach(layer, function(v) {\n      var vRoot = root[v];\n      blockGraph.setNode(vRoot);\n      if (u) {\n        var uRoot = root[u],\n            prevMax = blockGraph.edge(uRoot, vRoot);\n        blockGraph.setEdge(uRoot, vRoot, Math.max(sepFn(g, v, u), prevMax || 0));\n      }\n      u = v;\n    });\n  });\n\n  return blockGraph;\n}\n\n/*\n * Returns the alignment that has the smallest width of the given alignments.\n */\nfunction findSmallestWidthAlignment(g, xss) {\n  return _.minBy(_.values(xss), function (xs) {\n    var max = Number.NEGATIVE_INFINITY;\n    var min = Number.POSITIVE_INFINITY;\n\n    _.forIn(xs, function (x, v) {\n      var halfWidth = width(g, v) / 2;\n\n      max = Math.max(x + halfWidth, max);\n      min = Math.min(x - halfWidth, min);\n    });\n\n    return max - min;\n  });\n}\n\n/*\n * Align the coordinates of each of the layout alignments such that\n * left-biased alignments have their minimum coordinate at the same point as\n * the minimum coordinate of the smallest width alignment and right-biased\n * alignments have their maximum coordinate at the same point as the maximum\n * coordinate of the smallest width alignment.\n */\nfunction alignCoordinates(xss, alignTo) {\n  var alignToVals = _.values(alignTo),\n      alignToMin = _.min(alignToVals),\n      alignToMax = _.max(alignToVals);\n\n  _.forEach([\"u\", \"d\"], function(vert) {\n    _.forEach([\"l\", \"r\"], function(horiz) {\n      var alignment = vert + horiz,\n          xs = xss[alignment],\n          delta;\n      if (xs === alignTo) return;\n\n      var xsVals = _.values(xs);\n      delta = horiz === \"l\" ? alignToMin - _.min(xsVals) : alignToMax - _.max(xsVals);\n\n      if (delta) {\n        xss[alignment] = _.mapValues(xs, function(x) { return x + delta; });\n      }\n    });\n  });\n}\n\nfunction balance(xss, align) {\n  return _.mapValues(xss.ul, function(ignore, v) {\n    if (align) {\n      return xss[align.toLowerCase()][v];\n    } else {\n      var xs = _.sortBy(_.map(xss, v));\n      return (xs[1] + xs[2]) / 2;\n    }\n  });\n}\n\nfunction positionX(g) {\n  var layering = util.buildLayerMatrix(g),\n      conflicts = _.merge(findType1Conflicts(g, layering),\n                          findType2Conflicts(g, layering));\n\n  var xss = {},\n      adjustedLayering;\n  _.forEach([\"u\", \"d\"], function(vert) {\n    adjustedLayering = vert === \"u\" ? layering : _.values(layering).reverse();\n    _.forEach([\"l\", \"r\"], function(horiz) {\n      if (horiz === \"r\") {\n        adjustedLayering = _.map(adjustedLayering, function(inner) {\n          return _.values(inner).reverse();\n        });\n      }\n\n      var neighborFn = _.bind(vert === \"u\" ? g.predecessors : g.successors, g);\n      var align = verticalAlignment(g, adjustedLayering, conflicts, neighborFn);\n      var xs = horizontalCompaction(g, adjustedLayering,\n                                    align.root, align.align,\n                                    horiz === \"r\");\n      if (horiz === \"r\") {\n        xs = _.mapValues(xs, function(x) { return -x; });\n      }\n      xss[vert + horiz] = xs;\n    });\n  });\n\n  var smallestWidth = findSmallestWidthAlignment(g, xss);\n  alignCoordinates(xss, smallestWidth);\n  return balance(xss, g.graph().align);\n}\n\nfunction sep(nodeSep, edgeSep, reverseSep) {\n  return function(g, v, w) {\n    var vLabel = g.node(v),\n        wLabel = g.node(w),\n        sum = 0,\n        delta;\n\n    sum += vLabel.width / 2;\n    if (_.has(vLabel, \"labelpos\")) {\n      switch (vLabel.labelpos.toLowerCase()) {\n        case \"l\": delta = -vLabel.width / 2; break;\n        case \"r\": delta = vLabel.width / 2; break;\n      }\n    }\n    if (delta) {\n      sum += reverseSep ? delta : -delta;\n    }\n    delta = 0;\n\n    sum += (vLabel.dummy ? edgeSep : nodeSep) / 2;\n    sum += (wLabel.dummy ? edgeSep : nodeSep) / 2;\n\n    sum += wLabel.width / 2;\n    if (_.has(wLabel, \"labelpos\")) {\n      switch (wLabel.labelpos.toLowerCase()) {\n        case \"l\": delta = wLabel.width / 2; break;\n        case \"r\": delta = -wLabel.width / 2; break;\n      }\n    }\n    if (delta) {\n      sum += reverseSep ? delta : -delta;\n    }\n    delta = 0;\n\n    return sum;\n  };\n}\n\nfunction width(g, v) {\n  return g.node(v).width;\n}\n\n\n/***/ }),\n/* 76 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _ = __webpack_require__(0),\n    util = __webpack_require__(1),\n    Graph = __webpack_require__(3).Graph;\n\nmodule.exports = {\n  debugOrdering: debugOrdering\n};\n\n/* istanbul ignore next */\nfunction debugOrdering(g) {\n  var layerMatrix = util.buildLayerMatrix(g);\n\n  var h = new Graph({ compound: true, multigraph: true }).setGraph({});\n\n  _.forEach(g.nodes(), function(v) {\n    h.setNode(v, { label: v });\n    h.setParent(v, \"layer\" + g.node(v).rank);\n  });\n\n  _.forEach(g.edges(), function(e) {\n    h.setEdge(e.v, e.w, {}, e.name);\n  });\n\n  _.forEach(layerMatrix, function(layer, i) {\n    var layerV = \"layer\" + i;\n    h.setNode(layerV, { rank: \"same\" });\n    _.reduce(layer, function(u, v) {\n      h.setEdge(u, v, { style: \"invis\" });\n      return v;\n    });\n  });\n\n  return h;\n}\n\n\n/***/ }),\n/* 77 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"0.8.2\";\n\n\n/***/ }),\n/* 78 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = register;\n/* unused harmony export unregister */\n// In production, we register a service worker to serve assets from local cache.\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\nvar isLocalhost=Boolean(window.location.hostname==='localhost'||// [::1] is the IPv6 localhost address.\nwindow.location.hostname==='[::1]'||// 127.0.0.1/8 is considered localhost for IPv4.\nwindow.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));function register(){if(\"production\"==='production'&&'serviceWorker'in navigator){// The URL constructor is available in all browsers that support SW.\nvar publicUrl=new URL(\".\",window.location);if(publicUrl.origin!==window.location.origin){// Our service worker won't work if PUBLIC_URL is on a different origin\n// from what our page is served on. This might happen if a CDN is used to\n// serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\nreturn;}window.addEventListener('load',function(){var swUrl=\".\"+'/service-worker.js';if(isLocalhost){// This is running on localhost. Lets check if a service worker still exists or not.\ncheckValidServiceWorker(swUrl);// Add some additional logging to localhost, pointing developers to the\n// service worker/PWA documentation.\nnavigator.serviceWorker.ready.then(function(){console.log('This web app is being served cache-first by a service '+'worker. To learn more, visit https://goo.gl/SC7cgQ');});}else{// Is not local host. Just register service worker\nregisterValidSW(swUrl);}});}}function registerValidSW(swUrl){navigator.serviceWorker.register(swUrl).then(function(registration){registration.onupdatefound=function(){var installingWorker=registration.installing;installingWorker.onstatechange=function(){if(installingWorker.state==='installed'){if(navigator.serviceWorker.controller){// At this point, the old content will have been purged and\n// the fresh content will have been added to the cache.\n// It's the perfect time to display a \"New content is\n// available; please refresh.\" message in your web app.\nconsole.log('New content is available; please refresh.');}else{// At this point, everything has been precached.\n// It's the perfect time to display a\n// \"Content is cached for offline use.\" message.\nconsole.log('Content is cached for offline use.');}}};};}).catch(function(error){console.error('Error during service worker registration:',error);});}function checkValidServiceWorker(swUrl){// Check if the service worker can be found. If it can't reload the page.\nfetch(swUrl).then(function(response){// Ensure service worker exists, and that we really are getting a JS file.\nif(response.status===404||response.headers.get('content-type').indexOf('javascript')===-1){// No service worker found. Probably a different app. Reload the page.\nnavigator.serviceWorker.ready.then(function(registration){registration.unregister().then(function(){window.location.reload();});});}else{// Service worker found. Proceed as normal.\nregisterValidSW(swUrl);}}).catch(function(){console.log('No internet connection found. App is running in offline mode.');});}function unregister(){if('serviceWorker'in navigator){navigator.serviceWorker.ready.then(function(registration){registration.unregister();});}}\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// static/js/main.8eed4433.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"./\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 20);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap c3c12a54c6331343e235","/* global window */\n\nvar lodash;\n\nif (typeof require === \"function\") {\n  try {\n    lodash = require(\"lodash\");\n  } catch (e) {}\n}\n\nif (!lodash) {\n  lodash = window._;\n}\n\nmodule.exports = lodash;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/dagre/lib/lodash.js\n// module id = 0\n// module chunks = 0","\"use strict\";\n\nvar _ = require(\"./lodash\"),\n    Graph = require(\"./graphlib\").Graph;\n\nmodule.exports = {\n  addDummyNode: addDummyNode,\n  simplify: simplify,\n  asNonCompoundGraph: asNonCompoundGraph,\n  successorWeights: successorWeights,\n  predecessorWeights: predecessorWeights,\n  intersectRect: intersectRect,\n  buildLayerMatrix: buildLayerMatrix,\n  normalizeRanks: normalizeRanks,\n  removeEmptyRanks: removeEmptyRanks,\n  addBorderNode: addBorderNode,\n  maxRank: maxRank,\n  partition: partition,\n  time: time,\n  notime: notime\n};\n\n/*\n * Adds a dummy node to the graph and return v.\n */\nfunction addDummyNode(g, type, attrs, name) {\n  var v;\n  do {\n    v = _.uniqueId(name);\n  } while (g.hasNode(v));\n\n  attrs.dummy = type;\n  g.setNode(v, attrs);\n  return v;\n}\n\n/*\n * Returns a new graph with only simple edges. Handles aggregation of data\n * associated with multi-edges.\n */\nfunction simplify(g) {\n  var simplified = new Graph().setGraph(g.graph());\n  _.forEach(g.nodes(), function(v) { simplified.setNode(v, g.node(v)); });\n  _.forEach(g.edges(), function(e) {\n    var simpleLabel = simplified.edge(e.v, e.w) || { weight: 0, minlen: 1 },\n        label = g.edge(e);\n    simplified.setEdge(e.v, e.w, {\n      weight: simpleLabel.weight + label.weight,\n      minlen: Math.max(simpleLabel.minlen, label.minlen)\n    });\n  });\n  return simplified;\n}\n\nfunction asNonCompoundGraph(g) {\n  var simplified = new Graph({ multigraph: g.isMultigraph() }).setGraph(g.graph());\n  _.forEach(g.nodes(), function(v) {\n    if (!g.children(v).length) {\n      simplified.setNode(v, g.node(v));\n    }\n  });\n  _.forEach(g.edges(), function(e) {\n    simplified.setEdge(e, g.edge(e));\n  });\n  return simplified;\n}\n\nfunction successorWeights(g) {\n  var weightMap = _.map(g.nodes(), function(v) {\n    var sucs = {};\n    _.forEach(g.outEdges(v), function(e) {\n      sucs[e.w] = (sucs[e.w] || 0) + g.edge(e).weight;\n    });\n    return sucs;\n  });\n  return _.zipObject(g.nodes(), weightMap);\n}\n\nfunction predecessorWeights(g) {\n  var weightMap = _.map(g.nodes(), function(v) {\n    var preds = {};\n    _.forEach(g.inEdges(v), function(e) {\n      preds[e.v] = (preds[e.v] || 0) + g.edge(e).weight;\n    });\n    return preds;\n  });\n  return _.zipObject(g.nodes(), weightMap);\n}\n\n/*\n * Finds where a line starting at point ({x, y}) would intersect a rectangle\n * ({x, y, width, height}) if it were pointing at the rectangle's center.\n */\nfunction intersectRect(rect, point) {\n  var x = rect.x;\n  var y = rect.y;\n\n  // Rectangle intersection algorithm from:\n  // http://math.stackexchange.com/questions/108113/find-edge-between-two-boxes\n  var dx = point.x - x;\n  var dy = point.y - y;\n  var w = rect.width / 2;\n  var h = rect.height / 2;\n\n  if (!dx && !dy) {\n    throw new Error(\"Not possible to find intersection inside of the rectangle\");\n  }\n\n  var sx, sy;\n  if (Math.abs(dy) * w > Math.abs(dx) * h) {\n    // Intersection is top or bottom of rect.\n    if (dy < 0) {\n      h = -h;\n    }\n    sx = h * dx / dy;\n    sy = h;\n  } else {\n    // Intersection is left or right of rect.\n    if (dx < 0) {\n      w = -w;\n    }\n    sx = w;\n    sy = w * dy / dx;\n  }\n\n  return { x: x + sx, y: y + sy };\n}\n\n/*\n * Given a DAG with each node assigned \"rank\" and \"order\" properties, this\n * function will produce a matrix with the ids of each node.\n */\nfunction buildLayerMatrix(g) {\n  var layering = _.map(_.range(maxRank(g) + 1), function() { return []; });\n  _.forEach(g.nodes(), function(v) {\n    var node = g.node(v),\n        rank = node.rank;\n    if (!_.isUndefined(rank)) {\n      layering[rank][node.order] = v;\n    }\n  });\n  return layering;\n}\n\n/*\n * Adjusts the ranks for all nodes in the graph such that all nodes v have\n * rank(v) >= 0 and at least one node w has rank(w) = 0.\n */\nfunction normalizeRanks(g) {\n  var min = _.minBy(_.map(g.nodes(), function(v) { return g.node(v).rank; }));\n  _.forEach(g.nodes(), function(v) {\n    var node = g.node(v);\n    if (_.has(node, \"rank\")) {\n      node.rank -= min;\n    }\n  });\n}\n\nfunction removeEmptyRanks(g) {\n  // Ranks may not start at 0, so we need to offset them\n  var offset = _.minBy(_.map(g.nodes(), function(v) { return g.node(v).rank; }));\n\n  var layers = [];\n  _.forEach(g.nodes(), function(v) {\n    var rank = g.node(v).rank - offset;\n    if (!layers[rank]) {\n      layers[rank] = [];\n    }\n    layers[rank].push(v);\n  });\n\n  var delta = 0,\n      nodeRankFactor = g.graph().nodeRankFactor;\n  _.forEach(layers, function(vs, i) {\n    if (_.isUndefined(vs) && i % nodeRankFactor !== 0) {\n      --delta;\n    } else if (delta) {\n      _.forEach(vs, function(v) { g.node(v).rank += delta; });\n    }\n  });\n}\n\nfunction addBorderNode(g, prefix, rank, order) {\n  var node = {\n    width: 0,\n    height: 0\n  };\n  if (arguments.length >= 4) {\n    node.rank = rank;\n    node.order = order;\n  }\n  return addDummyNode(g, \"border\", node, prefix);\n}\n\nfunction maxRank(g) {\n  return _.max(_.map(g.nodes(), function(v) {\n    var rank = g.node(v).rank;\n    if (!_.isUndefined(rank)) {\n      return rank;\n    }\n  }));\n}\n\n/*\n * Partition a collection into two groups: `lhs` and `rhs`. If the supplied\n * function returns true for an entry it goes into `lhs`. Otherwise it goes\n * into `rhs.\n */\nfunction partition(collection, fn) {\n  var result = { lhs: [], rhs: [] };\n  _.forEach(collection, function(value) {\n    if (fn(value)) {\n      result.lhs.push(value);\n    } else {\n      result.rhs.push(value);\n    }\n  });\n  return result;\n}\n\n/*\n * Returns a new function that wraps `fn` with a timer. The wrapper logs the\n * time it takes to execute the function.\n */\nfunction time(name, fn) {\n  var start = _.now();\n  try {\n    return fn();\n  } finally {\n    console.log(name + \" time: \" + (_.now() - start) + \"ms\");\n  }\n}\n\nfunction notime(name, fn) {\n  return fn();\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/dagre/lib/util.js\n// module id = 1\n// module chunks = 0","/* global window */\n\nvar lodash;\n\nif (typeof require === \"function\") {\n  try {\n    lodash = require(\"lodash\");\n  } catch (e) {}\n}\n\nif (!lodash) {\n  lodash = window._;\n}\n\nmodule.exports = lodash;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/graphlib/lib/lodash.js\n// module id = 2\n// module chunks = 0","/* global window */\n\nvar graphlib;\n\nif (typeof require === \"function\") {\n  try {\n    graphlib = require(\"graphlib\");\n  } catch (e) {}\n}\n\nif (!graphlib) {\n  graphlib = window.graphlib;\n}\n\nmodule.exports = graphlib;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/dagre/lib/graphlib.js\n// module id = 3\n// module chunks = 0","\"use strict\";\n\nvar _ = require(\"../lodash\");\n\nmodule.exports = {\n  longestPath: longestPath,\n  slack: slack\n};\n\n/*\n * Initializes ranks for the input graph using the longest path algorithm. This\n * algorithm scales well and is fast in practice, it yields rather poor\n * solutions. Nodes are pushed to the lowest layer possible, leaving the bottom\n * ranks wide and leaving edges longer than necessary. However, due to its\n * speed, this algorithm is good for getting an initial ranking that can be fed\n * into other algorithms.\n *\n * This algorithm does not normalize layers because it will be used by other\n * algorithms in most cases. If using this algorithm directly, be sure to\n * run normalize at the end.\n *\n * Pre-conditions:\n *\n *    1. Input graph is a DAG.\n *    2. Input graph node labels can be assigned properties.\n *\n * Post-conditions:\n *\n *    1. Each node will be assign an (unnormalized) \"rank\" property.\n */\nfunction longestPath(g) {\n  var visited = {};\n\n  function dfs(v) {\n    var label = g.node(v);\n    if (_.has(visited, v)) {\n      return label.rank;\n    }\n    visited[v] = true;\n\n    var rank = _.minBy(_.map(g.outEdges(v), function(e) {\n      return dfs(e.w) - g.edge(e).minlen;\n    }));\n\n    if (rank === Number.POSITIVE_INFINITY || // return value of _.map([]) for Lodash 3\n        rank === undefined || // return value of _.map([]) for Lodash 4\n        rank === null) { // return value of _.map([null])\n      rank = 0;\n    }\n\n    return (label.rank = rank);\n  }\n\n  _.forEach(g.sources(), dfs);\n}\n\n/*\n * Returns the amount of slack for the given edge. The slack is defined as the\n * difference between the length of the edge and its minimum length.\n */\nfunction slack(g, e) {\n  return g.node(e.w).rank - g.node(e.v).rank - g.edge(e).minlen;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/dagre/lib/rank/util.js\n// module id = 4\n// module chunks = 0","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/object-assign/index.js\n// module id = 5\n// module chunks = 0","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react/index.js\n// module id = 6\n// module chunks = 0","\"use strict\";\n\nvar _ = require(\"./lodash\");\n\nmodule.exports = Graph;\n\nvar DEFAULT_EDGE_NAME = \"\\x00\",\n    GRAPH_NODE = \"\\x00\",\n    EDGE_KEY_DELIM = \"\\x01\";\n\n// Implementation notes:\n//\n//  * Node id query functions should return string ids for the nodes\n//  * Edge id query functions should return an \"edgeObj\", edge object, that is\n//    composed of enough information to uniquely identify an edge: {v, w, name}.\n//  * Internally we use an \"edgeId\", a stringified form of the edgeObj, to\n//    reference edges. This is because we need a performant way to look these\n//    edges up and, object properties, which have string keys, are the closest\n//    we're going to get to a performant hashtable in JavaScript.\n\nfunction Graph(opts) {\n  this._isDirected = _.has(opts, \"directed\") ? opts.directed : true;\n  this._isMultigraph = _.has(opts, \"multigraph\") ? opts.multigraph : false;\n  this._isCompound = _.has(opts, \"compound\") ? opts.compound : false;\n\n  // Label for the graph itself\n  this._label = undefined;\n\n  // Defaults to be set when creating a new node\n  this._defaultNodeLabelFn = _.constant(undefined);\n\n  // Defaults to be set when creating a new edge\n  this._defaultEdgeLabelFn = _.constant(undefined);\n\n  // v -> label\n  this._nodes = {};\n\n  if (this._isCompound) {\n    // v -> parent\n    this._parent = {};\n\n    // v -> children\n    this._children = {};\n    this._children[GRAPH_NODE] = {};\n  }\n\n  // v -> edgeObj\n  this._in = {};\n\n  // u -> v -> Number\n  this._preds = {};\n\n  // v -> edgeObj\n  this._out = {};\n\n  // v -> w -> Number\n  this._sucs = {};\n\n  // e -> edgeObj\n  this._edgeObjs = {};\n\n  // e -> label\n  this._edgeLabels = {};\n}\n\n/* Number of nodes in the graph. Should only be changed by the implementation. */\nGraph.prototype._nodeCount = 0;\n\n/* Number of edges in the graph. Should only be changed by the implementation. */\nGraph.prototype._edgeCount = 0;\n\n\n/* === Graph functions ========= */\n\nGraph.prototype.isDirected = function() {\n  return this._isDirected;\n};\n\nGraph.prototype.isMultigraph = function() {\n  return this._isMultigraph;\n};\n\nGraph.prototype.isCompound = function() {\n  return this._isCompound;\n};\n\nGraph.prototype.setGraph = function(label) {\n  this._label = label;\n  return this;\n};\n\nGraph.prototype.graph = function() {\n  return this._label;\n};\n\n\n/* === Node functions ========== */\n\nGraph.prototype.setDefaultNodeLabel = function(newDefault) {\n  if (!_.isFunction(newDefault)) {\n    newDefault = _.constant(newDefault);\n  }\n  this._defaultNodeLabelFn = newDefault;\n  return this;\n};\n\nGraph.prototype.nodeCount = function() {\n  return this._nodeCount;\n};\n\nGraph.prototype.nodes = function() {\n  return _.keys(this._nodes);\n};\n\nGraph.prototype.sources = function() {\n  var self = this;\n  return _.filter(this.nodes(), function(v) {\n    return _.isEmpty(self._in[v]);\n  });\n};\n\nGraph.prototype.sinks = function() {\n  var self = this;\n  return _.filter(this.nodes(), function(v) {\n    return _.isEmpty(self._out[v]);\n  });\n};\n\nGraph.prototype.setNodes = function(vs, value) {\n  var args = arguments;\n  var self = this;\n  _.each(vs, function(v) {\n    if (args.length > 1) {\n      self.setNode(v, value);\n    } else {\n      self.setNode(v);\n    }\n  });\n  return this;\n};\n\nGraph.prototype.setNode = function(v, value) {\n  if (_.has(this._nodes, v)) {\n    if (arguments.length > 1) {\n      this._nodes[v] = value;\n    }\n    return this;\n  }\n\n  this._nodes[v] = arguments.length > 1 ? value : this._defaultNodeLabelFn(v);\n  if (this._isCompound) {\n    this._parent[v] = GRAPH_NODE;\n    this._children[v] = {};\n    this._children[GRAPH_NODE][v] = true;\n  }\n  this._in[v] = {};\n  this._preds[v] = {};\n  this._out[v] = {};\n  this._sucs[v] = {};\n  ++this._nodeCount;\n  return this;\n};\n\nGraph.prototype.node = function(v) {\n  return this._nodes[v];\n};\n\nGraph.prototype.hasNode = function(v) {\n  return _.has(this._nodes, v);\n};\n\nGraph.prototype.removeNode =  function(v) {\n  var self = this;\n  if (_.has(this._nodes, v)) {\n    var removeEdge = function(e) { self.removeEdge(self._edgeObjs[e]); };\n    delete this._nodes[v];\n    if (this._isCompound) {\n      this._removeFromParentsChildList(v);\n      delete this._parent[v];\n      _.each(this.children(v), function(child) {\n        self.setParent(child);\n      });\n      delete this._children[v];\n    }\n    _.each(_.keys(this._in[v]), removeEdge);\n    delete this._in[v];\n    delete this._preds[v];\n    _.each(_.keys(this._out[v]), removeEdge);\n    delete this._out[v];\n    delete this._sucs[v];\n    --this._nodeCount;\n  }\n  return this;\n};\n\nGraph.prototype.setParent = function(v, parent) {\n  if (!this._isCompound) {\n    throw new Error(\"Cannot set parent in a non-compound graph\");\n  }\n\n  if (_.isUndefined(parent)) {\n    parent = GRAPH_NODE;\n  } else {\n    // Coerce parent to string\n    parent += \"\";\n    for (var ancestor = parent;\n         !_.isUndefined(ancestor);\n         ancestor = this.parent(ancestor)) {\n      if (ancestor === v) {\n        throw new Error(\"Setting \" + parent+ \" as parent of \" + v +\n                        \" would create a cycle\");\n      }\n    }\n\n    this.setNode(parent);\n  }\n\n  this.setNode(v);\n  this._removeFromParentsChildList(v);\n  this._parent[v] = parent;\n  this._children[parent][v] = true;\n  return this;\n};\n\nGraph.prototype._removeFromParentsChildList = function(v) {\n  delete this._children[this._parent[v]][v];\n};\n\nGraph.prototype.parent = function(v) {\n  if (this._isCompound) {\n    var parent = this._parent[v];\n    if (parent !== GRAPH_NODE) {\n      return parent;\n    }\n  }\n};\n\nGraph.prototype.children = function(v) {\n  if (_.isUndefined(v)) {\n    v = GRAPH_NODE;\n  }\n\n  if (this._isCompound) {\n    var children = this._children[v];\n    if (children) {\n      return _.keys(children);\n    }\n  } else if (v === GRAPH_NODE) {\n    return this.nodes();\n  } else if (this.hasNode(v)) {\n    return [];\n  }\n};\n\nGraph.prototype.predecessors = function(v) {\n  var predsV = this._preds[v];\n  if (predsV) {\n    return _.keys(predsV);\n  }\n};\n\nGraph.prototype.successors = function(v) {\n  var sucsV = this._sucs[v];\n  if (sucsV) {\n    return _.keys(sucsV);\n  }\n};\n\nGraph.prototype.neighbors = function(v) {\n  var preds = this.predecessors(v);\n  if (preds) {\n    return _.union(preds, this.successors(v));\n  }\n};\n\nGraph.prototype.isLeaf = function (v) {\n  var neighbors;\n  if (this.isDirected()) {\n    neighbors = this.successors(v);\n  } else {\n    neighbors = this.neighbors(v);\n  }\n  return neighbors.length === 0;\n};\n\nGraph.prototype.filterNodes = function(filter) {\n  var copy = new this.constructor({\n    directed: this._isDirected,\n    multigraph: this._isMultigraph,\n    compound: this._isCompound\n  });\n\n  copy.setGraph(this.graph());\n\n  var self = this;\n  _.each(this._nodes, function(value, v) {\n    if (filter(v)) {\n      copy.setNode(v, value);\n    }\n  });\n\n  _.each(this._edgeObjs, function(e) {\n    if (copy.hasNode(e.v) && copy.hasNode(e.w)) {\n      copy.setEdge(e, self.edge(e));\n    }\n  });\n\n  var parents = {};\n  function findParent(v) {\n    var parent = self.parent(v);\n    if (parent === undefined || copy.hasNode(parent)) {\n      parents[v] = parent;\n      return parent;\n    } else if (parent in parents) {\n      return parents[parent];\n    } else {\n      return findParent(parent);\n    }\n  }\n\n  if (this._isCompound) {\n    _.each(copy.nodes(), function(v) {\n      copy.setParent(v, findParent(v));\n    });\n  }\n\n  return copy;\n};\n\n/* === Edge functions ========== */\n\nGraph.prototype.setDefaultEdgeLabel = function(newDefault) {\n  if (!_.isFunction(newDefault)) {\n    newDefault = _.constant(newDefault);\n  }\n  this._defaultEdgeLabelFn = newDefault;\n  return this;\n};\n\nGraph.prototype.edgeCount = function() {\n  return this._edgeCount;\n};\n\nGraph.prototype.edges = function() {\n  return _.values(this._edgeObjs);\n};\n\nGraph.prototype.setPath = function(vs, value) {\n  var self = this,\n      args = arguments;\n  _.reduce(vs, function(v, w) {\n    if (args.length > 1) {\n      self.setEdge(v, w, value);\n    } else {\n      self.setEdge(v, w);\n    }\n    return w;\n  });\n  return this;\n};\n\n/*\n * setEdge(v, w, [value, [name]])\n * setEdge({ v, w, [name] }, [value])\n */\nGraph.prototype.setEdge = function() {\n  var v, w, name, value,\n      valueSpecified = false,\n      arg0 = arguments[0];\n\n  if (typeof arg0 === \"object\" && arg0 !== null && \"v\" in arg0) {\n    v = arg0.v;\n    w = arg0.w;\n    name = arg0.name;\n    if (arguments.length === 2) {\n      value = arguments[1];\n      valueSpecified = true;\n    }\n  } else {\n    v = arg0;\n    w = arguments[1];\n    name = arguments[3];\n    if (arguments.length > 2) {\n      value = arguments[2];\n      valueSpecified = true;\n    }\n  }\n\n  v = \"\" + v;\n  w = \"\" + w;\n  if (!_.isUndefined(name)) {\n    name = \"\" + name;\n  }\n\n  var e = edgeArgsToId(this._isDirected, v, w, name);\n  if (_.has(this._edgeLabels, e)) {\n    if (valueSpecified) {\n      this._edgeLabels[e] = value;\n    }\n    return this;\n  }\n\n  if (!_.isUndefined(name) && !this._isMultigraph) {\n    throw new Error(\"Cannot set a named edge when isMultigraph = false\");\n  }\n\n  // It didn't exist, so we need to create it.\n  // First ensure the nodes exist.\n  this.setNode(v);\n  this.setNode(w);\n\n  this._edgeLabels[e] = valueSpecified ? value : this._defaultEdgeLabelFn(v, w, name);\n\n  var edgeObj = edgeArgsToObj(this._isDirected, v, w, name);\n  // Ensure we add undirected edges in a consistent way.\n  v = edgeObj.v;\n  w = edgeObj.w;\n\n  Object.freeze(edgeObj);\n  this._edgeObjs[e] = edgeObj;\n  incrementOrInitEntry(this._preds[w], v);\n  incrementOrInitEntry(this._sucs[v], w);\n  this._in[w][e] = edgeObj;\n  this._out[v][e] = edgeObj;\n  this._edgeCount++;\n  return this;\n};\n\nGraph.prototype.edge = function(v, w, name) {\n  var e = (arguments.length === 1\n            ? edgeObjToId(this._isDirected, arguments[0])\n            : edgeArgsToId(this._isDirected, v, w, name));\n  return this._edgeLabels[e];\n};\n\nGraph.prototype.hasEdge = function(v, w, name) {\n  var e = (arguments.length === 1\n            ? edgeObjToId(this._isDirected, arguments[0])\n            : edgeArgsToId(this._isDirected, v, w, name));\n  return _.has(this._edgeLabels, e);\n};\n\nGraph.prototype.removeEdge = function(v, w, name) {\n  var e = (arguments.length === 1\n            ? edgeObjToId(this._isDirected, arguments[0])\n            : edgeArgsToId(this._isDirected, v, w, name)),\n      edge = this._edgeObjs[e];\n  if (edge) {\n    v = edge.v;\n    w = edge.w;\n    delete this._edgeLabels[e];\n    delete this._edgeObjs[e];\n    decrementOrRemoveEntry(this._preds[w], v);\n    decrementOrRemoveEntry(this._sucs[v], w);\n    delete this._in[w][e];\n    delete this._out[v][e];\n    this._edgeCount--;\n  }\n  return this;\n};\n\nGraph.prototype.inEdges = function(v, u) {\n  var inV = this._in[v];\n  if (inV) {\n    var edges = _.values(inV);\n    if (!u) {\n      return edges;\n    }\n    return _.filter(edges, function(edge) { return edge.v === u; });\n  }\n};\n\nGraph.prototype.outEdges = function(v, w) {\n  var outV = this._out[v];\n  if (outV) {\n    var edges = _.values(outV);\n    if (!w) {\n      return edges;\n    }\n    return _.filter(edges, function(edge) { return edge.w === w; });\n  }\n};\n\nGraph.prototype.nodeEdges = function(v, w) {\n  var inEdges = this.inEdges(v, w);\n  if (inEdges) {\n    return inEdges.concat(this.outEdges(v, w));\n  }\n};\n\nfunction incrementOrInitEntry(map, k) {\n  if (map[k]) {\n    map[k]++;\n  } else {\n    map[k] = 1;\n  }\n}\n\nfunction decrementOrRemoveEntry(map, k) {\n  if (!--map[k]) { delete map[k]; }\n}\n\nfunction edgeArgsToId(isDirected, v_, w_, name) {\n  var v = \"\" + v_;\n  var w = \"\" + w_;\n  if (!isDirected && v > w) {\n    var tmp = v;\n    v = w;\n    w = tmp;\n  }\n  return v + EDGE_KEY_DELIM + w + EDGE_KEY_DELIM +\n             (_.isUndefined(name) ? DEFAULT_EDGE_NAME : name);\n}\n\nfunction edgeArgsToObj(isDirected, v_, w_, name) {\n  var v = \"\" + v_;\n  var w = \"\" + w_;\n  if (!isDirected && v > w) {\n    var tmp = v;\n    v = w;\n    w = tmp;\n  }\n  var edgeObj =  { v: v, w: w };\n  if (name) {\n    edgeObj.name = name;\n  }\n  return edgeObj;\n}\n\nfunction edgeObjToId(isDirected, edgeObj) {\n  return edgeArgsToId(isDirected, edgeObj.v, edgeObj.w, edgeObj.name);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/graphlib/lib/graph.js\n// module id = 7\n// module chunks = 0","'use strict';\n\nvar asap = require('asap/raw');\n\nfunction noop() {}\n\n// States:\n//\n// 0 - pending\n// 1 - fulfilled with _value\n// 2 - rejected with _value\n// 3 - adopted the state of another promise, _value\n//\n// once the state is no longer pending (0) it is immutable\n\n// All `_` prefixed properties will be reduced to `_{random number}`\n// at build time to obfuscate them and discourage their use.\n// We don't use symbols or Object.defineProperty to fully hide them\n// because the performance isn't good enough.\n\n\n// to avoid using try/catch inside critical functions, we\n// extract them to here.\nvar LAST_ERROR = null;\nvar IS_ERROR = {};\nfunction getThen(obj) {\n  try {\n    return obj.then;\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nfunction tryCallOne(fn, a) {\n  try {\n    return fn(a);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\nfunction tryCallTwo(fn, a, b) {\n  try {\n    fn(a, b);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nmodule.exports = Promise;\n\nfunction Promise(fn) {\n  if (typeof this !== 'object') {\n    throw new TypeError('Promises must be constructed via new');\n  }\n  if (typeof fn !== 'function') {\n    throw new TypeError('Promise constructor\\'s argument is not a function');\n  }\n  this._75 = 0;\n  this._83 = 0;\n  this._18 = null;\n  this._38 = null;\n  if (fn === noop) return;\n  doResolve(fn, this);\n}\nPromise._47 = null;\nPromise._71 = null;\nPromise._44 = noop;\n\nPromise.prototype.then = function(onFulfilled, onRejected) {\n  if (this.constructor !== Promise) {\n    return safeThen(this, onFulfilled, onRejected);\n  }\n  var res = new Promise(noop);\n  handle(this, new Handler(onFulfilled, onRejected, res));\n  return res;\n};\n\nfunction safeThen(self, onFulfilled, onRejected) {\n  return new self.constructor(function (resolve, reject) {\n    var res = new Promise(noop);\n    res.then(resolve, reject);\n    handle(self, new Handler(onFulfilled, onRejected, res));\n  });\n}\nfunction handle(self, deferred) {\n  while (self._83 === 3) {\n    self = self._18;\n  }\n  if (Promise._47) {\n    Promise._47(self);\n  }\n  if (self._83 === 0) {\n    if (self._75 === 0) {\n      self._75 = 1;\n      self._38 = deferred;\n      return;\n    }\n    if (self._75 === 1) {\n      self._75 = 2;\n      self._38 = [self._38, deferred];\n      return;\n    }\n    self._38.push(deferred);\n    return;\n  }\n  handleResolved(self, deferred);\n}\n\nfunction handleResolved(self, deferred) {\n  asap(function() {\n    var cb = self._83 === 1 ? deferred.onFulfilled : deferred.onRejected;\n    if (cb === null) {\n      if (self._83 === 1) {\n        resolve(deferred.promise, self._18);\n      } else {\n        reject(deferred.promise, self._18);\n      }\n      return;\n    }\n    var ret = tryCallOne(cb, self._18);\n    if (ret === IS_ERROR) {\n      reject(deferred.promise, LAST_ERROR);\n    } else {\n      resolve(deferred.promise, ret);\n    }\n  });\n}\nfunction resolve(self, newValue) {\n  // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n  if (newValue === self) {\n    return reject(\n      self,\n      new TypeError('A promise cannot be resolved with itself.')\n    );\n  }\n  if (\n    newValue &&\n    (typeof newValue === 'object' || typeof newValue === 'function')\n  ) {\n    var then = getThen(newValue);\n    if (then === IS_ERROR) {\n      return reject(self, LAST_ERROR);\n    }\n    if (\n      then === self.then &&\n      newValue instanceof Promise\n    ) {\n      self._83 = 3;\n      self._18 = newValue;\n      finale(self);\n      return;\n    } else if (typeof then === 'function') {\n      doResolve(then.bind(newValue), self);\n      return;\n    }\n  }\n  self._83 = 1;\n  self._18 = newValue;\n  finale(self);\n}\n\nfunction reject(self, newValue) {\n  self._83 = 2;\n  self._18 = newValue;\n  if (Promise._71) {\n    Promise._71(self, newValue);\n  }\n  finale(self);\n}\nfunction finale(self) {\n  if (self._75 === 1) {\n    handle(self, self._38);\n    self._38 = null;\n  }\n  if (self._75 === 2) {\n    for (var i = 0; i < self._38.length; i++) {\n      handle(self, self._38[i]);\n    }\n    self._38 = null;\n  }\n}\n\nfunction Handler(onFulfilled, onRejected, promise){\n  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n  this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n  this.promise = promise;\n}\n\n/**\n * Take a potentially misbehaving resolver function and make sure\n * onFulfilled and onRejected are only called once.\n *\n * Makes no guarantees about asynchrony.\n */\nfunction doResolve(fn, promise) {\n  var done = false;\n  var res = tryCallTwo(fn, function (value) {\n    if (done) return;\n    done = true;\n    resolve(promise, value);\n  }, function (reason) {\n    if (done) return;\n    done = true;\n    reject(promise, reason);\n  });\n  if (!done && res === IS_ERROR) {\n    done = true;\n    reject(promise, LAST_ERROR);\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-scripts/node_modules/promise/lib/core.js\n// module id = 8\n// module chunks = 0","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\n} catch(e) {\n\t// This works if the window reference is available\n\tif(typeof window === \"object\")\n\t\tg = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 9\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar validateFormat = function validateFormat(format) {};\n\nif (process.env.NODE_ENV !== 'production') {\n  validateFormat = function validateFormat(format) {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  };\n}\n\nfunction invariant(condition, format, a, b, c, d, e, f) {\n  validateFormat(format);\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(format.replace(/%s/g, function () {\n        return args[argIndex++];\n      }));\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n}\n\nmodule.exports = invariant;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/fbjs/lib/invariant.js\n// module id = 10\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\nvar emptyObject = {};\n\nif (process.env.NODE_ENV !== 'production') {\n  Object.freeze(emptyObject);\n}\n\nmodule.exports = emptyObject;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/fbjs/lib/emptyObject.js\n// module id = 11\n// module chunks = 0","\"use strict\";\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nfunction makeEmptyFunction(arg) {\n  return function () {\n    return arg;\n  };\n}\n\n/**\n * This function accepts and discards inputs; it has no side effects. This is\n * primarily useful idiomatically for overridable function endpoints which\n * always need to be callable, since JS lacks a null-call idiom ala Cocoa.\n */\nvar emptyFunction = function emptyFunction() {};\n\nemptyFunction.thatReturns = makeEmptyFunction;\nemptyFunction.thatReturnsFalse = makeEmptyFunction(false);\nemptyFunction.thatReturnsTrue = makeEmptyFunction(true);\nemptyFunction.thatReturnsNull = makeEmptyFunction(null);\nemptyFunction.thatReturnsThis = function () {\n  return this;\n};\nemptyFunction.thatReturnsArgument = function (arg) {\n  return arg;\n};\n\nmodule.exports = emptyFunction;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/fbjs/lib/emptyFunction.js\n// module id = 12\n// module chunks = 0","/**\n * @license\n * Lodash <https://lodash.com/>\n * Copyright JS Foundation and other contributors <https://js.foundation/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '4.17.10';\n\n  /** Used as the size to enable large array optimizations. */\n  var LARGE_ARRAY_SIZE = 200;\n\n  /** Error message constants. */\n  var CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://npms.io/search?q=ponyfill.',\n      FUNC_ERROR_TEXT = 'Expected a function';\n\n  /** Used to stand-in for `undefined` hash values. */\n  var HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n  /** Used as the maximum memoize cache size. */\n  var MAX_MEMOIZE_SIZE = 500;\n\n  /** Used as the internal argument placeholder. */\n  var PLACEHOLDER = '__lodash_placeholder__';\n\n  /** Used to compose bitmasks for cloning. */\n  var CLONE_DEEP_FLAG = 1,\n      CLONE_FLAT_FLAG = 2,\n      CLONE_SYMBOLS_FLAG = 4;\n\n  /** Used to compose bitmasks for value comparisons. */\n  var COMPARE_PARTIAL_FLAG = 1,\n      COMPARE_UNORDERED_FLAG = 2;\n\n  /** Used to compose bitmasks for function metadata. */\n  var WRAP_BIND_FLAG = 1,\n      WRAP_BIND_KEY_FLAG = 2,\n      WRAP_CURRY_BOUND_FLAG = 4,\n      WRAP_CURRY_FLAG = 8,\n      WRAP_CURRY_RIGHT_FLAG = 16,\n      WRAP_PARTIAL_FLAG = 32,\n      WRAP_PARTIAL_RIGHT_FLAG = 64,\n      WRAP_ARY_FLAG = 128,\n      WRAP_REARG_FLAG = 256,\n      WRAP_FLIP_FLAG = 512;\n\n  /** Used as default options for `_.truncate`. */\n  var DEFAULT_TRUNC_LENGTH = 30,\n      DEFAULT_TRUNC_OMISSION = '...';\n\n  /** Used to detect hot functions by number of calls within a span of milliseconds. */\n  var HOT_COUNT = 800,\n      HOT_SPAN = 16;\n\n  /** Used to indicate the type of lazy iteratees. */\n  var LAZY_FILTER_FLAG = 1,\n      LAZY_MAP_FLAG = 2,\n      LAZY_WHILE_FLAG = 3;\n\n  /** Used as references for various `Number` constants. */\n  var INFINITY = 1 / 0,\n      MAX_SAFE_INTEGER = 9007199254740991,\n      MAX_INTEGER = 1.7976931348623157e+308,\n      NAN = 0 / 0;\n\n  /** Used as references for the maximum length and index of an array. */\n  var MAX_ARRAY_LENGTH = 4294967295,\n      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\n  /** Used to associate wrap methods with their bit flags. */\n  var wrapFlags = [\n    ['ary', WRAP_ARY_FLAG],\n    ['bind', WRAP_BIND_FLAG],\n    ['bindKey', WRAP_BIND_KEY_FLAG],\n    ['curry', WRAP_CURRY_FLAG],\n    ['curryRight', WRAP_CURRY_RIGHT_FLAG],\n    ['flip', WRAP_FLIP_FLAG],\n    ['partial', WRAP_PARTIAL_FLAG],\n    ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],\n    ['rearg', WRAP_REARG_FLAG]\n  ];\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      asyncTag = '[object AsyncFunction]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      domExcTag = '[object DOMException]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      genTag = '[object GeneratorFunction]',\n      mapTag = '[object Map]',\n      numberTag = '[object Number]',\n      nullTag = '[object Null]',\n      objectTag = '[object Object]',\n      promiseTag = '[object Promise]',\n      proxyTag = '[object Proxy]',\n      regexpTag = '[object RegExp]',\n      setTag = '[object Set]',\n      stringTag = '[object String]',\n      symbolTag = '[object Symbol]',\n      undefinedTag = '[object Undefined]',\n      weakMapTag = '[object WeakMap]',\n      weakSetTag = '[object WeakSet]';\n\n  var arrayBufferTag = '[object ArrayBuffer]',\n      dataViewTag = '[object DataView]',\n      float32Tag = '[object Float32Array]',\n      float64Tag = '[object Float64Array]',\n      int8Tag = '[object Int8Array]',\n      int16Tag = '[object Int16Array]',\n      int32Tag = '[object Int32Array]',\n      uint8Tag = '[object Uint8Array]',\n      uint8ClampedTag = '[object Uint8ClampedArray]',\n      uint16Tag = '[object Uint16Array]',\n      uint32Tag = '[object Uint32Array]';\n\n  /** Used to match empty string literals in compiled template source. */\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n  /** Used to match HTML entities and HTML characters. */\n  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,\n      reUnescapedHtml = /[&<>\"']/g,\n      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n  /** Used to match template delimiters. */\n  var reEscape = /<%-([\\s\\S]+?)%>/g,\n      reEvaluate = /<%([\\s\\S]+?)%>/g,\n      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n  /** Used to match property names within property paths. */\n  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n      reIsPlainProp = /^\\w*$/,\n      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n  /**\n   * Used to match `RegExp`\n   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n   */\n  var reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n      reHasRegExpChar = RegExp(reRegExpChar.source);\n\n  /** Used to match leading and trailing whitespace. */\n  var reTrim = /^\\s+|\\s+$/g,\n      reTrimStart = /^\\s+/,\n      reTrimEnd = /\\s+$/;\n\n  /** Used to match wrap detail comments. */\n  var reWrapComment = /\\{(?:\\n\\/\\* \\[wrapped with .+\\] \\*\\/)?\\n?/,\n      reWrapDetails = /\\{\\n\\/\\* \\[wrapped with (.+)\\] \\*/,\n      reSplitDetails = /,? & /;\n\n  /** Used to match words composed of alphanumeric characters. */\n  var reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n\n  /** Used to match backslashes in property paths. */\n  var reEscapeChar = /\\\\(\\\\)?/g;\n\n  /**\n   * Used to match\n   * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).\n   */\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n  /** Used to match `RegExp` flags from their coerced string values. */\n  var reFlags = /\\w*$/;\n\n  /** Used to detect bad signed hexadecimal string values. */\n  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n  /** Used to detect binary string values. */\n  var reIsBinary = /^0b[01]+$/i;\n\n  /** Used to detect host constructors (Safari). */\n  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n  /** Used to detect octal string values. */\n  var reIsOctal = /^0o[0-7]+$/i;\n\n  /** Used to detect unsigned integer values. */\n  var reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n  /** Used to match Latin Unicode letters (excluding mathematical operators). */\n  var reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n\n  /** Used to ensure capturing order of template delimiters. */\n  var reNoMatch = /($^)/;\n\n  /** Used to match unescaped characters in compiled string literals. */\n  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\n  /** Used to compose unicode character classes. */\n  var rsAstralRange = '\\\\ud800-\\\\udfff',\n      rsComboMarksRange = '\\\\u0300-\\\\u036f',\n      reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n      rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n      rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n      rsDingbatRange = '\\\\u2700-\\\\u27bf',\n      rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n      rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n      rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n      rsPunctuationRange = '\\\\u2000-\\\\u206f',\n      rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n      rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n      rsVarRange = '\\\\ufe0e\\\\ufe0f',\n      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\n  /** Used to compose unicode capture groups. */\n  var rsApos = \"['\\u2019]\",\n      rsAstral = '[' + rsAstralRange + ']',\n      rsBreak = '[' + rsBreakRange + ']',\n      rsCombo = '[' + rsComboRange + ']',\n      rsDigits = '\\\\d+',\n      rsDingbat = '[' + rsDingbatRange + ']',\n      rsLower = '[' + rsLowerRange + ']',\n      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n      rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n      rsNonAstral = '[^' + rsAstralRange + ']',\n      rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n      rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n      rsUpper = '[' + rsUpperRange + ']',\n      rsZWJ = '\\\\u200d';\n\n  /** Used to compose unicode regexes. */\n  var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',\n      rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',\n      rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n      rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n      reOptMod = rsModifier + '?',\n      rsOptVar = '[' + rsVarRange + ']?',\n      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n      rsOrdLower = '\\\\d*(?:1st|2nd|3rd|(?![123])\\\\dth)(?=\\\\b|[A-Z_])',\n      rsOrdUpper = '\\\\d*(?:1ST|2ND|3RD|(?![123])\\\\dTH)(?=\\\\b|[a-z_])',\n      rsSeq = rsOptVar + reOptMod + rsOptJoin,\n      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,\n      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n  /** Used to match apostrophes. */\n  var reApos = RegExp(rsApos, 'g');\n\n  /**\n   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n   */\n  var reComboMark = RegExp(rsCombo, 'g');\n\n  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\n  var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n  /** Used to match complex or compound words. */\n  var reUnicodeWord = RegExp([\n    rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n    rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',\n    rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,\n    rsUpper + '+' + rsOptContrUpper,\n    rsOrdUpper,\n    rsOrdLower,\n    rsDigits,\n    rsEmoji\n  ].join('|'), 'g');\n\n  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\n  var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\n  /** Used to detect strings that need a more robust regexp to match words. */\n  var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n  /** Used to assign default `context` object properties. */\n  var contextProps = [\n    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',\n    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',\n    'Promise', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array',\n    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',\n    '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'\n  ];\n\n  /** Used to make template sourceURLs easier to identify. */\n  var templateCounter = -1;\n\n  /** Used to identify `toStringTag` values of typed arrays. */\n  var typedArrayTags = {};\n  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n  typedArrayTags[uint32Tag] = true;\n  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\n  typedArrayTags[errorTag] = typedArrayTags[funcTag] =\n  typedArrayTags[mapTag] = typedArrayTags[numberTag] =\n  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =\n  typedArrayTags[setTag] = typedArrayTags[stringTag] =\n  typedArrayTags[weakMapTag] = false;\n\n  /** Used to identify `toStringTag` values supported by `_.clone`. */\n  var cloneableTags = {};\n  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\n  cloneableTags[boolTag] = cloneableTags[dateTag] =\n  cloneableTags[float32Tag] = cloneableTags[float64Tag] =\n  cloneableTags[int8Tag] = cloneableTags[int16Tag] =\n  cloneableTags[int32Tag] = cloneableTags[mapTag] =\n  cloneableTags[numberTag] = cloneableTags[objectTag] =\n  cloneableTags[regexpTag] = cloneableTags[setTag] =\n  cloneableTags[stringTag] = cloneableTags[symbolTag] =\n  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n  cloneableTags[errorTag] = cloneableTags[funcTag] =\n  cloneableTags[weakMapTag] = false;\n\n  /** Used to map Latin Unicode letters to basic Latin letters. */\n  var deburredLetters = {\n    // Latin-1 Supplement block.\n    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n    '\\xc7': 'C',  '\\xe7': 'c',\n    '\\xd0': 'D',  '\\xf0': 'd',\n    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n    '\\xcc': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n    '\\xec': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n    '\\xd1': 'N',  '\\xf1': 'n',\n    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n    '\\xc6': 'Ae', '\\xe6': 'ae',\n    '\\xde': 'Th', '\\xfe': 'th',\n    '\\xdf': 'ss',\n    // Latin Extended-A block.\n    '\\u0100': 'A',  '\\u0102': 'A', '\\u0104': 'A',\n    '\\u0101': 'a',  '\\u0103': 'a', '\\u0105': 'a',\n    '\\u0106': 'C',  '\\u0108': 'C', '\\u010a': 'C', '\\u010c': 'C',\n    '\\u0107': 'c',  '\\u0109': 'c', '\\u010b': 'c', '\\u010d': 'c',\n    '\\u010e': 'D',  '\\u0110': 'D', '\\u010f': 'd', '\\u0111': 'd',\n    '\\u0112': 'E',  '\\u0114': 'E', '\\u0116': 'E', '\\u0118': 'E', '\\u011a': 'E',\n    '\\u0113': 'e',  '\\u0115': 'e', '\\u0117': 'e', '\\u0119': 'e', '\\u011b': 'e',\n    '\\u011c': 'G',  '\\u011e': 'G', '\\u0120': 'G', '\\u0122': 'G',\n    '\\u011d': 'g',  '\\u011f': 'g', '\\u0121': 'g', '\\u0123': 'g',\n    '\\u0124': 'H',  '\\u0126': 'H', '\\u0125': 'h', '\\u0127': 'h',\n    '\\u0128': 'I',  '\\u012a': 'I', '\\u012c': 'I', '\\u012e': 'I', '\\u0130': 'I',\n    '\\u0129': 'i',  '\\u012b': 'i', '\\u012d': 'i', '\\u012f': 'i', '\\u0131': 'i',\n    '\\u0134': 'J',  '\\u0135': 'j',\n    '\\u0136': 'K',  '\\u0137': 'k', '\\u0138': 'k',\n    '\\u0139': 'L',  '\\u013b': 'L', '\\u013d': 'L', '\\u013f': 'L', '\\u0141': 'L',\n    '\\u013a': 'l',  '\\u013c': 'l', '\\u013e': 'l', '\\u0140': 'l', '\\u0142': 'l',\n    '\\u0143': 'N',  '\\u0145': 'N', '\\u0147': 'N', '\\u014a': 'N',\n    '\\u0144': 'n',  '\\u0146': 'n', '\\u0148': 'n', '\\u014b': 'n',\n    '\\u014c': 'O',  '\\u014e': 'O', '\\u0150': 'O',\n    '\\u014d': 'o',  '\\u014f': 'o', '\\u0151': 'o',\n    '\\u0154': 'R',  '\\u0156': 'R', '\\u0158': 'R',\n    '\\u0155': 'r',  '\\u0157': 'r', '\\u0159': 'r',\n    '\\u015a': 'S',  '\\u015c': 'S', '\\u015e': 'S', '\\u0160': 'S',\n    '\\u015b': 's',  '\\u015d': 's', '\\u015f': 's', '\\u0161': 's',\n    '\\u0162': 'T',  '\\u0164': 'T', '\\u0166': 'T',\n    '\\u0163': 't',  '\\u0165': 't', '\\u0167': 't',\n    '\\u0168': 'U',  '\\u016a': 'U', '\\u016c': 'U', '\\u016e': 'U', '\\u0170': 'U', '\\u0172': 'U',\n    '\\u0169': 'u',  '\\u016b': 'u', '\\u016d': 'u', '\\u016f': 'u', '\\u0171': 'u', '\\u0173': 'u',\n    '\\u0174': 'W',  '\\u0175': 'w',\n    '\\u0176': 'Y',  '\\u0177': 'y', '\\u0178': 'Y',\n    '\\u0179': 'Z',  '\\u017b': 'Z', '\\u017d': 'Z',\n    '\\u017a': 'z',  '\\u017c': 'z', '\\u017e': 'z',\n    '\\u0132': 'IJ', '\\u0133': 'ij',\n    '\\u0152': 'Oe', '\\u0153': 'oe',\n    '\\u0149': \"'n\", '\\u017f': 's'\n  };\n\n  /** Used to map characters to HTML entities. */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n\n  /** Used to map HTML entities to characters. */\n  var htmlUnescapes = {\n    '&amp;': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&#39;': \"'\"\n  };\n\n  /** Used to escape characters for inclusion in compiled string literals. */\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  /** Built-in method references without a dependency on `root`. */\n  var freeParseFloat = parseFloat,\n      freeParseInt = parseInt;\n\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n  /** Detect free variable `self`. */\n  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n  /** Used as a reference to the global object. */\n  var root = freeGlobal || freeSelf || Function('return this')();\n\n  /** Detect free variable `exports`. */\n  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n  /** Detect the popular CommonJS extension `module.exports`. */\n  var moduleExports = freeModule && freeModule.exports === freeExports;\n\n  /** Detect free variable `process` from Node.js. */\n  var freeProcess = moduleExports && freeGlobal.process;\n\n  /** Used to access faster Node.js helpers. */\n  var nodeUtil = (function() {\n    try {\n      // Use `util.types` for Node.js 10+.\n      var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n      if (types) {\n        return types;\n      }\n\n      // Legacy `process.binding('util')` for Node.js < 10.\n      return freeProcess && freeProcess.binding && freeProcess.binding('util');\n    } catch (e) {}\n  }());\n\n  /* Node.js helper references. */\n  var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,\n      nodeIsDate = nodeUtil && nodeUtil.isDate,\n      nodeIsMap = nodeUtil && nodeUtil.isMap,\n      nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,\n      nodeIsSet = nodeUtil && nodeUtil.isSet,\n      nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * A faster alternative to `Function#apply`, this function invokes `func`\n   * with the `this` binding of `thisArg` and the arguments of `args`.\n   *\n   * @private\n   * @param {Function} func The function to invoke.\n   * @param {*} thisArg The `this` binding of `func`.\n   * @param {Array} args The arguments to invoke `func` with.\n   * @returns {*} Returns the result of `func`.\n   */\n  function apply(func, thisArg, args) {\n    switch (args.length) {\n      case 0: return func.call(thisArg);\n      case 1: return func.call(thisArg, args[0]);\n      case 2: return func.call(thisArg, args[0], args[1]);\n      case 3: return func.call(thisArg, args[0], args[1], args[2]);\n    }\n    return func.apply(thisArg, args);\n  }\n\n  /**\n   * A specialized version of `baseAggregator` for arrays.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} setter The function to set `accumulator` values.\n   * @param {Function} iteratee The iteratee to transform keys.\n   * @param {Object} accumulator The initial aggregated object.\n   * @returns {Function} Returns `accumulator`.\n   */\n  function arrayAggregator(array, setter, iteratee, accumulator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      var value = array[index];\n      setter(accumulator, value, iteratee(value), array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.forEach` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEach(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (iteratee(array[index], index, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.forEachRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEachRight(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n\n    while (length--) {\n      if (iteratee(array[length], length, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.every` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if all elements pass the predicate check,\n   *  else `false`.\n   */\n  function arrayEvery(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (!predicate(array[index], index, array)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * A specialized version of `_.filter` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {Array} Returns the new filtered array.\n   */\n  function arrayFilter(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (predicate(value, index, array)) {\n        result[resIndex++] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.includes` for arrays without support for\n   * specifying an index to search from.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludes(array, value) {\n    var length = array == null ? 0 : array.length;\n    return !!length && baseIndexOf(array, value, 0) > -1;\n  }\n\n  /**\n   * This function is like `arrayIncludes` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludesWith(array, value, comparator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (comparator(value, array[index])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * A specialized version of `_.map` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the new mapped array.\n   */\n  function arrayMap(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        result = Array(length);\n\n    while (++index < length) {\n      result[index] = iteratee(array[index], index, array);\n    }\n    return result;\n  }\n\n  /**\n   * Appends the elements of `values` to `array`.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {Array} values The values to append.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayPush(array, values) {\n    var index = -1,\n        length = values.length,\n        offset = array.length;\n\n    while (++index < length) {\n      array[offset + index] = values[index];\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.reduce` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the first element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduce(array, iteratee, accumulator, initAccum) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    if (initAccum && length) {\n      accumulator = array[++index];\n    }\n    while (++index < length) {\n      accumulator = iteratee(accumulator, array[index], index, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.reduceRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the last element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduceRight(array, iteratee, accumulator, initAccum) {\n    var length = array == null ? 0 : array.length;\n    if (initAccum && length) {\n      accumulator = array[--length];\n    }\n    while (length--) {\n      accumulator = iteratee(accumulator, array[length], length, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.some` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if any element passes the predicate check,\n   *  else `false`.\n   */\n  function arraySome(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (predicate(array[index], index, array)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Gets the size of an ASCII `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  var asciiSize = baseProperty('length');\n\n  /**\n   * Converts an ASCII `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function asciiToArray(string) {\n    return string.split('');\n  }\n\n  /**\n   * Splits an ASCII `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function asciiWords(string) {\n    return string.match(reAsciiWord) || [];\n  }\n\n  /**\n   * The base implementation of methods like `_.findKey` and `_.findLastKey`,\n   * without support for iteratee shorthands, which iterates over `collection`\n   * using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the found element or its key, else `undefined`.\n   */\n  function baseFindKey(collection, predicate, eachFunc) {\n    var result;\n    eachFunc(collection, function(value, key, collection) {\n      if (predicate(value, key, collection)) {\n        result = key;\n        return false;\n      }\n    });\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n   * support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseFindIndex(array, predicate, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 1 : -1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (predicate(array[index], index, array)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOf(array, value, fromIndex) {\n    return value === value\n      ? strictIndexOf(array, value, fromIndex)\n      : baseFindIndex(array, baseIsNaN, fromIndex);\n  }\n\n  /**\n   * This function is like `baseIndexOf` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOfWith(array, value, fromIndex, comparator) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (comparator(array[index], value)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.isNaN` without support for number objects.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n   */\n  function baseIsNaN(value) {\n    return value !== value;\n  }\n\n  /**\n   * The base implementation of `_.mean` and `_.meanBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the mean.\n   */\n  function baseMean(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n    return length ? (baseSum(array, iteratee) / length) : NAN;\n  }\n\n  /**\n   * The base implementation of `_.property` without support for deep paths.\n   *\n   * @private\n   * @param {string} key The key of the property to get.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function baseProperty(key) {\n    return function(object) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.propertyOf` without support for deep paths.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function basePropertyOf(object) {\n    return function(key) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.reduce` and `_.reduceRight`, without support\n   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} accumulator The initial value.\n   * @param {boolean} initAccum Specify using the first or last element of\n   *  `collection` as the initial value.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the accumulated value.\n   */\n  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n    eachFunc(collection, function(value, index, collection) {\n      accumulator = initAccum\n        ? (initAccum = false, value)\n        : iteratee(accumulator, value, index, collection);\n    });\n    return accumulator;\n  }\n\n  /**\n   * The base implementation of `_.sortBy` which uses `comparer` to define the\n   * sort order of `array` and replaces criteria objects with their corresponding\n   * values.\n   *\n   * @private\n   * @param {Array} array The array to sort.\n   * @param {Function} comparer The function to define sort order.\n   * @returns {Array} Returns `array`.\n   */\n  function baseSortBy(array, comparer) {\n    var length = array.length;\n\n    array.sort(comparer);\n    while (length--) {\n      array[length] = array[length].value;\n    }\n    return array;\n  }\n\n  /**\n   * The base implementation of `_.sum` and `_.sumBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the sum.\n   */\n  function baseSum(array, iteratee) {\n    var result,\n        index = -1,\n        length = array.length;\n\n    while (++index < length) {\n      var current = iteratee(array[index]);\n      if (current !== undefined) {\n        result = result === undefined ? current : (result + current);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.times` without support for iteratee shorthands\n   * or max array length checks.\n   *\n   * @private\n   * @param {number} n The number of times to invoke `iteratee`.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the array of results.\n   */\n  function baseTimes(n, iteratee) {\n    var index = -1,\n        result = Array(n);\n\n    while (++index < n) {\n      result[index] = iteratee(index);\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array\n   * of key-value pairs for `object` corresponding to the property names of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the key-value pairs.\n   */\n  function baseToPairs(object, props) {\n    return arrayMap(props, function(key) {\n      return [key, object[key]];\n    });\n  }\n\n  /**\n   * The base implementation of `_.unary` without support for storing metadata.\n   *\n   * @private\n   * @param {Function} func The function to cap arguments for.\n   * @returns {Function} Returns the new capped function.\n   */\n  function baseUnary(func) {\n    return function(value) {\n      return func(value);\n    };\n  }\n\n  /**\n   * The base implementation of `_.values` and `_.valuesIn` which creates an\n   * array of `object` property values corresponding to the property names\n   * of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the array of property values.\n   */\n  function baseValues(object, props) {\n    return arrayMap(props, function(key) {\n      return object[key];\n    });\n  }\n\n  /**\n   * Checks if a `cache` value for `key` exists.\n   *\n   * @private\n   * @param {Object} cache The cache to query.\n   * @param {string} key The key of the entry to check.\n   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n   */\n  function cacheHas(cache, key) {\n    return cache.has(key);\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the first unmatched string symbol.\n   */\n  function charsStartIndex(strSymbols, chrSymbols) {\n    var index = -1,\n        length = strSymbols.length;\n\n    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the last unmatched string symbol.\n   */\n  function charsEndIndex(strSymbols, chrSymbols) {\n    var index = strSymbols.length;\n\n    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Gets the number of `placeholder` occurrences in `array`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} placeholder The placeholder to search for.\n   * @returns {number} Returns the placeholder count.\n   */\n  function countHolders(array, placeholder) {\n    var length = array.length,\n        result = 0;\n\n    while (length--) {\n      if (array[length] === placeholder) {\n        ++result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n   * letters to basic Latin letters.\n   *\n   * @private\n   * @param {string} letter The matched letter to deburr.\n   * @returns {string} Returns the deburred letter.\n   */\n  var deburrLetter = basePropertyOf(deburredLetters);\n\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  var escapeHtmlChar = basePropertyOf(htmlEscapes);\n\n  /**\n   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeStringChar(chr) {\n    return '\\\\' + stringEscapes[chr];\n  }\n\n  /**\n   * Gets the value at `key` of `object`.\n   *\n   * @private\n   * @param {Object} [object] The object to query.\n   * @param {string} key The key of the property to get.\n   * @returns {*} Returns the property value.\n   */\n  function getValue(object, key) {\n    return object == null ? undefined : object[key];\n  }\n\n  /**\n   * Checks if `string` contains Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n   */\n  function hasUnicode(string) {\n    return reHasUnicode.test(string);\n  }\n\n  /**\n   * Checks if `string` contains a word composed of Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a word is found, else `false`.\n   */\n  function hasUnicodeWord(string) {\n    return reHasUnicodeWord.test(string);\n  }\n\n  /**\n   * Converts `iterator` to an array.\n   *\n   * @private\n   * @param {Object} iterator The iterator to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function iteratorToArray(iterator) {\n    var data,\n        result = [];\n\n    while (!(data = iterator.next()).done) {\n      result.push(data.value);\n    }\n    return result;\n  }\n\n  /**\n   * Converts `map` to its key-value pairs.\n   *\n   * @private\n   * @param {Object} map The map to convert.\n   * @returns {Array} Returns the key-value pairs.\n   */\n  function mapToArray(map) {\n    var index = -1,\n        result = Array(map.size);\n\n    map.forEach(function(value, key) {\n      result[++index] = [key, value];\n    });\n    return result;\n  }\n\n  /**\n   * Creates a unary function that invokes `func` with its argument transformed.\n   *\n   * @private\n   * @param {Function} func The function to wrap.\n   * @param {Function} transform The argument transform.\n   * @returns {Function} Returns the new function.\n   */\n  function overArg(func, transform) {\n    return function(arg) {\n      return func(transform(arg));\n    };\n  }\n\n  /**\n   * Replaces all `placeholder` elements in `array` with an internal placeholder\n   * and returns an array of their indexes.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {*} placeholder The placeholder to replace.\n   * @returns {Array} Returns the new array of placeholder indexes.\n   */\n  function replaceHolders(array, placeholder) {\n    var index = -1,\n        length = array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (value === placeholder || value === PLACEHOLDER) {\n        array[index] = PLACEHOLDER;\n        result[resIndex++] = index;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Gets the value at `key`, unless `key` is \"__proto__\".\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {string} key The key of the property to get.\n   * @returns {*} Returns the property value.\n   */\n  function safeGet(object, key) {\n    return key == '__proto__'\n      ? undefined\n      : object[key];\n  }\n\n  /**\n   * Converts `set` to an array of its values.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the values.\n   */\n  function setToArray(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = value;\n    });\n    return result;\n  }\n\n  /**\n   * Converts `set` to its value-value pairs.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the value-value pairs.\n   */\n  function setToPairs(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = [value, value];\n    });\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.indexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictIndexOf(array, value, fromIndex) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * A specialized version of `_.lastIndexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictLastIndexOf(array, value, fromIndex) {\n    var index = fromIndex + 1;\n    while (index--) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return index;\n  }\n\n  /**\n   * Gets the number of symbols in `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the string size.\n   */\n  function stringSize(string) {\n    return hasUnicode(string)\n      ? unicodeSize(string)\n      : asciiSize(string);\n  }\n\n  /**\n   * Converts `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function stringToArray(string) {\n    return hasUnicode(string)\n      ? unicodeToArray(string)\n      : asciiToArray(string);\n  }\n\n  /**\n   * Used by `_.unescape` to convert HTML entities to characters.\n   *\n   * @private\n   * @param {string} chr The matched character to unescape.\n   * @returns {string} Returns the unescaped character.\n   */\n  var unescapeHtmlChar = basePropertyOf(htmlUnescapes);\n\n  /**\n   * Gets the size of a Unicode `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  function unicodeSize(string) {\n    var result = reUnicode.lastIndex = 0;\n    while (reUnicode.test(string)) {\n      ++result;\n    }\n    return result;\n  }\n\n  /**\n   * Converts a Unicode `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function unicodeToArray(string) {\n    return string.match(reUnicode) || [];\n  }\n\n  /**\n   * Splits a Unicode `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function unicodeWords(string) {\n    return string.match(reUnicodeWord) || [];\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new pristine `lodash` function using the `context` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 1.1.0\n   * @category Util\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns a new `lodash` function.\n   * @example\n   *\n   * _.mixin({ 'foo': _.constant('foo') });\n   *\n   * var lodash = _.runInContext();\n   * lodash.mixin({ 'bar': lodash.constant('bar') });\n   *\n   * _.isFunction(_.foo);\n   * // => true\n   * _.isFunction(_.bar);\n   * // => false\n   *\n   * lodash.isFunction(lodash.foo);\n   * // => false\n   * lodash.isFunction(lodash.bar);\n   * // => true\n   *\n   * // Create a suped-up `defer` in Node.js.\n   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n   */\n  var runInContext = (function runInContext(context) {\n    context = context == null ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));\n\n    /** Built-in constructor references. */\n    var Array = context.Array,\n        Date = context.Date,\n        Error = context.Error,\n        Function = context.Function,\n        Math = context.Math,\n        Object = context.Object,\n        RegExp = context.RegExp,\n        String = context.String,\n        TypeError = context.TypeError;\n\n    /** Used for built-in method references. */\n    var arrayProto = Array.prototype,\n        funcProto = Function.prototype,\n        objectProto = Object.prototype;\n\n    /** Used to detect overreaching core-js shims. */\n    var coreJsData = context['__core-js_shared__'];\n\n    /** Used to resolve the decompiled source of functions. */\n    var funcToString = funcProto.toString;\n\n    /** Used to check objects for own properties. */\n    var hasOwnProperty = objectProto.hasOwnProperty;\n\n    /** Used to generate unique IDs. */\n    var idCounter = 0;\n\n    /** Used to detect methods masquerading as native. */\n    var maskSrcKey = (function() {\n      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n      return uid ? ('Symbol(src)_1.' + uid) : '';\n    }());\n\n    /**\n     * Used to resolve the\n     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n     * of values.\n     */\n    var nativeObjectToString = objectProto.toString;\n\n    /** Used to infer the `Object` constructor. */\n    var objectCtorString = funcToString.call(Object);\n\n    /** Used to restore the original `_` reference in `_.noConflict`. */\n    var oldDash = root._;\n\n    /** Used to detect if a method is native. */\n    var reIsNative = RegExp('^' +\n      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n    );\n\n    /** Built-in value references. */\n    var Buffer = moduleExports ? context.Buffer : undefined,\n        Symbol = context.Symbol,\n        Uint8Array = context.Uint8Array,\n        allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,\n        getPrototype = overArg(Object.getPrototypeOf, Object),\n        objectCreate = Object.create,\n        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n        splice = arrayProto.splice,\n        spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined,\n        symIterator = Symbol ? Symbol.iterator : undefined,\n        symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n    var defineProperty = (function() {\n      try {\n        var func = getNative(Object, 'defineProperty');\n        func({}, '', {});\n        return func;\n      } catch (e) {}\n    }());\n\n    /** Mocked built-ins. */\n    var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout,\n        ctxNow = Date && Date.now !== root.Date.now && Date.now,\n        ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;\n\n    /* Built-in method references for those with the same name as other `lodash` methods. */\n    var nativeCeil = Math.ceil,\n        nativeFloor = Math.floor,\n        nativeGetSymbols = Object.getOwnPropertySymbols,\n        nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n        nativeIsFinite = context.isFinite,\n        nativeJoin = arrayProto.join,\n        nativeKeys = overArg(Object.keys, Object),\n        nativeMax = Math.max,\n        nativeMin = Math.min,\n        nativeNow = Date.now,\n        nativeParseInt = context.parseInt,\n        nativeRandom = Math.random,\n        nativeReverse = arrayProto.reverse;\n\n    /* Built-in method references that are verified to be native. */\n    var DataView = getNative(context, 'DataView'),\n        Map = getNative(context, 'Map'),\n        Promise = getNative(context, 'Promise'),\n        Set = getNative(context, 'Set'),\n        WeakMap = getNative(context, 'WeakMap'),\n        nativeCreate = getNative(Object, 'create');\n\n    /** Used to store function metadata. */\n    var metaMap = WeakMap && new WeakMap;\n\n    /** Used to lookup unminified function names. */\n    var realNames = {};\n\n    /** Used to detect maps, sets, and weakmaps. */\n    var dataViewCtorString = toSource(DataView),\n        mapCtorString = toSource(Map),\n        promiseCtorString = toSource(Promise),\n        setCtorString = toSource(Set),\n        weakMapCtorString = toSource(WeakMap);\n\n    /** Used to convert symbols to primitives and strings. */\n    var symbolProto = Symbol ? Symbol.prototype : undefined,\n        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,\n        symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object which wraps `value` to enable implicit method\n     * chain sequences. Methods that operate on and return arrays, collections,\n     * and functions can be chained together. Methods that retrieve a single value\n     * or may return a primitive value will automatically end the chain sequence\n     * and return the unwrapped value. Otherwise, the value must be unwrapped\n     * with `_#value`.\n     *\n     * Explicit chain sequences, which must be unwrapped with `_#value`, may be\n     * enabled using `_.chain`.\n     *\n     * The execution of chained methods is lazy, that is, it's deferred until\n     * `_#value` is implicitly or explicitly called.\n     *\n     * Lazy evaluation allows several methods to support shortcut fusion.\n     * Shortcut fusion is an optimization to merge iteratee calls; this avoids\n     * the creation of intermediate arrays and can greatly reduce the number of\n     * iteratee executions. Sections of a chain sequence qualify for shortcut\n     * fusion if the section is applied to an array and iteratees accept only\n     * one argument. The heuristic for whether a section qualifies for shortcut\n     * fusion is subject to change.\n     *\n     * Chaining is supported in custom builds as long as the `_#value` method is\n     * directly or indirectly included in the build.\n     *\n     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n     *\n     * The wrapper `Array` methods are:\n     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n     *\n     * The wrapper `String` methods are:\n     * `replace` and `split`\n     *\n     * The wrapper methods that support shortcut fusion are:\n     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n     *\n     * The chainable wrapper methods are:\n     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\n     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\n     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\n     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\n     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\n     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\n     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,\n     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,\n     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,\n     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,\n     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\n     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,\n     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,\n     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,\n     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,\n     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,\n     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,\n     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,\n     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,\n     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,\n     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,\n     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,\n     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,\n     * `zipObject`, `zipObjectDeep`, and `zipWith`\n     *\n     * The wrapper methods that are **not** chainable by default are:\n     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,\n     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,\n     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,\n     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,\n     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,\n     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,\n     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,\n     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,\n     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,\n     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,\n     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,\n     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,\n     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,\n     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,\n     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,\n     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,\n     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,\n     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,\n     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,\n     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,\n     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,\n     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,\n     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,\n     * `upperFirst`, `value`, and `words`\n     *\n     * @name _\n     * @constructor\n     * @category Seq\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2, 3]);\n     *\n     * // Returns an unwrapped value.\n     * wrapped.reduce(_.add);\n     * // => 6\n     *\n     * // Returns a wrapped value.\n     * var squares = wrapped.map(square);\n     *\n     * _.isArray(squares);\n     * // => false\n     *\n     * _.isArray(squares.value());\n     * // => true\n     */\n    function lodash(value) {\n      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n        if (value instanceof LodashWrapper) {\n          return value;\n        }\n        if (hasOwnProperty.call(value, '__wrapped__')) {\n          return wrapperClone(value);\n        }\n      }\n      return new LodashWrapper(value);\n    }\n\n    /**\n     * The base implementation of `_.create` without support for assigning\n     * properties to the created object.\n     *\n     * @private\n     * @param {Object} proto The object to inherit from.\n     * @returns {Object} Returns the new object.\n     */\n    var baseCreate = (function() {\n      function object() {}\n      return function(proto) {\n        if (!isObject(proto)) {\n          return {};\n        }\n        if (objectCreate) {\n          return objectCreate(proto);\n        }\n        object.prototype = proto;\n        var result = new object;\n        object.prototype = undefined;\n        return result;\n      };\n    }());\n\n    /**\n     * The function whose prototype chain sequence wrappers inherit from.\n     *\n     * @private\n     */\n    function baseLodash() {\n      // No operation performed.\n    }\n\n    /**\n     * The base constructor for creating `lodash` wrapper objects.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     * @param {boolean} [chainAll] Enable explicit method chain sequences.\n     */\n    function LodashWrapper(value, chainAll) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__chain__ = !!chainAll;\n      this.__index__ = 0;\n      this.__values__ = undefined;\n    }\n\n    /**\n     * By default, the template delimiters used by lodash are like those in\n     * embedded Ruby (ERB) as well as ES2015 template strings. Change the\n     * following template settings to use alternative delimiters.\n     *\n     * @static\n     * @memberOf _\n     * @type {Object}\n     */\n    lodash.templateSettings = {\n\n      /**\n       * Used to detect `data` property values to be HTML-escaped.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'escape': reEscape,\n\n      /**\n       * Used to detect code to be evaluated.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'evaluate': reEvaluate,\n\n      /**\n       * Used to detect `data` property values to inject.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'interpolate': reInterpolate,\n\n      /**\n       * Used to reference the data object in the template text.\n       *\n       * @memberOf _.templateSettings\n       * @type {string}\n       */\n      'variable': '',\n\n      /**\n       * Used to import variables into the compiled template.\n       *\n       * @memberOf _.templateSettings\n       * @type {Object}\n       */\n      'imports': {\n\n        /**\n         * A reference to the `lodash` function.\n         *\n         * @memberOf _.templateSettings.imports\n         * @type {Function}\n         */\n        '_': lodash\n      }\n    };\n\n    // Ensure wrappers are instances of `baseLodash`.\n    lodash.prototype = baseLodash.prototype;\n    lodash.prototype.constructor = lodash;\n\n    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n    LodashWrapper.prototype.constructor = LodashWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n     *\n     * @private\n     * @constructor\n     * @param {*} value The value to wrap.\n     */\n    function LazyWrapper(value) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__dir__ = 1;\n      this.__filtered__ = false;\n      this.__iteratees__ = [];\n      this.__takeCount__ = MAX_ARRAY_LENGTH;\n      this.__views__ = [];\n    }\n\n    /**\n     * Creates a clone of the lazy wrapper object.\n     *\n     * @private\n     * @name clone\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the cloned `LazyWrapper` object.\n     */\n    function lazyClone() {\n      var result = new LazyWrapper(this.__wrapped__);\n      result.__actions__ = copyArray(this.__actions__);\n      result.__dir__ = this.__dir__;\n      result.__filtered__ = this.__filtered__;\n      result.__iteratees__ = copyArray(this.__iteratees__);\n      result.__takeCount__ = this.__takeCount__;\n      result.__views__ = copyArray(this.__views__);\n      return result;\n    }\n\n    /**\n     * Reverses the direction of lazy iteration.\n     *\n     * @private\n     * @name reverse\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n     */\n    function lazyReverse() {\n      if (this.__filtered__) {\n        var result = new LazyWrapper(this);\n        result.__dir__ = -1;\n        result.__filtered__ = true;\n      } else {\n        result = this.clone();\n        result.__dir__ *= -1;\n      }\n      return result;\n    }\n\n    /**\n     * Extracts the unwrapped value from its lazy wrapper.\n     *\n     * @private\n     * @name value\n     * @memberOf LazyWrapper\n     * @returns {*} Returns the unwrapped value.\n     */\n    function lazyValue() {\n      var array = this.__wrapped__.value(),\n          dir = this.__dir__,\n          isArr = isArray(array),\n          isRight = dir < 0,\n          arrLength = isArr ? array.length : 0,\n          view = getView(0, arrLength, this.__views__),\n          start = view.start,\n          end = view.end,\n          length = end - start,\n          index = isRight ? end : (start - 1),\n          iteratees = this.__iteratees__,\n          iterLength = iteratees.length,\n          resIndex = 0,\n          takeCount = nativeMin(length, this.__takeCount__);\n\n      if (!isArr || (!isRight && arrLength == length && takeCount == length)) {\n        return baseWrapperValue(array, this.__actions__);\n      }\n      var result = [];\n\n      outer:\n      while (length-- && resIndex < takeCount) {\n        index += dir;\n\n        var iterIndex = -1,\n            value = array[index];\n\n        while (++iterIndex < iterLength) {\n          var data = iteratees[iterIndex],\n              iteratee = data.iteratee,\n              type = data.type,\n              computed = iteratee(value);\n\n          if (type == LAZY_MAP_FLAG) {\n            value = computed;\n          } else if (!computed) {\n            if (type == LAZY_FILTER_FLAG) {\n              continue outer;\n            } else {\n              break outer;\n            }\n          }\n        }\n        result[resIndex++] = value;\n      }\n      return result;\n    }\n\n    // Ensure `LazyWrapper` is an instance of `baseLodash`.\n    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n    LazyWrapper.prototype.constructor = LazyWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a hash object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Hash(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the hash.\n     *\n     * @private\n     * @name clear\n     * @memberOf Hash\n     */\n    function hashClear() {\n      this.__data__ = nativeCreate ? nativeCreate(null) : {};\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the hash.\n     *\n     * @private\n     * @name delete\n     * @memberOf Hash\n     * @param {Object} hash The hash to modify.\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function hashDelete(key) {\n      var result = this.has(key) && delete this.__data__[key];\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the hash value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Hash\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function hashGet(key) {\n      var data = this.__data__;\n      if (nativeCreate) {\n        var result = data[key];\n        return result === HASH_UNDEFINED ? undefined : result;\n      }\n      return hasOwnProperty.call(data, key) ? data[key] : undefined;\n    }\n\n    /**\n     * Checks if a hash value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Hash\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function hashHas(key) {\n      var data = this.__data__;\n      return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n    }\n\n    /**\n     * Sets the hash `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Hash\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the hash instance.\n     */\n    function hashSet(key, value) {\n      var data = this.__data__;\n      this.size += this.has(key) ? 0 : 1;\n      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n      return this;\n    }\n\n    // Add methods to `Hash`.\n    Hash.prototype.clear = hashClear;\n    Hash.prototype['delete'] = hashDelete;\n    Hash.prototype.get = hashGet;\n    Hash.prototype.has = hashHas;\n    Hash.prototype.set = hashSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an list cache object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function ListCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the list cache.\n     *\n     * @private\n     * @name clear\n     * @memberOf ListCache\n     */\n    function listCacheClear() {\n      this.__data__ = [];\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the list cache.\n     *\n     * @private\n     * @name delete\n     * @memberOf ListCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function listCacheDelete(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        return false;\n      }\n      var lastIndex = data.length - 1;\n      if (index == lastIndex) {\n        data.pop();\n      } else {\n        splice.call(data, index, 1);\n      }\n      --this.size;\n      return true;\n    }\n\n    /**\n     * Gets the list cache value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf ListCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function listCacheGet(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      return index < 0 ? undefined : data[index][1];\n    }\n\n    /**\n     * Checks if a list cache value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf ListCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function listCacheHas(key) {\n      return assocIndexOf(this.__data__, key) > -1;\n    }\n\n    /**\n     * Sets the list cache `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf ListCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the list cache instance.\n     */\n    function listCacheSet(key, value) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        ++this.size;\n        data.push([key, value]);\n      } else {\n        data[index][1] = value;\n      }\n      return this;\n    }\n\n    // Add methods to `ListCache`.\n    ListCache.prototype.clear = listCacheClear;\n    ListCache.prototype['delete'] = listCacheDelete;\n    ListCache.prototype.get = listCacheGet;\n    ListCache.prototype.has = listCacheHas;\n    ListCache.prototype.set = listCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a map cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function MapCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the map.\n     *\n     * @private\n     * @name clear\n     * @memberOf MapCache\n     */\n    function mapCacheClear() {\n      this.size = 0;\n      this.__data__ = {\n        'hash': new Hash,\n        'map': new (Map || ListCache),\n        'string': new Hash\n      };\n    }\n\n    /**\n     * Removes `key` and its value from the map.\n     *\n     * @private\n     * @name delete\n     * @memberOf MapCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function mapCacheDelete(key) {\n      var result = getMapData(this, key)['delete'](key);\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the map value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf MapCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function mapCacheGet(key) {\n      return getMapData(this, key).get(key);\n    }\n\n    /**\n     * Checks if a map value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf MapCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function mapCacheHas(key) {\n      return getMapData(this, key).has(key);\n    }\n\n    /**\n     * Sets the map `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf MapCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the map cache instance.\n     */\n    function mapCacheSet(key, value) {\n      var data = getMapData(this, key),\n          size = data.size;\n\n      data.set(key, value);\n      this.size += data.size == size ? 0 : 1;\n      return this;\n    }\n\n    // Add methods to `MapCache`.\n    MapCache.prototype.clear = mapCacheClear;\n    MapCache.prototype['delete'] = mapCacheDelete;\n    MapCache.prototype.get = mapCacheGet;\n    MapCache.prototype.has = mapCacheHas;\n    MapCache.prototype.set = mapCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     *\n     * Creates an array cache object to store unique values.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [values] The values to cache.\n     */\n    function SetCache(values) {\n      var index = -1,\n          length = values == null ? 0 : values.length;\n\n      this.__data__ = new MapCache;\n      while (++index < length) {\n        this.add(values[index]);\n      }\n    }\n\n    /**\n     * Adds `value` to the array cache.\n     *\n     * @private\n     * @name add\n     * @memberOf SetCache\n     * @alias push\n     * @param {*} value The value to cache.\n     * @returns {Object} Returns the cache instance.\n     */\n    function setCacheAdd(value) {\n      this.__data__.set(value, HASH_UNDEFINED);\n      return this;\n    }\n\n    /**\n     * Checks if `value` is in the array cache.\n     *\n     * @private\n     * @name has\n     * @memberOf SetCache\n     * @param {*} value The value to search for.\n     * @returns {number} Returns `true` if `value` is found, else `false`.\n     */\n    function setCacheHas(value) {\n      return this.__data__.has(value);\n    }\n\n    // Add methods to `SetCache`.\n    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\n    SetCache.prototype.has = setCacheHas;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a stack cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Stack(entries) {\n      var data = this.__data__ = new ListCache(entries);\n      this.size = data.size;\n    }\n\n    /**\n     * Removes all key-value entries from the stack.\n     *\n     * @private\n     * @name clear\n     * @memberOf Stack\n     */\n    function stackClear() {\n      this.__data__ = new ListCache;\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the stack.\n     *\n     * @private\n     * @name delete\n     * @memberOf Stack\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function stackDelete(key) {\n      var data = this.__data__,\n          result = data['delete'](key);\n\n      this.size = data.size;\n      return result;\n    }\n\n    /**\n     * Gets the stack value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Stack\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function stackGet(key) {\n      return this.__data__.get(key);\n    }\n\n    /**\n     * Checks if a stack value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Stack\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function stackHas(key) {\n      return this.__data__.has(key);\n    }\n\n    /**\n     * Sets the stack `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Stack\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the stack cache instance.\n     */\n    function stackSet(key, value) {\n      var data = this.__data__;\n      if (data instanceof ListCache) {\n        var pairs = data.__data__;\n        if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n          pairs.push([key, value]);\n          this.size = ++data.size;\n          return this;\n        }\n        data = this.__data__ = new MapCache(pairs);\n      }\n      data.set(key, value);\n      this.size = data.size;\n      return this;\n    }\n\n    // Add methods to `Stack`.\n    Stack.prototype.clear = stackClear;\n    Stack.prototype['delete'] = stackDelete;\n    Stack.prototype.get = stackGet;\n    Stack.prototype.has = stackHas;\n    Stack.prototype.set = stackSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of the enumerable property names of the array-like `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @param {boolean} inherited Specify returning inherited property names.\n     * @returns {Array} Returns the array of property names.\n     */\n    function arrayLikeKeys(value, inherited) {\n      var isArr = isArray(value),\n          isArg = !isArr && isArguments(value),\n          isBuff = !isArr && !isArg && isBuffer(value),\n          isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n          skipIndexes = isArr || isArg || isBuff || isType,\n          result = skipIndexes ? baseTimes(value.length, String) : [],\n          length = result.length;\n\n      for (var key in value) {\n        if ((inherited || hasOwnProperty.call(value, key)) &&\n            !(skipIndexes && (\n               // Safari 9 has enumerable `arguments.length` in strict mode.\n               key == 'length' ||\n               // Node.js 0.10 has enumerable non-index properties on buffers.\n               (isBuff && (key == 'offset' || key == 'parent')) ||\n               // PhantomJS 2 has enumerable non-index properties on typed arrays.\n               (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n               // Skip index properties.\n               isIndex(key, length)\n            ))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.sample` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @returns {*} Returns the random element.\n     */\n    function arraySample(array) {\n      var length = array.length;\n      return length ? array[baseRandom(0, length - 1)] : undefined;\n    }\n\n    /**\n     * A specialized version of `_.sampleSize` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function arraySampleSize(array, n) {\n      return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * A specialized version of `_.shuffle` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function arrayShuffle(array) {\n      return shuffleSelf(copyArray(array));\n    }\n\n    /**\n     * This function is like `assignValue` except that it doesn't assign\n     * `undefined` values.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignMergeValue(object, key, value) {\n      if ((value !== undefined && !eq(object[key], value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Assigns `value` to `key` of `object` if the existing value is not equivalent\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignValue(object, key, value) {\n      var objValue = object[key];\n      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Gets the index at which the `key` is found in `array` of key-value pairs.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {*} key The key to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     */\n    function assocIndexOf(array, key) {\n      var length = array.length;\n      while (length--) {\n        if (eq(array[length][0], key)) {\n          return length;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Aggregates elements of `collection` on `accumulator` with keys transformed\n     * by `iteratee` and values set by `setter`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform keys.\n     * @param {Object} accumulator The initial aggregated object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseAggregator(collection, setter, iteratee, accumulator) {\n      baseEach(collection, function(value, key, collection) {\n        setter(accumulator, value, iteratee(value), collection);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.assign` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssign(object, source) {\n      return object && copyObject(source, keys(source), object);\n    }\n\n    /**\n     * The base implementation of `_.assignIn` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssignIn(object, source) {\n      return object && copyObject(source, keysIn(source), object);\n    }\n\n    /**\n     * The base implementation of `assignValue` and `assignMergeValue` without\n     * value checks.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function baseAssignValue(object, key, value) {\n      if (key == '__proto__' && defineProperty) {\n        defineProperty(object, key, {\n          'configurable': true,\n          'enumerable': true,\n          'value': value,\n          'writable': true\n        });\n      } else {\n        object[key] = value;\n      }\n    }\n\n    /**\n     * The base implementation of `_.at` without support for individual paths.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Array} Returns the picked elements.\n     */\n    function baseAt(object, paths) {\n      var index = -1,\n          length = paths.length,\n          result = Array(length),\n          skip = object == null;\n\n      while (++index < length) {\n        result[index] = skip ? undefined : get(object, paths[index]);\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.clamp` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     */\n    function baseClamp(number, lower, upper) {\n      if (number === number) {\n        if (upper !== undefined) {\n          number = number <= upper ? number : upper;\n        }\n        if (lower !== undefined) {\n          number = number >= lower ? number : lower;\n        }\n      }\n      return number;\n    }\n\n    /**\n     * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n     * traversed objects.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Deep clone\n     *  2 - Flatten inherited properties\n     *  4 - Clone symbols\n     * @param {Function} [customizer] The function to customize cloning.\n     * @param {string} [key] The key of `value`.\n     * @param {Object} [object] The parent object of `value`.\n     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n     * @returns {*} Returns the cloned value.\n     */\n    function baseClone(value, bitmask, customizer, key, object, stack) {\n      var result,\n          isDeep = bitmask & CLONE_DEEP_FLAG,\n          isFlat = bitmask & CLONE_FLAT_FLAG,\n          isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n      if (customizer) {\n        result = object ? customizer(value, key, object, stack) : customizer(value);\n      }\n      if (result !== undefined) {\n        return result;\n      }\n      if (!isObject(value)) {\n        return value;\n      }\n      var isArr = isArray(value);\n      if (isArr) {\n        result = initCloneArray(value);\n        if (!isDeep) {\n          return copyArray(value, result);\n        }\n      } else {\n        var tag = getTag(value),\n            isFunc = tag == funcTag || tag == genTag;\n\n        if (isBuffer(value)) {\n          return cloneBuffer(value, isDeep);\n        }\n        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n          result = (isFlat || isFunc) ? {} : initCloneObject(value);\n          if (!isDeep) {\n            return isFlat\n              ? copySymbolsIn(value, baseAssignIn(result, value))\n              : copySymbols(value, baseAssign(result, value));\n          }\n        } else {\n          if (!cloneableTags[tag]) {\n            return object ? value : {};\n          }\n          result = initCloneByTag(value, tag, isDeep);\n        }\n      }\n      // Check for circular references and return its corresponding clone.\n      stack || (stack = new Stack);\n      var stacked = stack.get(value);\n      if (stacked) {\n        return stacked;\n      }\n      stack.set(value, result);\n\n      if (isSet(value)) {\n        value.forEach(function(subValue) {\n          result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n        });\n\n        return result;\n      }\n\n      if (isMap(value)) {\n        value.forEach(function(subValue, key) {\n          result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n        });\n\n        return result;\n      }\n\n      var keysFunc = isFull\n        ? (isFlat ? getAllKeysIn : getAllKeys)\n        : (isFlat ? keysIn : keys);\n\n      var props = isArr ? undefined : keysFunc(value);\n      arrayEach(props || value, function(subValue, key) {\n        if (props) {\n          key = subValue;\n          subValue = value[key];\n        }\n        // Recursively populate clone (susceptible to call stack limits).\n        assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.conforms` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseConforms(source) {\n      var props = keys(source);\n      return function(object) {\n        return baseConformsTo(object, source, props);\n      };\n    }\n\n    /**\n     * The base implementation of `_.conformsTo` which accepts `props` to check.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     */\n    function baseConformsTo(object, source, props) {\n      var length = props.length;\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (length--) {\n        var key = props[length],\n            predicate = source[key],\n            value = object[key];\n\n        if ((value === undefined && !(key in object)) || !predicate(value)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.delay` and `_.defer` which accepts `args`\n     * to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {Array} args The arguments to provide to `func`.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    function baseDelay(func, wait, args) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return setTimeout(function() { func.apply(undefined, args); }, wait);\n    }\n\n    /**\n     * The base implementation of methods like `_.difference` without support\n     * for excluding multiple arrays or iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Array} values The values to exclude.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     */\n    function baseDifference(array, values, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          isCommon = true,\n          length = array.length,\n          result = [],\n          valuesLength = values.length;\n\n      if (!length) {\n        return result;\n      }\n      if (iteratee) {\n        values = arrayMap(values, baseUnary(iteratee));\n      }\n      if (comparator) {\n        includes = arrayIncludesWith;\n        isCommon = false;\n      }\n      else if (values.length >= LARGE_ARRAY_SIZE) {\n        includes = cacheHas;\n        isCommon = false;\n        values = new SetCache(values);\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee == null ? value : iteratee(value);\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var valuesIndex = valuesLength;\n          while (valuesIndex--) {\n            if (values[valuesIndex] === computed) {\n              continue outer;\n            }\n          }\n          result.push(value);\n        }\n        else if (!includes(values, computed, comparator)) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.forEach` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEach = createBaseEach(baseForOwn);\n\n    /**\n     * The base implementation of `_.forEachRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\n    /**\n     * The base implementation of `_.every` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`\n     */\n    function baseEvery(collection, predicate) {\n      var result = true;\n      baseEach(collection, function(value, index, collection) {\n        result = !!predicate(value, index, collection);\n        return result;\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of methods like `_.max` and `_.min` which accepts a\n     * `comparator` to determine the extremum value.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The iteratee invoked per iteration.\n     * @param {Function} comparator The comparator used to compare values.\n     * @returns {*} Returns the extremum value.\n     */\n    function baseExtremum(array, iteratee, comparator) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        var value = array[index],\n            current = iteratee(value);\n\n        if (current != null && (computed === undefined\n              ? (current === current && !isSymbol(current))\n              : comparator(current, computed)\n            )) {\n          var computed = current,\n              result = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.fill` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     */\n    function baseFill(array, value, start, end) {\n      var length = array.length;\n\n      start = toInteger(start);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : toInteger(end);\n      if (end < 0) {\n        end += length;\n      }\n      end = start > end ? 0 : toLength(end);\n      while (start < end) {\n        array[start++] = value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.filter` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function baseFilter(collection, predicate) {\n      var result = [];\n      baseEach(collection, function(value, index, collection) {\n        if (predicate(value, index, collection)) {\n          result.push(value);\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.flatten` with support for restricting flattening.\n     *\n     * @private\n     * @param {Array} array The array to flatten.\n     * @param {number} depth The maximum recursion depth.\n     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n     * @param {Array} [result=[]] The initial result value.\n     * @returns {Array} Returns the new flattened array.\n     */\n    function baseFlatten(array, depth, predicate, isStrict, result) {\n      var index = -1,\n          length = array.length;\n\n      predicate || (predicate = isFlattenable);\n      result || (result = []);\n\n      while (++index < length) {\n        var value = array[index];\n        if (depth > 0 && predicate(value)) {\n          if (depth > 1) {\n            // Recursively flatten arrays (susceptible to call stack limits).\n            baseFlatten(value, depth - 1, predicate, isStrict, result);\n          } else {\n            arrayPush(result, value);\n          }\n        } else if (!isStrict) {\n          result[result.length] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `baseForOwn` which iterates over `object`\n     * properties returned by `keysFunc` and invokes `iteratee` for each property.\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseFor = createBaseFor();\n\n    /**\n     * This function is like `baseFor` except that it iterates over properties\n     * in the opposite order.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseForRight = createBaseFor(true);\n\n    /**\n     * The base implementation of `_.forOwn` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwn(object, iteratee) {\n      return object && baseFor(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwnRight(object, iteratee) {\n      return object && baseForRight(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.functions` which creates an array of\n     * `object` function property names filtered from `props`.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} props The property names to filter.\n     * @returns {Array} Returns the function names.\n     */\n    function baseFunctions(object, props) {\n      return arrayFilter(props, function(key) {\n        return isFunction(object[key]);\n      });\n    }\n\n    /**\n     * The base implementation of `_.get` without support for default values.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseGet(object, path) {\n      path = castPath(path, object);\n\n      var index = 0,\n          length = path.length;\n\n      while (object != null && index < length) {\n        object = object[toKey(path[index++])];\n      }\n      return (index && index == length) ? object : undefined;\n    }\n\n    /**\n     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n     * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @param {Function} symbolsFunc The function to get the symbols of `object`.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function baseGetAllKeys(object, keysFunc, symbolsFunc) {\n      var result = keysFunc(object);\n      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n    }\n\n    /**\n     * The base implementation of `getTag` without fallbacks for buggy environments.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    function baseGetTag(value) {\n      if (value == null) {\n        return value === undefined ? undefinedTag : nullTag;\n      }\n      return (symToStringTag && symToStringTag in Object(value))\n        ? getRawTag(value)\n        : objectToString(value);\n    }\n\n    /**\n     * The base implementation of `_.gt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     */\n    function baseGt(value, other) {\n      return value > other;\n    }\n\n    /**\n     * The base implementation of `_.has` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHas(object, key) {\n      return object != null && hasOwnProperty.call(object, key);\n    }\n\n    /**\n     * The base implementation of `_.hasIn` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHasIn(object, key) {\n      return object != null && key in Object(object);\n    }\n\n    /**\n     * The base implementation of `_.inRange` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to check.\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     */\n    function baseInRange(number, start, end) {\n      return number >= nativeMin(start, end) && number < nativeMax(start, end);\n    }\n\n    /**\n     * The base implementation of methods like `_.intersection`, without support\n     * for iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of shared values.\n     */\n    function baseIntersection(arrays, iteratee, comparator) {\n      var includes = comparator ? arrayIncludesWith : arrayIncludes,\n          length = arrays[0].length,\n          othLength = arrays.length,\n          othIndex = othLength,\n          caches = Array(othLength),\n          maxLength = Infinity,\n          result = [];\n\n      while (othIndex--) {\n        var array = arrays[othIndex];\n        if (othIndex && iteratee) {\n          array = arrayMap(array, baseUnary(iteratee));\n        }\n        maxLength = nativeMin(array.length, maxLength);\n        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))\n          ? new SetCache(othIndex && array)\n          : undefined;\n      }\n      array = arrays[0];\n\n      var index = -1,\n          seen = caches[0];\n\n      outer:\n      while (++index < length && result.length < maxLength) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (!(seen\n              ? cacheHas(seen, computed)\n              : includes(result, computed, comparator)\n            )) {\n          othIndex = othLength;\n          while (--othIndex) {\n            var cache = caches[othIndex];\n            if (!(cache\n                  ? cacheHas(cache, computed)\n                  : includes(arrays[othIndex], computed, comparator))\n                ) {\n              continue outer;\n            }\n          }\n          if (seen) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.invert` and `_.invertBy` which inverts\n     * `object` with values transformed by `iteratee` and set by `setter`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform values.\n     * @param {Object} accumulator The initial inverted object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseInverter(object, setter, iteratee, accumulator) {\n      baseForOwn(object, function(value, key, object) {\n        setter(accumulator, iteratee(value), key, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.invoke` without support for individual\n     * method arguments.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {Array} args The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     */\n    function baseInvoke(object, path, args) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      var func = object == null ? object : object[toKey(last(path))];\n      return func == null ? undefined : apply(func, object, args);\n    }\n\n    /**\n     * The base implementation of `_.isArguments`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     */\n    function baseIsArguments(value) {\n      return isObjectLike(value) && baseGetTag(value) == argsTag;\n    }\n\n    /**\n     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     */\n    function baseIsArrayBuffer(value) {\n      return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;\n    }\n\n    /**\n     * The base implementation of `_.isDate` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     */\n    function baseIsDate(value) {\n      return isObjectLike(value) && baseGetTag(value) == dateTag;\n    }\n\n    /**\n     * The base implementation of `_.isEqual` which supports partial comparisons\n     * and tracks traversed objects.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Unordered comparison\n     *  2 - Partial comparison\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     */\n    function baseIsEqual(value, other, bitmask, customizer, stack) {\n      if (value === other) {\n        return true;\n      }\n      if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n        return value !== value && other !== other;\n      }\n      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n    }\n\n    /**\n     * A specialized version of `baseIsEqual` for arrays and objects which performs\n     * deep comparisons and tracks traversed objects enabling objects with circular\n     * references to be compared.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n      var objIsArr = isArray(object),\n          othIsArr = isArray(other),\n          objTag = objIsArr ? arrayTag : getTag(object),\n          othTag = othIsArr ? arrayTag : getTag(other);\n\n      objTag = objTag == argsTag ? objectTag : objTag;\n      othTag = othTag == argsTag ? objectTag : othTag;\n\n      var objIsObj = objTag == objectTag,\n          othIsObj = othTag == objectTag,\n          isSameTag = objTag == othTag;\n\n      if (isSameTag && isBuffer(object)) {\n        if (!isBuffer(other)) {\n          return false;\n        }\n        objIsArr = true;\n        objIsObj = false;\n      }\n      if (isSameTag && !objIsObj) {\n        stack || (stack = new Stack);\n        return (objIsArr || isTypedArray(object))\n          ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n          : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n      }\n      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n        if (objIsWrapped || othIsWrapped) {\n          var objUnwrapped = objIsWrapped ? object.value() : object,\n              othUnwrapped = othIsWrapped ? other.value() : other;\n\n          stack || (stack = new Stack);\n          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n        }\n      }\n      if (!isSameTag) {\n        return false;\n      }\n      stack || (stack = new Stack);\n      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n    }\n\n    /**\n     * The base implementation of `_.isMap` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     */\n    function baseIsMap(value) {\n      return isObjectLike(value) && getTag(value) == mapTag;\n    }\n\n    /**\n     * The base implementation of `_.isMatch` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Array} matchData The property names, values, and compare flags to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     */\n    function baseIsMatch(object, source, matchData, customizer) {\n      var index = matchData.length,\n          length = index,\n          noCustomizer = !customizer;\n\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (index--) {\n        var data = matchData[index];\n        if ((noCustomizer && data[2])\n              ? data[1] !== object[data[0]]\n              : !(data[0] in object)\n            ) {\n          return false;\n        }\n      }\n      while (++index < length) {\n        data = matchData[index];\n        var key = data[0],\n            objValue = object[key],\n            srcValue = data[1];\n\n        if (noCustomizer && data[2]) {\n          if (objValue === undefined && !(key in object)) {\n            return false;\n          }\n        } else {\n          var stack = new Stack;\n          if (customizer) {\n            var result = customizer(objValue, srcValue, key, object, source, stack);\n          }\n          if (!(result === undefined\n                ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n                : result\n              )) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.isNative` without bad shim checks.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     */\n    function baseIsNative(value) {\n      if (!isObject(value) || isMasked(value)) {\n        return false;\n      }\n      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n      return pattern.test(toSource(value));\n    }\n\n    /**\n     * The base implementation of `_.isRegExp` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     */\n    function baseIsRegExp(value) {\n      return isObjectLike(value) && baseGetTag(value) == regexpTag;\n    }\n\n    /**\n     * The base implementation of `_.isSet` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     */\n    function baseIsSet(value) {\n      return isObjectLike(value) && getTag(value) == setTag;\n    }\n\n    /**\n     * The base implementation of `_.isTypedArray` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     */\n    function baseIsTypedArray(value) {\n      return isObjectLike(value) &&\n        isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n    }\n\n    /**\n     * The base implementation of `_.iteratee`.\n     *\n     * @private\n     * @param {*} [value=_.identity] The value to convert to an iteratee.\n     * @returns {Function} Returns the iteratee.\n     */\n    function baseIteratee(value) {\n      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n      if (typeof value == 'function') {\n        return value;\n      }\n      if (value == null) {\n        return identity;\n      }\n      if (typeof value == 'object') {\n        return isArray(value)\n          ? baseMatchesProperty(value[0], value[1])\n          : baseMatches(value);\n      }\n      return property(value);\n    }\n\n    /**\n     * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeys(object) {\n      if (!isPrototype(object)) {\n        return nativeKeys(object);\n      }\n      var result = [];\n      for (var key in Object(object)) {\n        if (hasOwnProperty.call(object, key) && key != 'constructor') {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeysIn(object) {\n      if (!isObject(object)) {\n        return nativeKeysIn(object);\n      }\n      var isProto = isPrototype(object),\n          result = [];\n\n      for (var key in object) {\n        if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.lt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     */\n    function baseLt(value, other) {\n      return value < other;\n    }\n\n    /**\n     * The base implementation of `_.map` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function baseMap(collection, iteratee) {\n      var index = -1,\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value, key, collection) {\n        result[++index] = iteratee(value, key, collection);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.matches` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatches(source) {\n      var matchData = getMatchData(source);\n      if (matchData.length == 1 && matchData[0][2]) {\n        return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n      }\n      return function(object) {\n        return object === source || baseIsMatch(object, source, matchData);\n      };\n    }\n\n    /**\n     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n     *\n     * @private\n     * @param {string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatchesProperty(path, srcValue) {\n      if (isKey(path) && isStrictComparable(srcValue)) {\n        return matchesStrictComparable(toKey(path), srcValue);\n      }\n      return function(object) {\n        var objValue = get(object, path);\n        return (objValue === undefined && objValue === srcValue)\n          ? hasIn(object, path)\n          : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n      };\n    }\n\n    /**\n     * The base implementation of `_.merge` without support for multiple sources.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMerge(object, source, srcIndex, customizer, stack) {\n      if (object === source) {\n        return;\n      }\n      baseFor(source, function(srcValue, key) {\n        if (isObject(srcValue)) {\n          stack || (stack = new Stack);\n          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n        }\n        else {\n          var newValue = customizer\n            ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)\n            : undefined;\n\n          if (newValue === undefined) {\n            newValue = srcValue;\n          }\n          assignMergeValue(object, key, newValue);\n        }\n      }, keysIn);\n    }\n\n    /**\n     * A specialized version of `baseMerge` for arrays and objects which performs\n     * deep merges and tracks traversed objects enabling objects with circular\n     * references to be merged.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {string} key The key of the value to merge.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} mergeFunc The function to merge values.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n      var objValue = safeGet(object, key),\n          srcValue = safeGet(source, key),\n          stacked = stack.get(srcValue);\n\n      if (stacked) {\n        assignMergeValue(object, key, stacked);\n        return;\n      }\n      var newValue = customizer\n        ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      var isCommon = newValue === undefined;\n\n      if (isCommon) {\n        var isArr = isArray(srcValue),\n            isBuff = !isArr && isBuffer(srcValue),\n            isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n\n        newValue = srcValue;\n        if (isArr || isBuff || isTyped) {\n          if (isArray(objValue)) {\n            newValue = objValue;\n          }\n          else if (isArrayLikeObject(objValue)) {\n            newValue = copyArray(objValue);\n          }\n          else if (isBuff) {\n            isCommon = false;\n            newValue = cloneBuffer(srcValue, true);\n          }\n          else if (isTyped) {\n            isCommon = false;\n            newValue = cloneTypedArray(srcValue, true);\n          }\n          else {\n            newValue = [];\n          }\n        }\n        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n          newValue = objValue;\n          if (isArguments(objValue)) {\n            newValue = toPlainObject(objValue);\n          }\n          else if (!isObject(objValue) || (srcIndex && isFunction(objValue))) {\n            newValue = initCloneObject(srcValue);\n          }\n        }\n        else {\n          isCommon = false;\n        }\n      }\n      if (isCommon) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, newValue);\n        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n        stack['delete'](srcValue);\n      }\n      assignMergeValue(object, key, newValue);\n    }\n\n    /**\n     * The base implementation of `_.nth` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {number} n The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     */\n    function baseNth(array, n) {\n      var length = array.length;\n      if (!length) {\n        return;\n      }\n      n += n < 0 ? length : 0;\n      return isIndex(n, length) ? array[n] : undefined;\n    }\n\n    /**\n     * The base implementation of `_.orderBy` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {string[]} orders The sort orders of `iteratees`.\n     * @returns {Array} Returns the new sorted array.\n     */\n    function baseOrderBy(collection, iteratees, orders) {\n      var index = -1;\n      iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(getIteratee()));\n\n      var result = baseMap(collection, function(value, key, collection) {\n        var criteria = arrayMap(iteratees, function(iteratee) {\n          return iteratee(value);\n        });\n        return { 'criteria': criteria, 'index': ++index, 'value': value };\n      });\n\n      return baseSortBy(result, function(object, other) {\n        return compareMultiple(object, other, orders);\n      });\n    }\n\n    /**\n     * The base implementation of `_.pick` without support for individual\n     * property identifiers.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Object} Returns the new object.\n     */\n    function basePick(object, paths) {\n      return basePickBy(object, paths, function(value, path) {\n        return hasIn(object, path);\n      });\n    }\n\n    /**\n     * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @param {Function} predicate The function invoked per property.\n     * @returns {Object} Returns the new object.\n     */\n    function basePickBy(object, paths, predicate) {\n      var index = -1,\n          length = paths.length,\n          result = {};\n\n      while (++index < length) {\n        var path = paths[index],\n            value = baseGet(object, path);\n\n        if (predicate(value, path)) {\n          baseSet(result, castPath(path, object), value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseProperty` which supports deep paths.\n     *\n     * @private\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     */\n    function basePropertyDeep(path) {\n      return function(object) {\n        return baseGet(object, path);\n      };\n    }\n\n    /**\n     * The base implementation of `_.pullAllBy` without support for iteratee\n     * shorthands.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAll(array, values, iteratee, comparator) {\n      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,\n          index = -1,\n          length = values.length,\n          seen = array;\n\n      if (array === values) {\n        values = copyArray(values);\n      }\n      if (iteratee) {\n        seen = arrayMap(array, baseUnary(iteratee));\n      }\n      while (++index < length) {\n        var fromIndex = 0,\n            value = values[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {\n          if (seen !== array) {\n            splice.call(seen, fromIndex, 1);\n          }\n          splice.call(array, fromIndex, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.pullAt` without support for individual\n     * indexes or capturing the removed elements.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {number[]} indexes The indexes of elements to remove.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAt(array, indexes) {\n      var length = array ? indexes.length : 0,\n          lastIndex = length - 1;\n\n      while (length--) {\n        var index = indexes[length];\n        if (length == lastIndex || index !== previous) {\n          var previous = index;\n          if (isIndex(index)) {\n            splice.call(array, index, 1);\n          } else {\n            baseUnset(array, index);\n          }\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.random` without support for returning\n     * floating-point numbers.\n     *\n     * @private\n     * @param {number} lower The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the random number.\n     */\n    function baseRandom(lower, upper) {\n      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n    }\n\n    /**\n     * The base implementation of `_.range` and `_.rangeRight` which doesn't\n     * coerce arguments.\n     *\n     * @private\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} step The value to increment or decrement by.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the range of numbers.\n     */\n    function baseRange(start, end, step, fromRight) {\n      var index = -1,\n          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n          result = Array(length);\n\n      while (length--) {\n        result[fromRight ? length : ++index] = start;\n        start += step;\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.repeat` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {string} string The string to repeat.\n     * @param {number} n The number of times to repeat the string.\n     * @returns {string} Returns the repeated string.\n     */\n    function baseRepeat(string, n) {\n      var result = '';\n      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {\n        return result;\n      }\n      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n      do {\n        if (n % 2) {\n          result += string;\n        }\n        n = nativeFloor(n / 2);\n        if (n) {\n          string += string;\n        }\n      } while (n);\n\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     */\n    function baseRest(func, start) {\n      return setToString(overRest(func, start, identity), func + '');\n    }\n\n    /**\n     * The base implementation of `_.sample`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     */\n    function baseSample(collection) {\n      return arraySample(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.sampleSize` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function baseSampleSize(collection, n) {\n      var array = values(collection);\n      return shuffleSelf(array, baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * The base implementation of `_.set`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseSet(object, path, value, customizer) {\n      if (!isObject(object)) {\n        return object;\n      }\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          lastIndex = length - 1,\n          nested = object;\n\n      while (nested != null && ++index < length) {\n        var key = toKey(path[index]),\n            newValue = value;\n\n        if (index != lastIndex) {\n          var objValue = nested[key];\n          newValue = customizer ? customizer(objValue, key, nested) : undefined;\n          if (newValue === undefined) {\n            newValue = isObject(objValue)\n              ? objValue\n              : (isIndex(path[index + 1]) ? [] : {});\n          }\n        }\n        assignValue(nested, key, newValue);\n        nested = nested[key];\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `setData` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetData = !metaMap ? identity : function(func, data) {\n      metaMap.set(func, data);\n      return func;\n    };\n\n    /**\n     * The base implementation of `setToString` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetToString = !defineProperty ? identity : function(func, string) {\n      return defineProperty(func, 'toString', {\n        'configurable': true,\n        'enumerable': false,\n        'value': constant(string),\n        'writable': true\n      });\n    };\n\n    /**\n     * The base implementation of `_.shuffle`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function baseShuffle(collection) {\n      return shuffleSelf(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.slice` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseSlice(array, start, end) {\n      var index = -1,\n          length = array.length;\n\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = end > length ? length : end;\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : ((end - start) >>> 0);\n      start >>>= 0;\n\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = array[index + start];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.some` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function baseSome(collection, predicate) {\n      var result;\n\n      baseEach(collection, function(value, index, collection) {\n        result = predicate(value, index, collection);\n        return !result;\n      });\n      return !!result;\n    }\n\n    /**\n     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which\n     * performs a binary search of `array` to determine the index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndex(array, value, retHighest) {\n      var low = 0,\n          high = array == null ? low : array.length;\n\n      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n        while (low < high) {\n          var mid = (low + high) >>> 1,\n              computed = array[mid];\n\n          if (computed !== null && !isSymbol(computed) &&\n              (retHighest ? (computed <= value) : (computed < value))) {\n            low = mid + 1;\n          } else {\n            high = mid;\n          }\n        }\n        return high;\n      }\n      return baseSortedIndexBy(array, value, identity, retHighest);\n    }\n\n    /**\n     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`\n     * which invokes `iteratee` for `value` and each element of `array` to compute\n     * their sort ranking. The iteratee is invoked with one argument; (value).\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} iteratee The iteratee invoked per element.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndexBy(array, value, iteratee, retHighest) {\n      value = iteratee(value);\n\n      var low = 0,\n          high = array == null ? 0 : array.length,\n          valIsNaN = value !== value,\n          valIsNull = value === null,\n          valIsSymbol = isSymbol(value),\n          valIsUndefined = value === undefined;\n\n      while (low < high) {\n        var mid = nativeFloor((low + high) / 2),\n            computed = iteratee(array[mid]),\n            othIsDefined = computed !== undefined,\n            othIsNull = computed === null,\n            othIsReflexive = computed === computed,\n            othIsSymbol = isSymbol(computed);\n\n        if (valIsNaN) {\n          var setLow = retHighest || othIsReflexive;\n        } else if (valIsUndefined) {\n          setLow = othIsReflexive && (retHighest || othIsDefined);\n        } else if (valIsNull) {\n          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);\n        } else if (valIsSymbol) {\n          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);\n        } else if (othIsNull || othIsSymbol) {\n          setLow = false;\n        } else {\n          setLow = retHighest ? (computed <= value) : (computed < value);\n        }\n        if (setLow) {\n          low = mid + 1;\n        } else {\n          high = mid;\n        }\n      }\n      return nativeMin(high, MAX_ARRAY_INDEX);\n    }\n\n    /**\n     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without\n     * support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseSortedUniq(array, iteratee) {\n      var index = -1,\n          length = array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        if (!index || !eq(computed, seen)) {\n          var seen = computed;\n          result[resIndex++] = value === 0 ? 0 : value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.toNumber` which doesn't ensure correct\n     * conversions of binary, hexadecimal, or octal string values.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     */\n    function baseToNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      return +value;\n    }\n\n    /**\n     * The base implementation of `_.toString` which doesn't convert nullish\n     * values to empty strings.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {string} Returns the string.\n     */\n    function baseToString(value) {\n      // Exit early for strings to avoid a performance hit in some environments.\n      if (typeof value == 'string') {\n        return value;\n      }\n      if (isArray(value)) {\n        // Recursively convert values (susceptible to call stack limits).\n        return arrayMap(value, baseToString) + '';\n      }\n      if (isSymbol(value)) {\n        return symbolToString ? symbolToString.call(value) : '';\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseUniq(array, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          length = array.length,\n          isCommon = true,\n          result = [],\n          seen = result;\n\n      if (comparator) {\n        isCommon = false;\n        includes = arrayIncludesWith;\n      }\n      else if (length >= LARGE_ARRAY_SIZE) {\n        var set = iteratee ? null : createSet(array);\n        if (set) {\n          return setToArray(set);\n        }\n        isCommon = false;\n        includes = cacheHas;\n        seen = new SetCache;\n      }\n      else {\n        seen = iteratee ? [] : result;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var seenIndex = seen.length;\n          while (seenIndex--) {\n            if (seen[seenIndex] === computed) {\n              continue outer;\n            }\n          }\n          if (iteratee) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n        else if (!includes(seen, computed, comparator)) {\n          if (seen !== result) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.unset`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The property path to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     */\n    function baseUnset(object, path) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      return object == null || delete object[toKey(last(path))];\n    }\n\n    /**\n     * The base implementation of `_.update`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to update.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseUpdate(object, path, updater, customizer) {\n      return baseSet(object, path, updater(baseGet(object, path)), customizer);\n    }\n\n    /**\n     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`\n     * without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseWhile(array, predicate, isDrop, fromRight) {\n      var length = array.length,\n          index = fromRight ? length : -1;\n\n      while ((fromRight ? index-- : ++index < length) &&\n        predicate(array[index], index, array)) {}\n\n      return isDrop\n        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n    }\n\n    /**\n     * The base implementation of `wrapperValue` which returns the result of\n     * performing a sequence of actions on the unwrapped `value`, where each\n     * successive action is supplied the return value of the previous.\n     *\n     * @private\n     * @param {*} value The unwrapped value.\n     * @param {Array} actions Actions to perform to resolve the unwrapped value.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseWrapperValue(value, actions) {\n      var result = value;\n      if (result instanceof LazyWrapper) {\n        result = result.value();\n      }\n      return arrayReduce(actions, function(result, action) {\n        return action.func.apply(action.thisArg, arrayPush([result], action.args));\n      }, result);\n    }\n\n    /**\n     * The base implementation of methods like `_.xor`, without support for\n     * iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of values.\n     */\n    function baseXor(arrays, iteratee, comparator) {\n      var length = arrays.length;\n      if (length < 2) {\n        return length ? baseUniq(arrays[0]) : [];\n      }\n      var index = -1,\n          result = Array(length);\n\n      while (++index < length) {\n        var array = arrays[index],\n            othIndex = -1;\n\n        while (++othIndex < length) {\n          if (othIndex != index) {\n            result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);\n          }\n        }\n      }\n      return baseUniq(baseFlatten(result, 1), iteratee, comparator);\n    }\n\n    /**\n     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.\n     *\n     * @private\n     * @param {Array} props The property identifiers.\n     * @param {Array} values The property values.\n     * @param {Function} assignFunc The function to assign values.\n     * @returns {Object} Returns the new object.\n     */\n    function baseZipObject(props, values, assignFunc) {\n      var index = -1,\n          length = props.length,\n          valsLength = values.length,\n          result = {};\n\n      while (++index < length) {\n        var value = index < valsLength ? values[index] : undefined;\n        assignFunc(result, props[index], value);\n      }\n      return result;\n    }\n\n    /**\n     * Casts `value` to an empty array if it's not an array like object.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Array|Object} Returns the cast array-like object.\n     */\n    function castArrayLikeObject(value) {\n      return isArrayLikeObject(value) ? value : [];\n    }\n\n    /**\n     * Casts `value` to `identity` if it's not a function.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Function} Returns cast function.\n     */\n    function castFunction(value) {\n      return typeof value == 'function' ? value : identity;\n    }\n\n    /**\n     * Casts `value` to a path array if it's not one.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {Array} Returns the cast property path array.\n     */\n    function castPath(value, object) {\n      if (isArray(value)) {\n        return value;\n      }\n      return isKey(value, object) ? [value] : stringToPath(toString(value));\n    }\n\n    /**\n     * A `baseRest` alias which can be replaced with `identity` by module\n     * replacement plugins.\n     *\n     * @private\n     * @type {Function}\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    var castRest = baseRest;\n\n    /**\n     * Casts `array` to a slice if it's needed.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {number} start The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the cast slice.\n     */\n    function castSlice(array, start, end) {\n      var length = array.length;\n      end = end === undefined ? length : end;\n      return (!start && end >= length) ? array : baseSlice(array, start, end);\n    }\n\n    /**\n     * A simple wrapper around the global [`clearTimeout`](https://mdn.io/clearTimeout).\n     *\n     * @private\n     * @param {number|Object} id The timer id or timeout object of the timer to clear.\n     */\n    var clearTimeout = ctxClearTimeout || function(id) {\n      return root.clearTimeout(id);\n    };\n\n    /**\n     * Creates a clone of  `buffer`.\n     *\n     * @private\n     * @param {Buffer} buffer The buffer to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Buffer} Returns the cloned buffer.\n     */\n    function cloneBuffer(buffer, isDeep) {\n      if (isDeep) {\n        return buffer.slice();\n      }\n      var length = buffer.length,\n          result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n      buffer.copy(result);\n      return result;\n    }\n\n    /**\n     * Creates a clone of `arrayBuffer`.\n     *\n     * @private\n     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n     * @returns {ArrayBuffer} Returns the cloned array buffer.\n     */\n    function cloneArrayBuffer(arrayBuffer) {\n      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n      new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n      return result;\n    }\n\n    /**\n     * Creates a clone of `dataView`.\n     *\n     * @private\n     * @param {Object} dataView The data view to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned data view.\n     */\n    function cloneDataView(dataView, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n    }\n\n    /**\n     * Creates a clone of `regexp`.\n     *\n     * @private\n     * @param {Object} regexp The regexp to clone.\n     * @returns {Object} Returns the cloned regexp.\n     */\n    function cloneRegExp(regexp) {\n      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n      result.lastIndex = regexp.lastIndex;\n      return result;\n    }\n\n    /**\n     * Creates a clone of the `symbol` object.\n     *\n     * @private\n     * @param {Object} symbol The symbol object to clone.\n     * @returns {Object} Returns the cloned symbol object.\n     */\n    function cloneSymbol(symbol) {\n      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n    }\n\n    /**\n     * Creates a clone of `typedArray`.\n     *\n     * @private\n     * @param {Object} typedArray The typed array to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned typed array.\n     */\n    function cloneTypedArray(typedArray, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n    }\n\n    /**\n     * Compares values to sort them in ascending order.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {number} Returns the sort order indicator for `value`.\n     */\n    function compareAscending(value, other) {\n      if (value !== other) {\n        var valIsDefined = value !== undefined,\n            valIsNull = value === null,\n            valIsReflexive = value === value,\n            valIsSymbol = isSymbol(value);\n\n        var othIsDefined = other !== undefined,\n            othIsNull = other === null,\n            othIsReflexive = other === other,\n            othIsSymbol = isSymbol(other);\n\n        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n            (valIsNull && othIsDefined && othIsReflexive) ||\n            (!valIsDefined && othIsReflexive) ||\n            !valIsReflexive) {\n          return 1;\n        }\n        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n            (othIsNull && valIsDefined && valIsReflexive) ||\n            (!othIsDefined && valIsReflexive) ||\n            !othIsReflexive) {\n          return -1;\n        }\n      }\n      return 0;\n    }\n\n    /**\n     * Used by `_.orderBy` to compare multiple properties of a value to another\n     * and stable sort them.\n     *\n     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n     * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n     * of corresponding values.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {boolean[]|string[]} orders The order to sort by for each property.\n     * @returns {number} Returns the sort order indicator for `object`.\n     */\n    function compareMultiple(object, other, orders) {\n      var index = -1,\n          objCriteria = object.criteria,\n          othCriteria = other.criteria,\n          length = objCriteria.length,\n          ordersLength = orders.length;\n\n      while (++index < length) {\n        var result = compareAscending(objCriteria[index], othCriteria[index]);\n        if (result) {\n          if (index >= ordersLength) {\n            return result;\n          }\n          var order = orders[index];\n          return result * (order == 'desc' ? -1 : 1);\n        }\n      }\n      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n      // that causes it, under certain circumstances, to provide the same value for\n      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n      // for more details.\n      //\n      // This also ensures a stable sort in V8 and other engines.\n      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n      return object.index - other.index;\n    }\n\n    /**\n     * Creates an array that is the composition of partially applied arguments,\n     * placeholders, and provided arguments into a single array of arguments.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to prepend to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgs(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersLength = holders.length,\n          leftIndex = -1,\n          leftLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(leftLength + rangeLength),\n          isUncurried = !isCurried;\n\n      while (++leftIndex < leftLength) {\n        result[leftIndex] = partials[leftIndex];\n      }\n      while (++argsIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[holders[argsIndex]] = args[argsIndex];\n        }\n      }\n      while (rangeLength--) {\n        result[leftIndex++] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * This function is like `composeArgs` except that the arguments composition\n     * is tailored for `_.partialRight`.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to append to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgsRight(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersIndex = -1,\n          holdersLength = holders.length,\n          rightIndex = -1,\n          rightLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(rangeLength + rightLength),\n          isUncurried = !isCurried;\n\n      while (++argsIndex < rangeLength) {\n        result[argsIndex] = args[argsIndex];\n      }\n      var offset = argsIndex;\n      while (++rightIndex < rightLength) {\n        result[offset + rightIndex] = partials[rightIndex];\n      }\n      while (++holdersIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[offset + holders[holdersIndex]] = args[argsIndex++];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Copies the values of `source` to `array`.\n     *\n     * @private\n     * @param {Array} source The array to copy values from.\n     * @param {Array} [array=[]] The array to copy values to.\n     * @returns {Array} Returns `array`.\n     */\n    function copyArray(source, array) {\n      var index = -1,\n          length = source.length;\n\n      array || (array = Array(length));\n      while (++index < length) {\n        array[index] = source[index];\n      }\n      return array;\n    }\n\n    /**\n     * Copies properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy properties from.\n     * @param {Array} props The property identifiers to copy.\n     * @param {Object} [object={}] The object to copy properties to.\n     * @param {Function} [customizer] The function to customize copied values.\n     * @returns {Object} Returns `object`.\n     */\n    function copyObject(source, props, object, customizer) {\n      var isNew = !object;\n      object || (object = {});\n\n      var index = -1,\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index];\n\n        var newValue = customizer\n          ? customizer(object[key], source[key], key, object, source)\n          : undefined;\n\n        if (newValue === undefined) {\n          newValue = source[key];\n        }\n        if (isNew) {\n          baseAssignValue(object, key, newValue);\n        } else {\n          assignValue(object, key, newValue);\n        }\n      }\n      return object;\n    }\n\n    /**\n     * Copies own symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbols(source, object) {\n      return copyObject(source, getSymbols(source), object);\n    }\n\n    /**\n     * Copies own and inherited symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbolsIn(source, object) {\n      return copyObject(source, getSymbolsIn(source), object);\n    }\n\n    /**\n     * Creates a function like `_.groupBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} [initializer] The accumulator object initializer.\n     * @returns {Function} Returns the new aggregator function.\n     */\n    function createAggregator(setter, initializer) {\n      return function(collection, iteratee) {\n        var func = isArray(collection) ? arrayAggregator : baseAggregator,\n            accumulator = initializer ? initializer() : {};\n\n        return func(collection, setter, getIteratee(iteratee, 2), accumulator);\n      };\n    }\n\n    /**\n     * Creates a function like `_.assign`.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @returns {Function} Returns the new assigner function.\n     */\n    function createAssigner(assigner) {\n      return baseRest(function(object, sources) {\n        var index = -1,\n            length = sources.length,\n            customizer = length > 1 ? sources[length - 1] : undefined,\n            guard = length > 2 ? sources[2] : undefined;\n\n        customizer = (assigner.length > 3 && typeof customizer == 'function')\n          ? (length--, customizer)\n          : undefined;\n\n        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n          customizer = length < 3 ? undefined : customizer;\n          length = 1;\n        }\n        object = Object(object);\n        while (++index < length) {\n          var source = sources[index];\n          if (source) {\n            assigner(object, source, index, customizer);\n          }\n        }\n        return object;\n      });\n    }\n\n    /**\n     * Creates a `baseEach` or `baseEachRight` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseEach(eachFunc, fromRight) {\n      return function(collection, iteratee) {\n        if (collection == null) {\n          return collection;\n        }\n        if (!isArrayLike(collection)) {\n          return eachFunc(collection, iteratee);\n        }\n        var length = collection.length,\n            index = fromRight ? length : -1,\n            iterable = Object(collection);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          if (iteratee(iterable[index], index, iterable) === false) {\n            break;\n          }\n        }\n        return collection;\n      };\n    }\n\n    /**\n     * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseFor(fromRight) {\n      return function(object, iteratee, keysFunc) {\n        var index = -1,\n            iterable = Object(object),\n            props = keysFunc(object),\n            length = props.length;\n\n        while (length--) {\n          var key = props[fromRight ? length : ++index];\n          if (iteratee(iterable[key], key, iterable) === false) {\n            break;\n          }\n        }\n        return object;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the optional `this`\n     * binding of `thisArg`.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createBind(func, bitmask, thisArg) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(isBind ? thisArg : this, arguments);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.lowerFirst`.\n     *\n     * @private\n     * @param {string} methodName The name of the `String` case method to use.\n     * @returns {Function} Returns the new case function.\n     */\n    function createCaseFirst(methodName) {\n      return function(string) {\n        string = toString(string);\n\n        var strSymbols = hasUnicode(string)\n          ? stringToArray(string)\n          : undefined;\n\n        var chr = strSymbols\n          ? strSymbols[0]\n          : string.charAt(0);\n\n        var trailing = strSymbols\n          ? castSlice(strSymbols, 1).join('')\n          : string.slice(1);\n\n        return chr[methodName]() + trailing;\n      };\n    }\n\n    /**\n     * Creates a function like `_.camelCase`.\n     *\n     * @private\n     * @param {Function} callback The function to combine each word.\n     * @returns {Function} Returns the new compounder function.\n     */\n    function createCompounder(callback) {\n      return function(string) {\n        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n      };\n    }\n\n    /**\n     * Creates a function that produces an instance of `Ctor` regardless of\n     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n     *\n     * @private\n     * @param {Function} Ctor The constructor to wrap.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCtor(Ctor) {\n      return function() {\n        // Use a `switch` statement to work with class constructors. See\n        // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n        // for more details.\n        var args = arguments;\n        switch (args.length) {\n          case 0: return new Ctor;\n          case 1: return new Ctor(args[0]);\n          case 2: return new Ctor(args[0], args[1]);\n          case 3: return new Ctor(args[0], args[1], args[2]);\n          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n        }\n        var thisBinding = baseCreate(Ctor.prototype),\n            result = Ctor.apply(thisBinding, args);\n\n        // Mimic the constructor's `return` behavior.\n        // See https://es5.github.io/#x13.2.2 for more details.\n        return isObject(result) ? result : thisBinding;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to enable currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {number} arity The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCurry(func, bitmask, arity) {\n      var Ctor = createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length,\n            placeholder = getHolder(wrapper);\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)\n          ? []\n          : replaceHolders(args, placeholder);\n\n        length -= holders.length;\n        if (length < arity) {\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, undefined,\n            args, holders, undefined, undefined, arity - length);\n        }\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return apply(fn, this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.find` or `_.findLast` function.\n     *\n     * @private\n     * @param {Function} findIndexFunc The function to find the collection index.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFind(findIndexFunc) {\n      return function(collection, predicate, fromIndex) {\n        var iterable = Object(collection);\n        if (!isArrayLike(collection)) {\n          var iteratee = getIteratee(predicate, 3);\n          collection = keys(collection);\n          predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n        }\n        var index = findIndexFunc(collection, predicate, fromIndex);\n        return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n      };\n    }\n\n    /**\n     * Creates a `_.flow` or `_.flowRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new flow function.\n     */\n    function createFlow(fromRight) {\n      return flatRest(function(funcs) {\n        var length = funcs.length,\n            index = length,\n            prereq = LodashWrapper.prototype.thru;\n\n        if (fromRight) {\n          funcs.reverse();\n        }\n        while (index--) {\n          var func = funcs[index];\n          if (typeof func != 'function') {\n            throw new TypeError(FUNC_ERROR_TEXT);\n          }\n          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {\n            var wrapper = new LodashWrapper([], true);\n          }\n        }\n        index = wrapper ? index : length;\n        while (++index < length) {\n          func = funcs[index];\n\n          var funcName = getFuncName(func),\n              data = funcName == 'wrapper' ? getData(func) : undefined;\n\n          if (data && isLaziable(data[0]) &&\n                data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) &&\n                !data[4].length && data[9] == 1\n              ) {\n            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n          } else {\n            wrapper = (func.length == 1 && isLaziable(func))\n              ? wrapper[funcName]()\n              : wrapper.thru(func);\n          }\n        }\n        return function() {\n          var args = arguments,\n              value = args[0];\n\n          if (wrapper && args.length == 1 && isArray(value)) {\n            return wrapper.plant(value).value();\n          }\n          var index = 0,\n              result = length ? funcs[index].apply(this, args) : value;\n\n          while (++index < length) {\n            result = funcs[index].call(this, result);\n          }\n          return result;\n        };\n      });\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with optional `this`\n     * binding of `thisArg`, partial application, and currying.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [partialsRight] The arguments to append to those provided\n     *  to the new function.\n     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n      var isAry = bitmask & WRAP_ARY_FLAG,\n          isBind = bitmask & WRAP_BIND_FLAG,\n          isBindKey = bitmask & WRAP_BIND_KEY_FLAG,\n          isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),\n          isFlip = bitmask & WRAP_FLIP_FLAG,\n          Ctor = isBindKey ? undefined : createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length;\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        if (isCurried) {\n          var placeholder = getHolder(wrapper),\n              holdersCount = countHolders(args, placeholder);\n        }\n        if (partials) {\n          args = composeArgs(args, partials, holders, isCurried);\n        }\n        if (partialsRight) {\n          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);\n        }\n        length -= holdersCount;\n        if (isCurried && length < arity) {\n          var newHolders = replaceHolders(args, placeholder);\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, thisArg,\n            args, newHolders, argPos, ary, arity - length\n          );\n        }\n        var thisBinding = isBind ? thisArg : this,\n            fn = isBindKey ? thisBinding[func] : func;\n\n        length = args.length;\n        if (argPos) {\n          args = reorder(args, argPos);\n        } else if (isFlip && length > 1) {\n          args.reverse();\n        }\n        if (isAry && ary < length) {\n          args.length = ary;\n        }\n        if (this && this !== root && this instanceof wrapper) {\n          fn = Ctor || createCtor(fn);\n        }\n        return fn.apply(thisBinding, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.invertBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} toIteratee The function to resolve iteratees.\n     * @returns {Function} Returns the new inverter function.\n     */\n    function createInverter(setter, toIteratee) {\n      return function(object, iteratee) {\n        return baseInverter(object, setter, toIteratee(iteratee), {});\n      };\n    }\n\n    /**\n     * Creates a function that performs a mathematical operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @param {number} [defaultValue] The value used for `undefined` arguments.\n     * @returns {Function} Returns the new mathematical operation function.\n     */\n    function createMathOperation(operator, defaultValue) {\n      return function(value, other) {\n        var result;\n        if (value === undefined && other === undefined) {\n          return defaultValue;\n        }\n        if (value !== undefined) {\n          result = value;\n        }\n        if (other !== undefined) {\n          if (result === undefined) {\n            return other;\n          }\n          if (typeof value == 'string' || typeof other == 'string') {\n            value = baseToString(value);\n            other = baseToString(other);\n          } else {\n            value = baseToNumber(value);\n            other = baseToNumber(other);\n          }\n          result = operator(value, other);\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function like `_.over`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over iteratees.\n     * @returns {Function} Returns the new over function.\n     */\n    function createOver(arrayFunc) {\n      return flatRest(function(iteratees) {\n        iteratees = arrayMap(iteratees, baseUnary(getIteratee()));\n        return baseRest(function(args) {\n          var thisArg = this;\n          return arrayFunc(iteratees, function(iteratee) {\n            return apply(iteratee, thisArg, args);\n          });\n        });\n      });\n    }\n\n    /**\n     * Creates the padding for `string` based on `length`. The `chars` string\n     * is truncated if the number of characters exceeds `length`.\n     *\n     * @private\n     * @param {number} length The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padding for `string`.\n     */\n    function createPadding(length, chars) {\n      chars = chars === undefined ? ' ' : baseToString(chars);\n\n      var charsLength = chars.length;\n      if (charsLength < 2) {\n        return charsLength ? baseRepeat(chars, length) : chars;\n      }\n      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));\n      return hasUnicode(chars)\n        ? castSlice(stringToArray(result), 0, length).join('')\n        : result.slice(0, length);\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the `this` binding\n     * of `thisArg` and `partials` prepended to the arguments it receives.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {Array} partials The arguments to prepend to those provided to\n     *  the new function.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createPartial(func, bitmask, thisArg, partials) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var argsIndex = -1,\n            argsLength = arguments.length,\n            leftIndex = -1,\n            leftLength = partials.length,\n            args = Array(leftLength + argsLength),\n            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\n        while (++leftIndex < leftLength) {\n          args[leftIndex] = partials[leftIndex];\n        }\n        while (argsLength--) {\n          args[leftIndex++] = arguments[++argsIndex];\n        }\n        return apply(fn, isBind ? thisArg : this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.range` or `_.rangeRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new range function.\n     */\n    function createRange(fromRight) {\n      return function(start, end, step) {\n        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n          end = step = undefined;\n        }\n        // Ensure the sign of `-0` is preserved.\n        start = toFinite(start);\n        if (end === undefined) {\n          end = start;\n          start = 0;\n        } else {\n          end = toFinite(end);\n        }\n        step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);\n        return baseRange(start, end, step, fromRight);\n      };\n    }\n\n    /**\n     * Creates a function that performs a relational operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @returns {Function} Returns the new relational operation function.\n     */\n    function createRelationalOperation(operator) {\n      return function(value, other) {\n        if (!(typeof value == 'string' && typeof other == 'string')) {\n          value = toNumber(value);\n          other = toNumber(other);\n        }\n        return operator(value, other);\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to continue currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {Function} wrapFunc The function to create the `func` wrapper.\n     * @param {*} placeholder The placeholder value.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {\n      var isCurry = bitmask & WRAP_CURRY_FLAG,\n          newHolders = isCurry ? holders : undefined,\n          newHoldersRight = isCurry ? undefined : holders,\n          newPartials = isCurry ? partials : undefined,\n          newPartialsRight = isCurry ? undefined : partials;\n\n      bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);\n      bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);\n\n      if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {\n        bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);\n      }\n      var newData = [\n        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,\n        newHoldersRight, argPos, ary, arity\n      ];\n\n      var result = wrapFunc.apply(undefined, newData);\n      if (isLaziable(func)) {\n        setData(result, newData);\n      }\n      result.placeholder = placeholder;\n      return setWrapToString(result, func, bitmask);\n    }\n\n    /**\n     * Creates a function like `_.round`.\n     *\n     * @private\n     * @param {string} methodName The name of the `Math` method to use when rounding.\n     * @returns {Function} Returns the new round function.\n     */\n    function createRound(methodName) {\n      var func = Math[methodName];\n      return function(number, precision) {\n        number = toNumber(number);\n        precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);\n        if (precision) {\n          // Shift with exponential notation to avoid floating-point issues.\n          // See [MDN](https://mdn.io/round#Examples) for more details.\n          var pair = (toString(number) + 'e').split('e'),\n              value = func(pair[0] + 'e' + (+pair[1] + precision));\n\n          pair = (toString(value) + 'e').split('e');\n          return +(pair[0] + 'e' + (+pair[1] - precision));\n        }\n        return func(number);\n      };\n    }\n\n    /**\n     * Creates a set object of `values`.\n     *\n     * @private\n     * @param {Array} values The values to add to the set.\n     * @returns {Object} Returns the new set.\n     */\n    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n      return new Set(values);\n    };\n\n    /**\n     * Creates a `_.toPairs` or `_.toPairsIn` function.\n     *\n     * @private\n     * @param {Function} keysFunc The function to get the keys of a given object.\n     * @returns {Function} Returns the new pairs function.\n     */\n    function createToPairs(keysFunc) {\n      return function(object) {\n        var tag = getTag(object);\n        if (tag == mapTag) {\n          return mapToArray(object);\n        }\n        if (tag == setTag) {\n          return setToPairs(object);\n        }\n        return baseToPairs(object, keysFunc(object));\n      };\n    }\n\n    /**\n     * Creates a function that either curries or invokes `func` with optional\n     * `this` binding and partially applied arguments.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags.\n     *    1 - `_.bind`\n     *    2 - `_.bindKey`\n     *    4 - `_.curry` or `_.curryRight` of a bound function\n     *    8 - `_.curry`\n     *   16 - `_.curryRight`\n     *   32 - `_.partial`\n     *   64 - `_.partialRight`\n     *  128 - `_.rearg`\n     *  256 - `_.ary`\n     *  512 - `_.flip`\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to be partially applied.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n      var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;\n      if (!isBindKey && typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = partials ? partials.length : 0;\n      if (!length) {\n        bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);\n        partials = holders = undefined;\n      }\n      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);\n      arity = arity === undefined ? arity : toInteger(arity);\n      length -= holders ? holders.length : 0;\n\n      if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {\n        var partialsRight = partials,\n            holdersRight = holders;\n\n        partials = holders = undefined;\n      }\n      var data = isBindKey ? undefined : getData(func);\n\n      var newData = [\n        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,\n        argPos, ary, arity\n      ];\n\n      if (data) {\n        mergeData(newData, data);\n      }\n      func = newData[0];\n      bitmask = newData[1];\n      thisArg = newData[2];\n      partials = newData[3];\n      holders = newData[4];\n      arity = newData[9] = newData[9] === undefined\n        ? (isBindKey ? 0 : func.length)\n        : nativeMax(newData[9] - length, 0);\n\n      if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {\n        bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);\n      }\n      if (!bitmask || bitmask == WRAP_BIND_FLAG) {\n        var result = createBind(func, bitmask, thisArg);\n      } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {\n        result = createCurry(func, bitmask, arity);\n      } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {\n        result = createPartial(func, bitmask, thisArg, partials);\n      } else {\n        result = createHybrid.apply(undefined, newData);\n      }\n      var setter = data ? baseSetData : setData;\n      return setWrapToString(setter(result, newData), func, bitmask);\n    }\n\n    /**\n     * Used by `_.defaults` to customize its `_.assignIn` use to assign properties\n     * of source objects to the destination object for all destination properties\n     * that resolve to `undefined`.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to assign.\n     * @param {Object} object The parent object of `objValue`.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsAssignIn(objValue, srcValue, key, object) {\n      if (objValue === undefined ||\n          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n        return srcValue;\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.defaultsDeep` to customize its `_.merge` use to merge source\n     * objects into destination objects that are passed thru.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to merge.\n     * @param {Object} object The parent object of `objValue`.\n     * @param {Object} source The parent object of `srcValue`.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {\n      if (isObject(objValue) && isObject(srcValue)) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, objValue);\n        baseMerge(objValue, srcValue, undefined, customDefaultsMerge, stack);\n        stack['delete'](srcValue);\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain\n     * objects.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {string} key The key of the property to inspect.\n     * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.\n     */\n    function customOmitClone(value) {\n      return isPlainObject(value) ? undefined : value;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for arrays with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Array} array The array to compare.\n     * @param {Array} other The other array to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `array` and `other` objects.\n     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n     */\n    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          arrLength = array.length,\n          othLength = other.length;\n\n      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(array);\n      if (stacked && stack.get(other)) {\n        return stacked == other;\n      }\n      var index = -1,\n          result = true,\n          seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n      stack.set(array, other);\n      stack.set(other, array);\n\n      // Ignore non-index properties.\n      while (++index < arrLength) {\n        var arrValue = array[index],\n            othValue = other[index];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, arrValue, index, other, array, stack)\n            : customizer(arrValue, othValue, index, array, other, stack);\n        }\n        if (compared !== undefined) {\n          if (compared) {\n            continue;\n          }\n          result = false;\n          break;\n        }\n        // Recursively compare arrays (susceptible to call stack limits).\n        if (seen) {\n          if (!arraySome(other, function(othValue, othIndex) {\n                if (!cacheHas(seen, othIndex) &&\n                    (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n                  return seen.push(othIndex);\n                }\n              })) {\n            result = false;\n            break;\n          }\n        } else if (!(\n              arrValue === othValue ||\n                equalFunc(arrValue, othValue, bitmask, customizer, stack)\n            )) {\n          result = false;\n          break;\n        }\n      }\n      stack['delete'](array);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for comparing objects of\n     * the same `toStringTag`.\n     *\n     * **Note:** This function only supports comparing values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {string} tag The `toStringTag` of the objects to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n      switch (tag) {\n        case dataViewTag:\n          if ((object.byteLength != other.byteLength) ||\n              (object.byteOffset != other.byteOffset)) {\n            return false;\n          }\n          object = object.buffer;\n          other = other.buffer;\n\n        case arrayBufferTag:\n          if ((object.byteLength != other.byteLength) ||\n              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n            return false;\n          }\n          return true;\n\n        case boolTag:\n        case dateTag:\n        case numberTag:\n          // Coerce booleans to `1` or `0` and dates to milliseconds.\n          // Invalid dates are coerced to `NaN`.\n          return eq(+object, +other);\n\n        case errorTag:\n          return object.name == other.name && object.message == other.message;\n\n        case regexpTag:\n        case stringTag:\n          // Coerce regexes to strings and treat strings, primitives and objects,\n          // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n          // for more details.\n          return object == (other + '');\n\n        case mapTag:\n          var convert = mapToArray;\n\n        case setTag:\n          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n          convert || (convert = setToArray);\n\n          if (object.size != other.size && !isPartial) {\n            return false;\n          }\n          // Assume cyclic values are equal.\n          var stacked = stack.get(object);\n          if (stacked) {\n            return stacked == other;\n          }\n          bitmask |= COMPARE_UNORDERED_FLAG;\n\n          // Recursively compare objects (susceptible to call stack limits).\n          stack.set(object, other);\n          var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n          stack['delete'](object);\n          return result;\n\n        case symbolTag:\n          if (symbolValueOf) {\n            return symbolValueOf.call(object) == symbolValueOf.call(other);\n          }\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for objects with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          objProps = getAllKeys(object),\n          objLength = objProps.length,\n          othProps = getAllKeys(other),\n          othLength = othProps.length;\n\n      if (objLength != othLength && !isPartial) {\n        return false;\n      }\n      var index = objLength;\n      while (index--) {\n        var key = objProps[index];\n        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n          return false;\n        }\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked && stack.get(other)) {\n        return stacked == other;\n      }\n      var result = true;\n      stack.set(object, other);\n      stack.set(other, object);\n\n      var skipCtor = isPartial;\n      while (++index < objLength) {\n        key = objProps[index];\n        var objValue = object[key],\n            othValue = other[key];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, objValue, key, other, object, stack)\n            : customizer(objValue, othValue, key, object, other, stack);\n        }\n        // Recursively compare objects (susceptible to call stack limits).\n        if (!(compared === undefined\n              ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n              : compared\n            )) {\n          result = false;\n          break;\n        }\n        skipCtor || (skipCtor = key == 'constructor');\n      }\n      if (result && !skipCtor) {\n        var objCtor = object.constructor,\n            othCtor = other.constructor;\n\n        // Non `Object` object instances with different constructors are not equal.\n        if (objCtor != othCtor &&\n            ('constructor' in object && 'constructor' in other) &&\n            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n          result = false;\n        }\n      }\n      stack['delete'](object);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseRest` which flattens the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    function flatRest(func) {\n      return setToString(overRest(func, undefined, flatten), func + '');\n    }\n\n    /**\n     * Creates an array of own enumerable property names and symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeys(object) {\n      return baseGetAllKeys(object, keys, getSymbols);\n    }\n\n    /**\n     * Creates an array of own and inherited enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeysIn(object) {\n      return baseGetAllKeys(object, keysIn, getSymbolsIn);\n    }\n\n    /**\n     * Gets metadata for `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {*} Returns the metadata for `func`.\n     */\n    var getData = !metaMap ? noop : function(func) {\n      return metaMap.get(func);\n    };\n\n    /**\n     * Gets the name of `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {string} Returns the function name.\n     */\n    function getFuncName(func) {\n      var result = (func.name + ''),\n          array = realNames[result],\n          length = hasOwnProperty.call(realNames, result) ? array.length : 0;\n\n      while (length--) {\n        var data = array[length],\n            otherFunc = data.func;\n        if (otherFunc == null || otherFunc == func) {\n          return data.name;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Gets the argument placeholder value for `func`.\n     *\n     * @private\n     * @param {Function} func The function to inspect.\n     * @returns {*} Returns the placeholder value.\n     */\n    function getHolder(func) {\n      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;\n      return object.placeholder;\n    }\n\n    /**\n     * Gets the appropriate \"iteratee\" function. If `_.iteratee` is customized,\n     * this function returns the custom method, otherwise it returns `baseIteratee`.\n     * If arguments are provided, the chosen function is invoked with them and\n     * its result is returned.\n     *\n     * @private\n     * @param {*} [value] The value to convert to an iteratee.\n     * @param {number} [arity] The arity of the created iteratee.\n     * @returns {Function} Returns the chosen function or its result.\n     */\n    function getIteratee() {\n      var result = lodash.iteratee || iteratee;\n      result = result === iteratee ? baseIteratee : result;\n      return arguments.length ? result(arguments[0], arguments[1]) : result;\n    }\n\n    /**\n     * Gets the data for `map`.\n     *\n     * @private\n     * @param {Object} map The map to query.\n     * @param {string} key The reference key.\n     * @returns {*} Returns the map data.\n     */\n    function getMapData(map, key) {\n      var data = map.__data__;\n      return isKeyable(key)\n        ? data[typeof key == 'string' ? 'string' : 'hash']\n        : data.map;\n    }\n\n    /**\n     * Gets the property names, values, and compare flags of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the match data of `object`.\n     */\n    function getMatchData(object) {\n      var result = keys(object),\n          length = result.length;\n\n      while (length--) {\n        var key = result[length],\n            value = object[key];\n\n        result[length] = [key, value, isStrictComparable(value)];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the native function at `key` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the method to get.\n     * @returns {*} Returns the function if it's native, else `undefined`.\n     */\n    function getNative(object, key) {\n      var value = getValue(object, key);\n      return baseIsNative(value) ? value : undefined;\n    }\n\n    /**\n     * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the raw `toStringTag`.\n     */\n    function getRawTag(value) {\n      var isOwn = hasOwnProperty.call(value, symToStringTag),\n          tag = value[symToStringTag];\n\n      try {\n        value[symToStringTag] = undefined;\n        var unmasked = true;\n      } catch (e) {}\n\n      var result = nativeObjectToString.call(value);\n      if (unmasked) {\n        if (isOwn) {\n          value[symToStringTag] = tag;\n        } else {\n          delete value[symToStringTag];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of the own enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n      if (object == null) {\n        return [];\n      }\n      object = Object(object);\n      return arrayFilter(nativeGetSymbols(object), function(symbol) {\n        return propertyIsEnumerable.call(object, symbol);\n      });\n    };\n\n    /**\n     * Creates an array of the own and inherited enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n      var result = [];\n      while (object) {\n        arrayPush(result, getSymbols(object));\n        object = getPrototype(object);\n      }\n      return result;\n    };\n\n    /**\n     * Gets the `toStringTag` of `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    var getTag = baseGetTag;\n\n    // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\n    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n        (Map && getTag(new Map) != mapTag) ||\n        (Promise && getTag(Promise.resolve()) != promiseTag) ||\n        (Set && getTag(new Set) != setTag) ||\n        (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n      getTag = function(value) {\n        var result = baseGetTag(value),\n            Ctor = result == objectTag ? value.constructor : undefined,\n            ctorString = Ctor ? toSource(Ctor) : '';\n\n        if (ctorString) {\n          switch (ctorString) {\n            case dataViewCtorString: return dataViewTag;\n            case mapCtorString: return mapTag;\n            case promiseCtorString: return promiseTag;\n            case setCtorString: return setTag;\n            case weakMapCtorString: return weakMapTag;\n          }\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n     *\n     * @private\n     * @param {number} start The start of the view.\n     * @param {number} end The end of the view.\n     * @param {Array} transforms The transformations to apply to the view.\n     * @returns {Object} Returns an object containing the `start` and `end`\n     *  positions of the view.\n     */\n    function getView(start, end, transforms) {\n      var index = -1,\n          length = transforms.length;\n\n      while (++index < length) {\n        var data = transforms[index],\n            size = data.size;\n\n        switch (data.type) {\n          case 'drop':      start += size; break;\n          case 'dropRight': end -= size; break;\n          case 'take':      end = nativeMin(end, start + size); break;\n          case 'takeRight': start = nativeMax(start, end - size); break;\n        }\n      }\n      return { 'start': start, 'end': end };\n    }\n\n    /**\n     * Extracts wrapper details from the `source` body comment.\n     *\n     * @private\n     * @param {string} source The source to inspect.\n     * @returns {Array} Returns the wrapper details.\n     */\n    function getWrapDetails(source) {\n      var match = source.match(reWrapDetails);\n      return match ? match[1].split(reSplitDetails) : [];\n    }\n\n    /**\n     * Checks if `path` exists on `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @param {Function} hasFunc The function to check properties.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     */\n    function hasPath(object, path, hasFunc) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          result = false;\n\n      while (++index < length) {\n        var key = toKey(path[index]);\n        if (!(result = object != null && hasFunc(object, key))) {\n          break;\n        }\n        object = object[key];\n      }\n      if (result || ++index != length) {\n        return result;\n      }\n      length = object == null ? 0 : object.length;\n      return !!length && isLength(length) && isIndex(key, length) &&\n        (isArray(object) || isArguments(object));\n    }\n\n    /**\n     * Initializes an array clone.\n     *\n     * @private\n     * @param {Array} array The array to clone.\n     * @returns {Array} Returns the initialized clone.\n     */\n    function initCloneArray(array) {\n      var length = array.length,\n          result = new array.constructor(length);\n\n      // Add properties assigned by `RegExp#exec`.\n      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n        result.index = array.index;\n        result.input = array.input;\n      }\n      return result;\n    }\n\n    /**\n     * Initializes an object clone.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneObject(object) {\n      return (typeof object.constructor == 'function' && !isPrototype(object))\n        ? baseCreate(getPrototype(object))\n        : {};\n    }\n\n    /**\n     * Initializes an object clone based on its `toStringTag`.\n     *\n     * **Note:** This function only supports cloning values with tags of\n     * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @param {string} tag The `toStringTag` of the object to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneByTag(object, tag, isDeep) {\n      var Ctor = object.constructor;\n      switch (tag) {\n        case arrayBufferTag:\n          return cloneArrayBuffer(object);\n\n        case boolTag:\n        case dateTag:\n          return new Ctor(+object);\n\n        case dataViewTag:\n          return cloneDataView(object, isDeep);\n\n        case float32Tag: case float64Tag:\n        case int8Tag: case int16Tag: case int32Tag:\n        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n          return cloneTypedArray(object, isDeep);\n\n        case mapTag:\n          return new Ctor;\n\n        case numberTag:\n        case stringTag:\n          return new Ctor(object);\n\n        case regexpTag:\n          return cloneRegExp(object);\n\n        case setTag:\n          return new Ctor;\n\n        case symbolTag:\n          return cloneSymbol(object);\n      }\n    }\n\n    /**\n     * Inserts wrapper `details` in a comment at the top of the `source` body.\n     *\n     * @private\n     * @param {string} source The source to modify.\n     * @returns {Array} details The details to insert.\n     * @returns {string} Returns the modified source.\n     */\n    function insertWrapDetails(source, details) {\n      var length = details.length;\n      if (!length) {\n        return source;\n      }\n      var lastIndex = length - 1;\n      details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];\n      details = details.join(length > 2 ? ', ' : ' ');\n      return source.replace(reWrapComment, '{\\n/* [wrapped with ' + details + '] */\\n');\n    }\n\n    /**\n     * Checks if `value` is a flattenable `arguments` object or array.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n     */\n    function isFlattenable(value) {\n      return isArray(value) || isArguments(value) ||\n        !!(spreadableSymbol && value && value[spreadableSymbol]);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like index.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n     */\n    function isIndex(value, length) {\n      var type = typeof value;\n      length = length == null ? MAX_SAFE_INTEGER : length;\n\n      return !!length &&\n        (type == 'number' ||\n          (type != 'symbol' && reIsUint.test(value))) &&\n            (value > -1 && value % 1 == 0 && value < length);\n    }\n\n    /**\n     * Checks if the given arguments are from an iteratee call.\n     *\n     * @private\n     * @param {*} value The potential iteratee value argument.\n     * @param {*} index The potential iteratee index or key argument.\n     * @param {*} object The potential iteratee object argument.\n     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n     *  else `false`.\n     */\n    function isIterateeCall(value, index, object) {\n      if (!isObject(object)) {\n        return false;\n      }\n      var type = typeof index;\n      if (type == 'number'\n            ? (isArrayLike(object) && isIndex(index, object.length))\n            : (type == 'string' && index in object)\n          ) {\n        return eq(object[index], value);\n      }\n      return false;\n    }\n\n    /**\n     * Checks if `value` is a property name and not a property path.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n     */\n    function isKey(value, object) {\n      if (isArray(value)) {\n        return false;\n      }\n      var type = typeof value;\n      if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n          value == null || isSymbol(value)) {\n        return true;\n      }\n      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n        (object != null && value in Object(object));\n    }\n\n    /**\n     * Checks if `value` is suitable for use as unique object key.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n     */\n    function isKeyable(value) {\n      var type = typeof value;\n      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n        ? (value !== '__proto__')\n        : (value === null);\n    }\n\n    /**\n     * Checks if `func` has a lazy counterpart.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,\n     *  else `false`.\n     */\n    function isLaziable(func) {\n      var funcName = getFuncName(func),\n          other = lodash[funcName];\n\n      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {\n        return false;\n      }\n      if (func === other) {\n        return true;\n      }\n      var data = getData(other);\n      return !!data && func === data[0];\n    }\n\n    /**\n     * Checks if `func` has its source masked.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n     */\n    function isMasked(func) {\n      return !!maskSrcKey && (maskSrcKey in func);\n    }\n\n    /**\n     * Checks if `func` is capable of being masked.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.\n     */\n    var isMaskable = coreJsData ? isFunction : stubFalse;\n\n    /**\n     * Checks if `value` is likely a prototype object.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n     */\n    function isPrototype(value) {\n      var Ctor = value && value.constructor,\n          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n      return value === proto;\n    }\n\n    /**\n     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` if suitable for strict\n     *  equality comparisons, else `false`.\n     */\n    function isStrictComparable(value) {\n      return value === value && !isObject(value);\n    }\n\n    /**\n     * A specialized version of `matchesProperty` for source values suitable\n     * for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function matchesStrictComparable(key, srcValue) {\n      return function(object) {\n        if (object == null) {\n          return false;\n        }\n        return object[key] === srcValue &&\n          (srcValue !== undefined || (key in Object(object)));\n      };\n    }\n\n    /**\n     * A specialized version of `_.memoize` which clears the memoized function's\n     * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n     *\n     * @private\n     * @param {Function} func The function to have its output memoized.\n     * @returns {Function} Returns the new memoized function.\n     */\n    function memoizeCapped(func) {\n      var result = memoize(func, function(key) {\n        if (cache.size === MAX_MEMOIZE_SIZE) {\n          cache.clear();\n        }\n        return key;\n      });\n\n      var cache = result.cache;\n      return result;\n    }\n\n    /**\n     * Merges the function metadata of `source` into `data`.\n     *\n     * Merging metadata reduces the number of wrappers used to invoke a function.\n     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n     * may be applied regardless of execution order. Methods like `_.ary` and\n     * `_.rearg` modify function arguments, making the order in which they are\n     * executed important, preventing the merging of metadata. However, we make\n     * an exception for a safe combined case where curried functions have `_.ary`\n     * and or `_.rearg` applied.\n     *\n     * @private\n     * @param {Array} data The destination metadata.\n     * @param {Array} source The source metadata.\n     * @returns {Array} Returns `data`.\n     */\n    function mergeData(data, source) {\n      var bitmask = data[1],\n          srcBitmask = source[1],\n          newBitmask = bitmask | srcBitmask,\n          isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);\n\n      var isCombo =\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_CURRY_FLAG)) ||\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||\n        ((srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG));\n\n      // Exit early if metadata can't be merged.\n      if (!(isCommon || isCombo)) {\n        return data;\n      }\n      // Use source `thisArg` if available.\n      if (srcBitmask & WRAP_BIND_FLAG) {\n        data[2] = source[2];\n        // Set when currying a bound function.\n        newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;\n      }\n      // Compose partial arguments.\n      var value = source[3];\n      if (value) {\n        var partials = data[3];\n        data[3] = partials ? composeArgs(partials, value, source[4]) : value;\n        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];\n      }\n      // Compose partial right arguments.\n      value = source[5];\n      if (value) {\n        partials = data[5];\n        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;\n        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];\n      }\n      // Use source `argPos` if available.\n      value = source[7];\n      if (value) {\n        data[7] = value;\n      }\n      // Use source `ary` if it's smaller.\n      if (srcBitmask & WRAP_ARY_FLAG) {\n        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n      }\n      // Use source `arity` if one is not provided.\n      if (data[9] == null) {\n        data[9] = source[9];\n      }\n      // Use source `func` and merge bitmasks.\n      data[0] = source[0];\n      data[1] = newBitmask;\n\n      return data;\n    }\n\n    /**\n     * This function is like\n     * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * except that it includes inherited enumerable properties.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function nativeKeysIn(object) {\n      var result = [];\n      if (object != null) {\n        for (var key in Object(object)) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a string using `Object.prototype.toString`.\n     *\n     * @private\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     */\n    function objectToString(value) {\n      return nativeObjectToString.call(value);\n    }\n\n    /**\n     * A specialized version of `baseRest` which transforms the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @param {Function} transform The rest array transform.\n     * @returns {Function} Returns the new function.\n     */\n    function overRest(func, start, transform) {\n      start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n      return function() {\n        var args = arguments,\n            index = -1,\n            length = nativeMax(args.length - start, 0),\n            array = Array(length);\n\n        while (++index < length) {\n          array[index] = args[start + index];\n        }\n        index = -1;\n        var otherArgs = Array(start + 1);\n        while (++index < start) {\n          otherArgs[index] = args[index];\n        }\n        otherArgs[start] = transform(array);\n        return apply(func, this, otherArgs);\n      };\n    }\n\n    /**\n     * Gets the parent value at `path` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} path The path to get the parent value of.\n     * @returns {*} Returns the parent value.\n     */\n    function parent(object, path) {\n      return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));\n    }\n\n    /**\n     * Reorder `array` according to the specified indexes where the element at\n     * the first index is assigned as the first element, the element at\n     * the second index is assigned as the second element, and so on.\n     *\n     * @private\n     * @param {Array} array The array to reorder.\n     * @param {Array} indexes The arranged array indexes.\n     * @returns {Array} Returns `array`.\n     */\n    function reorder(array, indexes) {\n      var arrLength = array.length,\n          length = nativeMin(indexes.length, arrLength),\n          oldArray = copyArray(array);\n\n      while (length--) {\n        var index = indexes[length];\n        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n      }\n      return array;\n    }\n\n    /**\n     * Sets metadata for `func`.\n     *\n     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n     * period of time, it will trip its breaker and transition to an identity\n     * function to avoid garbage collection pauses in V8. See\n     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)\n     * for more details.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var setData = shortOut(baseSetData);\n\n    /**\n     * A simple wrapper around the global [`setTimeout`](https://mdn.io/setTimeout).\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    var setTimeout = ctxSetTimeout || function(func, wait) {\n      return root.setTimeout(func, wait);\n    };\n\n    /**\n     * Sets the `toString` method of `func` to return `string`.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var setToString = shortOut(baseSetToString);\n\n    /**\n     * Sets the `toString` method of `wrapper` to mimic the source of `reference`\n     * with wrapper details in a comment at the top of the source body.\n     *\n     * @private\n     * @param {Function} wrapper The function to modify.\n     * @param {Function} reference The reference function.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Function} Returns `wrapper`.\n     */\n    function setWrapToString(wrapper, reference, bitmask) {\n      var source = (reference + '');\n      return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));\n    }\n\n    /**\n     * Creates a function that'll short out and invoke `identity` instead\n     * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n     * milliseconds.\n     *\n     * @private\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new shortable function.\n     */\n    function shortOut(func) {\n      var count = 0,\n          lastCalled = 0;\n\n      return function() {\n        var stamp = nativeNow(),\n            remaining = HOT_SPAN - (stamp - lastCalled);\n\n        lastCalled = stamp;\n        if (remaining > 0) {\n          if (++count >= HOT_COUNT) {\n            return arguments[0];\n          }\n        } else {\n          count = 0;\n        }\n        return func.apply(undefined, arguments);\n      };\n    }\n\n    /**\n     * A specialized version of `_.shuffle` which mutates and sets the size of `array`.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @param {number} [size=array.length] The size of `array`.\n     * @returns {Array} Returns `array`.\n     */\n    function shuffleSelf(array, size) {\n      var index = -1,\n          length = array.length,\n          lastIndex = length - 1;\n\n      size = size === undefined ? length : size;\n      while (++index < size) {\n        var rand = baseRandom(index, lastIndex),\n            value = array[rand];\n\n        array[rand] = array[index];\n        array[index] = value;\n      }\n      array.length = size;\n      return array;\n    }\n\n    /**\n     * Converts `string` to a property path array.\n     *\n     * @private\n     * @param {string} string The string to convert.\n     * @returns {Array} Returns the property path array.\n     */\n    var stringToPath = memoizeCapped(function(string) {\n      var result = [];\n      if (string.charCodeAt(0) === 46 /* . */) {\n        result.push('');\n      }\n      string.replace(rePropName, function(match, number, quote, subString) {\n        result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));\n      });\n      return result;\n    });\n\n    /**\n     * Converts `value` to a string key if it's not a string or symbol.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {string|symbol} Returns the key.\n     */\n    function toKey(value) {\n      if (typeof value == 'string' || isSymbol(value)) {\n        return value;\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * Converts `func` to its source code.\n     *\n     * @private\n     * @param {Function} func The function to convert.\n     * @returns {string} Returns the source code.\n     */\n    function toSource(func) {\n      if (func != null) {\n        try {\n          return funcToString.call(func);\n        } catch (e) {}\n        try {\n          return (func + '');\n        } catch (e) {}\n      }\n      return '';\n    }\n\n    /**\n     * Updates wrapper `details` based on `bitmask` flags.\n     *\n     * @private\n     * @returns {Array} details The details to modify.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Array} Returns `details`.\n     */\n    function updateWrapDetails(details, bitmask) {\n      arrayEach(wrapFlags, function(pair) {\n        var value = '_.' + pair[0];\n        if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {\n          details.push(value);\n        }\n      });\n      return details.sort();\n    }\n\n    /**\n     * Creates a clone of `wrapper`.\n     *\n     * @private\n     * @param {Object} wrapper The wrapper to clone.\n     * @returns {Object} Returns the cloned wrapper.\n     */\n    function wrapperClone(wrapper) {\n      if (wrapper instanceof LazyWrapper) {\n        return wrapper.clone();\n      }\n      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);\n      result.__actions__ = copyArray(wrapper.__actions__);\n      result.__index__  = wrapper.__index__;\n      result.__values__ = wrapper.__values__;\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements split into groups the length of `size`.\n     * If `array` can't be split evenly, the final chunk will be the remaining\n     * elements.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to process.\n     * @param {number} [size=1] The length of each chunk\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the new array of chunks.\n     * @example\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 2);\n     * // => [['a', 'b'], ['c', 'd']]\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 3);\n     * // => [['a', 'b', 'c'], ['d']]\n     */\n    function chunk(array, size, guard) {\n      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {\n        size = 1;\n      } else {\n        size = nativeMax(toInteger(size), 0);\n      }\n      var length = array == null ? 0 : array.length;\n      if (!length || size < 1) {\n        return [];\n      }\n      var index = 0,\n          resIndex = 0,\n          result = Array(nativeCeil(length / size));\n\n      while (index < length) {\n        result[resIndex++] = baseSlice(array, index, (index += size));\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array with all falsey values removed. The values `false`, `null`,\n     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to compact.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.compact([0, 1, false, 2, '', 3]);\n     * // => [1, 2, 3]\n     */\n    function compact(array) {\n      var index = -1,\n          length = array == null ? 0 : array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (value) {\n          result[resIndex++] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates a new array concatenating `array` with any additional arrays\n     * and/or values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to concatenate.\n     * @param {...*} [values] The values to concatenate.\n     * @returns {Array} Returns the new concatenated array.\n     * @example\n     *\n     * var array = [1];\n     * var other = _.concat(array, 2, [3], [[4]]);\n     *\n     * console.log(other);\n     * // => [1, 2, 3, [4]]\n     *\n     * console.log(array);\n     * // => [1]\n     */\n    function concat() {\n      var length = arguments.length;\n      if (!length) {\n        return [];\n      }\n      var args = Array(length - 1),\n          array = arguments[0],\n          index = length;\n\n      while (index--) {\n        args[index - 1] = arguments[index];\n      }\n      return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));\n    }\n\n    /**\n     * Creates an array of `array` values not included in the other given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * **Note:** Unlike `_.pullAll`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.without, _.xor\n     * @example\n     *\n     * _.difference([2, 1], [2, 3]);\n     * // => [1]\n     */\n    var difference = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `iteratee` which\n     * is invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var differenceBy = baseRest(function(array, values) {\n      var iteratee = last(values);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `comparator`\n     * which is invoked to compare elements of `array` to `values`. The order and\n     * references of result values are determined by the first array. The comparator\n     * is invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     *\n     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }]\n     */\n    var differenceWith = baseRest(function(array, values) {\n      var comparator = last(values);\n      if (isArrayLikeObject(comparator)) {\n        comparator = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.drop([1, 2, 3]);\n     * // => [2, 3]\n     *\n     * _.drop([1, 2, 3], 2);\n     * // => [3]\n     *\n     * _.drop([1, 2, 3], 5);\n     * // => []\n     *\n     * _.drop([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function drop(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRight([1, 2, 3]);\n     * // => [1, 2]\n     *\n     * _.dropRight([1, 2, 3], 2);\n     * // => [1]\n     *\n     * _.dropRight([1, 2, 3], 5);\n     * // => []\n     *\n     * _.dropRight([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function dropRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the end.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.dropRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropRightWhile(users, ['active', false]);\n     * // => objects for ['barney']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropRightWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the beginning.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.dropWhile(users, function(o) { return !o.active; });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropWhile(users, ['active', false]);\n     * // => objects for ['pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true)\n        : [];\n    }\n\n    /**\n     * Fills elements of `array` with `value` from `start` up to, but not\n     * including, `end`.\n     *\n     * **Note:** This method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Array\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.fill(array, 'a');\n     * console.log(array);\n     * // => ['a', 'a', 'a']\n     *\n     * _.fill(Array(3), 2);\n     * // => [2, 2, 2]\n     *\n     * _.fill([4, 6, 8, 10], '*', 1, 3);\n     * // => [4, '*', '*', 10]\n     */\n    function fill(array, value, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n        start = 0;\n        end = length;\n      }\n      return baseFill(array, value, start, end);\n    }\n\n    /**\n     * This method is like `_.find` except that it returns the index of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.findIndex(users, function(o) { return o.user == 'barney'; });\n     * // => 0\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findIndex(users, { 'user': 'fred', 'active': false });\n     * // => 1\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findIndex(users, ['active', false]);\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findIndex(users, 'active');\n     * // => 2\n     */\n    function findIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index);\n    }\n\n    /**\n     * This method is like `_.findIndex` except that it iterates over elements\n     * of `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\n     * // => 2\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n     * // => 0\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastIndex(users, ['active', false]);\n     * // => 2\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastIndex(users, 'active');\n     * // => 0\n     */\n    function findLastIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length - 1;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = fromIndex < 0\n          ? nativeMax(length + index, 0)\n          : nativeMin(index, length - 1);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index, true);\n    }\n\n    /**\n     * Flattens `array` a single level deep.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flatten([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, [3, [4]], 5]\n     */\n    function flatten(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, 1) : [];\n    }\n\n    /**\n     * Recursively flattens `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flattenDeep([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, 3, 4, 5]\n     */\n    function flattenDeep(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, INFINITY) : [];\n    }\n\n    /**\n     * Recursively flatten `array` up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * var array = [1, [2, [3, [4]], 5]];\n     *\n     * _.flattenDepth(array, 1);\n     * // => [1, 2, [3, [4]], 5]\n     *\n     * _.flattenDepth(array, 2);\n     * // => [1, 2, 3, [4], 5]\n     */\n    function flattenDepth(array, depth) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(array, depth);\n    }\n\n    /**\n     * The inverse of `_.toPairs`; this method returns an object composed\n     * from key-value `pairs`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} pairs The key-value pairs.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.fromPairs([['a', 1], ['b', 2]]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function fromPairs(pairs) {\n      var index = -1,\n          length = pairs == null ? 0 : pairs.length,\n          result = {};\n\n      while (++index < length) {\n        var pair = pairs[index];\n        result[pair[0]] = pair[1];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias first\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the first element of `array`.\n     * @example\n     *\n     * _.head([1, 2, 3]);\n     * // => 1\n     *\n     * _.head([]);\n     * // => undefined\n     */\n    function head(array) {\n      return (array && array.length) ? array[0] : undefined;\n    }\n\n    /**\n     * Gets the index at which the first occurrence of `value` is found in `array`\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it's used as the\n     * offset from the end of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.indexOf([1, 2, 1, 2], 2);\n     * // => 1\n     *\n     * // Search from the `fromIndex`.\n     * _.indexOf([1, 2, 1, 2], 2, 2);\n     * // => 3\n     */\n    function indexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseIndexOf(array, value, index);\n    }\n\n    /**\n     * Gets all but the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.initial([1, 2, 3]);\n     * // => [1, 2]\n     */\n    function initial(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 0, -1) : [];\n    }\n\n    /**\n     * Creates an array of unique values that are included in all given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersection([2, 1], [2, 3]);\n     * // => [2]\n     */\n    var intersection = baseRest(function(arrays) {\n      var mapped = arrayMap(arrays, castArrayLikeObject);\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped)\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `iteratee`\n     * which is invoked for each element of each `arrays` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [2.1]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }]\n     */\n    var intersectionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      if (iteratee === last(mapped)) {\n        iteratee = undefined;\n      } else {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `comparator`\n     * which is invoked to compare elements of `arrays`. The order and references\n     * of result values are determined by the first array. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.intersectionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }]\n     */\n    var intersectionWith = baseRest(function(arrays) {\n      var comparator = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      if (comparator) {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Converts all elements in `array` into a string separated by `separator`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to convert.\n     * @param {string} [separator=','] The element separator.\n     * @returns {string} Returns the joined string.\n     * @example\n     *\n     * _.join(['a', 'b', 'c'], '~');\n     * // => 'a~b~c'\n     */\n    function join(array, separator) {\n      return array == null ? '' : nativeJoin.call(array, separator);\n    }\n\n    /**\n     * Gets the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the last element of `array`.\n     * @example\n     *\n     * _.last([1, 2, 3]);\n     * // => 3\n     */\n    function last(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? array[length - 1] : undefined;\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it iterates over elements of\n     * `array` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.lastIndexOf([1, 2, 1, 2], 2);\n     * // => 3\n     *\n     * // Search from the `fromIndex`.\n     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n     * // => 1\n     */\n    function lastIndexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);\n      }\n      return value === value\n        ? strictLastIndexOf(array, value, index)\n        : baseFindIndex(array, baseIsNaN, index, true);\n    }\n\n    /**\n     * Gets the element at index `n` of `array`. If `n` is negative, the nth\n     * element from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.11.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=0] The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     *\n     * _.nth(array, 1);\n     * // => 'b'\n     *\n     * _.nth(array, -2);\n     * // => 'c';\n     */\n    function nth(array, n) {\n      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;\n    }\n\n    /**\n     * Removes all given values from `array` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`\n     * to remove elements from an array by predicate.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...*} [values] The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pull(array, 'a', 'c');\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    var pull = baseRest(pullAll);\n\n    /**\n     * This method is like `_.pull` except that it accepts an array of values to remove.\n     *\n     * **Note:** Unlike `_.difference`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pullAll(array, ['a', 'c']);\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    function pullAll(array, values) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values)\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `iteratee` which is\n     * invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The iteratee is invoked with one argument: (value).\n     *\n     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];\n     *\n     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');\n     * console.log(array);\n     * // => [{ 'x': 2 }]\n     */\n    function pullAllBy(array, values, iteratee) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, getIteratee(iteratee, 2))\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `comparator` which\n     * is invoked to compare elements of `array` to `values`. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];\n     *\n     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);\n     * console.log(array);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]\n     */\n    function pullAllWith(array, values, comparator) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, undefined, comparator)\n        : array;\n    }\n\n    /**\n     * Removes elements from `array` corresponding to `indexes` and returns an\n     * array of removed elements.\n     *\n     * **Note:** Unlike `_.at`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...(number|number[])} [indexes] The indexes of elements to remove.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     * var pulled = _.pullAt(array, [1, 3]);\n     *\n     * console.log(array);\n     * // => ['a', 'c']\n     *\n     * console.log(pulled);\n     * // => ['b', 'd']\n     */\n    var pullAt = flatRest(function(array, indexes) {\n      var length = array == null ? 0 : array.length,\n          result = baseAt(array, indexes);\n\n      basePullAt(array, arrayMap(indexes, function(index) {\n        return isIndex(index, length) ? +index : index;\n      }).sort(compareAscending));\n\n      return result;\n    });\n\n    /**\n     * Removes all elements from `array` that `predicate` returns truthy for\n     * and returns an array of the removed elements. The predicate is invoked\n     * with three arguments: (value, index, array).\n     *\n     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`\n     * to pull elements from an array by value.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [1, 2, 3, 4];\n     * var evens = _.remove(array, function(n) {\n     *   return n % 2 == 0;\n     * });\n     *\n     * console.log(array);\n     * // => [1, 3]\n     *\n     * console.log(evens);\n     * // => [2, 4]\n     */\n    function remove(array, predicate) {\n      var result = [];\n      if (!(array && array.length)) {\n        return result;\n      }\n      var index = -1,\n          indexes = [],\n          length = array.length;\n\n      predicate = getIteratee(predicate, 3);\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result.push(value);\n          indexes.push(index);\n        }\n      }\n      basePullAt(array, indexes);\n      return result;\n    }\n\n    /**\n     * Reverses `array` so that the first element becomes the last, the second\n     * element becomes the second to last, and so on.\n     *\n     * **Note:** This method mutates `array` and is based on\n     * [`Array#reverse`](https://mdn.io/Array/reverse).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.reverse(array);\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function reverse(array) {\n      return array == null ? array : nativeReverse.call(array);\n    }\n\n    /**\n     * Creates a slice of `array` from `start` up to, but not including, `end`.\n     *\n     * **Note:** This method is used instead of\n     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are\n     * returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function slice(array, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n        start = 0;\n        end = length;\n      }\n      else {\n        start = start == null ? 0 : toInteger(start);\n        end = end === undefined ? length : toInteger(end);\n      }\n      return baseSlice(array, start, end);\n    }\n\n    /**\n     * Uses a binary search to determine the lowest index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedIndex([30, 50], 40);\n     * // => 1\n     */\n    function sortedIndex(array, value) {\n      return baseSortedIndex(array, value);\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 0\n     */\n    function sortedIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 1\n     */\n    function sortedIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value);\n        if (index < length && eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it returns the highest\n     * index at which `value` should be inserted into `array` in order to\n     * maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);\n     * // => 4\n     */\n    function sortedLastIndex(array, value) {\n      return baseSortedIndex(array, value, true);\n    }\n\n    /**\n     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 1\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 1\n     */\n    function sortedLastIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);\n    }\n\n    /**\n     * This method is like `_.lastIndexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 3\n     */\n    function sortedLastIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value, true) - 1;\n        if (eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.uniq` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniq([1, 1, 2]);\n     * // => [1, 2]\n     */\n    function sortedUniq(array) {\n      return (array && array.length)\n        ? baseSortedUniq(array)\n        : [];\n    }\n\n    /**\n     * This method is like `_.uniqBy` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);\n     * // => [1.1, 2.3]\n     */\n    function sortedUniqBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSortedUniq(array, getIteratee(iteratee, 2))\n        : [];\n    }\n\n    /**\n     * Gets all but the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.tail([1, 2, 3]);\n     * // => [2, 3]\n     */\n    function tail(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 1, length) : [];\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.take([1, 2, 3]);\n     * // => [1]\n     *\n     * _.take([1, 2, 3], 2);\n     * // => [1, 2]\n     *\n     * _.take([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.take([1, 2, 3], 0);\n     * // => []\n     */\n    function take(array, n, guard) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRight([1, 2, 3]);\n     * // => [3]\n     *\n     * _.takeRight([1, 2, 3], 2);\n     * // => [2, 3]\n     *\n     * _.takeRight([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.takeRight([1, 2, 3], 0);\n     * // => []\n     */\n    function takeRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the end. Elements are\n     * taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.takeRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeRightWhile(users, ['active', false]);\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeRightWhile(users, 'active');\n     * // => []\n     */\n    function takeRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), false, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the beginning. Elements\n     * are taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.takeWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeWhile(users, ['active', false]);\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeWhile(users, 'active');\n     * // => []\n     */\n    function takeWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3))\n        : [];\n    }\n\n    /**\n     * Creates an array of unique values, in order, from all given arrays using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.union([2], [1, 2]);\n     * // => [2, 1]\n     */\n    var union = baseRest(function(arrays) {\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which uniqueness is computed. Result values are chosen from the first\n     * array in which the value occurs. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.unionBy([2.1], [1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    var unionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `comparator` which\n     * is invoked to compare elements of `arrays`. Result values are chosen from\n     * the first array in which the value occurs. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.unionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var unionWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);\n    });\n\n    /**\n     * Creates a duplicate-free version of an array, using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons, in which only the first occurrence of each element\n     * is kept. The order of result values is determined by the order they occur\n     * in the array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniq([2, 1, 2]);\n     * // => [2, 1]\n     */\n    function uniq(array) {\n      return (array && array.length) ? baseUniq(array) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * uniqueness is computed. The order of result values is determined by the\n     * order they occur in the array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    function uniqBy(array, iteratee) {\n      return (array && array.length) ? baseUniq(array, getIteratee(iteratee, 2)) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `comparator` which\n     * is invoked to compare elements of `array`. The order of result values is\n     * determined by the order they occur in the array.The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.uniqWith(objects, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]\n     */\n    function uniqWith(array, comparator) {\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return (array && array.length) ? baseUniq(array, undefined, comparator) : [];\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an array of grouped\n     * elements and creates an array regrouping the elements to their pre-zip\n     * configuration.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.2.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     *\n     * _.unzip(zipped);\n     * // => [['a', 'b'], [1, 2], [true, false]]\n     */\n    function unzip(array) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var length = 0;\n      array = arrayFilter(array, function(group) {\n        if (isArrayLikeObject(group)) {\n          length = nativeMax(group.length, length);\n          return true;\n        }\n      });\n      return baseTimes(length, function(index) {\n        return arrayMap(array, baseProperty(index));\n      });\n    }\n\n    /**\n     * This method is like `_.unzip` except that it accepts `iteratee` to specify\n     * how regrouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  regrouped values.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n     * // => [[1, 10, 100], [2, 20, 200]]\n     *\n     * _.unzipWith(zipped, _.add);\n     * // => [3, 30, 300]\n     */\n    function unzipWith(array, iteratee) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var result = unzip(array);\n      if (iteratee == null) {\n        return result;\n      }\n      return arrayMap(result, function(group) {\n        return apply(iteratee, undefined, group);\n      });\n    }\n\n    /**\n     * Creates an array excluding all given values using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.pull`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...*} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.xor\n     * @example\n     *\n     * _.without([2, 1, 2, 3], 1, 2);\n     * // => [3]\n     */\n    var without = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, values)\n        : [];\n    });\n\n    /**\n     * Creates an array of unique values that is the\n     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n     * of the given arrays. The order of result values is determined by the order\n     * they occur in the arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.without\n     * @example\n     *\n     * _.xor([2, 1], [2, 3]);\n     * // => [1, 3]\n     */\n    var xor = baseRest(function(arrays) {\n      return baseXor(arrayFilter(arrays, isArrayLikeObject));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which by which they're compared. The order of result values is determined\n     * by the order they occur in the arrays. The iteratee is invoked with one\n     * argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2, 3.4]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var xorBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `comparator` which is\n     * invoked to compare elements of `arrays`. The order of result values is\n     * determined by the order they occur in the arrays. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.xorWith(objects, others, _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var xorWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);\n    });\n\n    /**\n     * Creates an array of grouped elements, the first of which contains the\n     * first elements of the given arrays, the second of which contains the\n     * second elements of the given arrays, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     */\n    var zip = baseRest(unzip);\n\n    /**\n     * This method is like `_.fromPairs` except that it accepts two arrays,\n     * one of property identifiers and one of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.4.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObject(['a', 'b'], [1, 2]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function zipObject(props, values) {\n      return baseZipObject(props || [], values || [], assignValue);\n    }\n\n    /**\n     * This method is like `_.zipObject` except that it supports property paths.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);\n     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }\n     */\n    function zipObjectDeep(props, values) {\n      return baseZipObject(props || [], values || [], baseSet);\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts `iteratee` to specify\n     * how grouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  grouped values.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {\n     *   return a + b + c;\n     * });\n     * // => [111, 222]\n     */\n    var zipWith = baseRest(function(arrays) {\n      var length = arrays.length,\n          iteratee = length > 1 ? arrays[length - 1] : undefined;\n\n      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;\n      return unzipWith(arrays, iteratee);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` wrapper instance that wraps `value` with explicit method\n     * chain sequences enabled. The result of such sequences must be unwrapped\n     * with `_#value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Seq\n     * @param {*} value The value to wrap.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36 },\n     *   { 'user': 'fred',    'age': 40 },\n     *   { 'user': 'pebbles', 'age': 1 }\n     * ];\n     *\n     * var youngest = _\n     *   .chain(users)\n     *   .sortBy('age')\n     *   .map(function(o) {\n     *     return o.user + ' is ' + o.age;\n     *   })\n     *   .head()\n     *   .value();\n     * // => 'pebbles is 1'\n     */\n    function chain(value) {\n      var result = lodash(value);\n      result.__chain__ = true;\n      return result;\n    }\n\n    /**\n     * This method invokes `interceptor` and returns `value`. The interceptor\n     * is invoked with one argument; (value). The purpose of this method is to\n     * \"tap into\" a method chain sequence in order to modify intermediate results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * _([1, 2, 3])\n     *  .tap(function(array) {\n     *    // Mutate input array.\n     *    array.pop();\n     *  })\n     *  .reverse()\n     *  .value();\n     * // => [2, 1]\n     */\n    function tap(value, interceptor) {\n      interceptor(value);\n      return value;\n    }\n\n    /**\n     * This method is like `_.tap` except that it returns the result of `interceptor`.\n     * The purpose of this method is to \"pass thru\" values replacing intermediate\n     * results in a method chain sequence.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns the result of `interceptor`.\n     * @example\n     *\n     * _('  abc  ')\n     *  .chain()\n     *  .trim()\n     *  .thru(function(value) {\n     *    return [value];\n     *  })\n     *  .value();\n     * // => ['abc']\n     */\n    function thru(value, interceptor) {\n      return interceptor(value);\n    }\n\n    /**\n     * This method is the wrapper version of `_.at`.\n     *\n     * @name at\n     * @memberOf _\n     * @since 1.0.0\n     * @category Seq\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _(object).at(['a[0].b.c', 'a[1]']).value();\n     * // => [3, 4]\n     */\n    var wrapperAt = flatRest(function(paths) {\n      var length = paths.length,\n          start = length ? paths[0] : 0,\n          value = this.__wrapped__,\n          interceptor = function(object) { return baseAt(object, paths); };\n\n      if (length > 1 || this.__actions__.length ||\n          !(value instanceof LazyWrapper) || !isIndex(start)) {\n        return this.thru(interceptor);\n      }\n      value = value.slice(start, +start + (length ? 1 : 0));\n      value.__actions__.push({\n        'func': thru,\n        'args': [interceptor],\n        'thisArg': undefined\n      });\n      return new LodashWrapper(value, this.__chain__).thru(function(array) {\n        if (length && !array.length) {\n          array.push(undefined);\n        }\n        return array;\n      });\n    });\n\n    /**\n     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.\n     *\n     * @name chain\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // A sequence without explicit chaining.\n     * _(users).head();\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // A sequence with explicit chaining.\n     * _(users)\n     *   .chain()\n     *   .head()\n     *   .pick('user')\n     *   .value();\n     * // => { 'user': 'barney' }\n     */\n    function wrapperChain() {\n      return chain(this);\n    }\n\n    /**\n     * Executes the chain sequence and returns the wrapped result.\n     *\n     * @name commit\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).push(3);\n     *\n     * console.log(array);\n     * // => [1, 2]\n     *\n     * wrapped = wrapped.commit();\n     * console.log(array);\n     * // => [1, 2, 3]\n     *\n     * wrapped.last();\n     * // => 3\n     *\n     * console.log(array);\n     * // => [1, 2, 3]\n     */\n    function wrapperCommit() {\n      return new LodashWrapper(this.value(), this.__chain__);\n    }\n\n    /**\n     * Gets the next value on a wrapped object following the\n     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).\n     *\n     * @name next\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the next iterator value.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 1 }\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 2 }\n     *\n     * wrapped.next();\n     * // => { 'done': true, 'value': undefined }\n     */\n    function wrapperNext() {\n      if (this.__values__ === undefined) {\n        this.__values__ = toArray(this.value());\n      }\n      var done = this.__index__ >= this.__values__.length,\n          value = done ? undefined : this.__values__[this.__index__++];\n\n      return { 'done': done, 'value': value };\n    }\n\n    /**\n     * Enables the wrapper to be iterable.\n     *\n     * @name Symbol.iterator\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the wrapper object.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped[Symbol.iterator]() === wrapped;\n     * // => true\n     *\n     * Array.from(wrapped);\n     * // => [1, 2]\n     */\n    function wrapperToIterator() {\n      return this;\n    }\n\n    /**\n     * Creates a clone of the chain sequence planting `value` as the wrapped value.\n     *\n     * @name plant\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @param {*} value The value to plant.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2]).map(square);\n     * var other = wrapped.plant([3, 4]);\n     *\n     * other.value();\n     * // => [9, 16]\n     *\n     * wrapped.value();\n     * // => [1, 4]\n     */\n    function wrapperPlant(value) {\n      var result,\n          parent = this;\n\n      while (parent instanceof baseLodash) {\n        var clone = wrapperClone(parent);\n        clone.__index__ = 0;\n        clone.__values__ = undefined;\n        if (result) {\n          previous.__wrapped__ = clone;\n        } else {\n          result = clone;\n        }\n        var previous = clone;\n        parent = parent.__wrapped__;\n      }\n      previous.__wrapped__ = value;\n      return result;\n    }\n\n    /**\n     * This method is the wrapper version of `_.reverse`.\n     *\n     * **Note:** This method mutates the wrapped array.\n     *\n     * @name reverse\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _(array).reverse().value()\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function wrapperReverse() {\n      var value = this.__wrapped__;\n      if (value instanceof LazyWrapper) {\n        var wrapped = value;\n        if (this.__actions__.length) {\n          wrapped = new LazyWrapper(this);\n        }\n        wrapped = wrapped.reverse();\n        wrapped.__actions__.push({\n          'func': thru,\n          'args': [reverse],\n          'thisArg': undefined\n        });\n        return new LodashWrapper(wrapped, this.__chain__);\n      }\n      return this.thru(reverse);\n    }\n\n    /**\n     * Executes the chain sequence to resolve the unwrapped value.\n     *\n     * @name value\n     * @memberOf _\n     * @since 0.1.0\n     * @alias toJSON, valueOf\n     * @category Seq\n     * @returns {*} Returns the resolved unwrapped value.\n     * @example\n     *\n     * _([1, 2, 3]).value();\n     * // => [1, 2, 3]\n     */\n    function wrapperValue() {\n      return baseWrapperValue(this.__wrapped__, this.__actions__);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the number of times the key was returned by `iteratee`. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.countBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': 1, '6': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.countBy(['one', 'two', 'three'], 'length');\n     * // => { '3': 2, '5': 1 }\n     */\n    var countBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        ++result[key];\n      } else {\n        baseAssignValue(result, key, 1);\n      }\n    });\n\n    /**\n     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n     * Iteration is stopped once `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * **Note:** This method returns `true` for\n     * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because\n     * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of\n     * elements of empty collections.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.every([true, 1, null, 'yes'], Boolean);\n     * // => false\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.every(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.every(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.every(users, 'active');\n     * // => false\n     */\n    function every(collection, predicate, guard) {\n      var func = isArray(collection) ? arrayEvery : baseEvery;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning an array of all elements\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * **Note:** Unlike `_.remove`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.reject\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.filter(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, { 'age': 36, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.filter(users, 'active');\n     * // => objects for ['barney']\n     */\n    function filter(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning the first element\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': true },\n     *   { 'user': 'fred',    'age': 40, 'active': false },\n     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n     * ];\n     *\n     * _.find(users, function(o) { return o.age < 40; });\n     * // => object for 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.find(users, { 'age': 1, 'active': true });\n     * // => object for 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.find(users, ['active', false]);\n     * // => object for 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.find(users, 'active');\n     * // => object for 'barney'\n     */\n    var find = createFind(findIndex);\n\n    /**\n     * This method is like `_.find` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=collection.length-1] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * _.findLast([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 1;\n     * });\n     * // => 3\n     */\n    var findLast = createFind(findLastIndex);\n\n    /**\n     * Creates a flattened array of values by running each element in `collection`\n     * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n     * with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [n, n];\n     * }\n     *\n     * _.flatMap([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMap(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), 1);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDeep([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMapDeep(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), INFINITY);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDepth([1, 2], duplicate, 2);\n     * // => [[1, 1], [2, 2]]\n     */\n    function flatMapDepth(collection, iteratee, depth) {\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(map(collection, iteratee), depth);\n    }\n\n    /**\n     * Iterates over elements of `collection` and invokes `iteratee` for each element.\n     * The iteratee is invoked with three arguments: (value, index|key, collection).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n     * property are iterated like arrays. To avoid this behavior use `_.forIn`\n     * or `_.forOwn` for object iteration.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias each\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEachRight\n     * @example\n     *\n     * _.forEach([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `1` then `2`.\n     *\n     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forEach(collection, iteratee) {\n      var func = isArray(collection) ? arrayEach : baseEach;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forEach` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @alias eachRight\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEach\n     * @example\n     *\n     * _.forEachRight([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `2` then `1`.\n     */\n    function forEachRight(collection, iteratee) {\n      var func = isArray(collection) ? arrayEachRight : baseEachRight;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The order of grouped values\n     * is determined by the order they occur in `collection`. The corresponding\n     * value of each key is an array of elements responsible for generating the\n     * key. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': [4.2], '6': [6.1, 6.3] }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.groupBy(['one', 'two', 'three'], 'length');\n     * // => { '3': ['one', 'two'], '5': ['three'] }\n     */\n    var groupBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        result[key].push(value);\n      } else {\n        baseAssignValue(result, key, [value]);\n      }\n    });\n\n    /**\n     * Checks if `value` is in `collection`. If `collection` is a string, it's\n     * checked for a substring of `value`, otherwise\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * is used for equality comparisons. If `fromIndex` is negative, it's used as\n     * the offset from the end of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {boolean} Returns `true` if `value` is found, else `false`.\n     * @example\n     *\n     * _.includes([1, 2, 3], 1);\n     * // => true\n     *\n     * _.includes([1, 2, 3], 1, 2);\n     * // => false\n     *\n     * _.includes({ 'a': 1, 'b': 2 }, 1);\n     * // => true\n     *\n     * _.includes('abcd', 'bc');\n     * // => true\n     */\n    function includes(collection, value, fromIndex, guard) {\n      collection = isArrayLike(collection) ? collection : values(collection);\n      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\n      var length = collection.length;\n      if (fromIndex < 0) {\n        fromIndex = nativeMax(length + fromIndex, 0);\n      }\n      return isString(collection)\n        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n    }\n\n    /**\n     * Invokes the method at `path` of each element in `collection`, returning\n     * an array of the results of each invoked method. Any additional arguments\n     * are provided to each invoked method. If `path` is a function, it's invoked\n     * for, and `this` bound to, each element in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|string} path The path of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {...*} [args] The arguments to invoke each method with.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');\n     * // => [[1, 5, 7], [1, 2, 3]]\n     *\n     * _.invokeMap([123, 456], String.prototype.split, '');\n     * // => [['1', '2', '3'], ['4', '5', '6']]\n     */\n    var invokeMap = baseRest(function(collection, path, args) {\n      var index = -1,\n          isFunc = typeof path == 'function',\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value) {\n        result[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);\n      });\n      return result;\n    });\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the last element responsible for generating the key. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * var array = [\n     *   { 'dir': 'left', 'code': 97 },\n     *   { 'dir': 'right', 'code': 100 }\n     * ];\n     *\n     * _.keyBy(array, function(o) {\n     *   return String.fromCharCode(o.code);\n     * });\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.keyBy(array, 'dir');\n     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n     */\n    var keyBy = createAggregator(function(result, value, key) {\n      baseAssignValue(result, key, value);\n    });\n\n    /**\n     * Creates an array of values by running each element in `collection` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n     *\n     * The guarded methods are:\n     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * _.map([4, 8], square);\n     * // => [16, 64]\n     *\n     * _.map({ 'a': 4, 'b': 8 }, square);\n     * // => [16, 64] (iteration order is not guaranteed)\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, 'user');\n     * // => ['barney', 'fred']\n     */\n    function map(collection, iteratee) {\n      var func = isArray(collection) ? arrayMap : baseMap;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.sortBy` except that it allows specifying the sort\n     * orders of the iteratees to sort by. If `orders` is unspecified, all values\n     * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n     * descending or \"asc\" for ascending sort order of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @param {string[]} [orders] The sort orders of `iteratees`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 34 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 36 }\n     * ];\n     *\n     * // Sort by `user` in ascending order and by `age` in descending order.\n     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     */\n    function orderBy(collection, iteratees, orders, guard) {\n      if (collection == null) {\n        return [];\n      }\n      if (!isArray(iteratees)) {\n        iteratees = iteratees == null ? [] : [iteratees];\n      }\n      orders = guard ? undefined : orders;\n      if (!isArray(orders)) {\n        orders = orders == null ? [] : [orders];\n      }\n      return baseOrderBy(collection, iteratees, orders);\n    }\n\n    /**\n     * Creates an array of elements split into two groups, the first of which\n     * contains elements `predicate` returns truthy for, the second of which\n     * contains elements `predicate` returns falsey for. The predicate is\n     * invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of grouped elements.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': false },\n     *   { 'user': 'fred',    'age': 40, 'active': true },\n     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n     * ];\n     *\n     * _.partition(users, function(o) { return o.active; });\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.partition(users, { 'age': 1, 'active': false });\n     * // => objects for [['pebbles'], ['barney', 'fred']]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.partition(users, ['active', false]);\n     * // => objects for [['barney', 'pebbles'], ['fred']]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.partition(users, 'active');\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     */\n    var partition = createAggregator(function(result, value, key) {\n      result[key ? 0 : 1].push(value);\n    }, function() { return [[], []]; });\n\n    /**\n     * Reduces `collection` to a value which is the accumulated result of running\n     * each element in `collection` thru `iteratee`, where each successive\n     * invocation is supplied the return value of the previous. If `accumulator`\n     * is not given, the first element of `collection` is used as the initial\n     * value. The iteratee is invoked with four arguments:\n     * (accumulator, value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n     *\n     * The guarded methods are:\n     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n     * and `sortBy`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduceRight\n     * @example\n     *\n     * _.reduce([1, 2], function(sum, n) {\n     *   return sum + n;\n     * }, 0);\n     * // => 3\n     *\n     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     *   return result;\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n     */\n    function reduce(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduce : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);\n    }\n\n    /**\n     * This method is like `_.reduce` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduce\n     * @example\n     *\n     * var array = [[0, 1], [2, 3], [4, 5]];\n     *\n     * _.reduceRight(array, function(flattened, other) {\n     *   return flattened.concat(other);\n     * }, []);\n     * // => [4, 5, 2, 3, 0, 1]\n     */\n    function reduceRight(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduceRight : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);\n    }\n\n    /**\n     * The opposite of `_.filter`; this method returns the elements of `collection`\n     * that `predicate` does **not** return truthy for.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.filter\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': true }\n     * ];\n     *\n     * _.reject(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.reject(users, { 'age': 40, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.reject(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.reject(users, 'active');\n     * // => objects for ['barney']\n     */\n    function reject(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, negate(getIteratee(predicate, 3)));\n    }\n\n    /**\n     * Gets a random element from `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     * @example\n     *\n     * _.sample([1, 2, 3, 4]);\n     * // => 2\n     */\n    function sample(collection) {\n      var func = isArray(collection) ? arraySample : baseSample;\n      return func(collection);\n    }\n\n    /**\n     * Gets `n` random elements at unique keys from `collection` up to the\n     * size of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} [n=1] The number of elements to sample.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the random elements.\n     * @example\n     *\n     * _.sampleSize([1, 2, 3], 2);\n     * // => [3, 1]\n     *\n     * _.sampleSize([1, 2, 3], 4);\n     * // => [2, 3, 1]\n     */\n    function sampleSize(collection, n, guard) {\n      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      var func = isArray(collection) ? arraySampleSize : baseSampleSize;\n      return func(collection, n);\n    }\n\n    /**\n     * Creates an array of shuffled values, using a version of the\n     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     * @example\n     *\n     * _.shuffle([1, 2, 3, 4]);\n     * // => [4, 1, 3, 2]\n     */\n    function shuffle(collection) {\n      var func = isArray(collection) ? arrayShuffle : baseShuffle;\n      return func(collection);\n    }\n\n    /**\n     * Gets the size of `collection` by returning its length for array-like\n     * values or the number of own enumerable string keyed properties for objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @returns {number} Returns the collection size.\n     * @example\n     *\n     * _.size([1, 2, 3]);\n     * // => 3\n     *\n     * _.size({ 'a': 1, 'b': 2 });\n     * // => 2\n     *\n     * _.size('pebbles');\n     * // => 7\n     */\n    function size(collection) {\n      if (collection == null) {\n        return 0;\n      }\n      if (isArrayLike(collection)) {\n        return isString(collection) ? stringSize(collection) : collection.length;\n      }\n      var tag = getTag(collection);\n      if (tag == mapTag || tag == setTag) {\n        return collection.size;\n      }\n      return baseKeys(collection).length;\n    }\n\n    /**\n     * Checks if `predicate` returns truthy for **any** element of `collection`.\n     * Iteration is stopped once `predicate` returns truthy. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.some([null, 0, 'yes', false], Boolean);\n     * // => true\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': true },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.some(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.some(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.some(users, 'active');\n     * // => true\n     */\n    function some(collection, predicate, guard) {\n      var func = isArray(collection) ? arraySome : baseSome;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Creates an array of elements, sorted in ascending order by the results of\n     * running each element in a collection thru each iteratee. This method\n     * performs a stable sort, that is, it preserves the original sort order of\n     * equal elements. The iteratees are invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 34 }\n     * ];\n     *\n     * _.sortBy(users, [function(o) { return o.user; }]);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     *\n     * _.sortBy(users, ['user', 'age']);\n     * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]\n     */\n    var sortBy = baseRest(function(collection, iteratees) {\n      if (collection == null) {\n        return [];\n      }\n      var length = iteratees.length;\n      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n        iteratees = [];\n      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n        iteratees = [iteratees[0]];\n      }\n      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Gets the timestamp of the number of milliseconds that have elapsed since\n     * the Unix epoch (1 January 1970 00:00:00 UTC).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Date\n     * @returns {number} Returns the timestamp.\n     * @example\n     *\n     * _.defer(function(stamp) {\n     *   console.log(_.now() - stamp);\n     * }, _.now());\n     * // => Logs the number of milliseconds it took for the deferred invocation.\n     */\n    var now = ctxNow || function() {\n      return root.Date.now();\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The opposite of `_.before`; this method creates a function that invokes\n     * `func` once it's called `n` or more times.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {number} n The number of calls before `func` is invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var saves = ['profile', 'settings'];\n     *\n     * var done = _.after(saves.length, function() {\n     *   console.log('done saving!');\n     * });\n     *\n     * _.forEach(saves, function(type) {\n     *   asyncSave({ 'type': type, 'complete': done });\n     * });\n     * // => Logs 'done saving!' after the two async saves have completed.\n     */\n    function after(n, func) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n < 1) {\n          return func.apply(this, arguments);\n        }\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func`, with up to `n` arguments,\n     * ignoring any additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @param {number} [n=func.length] The arity cap.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n     * // => [6, 8, 10]\n     */\n    function ary(func, n, guard) {\n      n = guard ? undefined : n;\n      n = (func && n == null) ? func.length : n;\n      return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);\n    }\n\n    /**\n     * Creates a function that invokes `func`, with the `this` binding and arguments\n     * of the created function, while it's called less than `n` times. Subsequent\n     * calls to the created function return the result of the last `func` invocation.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {number} n The number of calls at which `func` is no longer invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * jQuery(element).on('click', _.before(5, addContactToList));\n     * // => Allows adding up to 4 contacts to the list.\n     */\n    function before(n, func) {\n      var result;\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n > 0) {\n          result = func.apply(this, arguments);\n        }\n        if (n <= 1) {\n          func = undefined;\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and `partials` prepended to the arguments it receives.\n     *\n     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** Unlike native `Function#bind`, this method doesn't set the \"length\"\n     * property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * function greet(greeting, punctuation) {\n     *   return greeting + ' ' + this.user + punctuation;\n     * }\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * var bound = _.bind(greet, object, 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bind(greet, object, _, '!');\n     * bound('hi');\n     * // => 'hi fred!'\n     */\n    var bind = baseRest(function(func, thisArg, partials) {\n      var bitmask = WRAP_BIND_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bind));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(func, bitmask, thisArg, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes the method at `object[key]` with `partials`\n     * prepended to the arguments it receives.\n     *\n     * This method differs from `_.bind` by allowing bound functions to reference\n     * methods that may be redefined or don't yet exist. See\n     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n     * for more details.\n     *\n     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Function\n     * @param {Object} object The object to invoke the method on.\n     * @param {string} key The key of the method.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var object = {\n     *   'user': 'fred',\n     *   'greet': function(greeting, punctuation) {\n     *     return greeting + ' ' + this.user + punctuation;\n     *   }\n     * };\n     *\n     * var bound = _.bindKey(object, 'greet', 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * object.greet = function(greeting, punctuation) {\n     *   return greeting + 'ya ' + this.user + punctuation;\n     * };\n     *\n     * bound('!');\n     * // => 'hiya fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bindKey(object, 'greet', _, '!');\n     * bound('hi');\n     * // => 'hiya fred!'\n     */\n    var bindKey = baseRest(function(object, key, partials) {\n      var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bindKey));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(key, bitmask, object, partials, holders);\n    });\n\n    /**\n     * Creates a function that accepts arguments of `func` and either invokes\n     * `func` returning its result, if at least `arity` number of arguments have\n     * been provided, or returns a function that accepts the remaining `func`\n     * arguments, and so on. The arity of `func` may be specified if `func.length`\n     * is not sufficient.\n     *\n     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curry(abc);\n     *\n     * curried(1)(2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(1)(_, 3)(2);\n     * // => [1, 2, 3]\n     */\n    function curry(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curry.placeholder;\n      return result;\n    }\n\n    /**\n     * This method is like `_.curry` except that arguments are applied to `func`\n     * in the manner of `_.partialRight` instead of `_.partial`.\n     *\n     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curryRight(abc);\n     *\n     * curried(3)(2)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(2, 3)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(3)(1, _)(2);\n     * // => [1, 2, 3]\n     */\n    function curryRight(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curryRight.placeholder;\n      return result;\n    }\n\n    /**\n     * Creates a debounced function that delays invoking `func` until after `wait`\n     * milliseconds have elapsed since the last time the debounced function was\n     * invoked. The debounced function comes with a `cancel` method to cancel\n     * delayed `func` invocations and a `flush` method to immediately invoke them.\n     * Provide `options` to indicate whether `func` should be invoked on the\n     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n     * with the last arguments provided to the debounced function. Subsequent\n     * calls to the debounced function return the result of the last `func`\n     * invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the debounced function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.debounce` and `_.throttle`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to debounce.\n     * @param {number} [wait=0] The number of milliseconds to delay.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=false]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {number} [options.maxWait]\n     *  The maximum time `func` is allowed to be delayed before it's invoked.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new debounced function.\n     * @example\n     *\n     * // Avoid costly calculations while the window size is in flux.\n     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n     *\n     * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n     * jQuery(element).on('click', _.debounce(sendMail, 300, {\n     *   'leading': true,\n     *   'trailing': false\n     * }));\n     *\n     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n     * var source = new EventSource('/stream');\n     * jQuery(source).on('message', debounced);\n     *\n     * // Cancel the trailing debounced invocation.\n     * jQuery(window).on('popstate', debounced.cancel);\n     */\n    function debounce(func, wait, options) {\n      var lastArgs,\n          lastThis,\n          maxWait,\n          result,\n          timerId,\n          lastCallTime,\n          lastInvokeTime = 0,\n          leading = false,\n          maxing = false,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      wait = toNumber(wait) || 0;\n      if (isObject(options)) {\n        leading = !!options.leading;\n        maxing = 'maxWait' in options;\n        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n\n      function invokeFunc(time) {\n        var args = lastArgs,\n            thisArg = lastThis;\n\n        lastArgs = lastThis = undefined;\n        lastInvokeTime = time;\n        result = func.apply(thisArg, args);\n        return result;\n      }\n\n      function leadingEdge(time) {\n        // Reset any `maxWait` timer.\n        lastInvokeTime = time;\n        // Start the timer for the trailing edge.\n        timerId = setTimeout(timerExpired, wait);\n        // Invoke the leading edge.\n        return leading ? invokeFunc(time) : result;\n      }\n\n      function remainingWait(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime,\n            timeWaiting = wait - timeSinceLastCall;\n\n        return maxing\n          ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n          : timeWaiting;\n      }\n\n      function shouldInvoke(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime;\n\n        // Either this is the first call, activity has stopped and we're at the\n        // trailing edge, the system time has gone backwards and we're treating\n        // it as the trailing edge, or we've hit the `maxWait` limit.\n        return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n      }\n\n      function timerExpired() {\n        var time = now();\n        if (shouldInvoke(time)) {\n          return trailingEdge(time);\n        }\n        // Restart the timer.\n        timerId = setTimeout(timerExpired, remainingWait(time));\n      }\n\n      function trailingEdge(time) {\n        timerId = undefined;\n\n        // Only invoke if we have `lastArgs` which means `func` has been\n        // debounced at least once.\n        if (trailing && lastArgs) {\n          return invokeFunc(time);\n        }\n        lastArgs = lastThis = undefined;\n        return result;\n      }\n\n      function cancel() {\n        if (timerId !== undefined) {\n          clearTimeout(timerId);\n        }\n        lastInvokeTime = 0;\n        lastArgs = lastCallTime = lastThis = timerId = undefined;\n      }\n\n      function flush() {\n        return timerId === undefined ? result : trailingEdge(now());\n      }\n\n      function debounced() {\n        var time = now(),\n            isInvoking = shouldInvoke(time);\n\n        lastArgs = arguments;\n        lastThis = this;\n        lastCallTime = time;\n\n        if (isInvoking) {\n          if (timerId === undefined) {\n            return leadingEdge(lastCallTime);\n          }\n          if (maxing) {\n            // Handle invocations in a tight loop.\n            timerId = setTimeout(timerExpired, wait);\n            return invokeFunc(lastCallTime);\n          }\n        }\n        if (timerId === undefined) {\n          timerId = setTimeout(timerExpired, wait);\n        }\n        return result;\n      }\n      debounced.cancel = cancel;\n      debounced.flush = flush;\n      return debounced;\n    }\n\n    /**\n     * Defers invoking the `func` until the current call stack has cleared. Any\n     * additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to defer.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.defer(function(text) {\n     *   console.log(text);\n     * }, 'deferred');\n     * // => Logs 'deferred' after one millisecond.\n     */\n    var defer = baseRest(function(func, args) {\n      return baseDelay(func, 1, args);\n    });\n\n    /**\n     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n     * provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.delay(function(text) {\n     *   console.log(text);\n     * }, 1000, 'later');\n     * // => Logs 'later' after one second.\n     */\n    var delay = baseRest(function(func, wait, args) {\n      return baseDelay(func, toNumber(wait) || 0, args);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments reversed.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to flip arguments for.\n     * @returns {Function} Returns the new flipped function.\n     * @example\n     *\n     * var flipped = _.flip(function() {\n     *   return _.toArray(arguments);\n     * });\n     *\n     * flipped('a', 'b', 'c', 'd');\n     * // => ['d', 'c', 'b', 'a']\n     */\n    function flip(func) {\n      return createWrap(func, WRAP_FLIP_FLAG);\n    }\n\n    /**\n     * Creates a function that memoizes the result of `func`. If `resolver` is\n     * provided, it determines the cache key for storing the result based on the\n     * arguments provided to the memoized function. By default, the first argument\n     * provided to the memoized function is used as the map cache key. The `func`\n     * is invoked with the `this` binding of the memoized function.\n     *\n     * **Note:** The cache is exposed as the `cache` property on the memoized\n     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n     * constructor with one whose instances implement the\n     * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n     * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to have its output memoized.\n     * @param {Function} [resolver] The function to resolve the cache key.\n     * @returns {Function} Returns the new memoized function.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     * var other = { 'c': 3, 'd': 4 };\n     *\n     * var values = _.memoize(_.values);\n     * values(object);\n     * // => [1, 2]\n     *\n     * values(other);\n     * // => [3, 4]\n     *\n     * object.a = 2;\n     * values(object);\n     * // => [1, 2]\n     *\n     * // Modify the result cache.\n     * values.cache.set(object, ['a', 'b']);\n     * values(object);\n     * // => ['a', 'b']\n     *\n     * // Replace `_.memoize.Cache`.\n     * _.memoize.Cache = WeakMap;\n     */\n    function memoize(func, resolver) {\n      if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var memoized = function() {\n        var args = arguments,\n            key = resolver ? resolver.apply(this, args) : args[0],\n            cache = memoized.cache;\n\n        if (cache.has(key)) {\n          return cache.get(key);\n        }\n        var result = func.apply(this, args);\n        memoized.cache = cache.set(key, result) || cache;\n        return result;\n      };\n      memoized.cache = new (memoize.Cache || MapCache);\n      return memoized;\n    }\n\n    // Expose `MapCache`.\n    memoize.Cache = MapCache;\n\n    /**\n     * Creates a function that negates the result of the predicate `func`. The\n     * `func` predicate is invoked with the `this` binding and arguments of the\n     * created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} predicate The predicate to negate.\n     * @returns {Function} Returns the new negated function.\n     * @example\n     *\n     * function isEven(n) {\n     *   return n % 2 == 0;\n     * }\n     *\n     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n     * // => [1, 3, 5]\n     */\n    function negate(predicate) {\n      if (typeof predicate != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function() {\n        var args = arguments;\n        switch (args.length) {\n          case 0: return !predicate.call(this);\n          case 1: return !predicate.call(this, args[0]);\n          case 2: return !predicate.call(this, args[0], args[1]);\n          case 3: return !predicate.call(this, args[0], args[1], args[2]);\n        }\n        return !predicate.apply(this, args);\n      };\n    }\n\n    /**\n     * Creates a function that is restricted to invoking `func` once. Repeat calls\n     * to the function return the value of the first invocation. The `func` is\n     * invoked with the `this` binding and arguments of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var initialize = _.once(createApplication);\n     * initialize();\n     * initialize();\n     * // => `createApplication` is invoked once\n     */\n    function once(func) {\n      return before(2, func);\n    }\n\n    /**\n     * Creates a function that invokes `func` with its arguments transformed.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to wrap.\n     * @param {...(Function|Function[])} [transforms=[_.identity]]\n     *  The argument transforms.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function doubled(n) {\n     *   return n * 2;\n     * }\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var func = _.overArgs(function(x, y) {\n     *   return [x, y];\n     * }, [square, doubled]);\n     *\n     * func(9, 3);\n     * // => [81, 6]\n     *\n     * func(10, 5);\n     * // => [100, 10]\n     */\n    var overArgs = castRest(function(func, transforms) {\n      transforms = (transforms.length == 1 && isArray(transforms[0]))\n        ? arrayMap(transforms[0], baseUnary(getIteratee()))\n        : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));\n\n      var funcsLength = transforms.length;\n      return baseRest(function(args) {\n        var index = -1,\n            length = nativeMin(args.length, funcsLength);\n\n        while (++index < length) {\n          args[index] = transforms[index].call(this, args[index]);\n        }\n        return apply(func, this, args);\n      });\n    });\n\n    /**\n     * Creates a function that invokes `func` with `partials` prepended to the\n     * arguments it receives. This method is like `_.bind` except it does **not**\n     * alter the `this` binding.\n     *\n     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.2.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var sayHelloTo = _.partial(greet, 'hello');\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     *\n     * // Partially applied with placeholders.\n     * var greetFred = _.partial(greet, _, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     */\n    var partial = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partial));\n      return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * This method is like `_.partial` except that partially applied arguments\n     * are appended to the arguments it receives.\n     *\n     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var greetFred = _.partialRight(greet, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     *\n     * // Partially applied with placeholders.\n     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     */\n    var partialRight = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partialRight));\n      return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments arranged according\n     * to the specified `indexes` where the argument value at the first index is\n     * provided as the first argument, the argument value at the second index is\n     * provided as the second argument, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to rearrange arguments for.\n     * @param {...(number|number[])} indexes The arranged argument indexes.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var rearged = _.rearg(function(a, b, c) {\n     *   return [a, b, c];\n     * }, [2, 0, 1]);\n     *\n     * rearged('b', 'c', 'a')\n     * // => ['a', 'b', 'c']\n     */\n    var rearg = flatRest(function(func, indexes) {\n      return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * created function and arguments from `start` and beyond provided as\n     * an array.\n     *\n     * **Note:** This method is based on the\n     * [rest parameter](https://mdn.io/rest_parameters).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.rest(function(what, names) {\n     *   return what + ' ' + _.initial(names).join(', ') +\n     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n     * });\n     *\n     * say('hello', 'fred', 'barney', 'pebbles');\n     * // => 'hello fred, barney, & pebbles'\n     */\n    function rest(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start === undefined ? start : toInteger(start);\n      return baseRest(func, start);\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * create function and an array of arguments much like\n     * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).\n     *\n     * **Note:** This method is based on the\n     * [spread operator](https://mdn.io/spread_operator).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Function\n     * @param {Function} func The function to spread arguments over.\n     * @param {number} [start=0] The start position of the spread.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.spread(function(who, what) {\n     *   return who + ' says ' + what;\n     * });\n     *\n     * say(['fred', 'hello']);\n     * // => 'fred says hello'\n     *\n     * var numbers = Promise.all([\n     *   Promise.resolve(40),\n     *   Promise.resolve(36)\n     * ]);\n     *\n     * numbers.then(_.spread(function(x, y) {\n     *   return x + y;\n     * }));\n     * // => a Promise of 76\n     */\n    function spread(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start == null ? 0 : nativeMax(toInteger(start), 0);\n      return baseRest(function(args) {\n        var array = args[start],\n            otherArgs = castSlice(args, 0, start);\n\n        if (array) {\n          arrayPush(otherArgs, array);\n        }\n        return apply(func, this, otherArgs);\n      });\n    }\n\n    /**\n     * Creates a throttled function that only invokes `func` at most once per\n     * every `wait` milliseconds. The throttled function comes with a `cancel`\n     * method to cancel delayed `func` invocations and a `flush` method to\n     * immediately invoke them. Provide `options` to indicate whether `func`\n     * should be invoked on the leading and/or trailing edge of the `wait`\n     * timeout. The `func` is invoked with the last arguments provided to the\n     * throttled function. Subsequent calls to the throttled function return the\n     * result of the last `func` invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the throttled function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.throttle` and `_.debounce`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to throttle.\n     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=true]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new throttled function.\n     * @example\n     *\n     * // Avoid excessively updating the position while scrolling.\n     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n     *\n     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n     * jQuery(element).on('click', throttled);\n     *\n     * // Cancel the trailing throttled invocation.\n     * jQuery(window).on('popstate', throttled.cancel);\n     */\n    function throttle(func, wait, options) {\n      var leading = true,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (isObject(options)) {\n        leading = 'leading' in options ? !!options.leading : leading;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n      return debounce(func, wait, {\n        'leading': leading,\n        'maxWait': wait,\n        'trailing': trailing\n      });\n    }\n\n    /**\n     * Creates a function that accepts up to one argument, ignoring any\n     * additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.unary(parseInt));\n     * // => [6, 8, 10]\n     */\n    function unary(func) {\n      return ary(func, 1);\n    }\n\n    /**\n     * Creates a function that provides `value` to `wrapper` as its first\n     * argument. Any additional arguments provided to the function are appended\n     * to those provided to the `wrapper`. The wrapper is invoked with the `this`\n     * binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {*} value The value to wrap.\n     * @param {Function} [wrapper=identity] The wrapper function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var p = _.wrap(_.escape, function(func, text) {\n     *   return '<p>' + func(text) + '</p>';\n     * });\n     *\n     * p('fred, barney, & pebbles');\n     * // => '<p>fred, barney, &amp; pebbles</p>'\n     */\n    function wrap(value, wrapper) {\n      return partial(castFunction(wrapper), value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Casts `value` as an array if it's not one.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Lang\n     * @param {*} value The value to inspect.\n     * @returns {Array} Returns the cast array.\n     * @example\n     *\n     * _.castArray(1);\n     * // => [1]\n     *\n     * _.castArray({ 'a': 1 });\n     * // => [{ 'a': 1 }]\n     *\n     * _.castArray('abc');\n     * // => ['abc']\n     *\n     * _.castArray(null);\n     * // => [null]\n     *\n     * _.castArray(undefined);\n     * // => [undefined]\n     *\n     * _.castArray();\n     * // => []\n     *\n     * var array = [1, 2, 3];\n     * console.log(_.castArray(array) === array);\n     * // => true\n     */\n    function castArray() {\n      if (!arguments.length) {\n        return [];\n      }\n      var value = arguments[0];\n      return isArray(value) ? value : [value];\n    }\n\n    /**\n     * Creates a shallow clone of `value`.\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n     * and supports cloning arrays, array buffers, booleans, date objects, maps,\n     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n     * arrays. The own enumerable properties of `arguments` objects are cloned\n     * as plain objects. An empty object is returned for uncloneable values such\n     * as error objects, functions, DOM nodes, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeep\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var shallow = _.clone(objects);\n     * console.log(shallow[0] === objects[0]);\n     * // => true\n     */\n    function clone(value) {\n      return baseClone(value, CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.clone` except that it accepts `customizer` which\n     * is invoked to produce the cloned value. If `customizer` returns `undefined`,\n     * cloning is handled by the method instead. The `customizer` is invoked with\n     * up to four arguments; (value [, index|key, object, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeepWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(false);\n     *   }\n     * }\n     *\n     * var el = _.cloneWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 0\n     */\n    function cloneWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * This method is like `_.clone` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.clone\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var deep = _.cloneDeep(objects);\n     * console.log(deep[0] === objects[0]);\n     * // => false\n     */\n    function cloneDeep(value) {\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.cloneWith` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.cloneWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(true);\n     *   }\n     * }\n     *\n     * var el = _.cloneDeepWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 20\n     */\n    function cloneDeepWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * Checks if `object` conforms to `source` by invoking the predicate\n     * properties of `source` with the corresponding property values of `object`.\n     *\n     * **Note:** This method is equivalent to `_.conforms` when `source` is\n     * partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });\n     * // => true\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });\n     * // => false\n     */\n    function conformsTo(object, source) {\n      return source == null || baseConformsTo(object, source, keys(source));\n    }\n\n    /**\n     * Performs a\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * comparison between two values to determine if they are equivalent.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.eq(object, object);\n     * // => true\n     *\n     * _.eq(object, other);\n     * // => false\n     *\n     * _.eq('a', 'a');\n     * // => true\n     *\n     * _.eq('a', Object('a'));\n     * // => false\n     *\n     * _.eq(NaN, NaN);\n     * // => true\n     */\n    function eq(value, other) {\n      return value === other || (value !== value && other !== other);\n    }\n\n    /**\n     * Checks if `value` is greater than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     * @see _.lt\n     * @example\n     *\n     * _.gt(3, 1);\n     * // => true\n     *\n     * _.gt(3, 3);\n     * // => false\n     *\n     * _.gt(1, 3);\n     * // => false\n     */\n    var gt = createRelationalOperation(baseGt);\n\n    /**\n     * Checks if `value` is greater than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than or equal to\n     *  `other`, else `false`.\n     * @see _.lte\n     * @example\n     *\n     * _.gte(3, 1);\n     * // => true\n     *\n     * _.gte(3, 3);\n     * // => true\n     *\n     * _.gte(1, 3);\n     * // => false\n     */\n    var gte = createRelationalOperation(function(value, other) {\n      return value >= other;\n    });\n\n    /**\n     * Checks if `value` is likely an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArguments(function() { return arguments; }());\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n    var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n      return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n        !propertyIsEnumerable.call(value, 'callee');\n    };\n\n    /**\n     * Checks if `value` is classified as an `Array` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n     * @example\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     *\n     * _.isArray(document.body.children);\n     * // => false\n     *\n     * _.isArray('abc');\n     * // => false\n     *\n     * _.isArray(_.noop);\n     * // => false\n     */\n    var isArray = Array.isArray;\n\n    /**\n     * Checks if `value` is classified as an `ArrayBuffer` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     * @example\n     *\n     * _.isArrayBuffer(new ArrayBuffer(2));\n     * // => true\n     *\n     * _.isArrayBuffer(new Array(2));\n     * // => false\n     */\n    var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;\n\n    /**\n     * Checks if `value` is array-like. A value is considered array-like if it's\n     * not a function and has a `value.length` that's an integer greater than or\n     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n     * @example\n     *\n     * _.isArrayLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLike(document.body.children);\n     * // => true\n     *\n     * _.isArrayLike('abc');\n     * // => true\n     *\n     * _.isArrayLike(_.noop);\n     * // => false\n     */\n    function isArrayLike(value) {\n      return value != null && isLength(value.length) && !isFunction(value);\n    }\n\n    /**\n     * This method is like `_.isArrayLike` except that it also checks if `value`\n     * is an object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array-like object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArrayLikeObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLikeObject(document.body.children);\n     * // => true\n     *\n     * _.isArrayLikeObject('abc');\n     * // => false\n     *\n     * _.isArrayLikeObject(_.noop);\n     * // => false\n     */\n    function isArrayLikeObject(value) {\n      return isObjectLike(value) && isArrayLike(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a boolean primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\n     * @example\n     *\n     * _.isBoolean(false);\n     * // => true\n     *\n     * _.isBoolean(null);\n     * // => false\n     */\n    function isBoolean(value) {\n      return value === true || value === false ||\n        (isObjectLike(value) && baseGetTag(value) == boolTag);\n    }\n\n    /**\n     * Checks if `value` is a buffer.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n     * @example\n     *\n     * _.isBuffer(new Buffer(2));\n     * // => true\n     *\n     * _.isBuffer(new Uint8Array(2));\n     * // => false\n     */\n    var isBuffer = nativeIsBuffer || stubFalse;\n\n    /**\n     * Checks if `value` is classified as a `Date` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     * @example\n     *\n     * _.isDate(new Date);\n     * // => true\n     *\n     * _.isDate('Mon April 23 2012');\n     * // => false\n     */\n    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;\n\n    /**\n     * Checks if `value` is likely a DOM element.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n     * @example\n     *\n     * _.isElement(document.body);\n     * // => true\n     *\n     * _.isElement('<body>');\n     * // => false\n     */\n    function isElement(value) {\n      return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);\n    }\n\n    /**\n     * Checks if `value` is an empty object, collection, map, or set.\n     *\n     * Objects are considered empty if they have no own enumerable string keyed\n     * properties.\n     *\n     * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n     * jQuery-like collections are considered empty if they have a `length` of `0`.\n     * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n     * @example\n     *\n     * _.isEmpty(null);\n     * // => true\n     *\n     * _.isEmpty(true);\n     * // => true\n     *\n     * _.isEmpty(1);\n     * // => true\n     *\n     * _.isEmpty([1, 2, 3]);\n     * // => false\n     *\n     * _.isEmpty({ 'a': 1 });\n     * // => false\n     */\n    function isEmpty(value) {\n      if (value == null) {\n        return true;\n      }\n      if (isArrayLike(value) &&\n          (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||\n            isBuffer(value) || isTypedArray(value) || isArguments(value))) {\n        return !value.length;\n      }\n      var tag = getTag(value);\n      if (tag == mapTag || tag == setTag) {\n        return !value.size;\n      }\n      if (isPrototype(value)) {\n        return !baseKeys(value).length;\n      }\n      for (var key in value) {\n        if (hasOwnProperty.call(value, key)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * Performs a deep comparison between two values to determine if they are\n     * equivalent.\n     *\n     * **Note:** This method supports comparing arrays, array buffers, booleans,\n     * date objects, error objects, maps, numbers, `Object` objects, regexes,\n     * sets, strings, symbols, and typed arrays. `Object` objects are compared\n     * by their own, not inherited, enumerable properties. Functions and DOM\n     * nodes are compared by strict equality, i.e. `===`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.isEqual(object, other);\n     * // => true\n     *\n     * object === other;\n     * // => false\n     */\n    function isEqual(value, other) {\n      return baseIsEqual(value, other);\n    }\n\n    /**\n     * This method is like `_.isEqual` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with up to\n     * six arguments: (objValue, othValue [, index|key, object, other, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, othValue) {\n     *   if (isGreeting(objValue) && isGreeting(othValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var array = ['hello', 'goodbye'];\n     * var other = ['hi', 'goodbye'];\n     *\n     * _.isEqualWith(array, other, customizer);\n     * // => true\n     */\n    function isEqualWith(value, other, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      var result = customizer ? customizer(value, other) : undefined;\n      return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;\n    }\n\n    /**\n     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n     * `SyntaxError`, `TypeError`, or `URIError` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n     * @example\n     *\n     * _.isError(new Error);\n     * // => true\n     *\n     * _.isError(Error);\n     * // => false\n     */\n    function isError(value) {\n      if (!isObjectLike(value)) {\n        return false;\n      }\n      var tag = baseGetTag(value);\n      return tag == errorTag || tag == domExcTag ||\n        (typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value));\n    }\n\n    /**\n     * Checks if `value` is a finite primitive number.\n     *\n     * **Note:** This method is based on\n     * [`Number.isFinite`](https://mdn.io/Number/isFinite).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n     * @example\n     *\n     * _.isFinite(3);\n     * // => true\n     *\n     * _.isFinite(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isFinite(Infinity);\n     * // => false\n     *\n     * _.isFinite('3');\n     * // => false\n     */\n    function isFinite(value) {\n      return typeof value == 'number' && nativeIsFinite(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Function` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     *\n     * _.isFunction(/abc/);\n     * // => false\n     */\n    function isFunction(value) {\n      if (!isObject(value)) {\n        return false;\n      }\n      // The use of `Object#toString` avoids issues with the `typeof` operator\n      // in Safari 9 which returns 'object' for typed arrays and other constructors.\n      var tag = baseGetTag(value);\n      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n    }\n\n    /**\n     * Checks if `value` is an integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isInteger`](https://mdn.io/Number/isInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.\n     * @example\n     *\n     * _.isInteger(3);\n     * // => true\n     *\n     * _.isInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isInteger(Infinity);\n     * // => false\n     *\n     * _.isInteger('3');\n     * // => false\n     */\n    function isInteger(value) {\n      return typeof value == 'number' && value == toInteger(value);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like length.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n     * @example\n     *\n     * _.isLength(3);\n     * // => true\n     *\n     * _.isLength(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isLength(Infinity);\n     * // => false\n     *\n     * _.isLength('3');\n     * // => false\n     */\n    function isLength(value) {\n      return typeof value == 'number' &&\n        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is the\n     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(_.noop);\n     * // => true\n     *\n     * _.isObject(null);\n     * // => false\n     */\n    function isObject(value) {\n      var type = typeof value;\n      return value != null && (type == 'object' || type == 'function');\n    }\n\n    /**\n     * Checks if `value` is object-like. A value is object-like if it's not `null`\n     * and has a `typeof` result of \"object\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n     * @example\n     *\n     * _.isObjectLike({});\n     * // => true\n     *\n     * _.isObjectLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isObjectLike(_.noop);\n     * // => false\n     *\n     * _.isObjectLike(null);\n     * // => false\n     */\n    function isObjectLike(value) {\n      return value != null && typeof value == 'object';\n    }\n\n    /**\n     * Checks if `value` is classified as a `Map` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     * @example\n     *\n     * _.isMap(new Map);\n     * // => true\n     *\n     * _.isMap(new WeakMap);\n     * // => false\n     */\n    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\n    /**\n     * Performs a partial deep comparison between `object` and `source` to\n     * determine if `object` contains equivalent property values.\n     *\n     * **Note:** This method is equivalent to `_.matches` when `source` is\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.isMatch(object, { 'b': 2 });\n     * // => true\n     *\n     * _.isMatch(object, { 'b': 1 });\n     * // => false\n     */\n    function isMatch(object, source) {\n      return object === source || baseIsMatch(object, source, getMatchData(source));\n    }\n\n    /**\n     * This method is like `_.isMatch` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with five\n     * arguments: (objValue, srcValue, index|key, object, source).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (isGreeting(objValue) && isGreeting(srcValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var object = { 'greeting': 'hello' };\n     * var source = { 'greeting': 'hi' };\n     *\n     * _.isMatchWith(object, source, customizer);\n     * // => true\n     */\n    function isMatchWith(object, source, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseIsMatch(object, source, getMatchData(source), customizer);\n    }\n\n    /**\n     * Checks if `value` is `NaN`.\n     *\n     * **Note:** This method is based on\n     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as\n     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for\n     * `undefined` and other non-number values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n     * @example\n     *\n     * _.isNaN(NaN);\n     * // => true\n     *\n     * _.isNaN(new Number(NaN));\n     * // => true\n     *\n     * isNaN(undefined);\n     * // => true\n     *\n     * _.isNaN(undefined);\n     * // => false\n     */\n    function isNaN(value) {\n      // An `NaN` primitive is the only value that is not equal to itself.\n      // Perform the `toStringTag` check first to avoid errors with some\n      // ActiveX objects in IE.\n      return isNumber(value) && value != +value;\n    }\n\n    /**\n     * Checks if `value` is a pristine native function.\n     *\n     * **Note:** This method can't reliably detect native functions in the presence\n     * of the core-js package because core-js circumvents this kind of detection.\n     * Despite multiple requests, the core-js maintainer has made it clear: any\n     * attempt to fix the detection will be obstructed. As a result, we're left\n     * with little choice but to throw an error. Unfortunately, this also affects\n     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),\n     * which rely on core-js.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     * @example\n     *\n     * _.isNative(Array.prototype.push);\n     * // => true\n     *\n     * _.isNative(_);\n     * // => false\n     */\n    function isNative(value) {\n      if (isMaskable(value)) {\n        throw new Error(CORE_ERROR_TEXT);\n      }\n      return baseIsNative(value);\n    }\n\n    /**\n     * Checks if `value` is `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n     * @example\n     *\n     * _.isNull(null);\n     * // => true\n     *\n     * _.isNull(void 0);\n     * // => false\n     */\n    function isNull(value) {\n      return value === null;\n    }\n\n    /**\n     * Checks if `value` is `null` or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n     * @example\n     *\n     * _.isNil(null);\n     * // => true\n     *\n     * _.isNil(void 0);\n     * // => true\n     *\n     * _.isNil(NaN);\n     * // => false\n     */\n    function isNil(value) {\n      return value == null;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Number` primitive or object.\n     *\n     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n     * classified as numbers, use the `_.isFinite` method.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n     * @example\n     *\n     * _.isNumber(3);\n     * // => true\n     *\n     * _.isNumber(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isNumber(Infinity);\n     * // => true\n     *\n     * _.isNumber('3');\n     * // => false\n     */\n    function isNumber(value) {\n      return typeof value == 'number' ||\n        (isObjectLike(value) && baseGetTag(value) == numberTag);\n    }\n\n    /**\n     * Checks if `value` is a plain object, that is, an object created by the\n     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.8.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * _.isPlainObject(new Foo);\n     * // => false\n     *\n     * _.isPlainObject([1, 2, 3]);\n     * // => false\n     *\n     * _.isPlainObject({ 'x': 0, 'y': 0 });\n     * // => true\n     *\n     * _.isPlainObject(Object.create(null));\n     * // => true\n     */\n    function isPlainObject(value) {\n      if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n        return false;\n      }\n      var proto = getPrototype(value);\n      if (proto === null) {\n        return true;\n      }\n      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n      return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n        funcToString.call(Ctor) == objectCtorString;\n    }\n\n    /**\n     * Checks if `value` is classified as a `RegExp` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     * @example\n     *\n     * _.isRegExp(/abc/);\n     * // => true\n     *\n     * _.isRegExp('/abc/');\n     * // => false\n     */\n    var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;\n\n    /**\n     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754\n     * double precision number which isn't the result of a rounded unsafe integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.\n     * @example\n     *\n     * _.isSafeInteger(3);\n     * // => true\n     *\n     * _.isSafeInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isSafeInteger(Infinity);\n     * // => false\n     *\n     * _.isSafeInteger('3');\n     * // => false\n     */\n    function isSafeInteger(value) {\n      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Set` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     * @example\n     *\n     * _.isSet(new Set);\n     * // => true\n     *\n     * _.isSet(new WeakSet);\n     * // => false\n     */\n    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\n    /**\n     * Checks if `value` is classified as a `String` primitive or object.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n     * @example\n     *\n     * _.isString('abc');\n     * // => true\n     *\n     * _.isString(1);\n     * // => false\n     */\n    function isString(value) {\n      return typeof value == 'string' ||\n        (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Symbol` primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n     * @example\n     *\n     * _.isSymbol(Symbol.iterator);\n     * // => true\n     *\n     * _.isSymbol('abc');\n     * // => false\n     */\n    function isSymbol(value) {\n      return typeof value == 'symbol' ||\n        (isObjectLike(value) && baseGetTag(value) == symbolTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a typed array.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     * @example\n     *\n     * _.isTypedArray(new Uint8Array);\n     * // => true\n     *\n     * _.isTypedArray([]);\n     * // => false\n     */\n    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n    /**\n     * Checks if `value` is `undefined`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n     * @example\n     *\n     * _.isUndefined(void 0);\n     * // => true\n     *\n     * _.isUndefined(null);\n     * // => false\n     */\n    function isUndefined(value) {\n      return value === undefined;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakMap` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.\n     * @example\n     *\n     * _.isWeakMap(new WeakMap);\n     * // => true\n     *\n     * _.isWeakMap(new Map);\n     * // => false\n     */\n    function isWeakMap(value) {\n      return isObjectLike(value) && getTag(value) == weakMapTag;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakSet` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.\n     * @example\n     *\n     * _.isWeakSet(new WeakSet);\n     * // => true\n     *\n     * _.isWeakSet(new Set);\n     * // => false\n     */\n    function isWeakSet(value) {\n      return isObjectLike(value) && baseGetTag(value) == weakSetTag;\n    }\n\n    /**\n     * Checks if `value` is less than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     * @see _.gt\n     * @example\n     *\n     * _.lt(1, 3);\n     * // => true\n     *\n     * _.lt(3, 3);\n     * // => false\n     *\n     * _.lt(3, 1);\n     * // => false\n     */\n    var lt = createRelationalOperation(baseLt);\n\n    /**\n     * Checks if `value` is less than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than or equal to\n     *  `other`, else `false`.\n     * @see _.gte\n     * @example\n     *\n     * _.lte(1, 3);\n     * // => true\n     *\n     * _.lte(3, 3);\n     * // => true\n     *\n     * _.lte(3, 1);\n     * // => false\n     */\n    var lte = createRelationalOperation(function(value, other) {\n      return value <= other;\n    });\n\n    /**\n     * Converts `value` to an array.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the converted array.\n     * @example\n     *\n     * _.toArray({ 'a': 1, 'b': 2 });\n     * // => [1, 2]\n     *\n     * _.toArray('abc');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toArray(1);\n     * // => []\n     *\n     * _.toArray(null);\n     * // => []\n     */\n    function toArray(value) {\n      if (!value) {\n        return [];\n      }\n      if (isArrayLike(value)) {\n        return isString(value) ? stringToArray(value) : copyArray(value);\n      }\n      if (symIterator && value[symIterator]) {\n        return iteratorToArray(value[symIterator]());\n      }\n      var tag = getTag(value),\n          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);\n\n      return func(value);\n    }\n\n    /**\n     * Converts `value` to a finite number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.12.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted number.\n     * @example\n     *\n     * _.toFinite(3.2);\n     * // => 3.2\n     *\n     * _.toFinite(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toFinite(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toFinite('3.2');\n     * // => 3.2\n     */\n    function toFinite(value) {\n      if (!value) {\n        return value === 0 ? value : 0;\n      }\n      value = toNumber(value);\n      if (value === INFINITY || value === -INFINITY) {\n        var sign = (value < 0 ? -1 : 1);\n        return sign * MAX_INTEGER;\n      }\n      return value === value ? value : 0;\n    }\n\n    /**\n     * Converts `value` to an integer.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toInteger(3.2);\n     * // => 3\n     *\n     * _.toInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toInteger(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toInteger('3.2');\n     * // => 3\n     */\n    function toInteger(value) {\n      var result = toFinite(value),\n          remainder = result % 1;\n\n      return result === result ? (remainder ? result - remainder : result) : 0;\n    }\n\n    /**\n     * Converts `value` to an integer suitable for use as the length of an\n     * array-like object.\n     *\n     * **Note:** This method is based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toLength(3.2);\n     * // => 3\n     *\n     * _.toLength(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toLength(Infinity);\n     * // => 4294967295\n     *\n     * _.toLength('3.2');\n     * // => 3\n     */\n    function toLength(value) {\n      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;\n    }\n\n    /**\n     * Converts `value` to a number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     * @example\n     *\n     * _.toNumber(3.2);\n     * // => 3.2\n     *\n     * _.toNumber(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toNumber(Infinity);\n     * // => Infinity\n     *\n     * _.toNumber('3.2');\n     * // => 3.2\n     */\n    function toNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      if (isObject(value)) {\n        var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n        value = isObject(other) ? (other + '') : other;\n      }\n      if (typeof value != 'string') {\n        return value === 0 ? value : +value;\n      }\n      value = value.replace(reTrim, '');\n      var isBinary = reIsBinary.test(value);\n      return (isBinary || reIsOctal.test(value))\n        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n        : (reIsBadHex.test(value) ? NAN : +value);\n    }\n\n    /**\n     * Converts `value` to a plain object flattening inherited enumerable string\n     * keyed properties of `value` to own properties of the plain object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Object} Returns the converted plain object.\n     * @example\n     *\n     * function Foo() {\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.assign({ 'a': 1 }, new Foo);\n     * // => { 'a': 1, 'b': 2 }\n     *\n     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n     * // => { 'a': 1, 'b': 2, 'c': 3 }\n     */\n    function toPlainObject(value) {\n      return copyObject(value, keysIn(value));\n    }\n\n    /**\n     * Converts `value` to a safe integer. A safe integer can be compared and\n     * represented correctly.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toSafeInteger(3.2);\n     * // => 3\n     *\n     * _.toSafeInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toSafeInteger(Infinity);\n     * // => 9007199254740991\n     *\n     * _.toSafeInteger('3.2');\n     * // => 3\n     */\n    function toSafeInteger(value) {\n      return value\n        ? baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER)\n        : (value === 0 ? value : 0);\n    }\n\n    /**\n     * Converts `value` to a string. An empty string is returned for `null`\n     * and `undefined` values. The sign of `-0` is preserved.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.toString(null);\n     * // => ''\n     *\n     * _.toString(-0);\n     * // => '-0'\n     *\n     * _.toString([1, 2, 3]);\n     * // => '1,2,3'\n     */\n    function toString(value) {\n      return value == null ? '' : baseToString(value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Assigns own enumerable string keyed properties of source objects to the\n     * destination object. Source objects are applied from left to right.\n     * Subsequent sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object` and is loosely based on\n     * [`Object.assign`](https://mdn.io/Object/assign).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assignIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assign({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var assign = createAssigner(function(object, source) {\n      if (isPrototype(source) || isArrayLike(source)) {\n        copyObject(source, keys(source), object);\n        return;\n      }\n      for (var key in source) {\n        if (hasOwnProperty.call(source, key)) {\n          assignValue(object, key, source[key]);\n        }\n      }\n    });\n\n    /**\n     * This method is like `_.assign` except that it iterates over own and\n     * inherited source properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extend\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assign\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assignIn({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }\n     */\n    var assignIn = createAssigner(function(object, source) {\n      copyObject(source, keysIn(source), object);\n    });\n\n    /**\n     * This method is like `_.assignIn` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extendWith\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignInWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keysIn(source), object, customizer);\n    });\n\n    /**\n     * This method is like `_.assign` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignInWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keys(source), object, customizer);\n    });\n\n    /**\n     * Creates an array of values corresponding to `paths` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Array} Returns the picked values.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _.at(object, ['a[0].b.c', 'a[1]']);\n     * // => [3, 4]\n     */\n    var at = flatRest(baseAt);\n\n    /**\n     * Creates an object that inherits from the `prototype` object. If a\n     * `properties` object is given, its own enumerable string keyed properties\n     * are assigned to the created object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Object\n     * @param {Object} prototype The object to inherit from.\n     * @param {Object} [properties] The properties to assign to the object.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * function Circle() {\n     *   Shape.call(this);\n     * }\n     *\n     * Circle.prototype = _.create(Shape.prototype, {\n     *   'constructor': Circle\n     * });\n     *\n     * var circle = new Circle;\n     * circle instanceof Circle;\n     * // => true\n     *\n     * circle instanceof Shape;\n     * // => true\n     */\n    function create(prototype, properties) {\n      var result = baseCreate(prototype);\n      return properties == null ? result : baseAssign(result, properties);\n    }\n\n    /**\n     * Assigns own and inherited enumerable string keyed properties of source\n     * objects to the destination object for all destination properties that\n     * resolve to `undefined`. Source objects are applied from left to right.\n     * Once a property is set, additional values of the same property are ignored.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaultsDeep\n     * @example\n     *\n     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var defaults = baseRest(function(object, sources) {\n      object = Object(object);\n\n      var index = -1;\n      var length = sources.length;\n      var guard = length > 2 ? sources[2] : undefined;\n\n      if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n        length = 1;\n      }\n\n      while (++index < length) {\n        var source = sources[index];\n        var props = keysIn(source);\n        var propsIndex = -1;\n        var propsLength = props.length;\n\n        while (++propsIndex < propsLength) {\n          var key = props[propsIndex];\n          var value = object[key];\n\n          if (value === undefined ||\n              (eq(value, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n            object[key] = source[key];\n          }\n        }\n      }\n\n      return object;\n    });\n\n    /**\n     * This method is like `_.defaults` except that it recursively assigns\n     * default properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaults\n     * @example\n     *\n     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });\n     * // => { 'a': { 'b': 2, 'c': 3 } }\n     */\n    var defaultsDeep = baseRest(function(args) {\n      args.push(undefined, customDefaultsMerge);\n      return apply(mergeWith, undefined, args);\n    });\n\n    /**\n     * This method is like `_.find` except that it returns the key of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findKey(users, function(o) { return o.age < 40; });\n     * // => 'barney' (iteration order is not guaranteed)\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findKey(users, { 'age': 1, 'active': true });\n     * // => 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findKey(users, 'active');\n     * // => 'barney'\n     */\n    function findKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);\n    }\n\n    /**\n     * This method is like `_.findKey` except that it iterates over elements of\n     * a collection in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findLastKey(users, function(o) { return o.age < 40; });\n     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastKey(users, { 'age': 36, 'active': true });\n     * // => 'barney'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastKey(users, 'active');\n     * // => 'pebbles'\n     */\n    function findLastKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);\n    }\n\n    /**\n     * Iterates over own and inherited enumerable string keyed properties of an\n     * object and invokes `iteratee` for each property. The iteratee is invoked\n     * with three arguments: (value, key, object). Iteratee functions may exit\n     * iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forInRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forIn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).\n     */\n    function forIn(object, iteratee) {\n      return object == null\n        ? object\n        : baseFor(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * This method is like `_.forIn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forInRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.\n     */\n    function forInRight(object, iteratee) {\n      return object == null\n        ? object\n        : baseForRight(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * Iterates over own enumerable string keyed properties of an object and\n     * invokes `iteratee` for each property. The iteratee is invoked with three\n     * arguments: (value, key, object). Iteratee functions may exit iteration\n     * early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwnRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forOwn(object, iteratee) {\n      return object && baseForOwn(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forOwn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwnRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.\n     */\n    function forOwnRight(object, iteratee) {\n      return object && baseForOwnRight(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an array of function property names from own enumerable properties\n     * of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functionsIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functions(new Foo);\n     * // => ['a', 'b']\n     */\n    function functions(object) {\n      return object == null ? [] : baseFunctions(object, keys(object));\n    }\n\n    /**\n     * Creates an array of function property names from own and inherited\n     * enumerable properties of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functions\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functionsIn(new Foo);\n     * // => ['a', 'b', 'c']\n     */\n    function functionsIn(object) {\n      return object == null ? [] : baseFunctions(object, keysIn(object));\n    }\n\n    /**\n     * Gets the value at `path` of `object`. If the resolved value is\n     * `undefined`, the `defaultValue` is returned in its place.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.get(object, 'a[0].b.c');\n     * // => 3\n     *\n     * _.get(object, ['a', '0', 'b', 'c']);\n     * // => 3\n     *\n     * _.get(object, 'a.b.c', 'default');\n     * // => 'default'\n     */\n    function get(object, path, defaultValue) {\n      var result = object == null ? undefined : baseGet(object, path);\n      return result === undefined ? defaultValue : result;\n    }\n\n    /**\n     * Checks if `path` is a direct property of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = { 'a': { 'b': 2 } };\n     * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.has(object, 'a');\n     * // => true\n     *\n     * _.has(object, 'a.b');\n     * // => true\n     *\n     * _.has(object, ['a', 'b']);\n     * // => true\n     *\n     * _.has(other, 'a');\n     * // => false\n     */\n    function has(object, path) {\n      return object != null && hasPath(object, path, baseHas);\n    }\n\n    /**\n     * Checks if `path` is a direct or inherited property of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.hasIn(object, 'a');\n     * // => true\n     *\n     * _.hasIn(object, 'a.b');\n     * // => true\n     *\n     * _.hasIn(object, ['a', 'b']);\n     * // => true\n     *\n     * _.hasIn(object, 'b');\n     * // => false\n     */\n    function hasIn(object, path) {\n      return object != null && hasPath(object, path, baseHasIn);\n    }\n\n    /**\n     * Creates an object composed of the inverted keys and values of `object`.\n     * If `object` contains duplicate values, subsequent values overwrite\n     * property assignments of previous values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invert(object);\n     * // => { '1': 'c', '2': 'b' }\n     */\n    var invert = createInverter(function(result, value, key) {\n      if (value != null &&\n          typeof value.toString != 'function') {\n        value = nativeObjectToString.call(value);\n      }\n\n      result[value] = key;\n    }, constant(identity));\n\n    /**\n     * This method is like `_.invert` except that the inverted object is generated\n     * from the results of running each element of `object` thru `iteratee`. The\n     * corresponding inverted value of each inverted key is an array of keys\n     * responsible for generating the inverted value. The iteratee is invoked\n     * with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invertBy(object);\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     *\n     * _.invertBy(object, function(value) {\n     *   return 'group' + value;\n     * });\n     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }\n     */\n    var invertBy = createInverter(function(result, value, key) {\n      if (value != null &&\n          typeof value.toString != 'function') {\n        value = nativeObjectToString.call(value);\n      }\n\n      if (hasOwnProperty.call(result, value)) {\n        result[value].push(key);\n      } else {\n        result[value] = [key];\n      }\n    }, getIteratee);\n\n    /**\n     * Invokes the method at `path` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };\n     *\n     * _.invoke(object, 'a[0].b.c.slice', 1, 3);\n     * // => [2, 3]\n     */\n    var invoke = baseRest(baseInvoke);\n\n    /**\n     * Creates an array of the own enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects. See the\n     * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * for more details.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keys(new Foo);\n     * // => ['a', 'b'] (iteration order is not guaranteed)\n     *\n     * _.keys('hi');\n     * // => ['0', '1']\n     */\n    function keys(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keysIn(new Foo);\n     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n     */\n    function keysIn(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n    }\n\n    /**\n     * The opposite of `_.mapValues`; this method creates an object with the\n     * same values as `object` and keys generated by running each own enumerable\n     * string keyed property of `object` thru `iteratee`. The iteratee is invoked\n     * with three arguments: (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapValues\n     * @example\n     *\n     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   return key + value;\n     * });\n     * // => { 'a1': 1, 'b2': 2 }\n     */\n    function mapKeys(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, iteratee(value, key, object), value);\n      });\n      return result;\n    }\n\n    /**\n     * Creates an object with the same keys as `object` and values generated\n     * by running each own enumerable string keyed property of `object` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapKeys\n     * @example\n     *\n     * var users = {\n     *   'fred':    { 'user': 'fred',    'age': 40 },\n     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n     * };\n     *\n     * _.mapValues(users, function(o) { return o.age; });\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.mapValues(users, 'age');\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     */\n    function mapValues(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, key, iteratee(value, key, object));\n      });\n      return result;\n    }\n\n    /**\n     * This method is like `_.assign` except that it recursively merges own and\n     * inherited enumerable string keyed properties of source objects into the\n     * destination object. Source properties that resolve to `undefined` are\n     * skipped if a destination value exists. Array and plain object properties\n     * are merged recursively. Other objects and value types are overridden by\n     * assignment. Source objects are applied from left to right. Subsequent\n     * sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {\n     *   'a': [{ 'b': 2 }, { 'd': 4 }]\n     * };\n     *\n     * var other = {\n     *   'a': [{ 'c': 3 }, { 'e': 5 }]\n     * };\n     *\n     * _.merge(object, other);\n     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n     */\n    var merge = createAssigner(function(object, source, srcIndex) {\n      baseMerge(object, source, srcIndex);\n    });\n\n    /**\n     * This method is like `_.merge` except that it accepts `customizer` which\n     * is invoked to produce the merged values of the destination and source\n     * properties. If `customizer` returns `undefined`, merging is handled by the\n     * method instead. The `customizer` is invoked with six arguments:\n     * (objValue, srcValue, key, object, source, stack).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (_.isArray(objValue)) {\n     *     return objValue.concat(srcValue);\n     *   }\n     * }\n     *\n     * var object = { 'a': [1], 'b': [2] };\n     * var other = { 'a': [3], 'b': [4] };\n     *\n     * _.mergeWith(object, other, customizer);\n     * // => { 'a': [1, 3], 'b': [2, 4] }\n     */\n    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {\n      baseMerge(object, source, srcIndex, customizer);\n    });\n\n    /**\n     * The opposite of `_.pick`; this method creates an object composed of the\n     * own and inherited enumerable property paths of `object` that are not omitted.\n     *\n     * **Note:** This method is considerably slower than `_.pick`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to omit.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omit(object, ['a', 'c']);\n     * // => { 'b': '2' }\n     */\n    var omit = flatRest(function(object, paths) {\n      var result = {};\n      if (object == null) {\n        return result;\n      }\n      var isDeep = false;\n      paths = arrayMap(paths, function(path) {\n        path = castPath(path, object);\n        isDeep || (isDeep = path.length > 1);\n        return path;\n      });\n      copyObject(object, getAllKeysIn(object), result);\n      if (isDeep) {\n        result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);\n      }\n      var length = paths.length;\n      while (length--) {\n        baseUnset(result, paths[length]);\n      }\n      return result;\n    });\n\n    /**\n     * The opposite of `_.pickBy`; this method creates an object composed of\n     * the own and inherited enumerable string keyed properties of `object` that\n     * `predicate` doesn't return truthy for. The predicate is invoked with two\n     * arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omitBy(object, _.isNumber);\n     * // => { 'b': '2' }\n     */\n    function omitBy(object, predicate) {\n      return pickBy(object, negate(getIteratee(predicate)));\n    }\n\n    /**\n     * Creates an object composed of the picked `object` properties.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pick(object, ['a', 'c']);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var pick = flatRest(function(object, paths) {\n      return object == null ? {} : basePick(object, paths);\n    });\n\n    /**\n     * Creates an object composed of the `object` properties `predicate` returns\n     * truthy for. The predicate is invoked with two arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pickBy(object, _.isNumber);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    function pickBy(object, predicate) {\n      if (object == null) {\n        return {};\n      }\n      var props = arrayMap(getAllKeysIn(object), function(prop) {\n        return [prop];\n      });\n      predicate = getIteratee(predicate);\n      return basePickBy(object, props, function(value, path) {\n        return predicate(value, path[0]);\n      });\n    }\n\n    /**\n     * This method is like `_.get` except that if the resolved value is a\n     * function it's invoked with the `this` binding of its parent object and\n     * its result is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to resolve.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n     *\n     * _.result(object, 'a[0].b.c1');\n     * // => 3\n     *\n     * _.result(object, 'a[0].b.c2');\n     * // => 4\n     *\n     * _.result(object, 'a[0].b.c3', 'default');\n     * // => 'default'\n     *\n     * _.result(object, 'a[0].b.c3', _.constant('default'));\n     * // => 'default'\n     */\n    function result(object, path, defaultValue) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length;\n\n      // Ensure the loop is entered when path is empty.\n      if (!length) {\n        length = 1;\n        object = undefined;\n      }\n      while (++index < length) {\n        var value = object == null ? undefined : object[toKey(path[index])];\n        if (value === undefined) {\n          index = length;\n          value = defaultValue;\n        }\n        object = isFunction(value) ? value.call(object) : value;\n      }\n      return object;\n    }\n\n    /**\n     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\n     * it's created. Arrays are created for missing index properties while objects\n     * are created for all other missing properties. Use `_.setWith` to customize\n     * `path` creation.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.set(object, 'a[0].b.c', 4);\n     * console.log(object.a[0].b.c);\n     * // => 4\n     *\n     * _.set(object, ['x', '0', 'y', 'z'], 5);\n     * console.log(object.x[0].y.z);\n     * // => 5\n     */\n    function set(object, path, value) {\n      return object == null ? object : baseSet(object, path, value);\n    }\n\n    /**\n     * This method is like `_.set` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.setWith(object, '[0][1]', 'a', Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function setWith(object, path, value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseSet(object, path, value, customizer);\n    }\n\n    /**\n     * Creates an array of own enumerable string keyed-value pairs for `object`\n     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its\n     * entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entries\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairs(new Foo);\n     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)\n     */\n    var toPairs = createToPairs(keys);\n\n    /**\n     * Creates an array of own and inherited enumerable string keyed-value pairs\n     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map\n     * or set, its entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entriesIn\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairsIn(new Foo);\n     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)\n     */\n    var toPairsIn = createToPairs(keysIn);\n\n    /**\n     * An alternative to `_.reduce`; this method transforms `object` to a new\n     * `accumulator` object which is the result of running each of its own\n     * enumerable string keyed properties thru `iteratee`, with each invocation\n     * potentially mutating the `accumulator` object. If `accumulator` is not\n     * provided, a new object with the same `[[Prototype]]` will be used. The\n     * iteratee is invoked with four arguments: (accumulator, value, key, object).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The custom accumulator value.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.transform([2, 3, 4], function(result, n) {\n     *   result.push(n *= n);\n     *   return n % 2 == 0;\n     * }, []);\n     * // => [4, 9]\n     *\n     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     */\n    function transform(object, iteratee, accumulator) {\n      var isArr = isArray(object),\n          isArrLike = isArr || isBuffer(object) || isTypedArray(object);\n\n      iteratee = getIteratee(iteratee, 4);\n      if (accumulator == null) {\n        var Ctor = object && object.constructor;\n        if (isArrLike) {\n          accumulator = isArr ? new Ctor : [];\n        }\n        else if (isObject(object)) {\n          accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};\n        }\n        else {\n          accumulator = {};\n        }\n      }\n      (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {\n        return iteratee(accumulator, value, index, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * Removes the property at `path` of `object`.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 7 } }] };\n     * _.unset(object, 'a[0].b.c');\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     *\n     * _.unset(object, ['a', '0', 'b', 'c']);\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     */\n    function unset(object, path) {\n      return object == null ? true : baseUnset(object, path);\n    }\n\n    /**\n     * This method is like `_.set` except that accepts `updater` to produce the\n     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`\n     * is invoked with one argument: (value).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.update(object, 'a[0].b.c', function(n) { return n * n; });\n     * console.log(object.a[0].b.c);\n     * // => 9\n     *\n     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });\n     * console.log(object.x[0].y.z);\n     * // => 0\n     */\n    function update(object, path, updater) {\n      return object == null ? object : baseUpdate(object, path, castFunction(updater));\n    }\n\n    /**\n     * This method is like `_.update` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.updateWith(object, '[0][1]', _.constant('a'), Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function updateWith(object, path, updater, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);\n    }\n\n    /**\n     * Creates an array of the own enumerable string keyed property values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.values(new Foo);\n     * // => [1, 2] (iteration order is not guaranteed)\n     *\n     * _.values('hi');\n     * // => ['h', 'i']\n     */\n    function values(object) {\n      return object == null ? [] : baseValues(object, keys(object));\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable string keyed property\n     * values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.valuesIn(new Foo);\n     * // => [1, 2, 3] (iteration order is not guaranteed)\n     */\n    function valuesIn(object) {\n      return object == null ? [] : baseValues(object, keysIn(object));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Clamps `number` within the inclusive `lower` and `upper` bounds.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Number\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     * @example\n     *\n     * _.clamp(-10, -5, 5);\n     * // => -5\n     *\n     * _.clamp(10, -5, 5);\n     * // => 5\n     */\n    function clamp(number, lower, upper) {\n      if (upper === undefined) {\n        upper = lower;\n        lower = undefined;\n      }\n      if (upper !== undefined) {\n        upper = toNumber(upper);\n        upper = upper === upper ? upper : 0;\n      }\n      if (lower !== undefined) {\n        lower = toNumber(lower);\n        lower = lower === lower ? lower : 0;\n      }\n      return baseClamp(toNumber(number), lower, upper);\n    }\n\n    /**\n     * Checks if `n` is between `start` and up to, but not including, `end`. If\n     * `end` is not specified, it's set to `start` with `start` then set to `0`.\n     * If `start` is greater than `end` the params are swapped to support\n     * negative ranges.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.3.0\n     * @category Number\n     * @param {number} number The number to check.\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     * @see _.range, _.rangeRight\n     * @example\n     *\n     * _.inRange(3, 2, 4);\n     * // => true\n     *\n     * _.inRange(4, 8);\n     * // => true\n     *\n     * _.inRange(4, 2);\n     * // => false\n     *\n     * _.inRange(2, 2);\n     * // => false\n     *\n     * _.inRange(1.2, 2);\n     * // => true\n     *\n     * _.inRange(5.2, 4);\n     * // => false\n     *\n     * _.inRange(-3, -2, -6);\n     * // => true\n     */\n    function inRange(number, start, end) {\n      start = toFinite(start);\n      if (end === undefined) {\n        end = start;\n        start = 0;\n      } else {\n        end = toFinite(end);\n      }\n      number = toNumber(number);\n      return baseInRange(number, start, end);\n    }\n\n    /**\n     * Produces a random number between the inclusive `lower` and `upper` bounds.\n     * If only one argument is provided a number between `0` and the given number\n     * is returned. If `floating` is `true`, or either `lower` or `upper` are\n     * floats, a floating-point number is returned instead of an integer.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Number\n     * @param {number} [lower=0] The lower bound.\n     * @param {number} [upper=1] The upper bound.\n     * @param {boolean} [floating] Specify returning a floating-point number.\n     * @returns {number} Returns the random number.\n     * @example\n     *\n     * _.random(0, 5);\n     * // => an integer between 0 and 5\n     *\n     * _.random(5);\n     * // => also an integer between 0 and 5\n     *\n     * _.random(5, true);\n     * // => a floating-point number between 0 and 5\n     *\n     * _.random(1.2, 5.2);\n     * // => a floating-point number between 1.2 and 5.2\n     */\n    function random(lower, upper, floating) {\n      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n        upper = floating = undefined;\n      }\n      if (floating === undefined) {\n        if (typeof upper == 'boolean') {\n          floating = upper;\n          upper = undefined;\n        }\n        else if (typeof lower == 'boolean') {\n          floating = lower;\n          lower = undefined;\n        }\n      }\n      if (lower === undefined && upper === undefined) {\n        lower = 0;\n        upper = 1;\n      }\n      else {\n        lower = toFinite(lower);\n        if (upper === undefined) {\n          upper = lower;\n          lower = 0;\n        } else {\n          upper = toFinite(upper);\n        }\n      }\n      if (lower > upper) {\n        var temp = lower;\n        lower = upper;\n        upper = temp;\n      }\n      if (floating || lower % 1 || upper % 1) {\n        var rand = nativeRandom();\n        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n      }\n      return baseRandom(lower, upper);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the camel cased string.\n     * @example\n     *\n     * _.camelCase('Foo Bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('--foo-bar--');\n     * // => 'fooBar'\n     *\n     * _.camelCase('__FOO_BAR__');\n     * // => 'fooBar'\n     */\n    var camelCase = createCompounder(function(result, word, index) {\n      word = word.toLowerCase();\n      return result + (index ? capitalize(word) : word);\n    });\n\n    /**\n     * Converts the first character of `string` to upper case and the remaining\n     * to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to capitalize.\n     * @returns {string} Returns the capitalized string.\n     * @example\n     *\n     * _.capitalize('FRED');\n     * // => 'Fred'\n     */\n    function capitalize(string) {\n      return upperFirst(toString(string).toLowerCase());\n    }\n\n    /**\n     * Deburrs `string` by converting\n     * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n     * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n     * letters to basic Latin letters and removing\n     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to deburr.\n     * @returns {string} Returns the deburred string.\n     * @example\n     *\n     * _.deburr('déjà vu');\n     * // => 'deja vu'\n     */\n    function deburr(string) {\n      string = toString(string);\n      return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n    }\n\n    /**\n     * Checks if `string` ends with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=string.length] The position to search up to.\n     * @returns {boolean} Returns `true` if `string` ends with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.endsWith('abc', 'c');\n     * // => true\n     *\n     * _.endsWith('abc', 'b');\n     * // => false\n     *\n     * _.endsWith('abc', 'b', 2);\n     * // => true\n     */\n    function endsWith(string, target, position) {\n      string = toString(string);\n      target = baseToString(target);\n\n      var length = string.length;\n      position = position === undefined\n        ? length\n        : baseClamp(toInteger(position), 0, length);\n\n      var end = position;\n      position -= target.length;\n      return position >= 0 && string.slice(position, end) == target;\n    }\n\n    /**\n     * Converts the characters \"&\", \"<\", \">\", '\"', and \"'\" in `string` to their\n     * corresponding HTML entities.\n     *\n     * **Note:** No other characters are escaped. To escape additional\n     * characters use a third-party library like [_he_](https://mths.be/he).\n     *\n     * Though the \">\" character is escaped for symmetry, characters like\n     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n     * unless they're part of a tag or unquoted attribute value. See\n     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n     * (under \"semi-related fun fact\") for more details.\n     *\n     * When working with HTML you should always\n     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce\n     * XSS vectors.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escape('fred, barney, & pebbles');\n     * // => 'fred, barney, &amp; pebbles'\n     */\n    function escape(string) {\n      string = toString(string);\n      return (string && reHasUnescapedHtml.test(string))\n        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n     * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escapeRegExp('[lodash](https://lodash.com/)');\n     * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n     */\n    function escapeRegExp(string) {\n      string = toString(string);\n      return (string && reHasRegExpChar.test(string))\n        ? string.replace(reRegExpChar, '\\\\$&')\n        : string;\n    }\n\n    /**\n     * Converts `string` to\n     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the kebab cased string.\n     * @example\n     *\n     * _.kebabCase('Foo Bar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('fooBar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('__FOO_BAR__');\n     * // => 'foo-bar'\n     */\n    var kebabCase = createCompounder(function(result, word, index) {\n      return result + (index ? '-' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts `string`, as space separated words, to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.lowerCase('--Foo-Bar--');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('fooBar');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('__FOO_BAR__');\n     * // => 'foo bar'\n     */\n    var lowerCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts the first character of `string` to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.lowerFirst('Fred');\n     * // => 'fred'\n     *\n     * _.lowerFirst('FRED');\n     * // => 'fRED'\n     */\n    var lowerFirst = createCaseFirst('toLowerCase');\n\n    /**\n     * Pads `string` on the left and right sides if it's shorter than `length`.\n     * Padding characters are truncated if they can't be evenly divided by `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.pad('abc', 8);\n     * // => '  abc   '\n     *\n     * _.pad('abc', 8, '_-');\n     * // => '_-abc_-_'\n     *\n     * _.pad('abc', 3);\n     * // => 'abc'\n     */\n    function pad(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      if (!length || strLength >= length) {\n        return string;\n      }\n      var mid = (length - strLength) / 2;\n      return (\n        createPadding(nativeFloor(mid), chars) +\n        string +\n        createPadding(nativeCeil(mid), chars)\n      );\n    }\n\n    /**\n     * Pads `string` on the right side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padEnd('abc', 6);\n     * // => 'abc   '\n     *\n     * _.padEnd('abc', 6, '_-');\n     * // => 'abc_-_'\n     *\n     * _.padEnd('abc', 3);\n     * // => 'abc'\n     */\n    function padEnd(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (string + createPadding(length - strLength, chars))\n        : string;\n    }\n\n    /**\n     * Pads `string` on the left side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padStart('abc', 6);\n     * // => '   abc'\n     *\n     * _.padStart('abc', 6, '_-');\n     * // => '_-_abc'\n     *\n     * _.padStart('abc', 3);\n     * // => 'abc'\n     */\n    function padStart(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (createPadding(length - strLength, chars) + string)\n        : string;\n    }\n\n    /**\n     * Converts `string` to an integer of the specified radix. If `radix` is\n     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a\n     * hexadecimal, in which case a `radix` of `16` is used.\n     *\n     * **Note:** This method aligns with the\n     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category String\n     * @param {string} string The string to convert.\n     * @param {number} [radix=10] The radix to interpret `value` by.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.parseInt('08');\n     * // => 8\n     *\n     * _.map(['6', '08', '10'], _.parseInt);\n     * // => [6, 8, 10]\n     */\n    function parseInt(string, radix, guard) {\n      if (guard || radix == null) {\n        radix = 0;\n      } else if (radix) {\n        radix = +radix;\n      }\n      return nativeParseInt(toString(string).replace(reTrimStart, ''), radix || 0);\n    }\n\n    /**\n     * Repeats the given string `n` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to repeat.\n     * @param {number} [n=1] The number of times to repeat the string.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the repeated string.\n     * @example\n     *\n     * _.repeat('*', 3);\n     * // => '***'\n     *\n     * _.repeat('abc', 2);\n     * // => 'abcabc'\n     *\n     * _.repeat('abc', 0);\n     * // => ''\n     */\n    function repeat(string, n, guard) {\n      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      return baseRepeat(toString(string), n);\n    }\n\n    /**\n     * Replaces matches for `pattern` in `string` with `replacement`.\n     *\n     * **Note:** This method is based on\n     * [`String#replace`](https://mdn.io/String/replace).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to modify.\n     * @param {RegExp|string} pattern The pattern to replace.\n     * @param {Function|string} replacement The match replacement.\n     * @returns {string} Returns the modified string.\n     * @example\n     *\n     * _.replace('Hi Fred', 'Fred', 'Barney');\n     * // => 'Hi Barney'\n     */\n    function replace() {\n      var args = arguments,\n          string = toString(args[0]);\n\n      return args.length < 3 ? string : string.replace(args[1], args[2]);\n    }\n\n    /**\n     * Converts `string` to\n     * [snake case](https://en.wikipedia.org/wiki/Snake_case).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the snake cased string.\n     * @example\n     *\n     * _.snakeCase('Foo Bar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('fooBar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('--FOO-BAR--');\n     * // => 'foo_bar'\n     */\n    var snakeCase = createCompounder(function(result, word, index) {\n      return result + (index ? '_' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Splits `string` by `separator`.\n     *\n     * **Note:** This method is based on\n     * [`String#split`](https://mdn.io/String/split).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to split.\n     * @param {RegExp|string} separator The separator pattern to split by.\n     * @param {number} [limit] The length to truncate results to.\n     * @returns {Array} Returns the string segments.\n     * @example\n     *\n     * _.split('a-b-c', '-', 2);\n     * // => ['a', 'b']\n     */\n    function split(string, separator, limit) {\n      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {\n        separator = limit = undefined;\n      }\n      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;\n      if (!limit) {\n        return [];\n      }\n      string = toString(string);\n      if (string && (\n            typeof separator == 'string' ||\n            (separator != null && !isRegExp(separator))\n          )) {\n        separator = baseToString(separator);\n        if (!separator && hasUnicode(string)) {\n          return castSlice(stringToArray(string), 0, limit);\n        }\n      }\n      return string.split(separator, limit);\n    }\n\n    /**\n     * Converts `string` to\n     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.1.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the start cased string.\n     * @example\n     *\n     * _.startCase('--foo-bar--');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('fooBar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('__FOO_BAR__');\n     * // => 'FOO BAR'\n     */\n    var startCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + upperFirst(word);\n    });\n\n    /**\n     * Checks if `string` starts with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=0] The position to search from.\n     * @returns {boolean} Returns `true` if `string` starts with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.startsWith('abc', 'a');\n     * // => true\n     *\n     * _.startsWith('abc', 'b');\n     * // => false\n     *\n     * _.startsWith('abc', 'b', 1);\n     * // => true\n     */\n    function startsWith(string, target, position) {\n      string = toString(string);\n      position = position == null\n        ? 0\n        : baseClamp(toInteger(position), 0, string.length);\n\n      target = baseToString(target);\n      return string.slice(position, position + target.length) == target;\n    }\n\n    /**\n     * Creates a compiled template function that can interpolate data properties\n     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n     * properties may be accessed as free variables in the template. If a setting\n     * object is given, it takes precedence over `_.templateSettings` values.\n     *\n     * **Note:** In the development build `_.template` utilizes\n     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n     * for easier debugging.\n     *\n     * For more information on precompiling templates see\n     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n     *\n     * For more information on Chrome extension sandboxes see\n     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The template string.\n     * @param {Object} [options={}] The options object.\n     * @param {RegExp} [options.escape=_.templateSettings.escape]\n     *  The HTML \"escape\" delimiter.\n     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]\n     *  The \"evaluate\" delimiter.\n     * @param {Object} [options.imports=_.templateSettings.imports]\n     *  An object to import into the template as free variables.\n     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]\n     *  The \"interpolate\" delimiter.\n     * @param {string} [options.sourceURL='lodash.templateSources[n]']\n     *  The sourceURL of the compiled template.\n     * @param {string} [options.variable='obj']\n     *  The data object variable name.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the compiled template function.\n     * @example\n     *\n     * // Use the \"interpolate\" delimiter to create a compiled template.\n     * var compiled = _.template('hello <%= user %>!');\n     * compiled({ 'user': 'fred' });\n     * // => 'hello fred!'\n     *\n     * // Use the HTML \"escape\" delimiter to escape data property values.\n     * var compiled = _.template('<b><%- value %></b>');\n     * compiled({ 'value': '<script>' });\n     * // => '<b>&lt;script&gt;</b>'\n     *\n     * // Use the \"evaluate\" delimiter to execute JavaScript and generate HTML.\n     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the internal `print` function in \"evaluate\" delimiters.\n     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n     * compiled({ 'user': 'barney' });\n     * // => 'hello barney!'\n     *\n     * // Use the ES template literal delimiter as an \"interpolate\" delimiter.\n     * // Disable support by replacing the \"interpolate\" delimiter.\n     * var compiled = _.template('hello ${ user }!');\n     * compiled({ 'user': 'pebbles' });\n     * // => 'hello pebbles!'\n     *\n     * // Use backslashes to treat delimiters as plain text.\n     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n     * compiled({ 'value': 'ignored' });\n     * // => '<%- value %>'\n     *\n     * // Use the `imports` option to import `jQuery` as `jq`.\n     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the `sourceURL` option to specify a custom sourceURL for the template.\n     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n     * compiled(data);\n     * // => Find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector.\n     *\n     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.\n     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n     * compiled.source;\n     * // => function(data) {\n     * //   var __t, __p = '';\n     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n     * //   return __p;\n     * // }\n     *\n     * // Use custom template delimiters.\n     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n     * var compiled = _.template('hello {{ user }}!');\n     * compiled({ 'user': 'mustache' });\n     * // => 'hello mustache!'\n     *\n     * // Use the `source` property to inline compiled templates for meaningful\n     * // line numbers in error messages and stack traces.\n     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\\\n     *   var JST = {\\\n     *     \"main\": ' + _.template(mainText).source + '\\\n     *   };\\\n     * ');\n     */\n    function template(string, options, guard) {\n      // Based on John Resig's `tmpl` implementation\n      // (http://ejohn.org/blog/javascript-micro-templating/)\n      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n      var settings = lodash.templateSettings;\n\n      if (guard && isIterateeCall(string, options, guard)) {\n        options = undefined;\n      }\n      string = toString(string);\n      options = assignInWith({}, options, settings, customDefaultsAssignIn);\n\n      var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn),\n          importsKeys = keys(imports),\n          importsValues = baseValues(imports, importsKeys);\n\n      var isEscaping,\n          isEvaluating,\n          index = 0,\n          interpolate = options.interpolate || reNoMatch,\n          source = \"__p += '\";\n\n      // Compile the regexp to match each delimiter.\n      var reDelimiters = RegExp(\n        (options.escape || reNoMatch).source + '|' +\n        interpolate.source + '|' +\n        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n        (options.evaluate || reNoMatch).source + '|$'\n      , 'g');\n\n      // Use a sourceURL for easier debugging.\n      var sourceURL = '//# sourceURL=' +\n        ('sourceURL' in options\n          ? options.sourceURL\n          : ('lodash.templateSources[' + (++templateCounter) + ']')\n        ) + '\\n';\n\n      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n        interpolateValue || (interpolateValue = esTemplateValue);\n\n        // Escape characters that can't be included in string literals.\n        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n        // Replace delimiters with snippets.\n        if (escapeValue) {\n          isEscaping = true;\n          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n        }\n        if (evaluateValue) {\n          isEvaluating = true;\n          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n        }\n        if (interpolateValue) {\n          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n        }\n        index = offset + match.length;\n\n        // The JS engine embedded in Adobe products needs `match` returned in\n        // order to produce the correct `offset` value.\n        return match;\n      });\n\n      source += \"';\\n\";\n\n      // If `variable` is not specified wrap a with-statement around the generated\n      // code to add the data object to the top of the scope chain.\n      var variable = options.variable;\n      if (!variable) {\n        source = 'with (obj) {\\n' + source + '\\n}\\n';\n      }\n      // Cleanup code by stripping empty strings.\n      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n        .replace(reEmptyStringMiddle, '$1')\n        .replace(reEmptyStringTrailing, '$1;');\n\n      // Frame code as the function body.\n      source = 'function(' + (variable || 'obj') + ') {\\n' +\n        (variable\n          ? ''\n          : 'obj || (obj = {});\\n'\n        ) +\n        \"var __t, __p = ''\" +\n        (isEscaping\n           ? ', __e = _.escape'\n           : ''\n        ) +\n        (isEvaluating\n          ? ', __j = Array.prototype.join;\\n' +\n            \"function print() { __p += __j.call(arguments, '') }\\n\"\n          : ';\\n'\n        ) +\n        source +\n        'return __p\\n}';\n\n      var result = attempt(function() {\n        return Function(importsKeys, sourceURL + 'return ' + source)\n          .apply(undefined, importsValues);\n      });\n\n      // Provide the compiled function's source by its `toString` method or\n      // the `source` property as a convenience for inlining compiled templates.\n      result.source = source;\n      if (isError(result)) {\n        throw result;\n      }\n      return result;\n    }\n\n    /**\n     * Converts `string`, as a whole, to lower case just like\n     * [String#toLowerCase](https://mdn.io/toLowerCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.toLower('--Foo-Bar--');\n     * // => '--foo-bar--'\n     *\n     * _.toLower('fooBar');\n     * // => 'foobar'\n     *\n     * _.toLower('__FOO_BAR__');\n     * // => '__foo_bar__'\n     */\n    function toLower(value) {\n      return toString(value).toLowerCase();\n    }\n\n    /**\n     * Converts `string`, as a whole, to upper case just like\n     * [String#toUpperCase](https://mdn.io/toUpperCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.toUpper('--foo-bar--');\n     * // => '--FOO-BAR--'\n     *\n     * _.toUpper('fooBar');\n     * // => 'FOOBAR'\n     *\n     * _.toUpper('__foo_bar__');\n     * // => '__FOO_BAR__'\n     */\n    function toUpper(value) {\n      return toString(value).toUpperCase();\n    }\n\n    /**\n     * Removes leading and trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trim('  abc  ');\n     * // => 'abc'\n     *\n     * _.trim('-_-abc-_-', '_-');\n     * // => 'abc'\n     *\n     * _.map(['  foo  ', '  bar  '], _.trim);\n     * // => ['foo', 'bar']\n     */\n    function trim(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrim, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          chrSymbols = stringToArray(chars),\n          start = charsStartIndex(strSymbols, chrSymbols),\n          end = charsEndIndex(strSymbols, chrSymbols) + 1;\n\n      return castSlice(strSymbols, start, end).join('');\n    }\n\n    /**\n     * Removes trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimEnd('  abc  ');\n     * // => '  abc'\n     *\n     * _.trimEnd('-_-abc-_-', '_-');\n     * // => '-_-abc'\n     */\n    function trimEnd(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimEnd, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;\n\n      return castSlice(strSymbols, 0, end).join('');\n    }\n\n    /**\n     * Removes leading whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimStart('  abc  ');\n     * // => 'abc  '\n     *\n     * _.trimStart('-_-abc-_-', '_-');\n     * // => 'abc-_-'\n     */\n    function trimStart(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimStart, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          start = charsStartIndex(strSymbols, stringToArray(chars));\n\n      return castSlice(strSymbols, start).join('');\n    }\n\n    /**\n     * Truncates `string` if it's longer than the given maximum string length.\n     * The last characters of the truncated string are replaced with the omission\n     * string which defaults to \"...\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to truncate.\n     * @param {Object} [options={}] The options object.\n     * @param {number} [options.length=30] The maximum string length.\n     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n     * @returns {string} Returns the truncated string.\n     * @example\n     *\n     * _.truncate('hi-diddly-ho there, neighborino');\n     * // => 'hi-diddly-ho there, neighbo...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': ' '\n     * });\n     * // => 'hi-diddly-ho there,...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': /,? +/\n     * });\n     * // => 'hi-diddly-ho there...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'omission': ' [...]'\n     * });\n     * // => 'hi-diddly-ho there, neig [...]'\n     */\n    function truncate(string, options) {\n      var length = DEFAULT_TRUNC_LENGTH,\n          omission = DEFAULT_TRUNC_OMISSION;\n\n      if (isObject(options)) {\n        var separator = 'separator' in options ? options.separator : separator;\n        length = 'length' in options ? toInteger(options.length) : length;\n        omission = 'omission' in options ? baseToString(options.omission) : omission;\n      }\n      string = toString(string);\n\n      var strLength = string.length;\n      if (hasUnicode(string)) {\n        var strSymbols = stringToArray(string);\n        strLength = strSymbols.length;\n      }\n      if (length >= strLength) {\n        return string;\n      }\n      var end = length - stringSize(omission);\n      if (end < 1) {\n        return omission;\n      }\n      var result = strSymbols\n        ? castSlice(strSymbols, 0, end).join('')\n        : string.slice(0, end);\n\n      if (separator === undefined) {\n        return result + omission;\n      }\n      if (strSymbols) {\n        end += (result.length - end);\n      }\n      if (isRegExp(separator)) {\n        if (string.slice(end).search(separator)) {\n          var match,\n              substring = result;\n\n          if (!separator.global) {\n            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');\n          }\n          separator.lastIndex = 0;\n          while ((match = separator.exec(substring))) {\n            var newEnd = match.index;\n          }\n          result = result.slice(0, newEnd === undefined ? end : newEnd);\n        }\n      } else if (string.indexOf(baseToString(separator), end) != end) {\n        var index = result.lastIndexOf(separator);\n        if (index > -1) {\n          result = result.slice(0, index);\n        }\n      }\n      return result + omission;\n    }\n\n    /**\n     * The inverse of `_.escape`; this method converts the HTML entities\n     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to\n     * their corresponding characters.\n     *\n     * **Note:** No other HTML entities are unescaped. To unescape additional\n     * HTML entities use a third-party library like [_he_](https://mths.be/he).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.6.0\n     * @category String\n     * @param {string} [string=''] The string to unescape.\n     * @returns {string} Returns the unescaped string.\n     * @example\n     *\n     * _.unescape('fred, barney, &amp; pebbles');\n     * // => 'fred, barney, & pebbles'\n     */\n    function unescape(string) {\n      string = toString(string);\n      return (string && reHasEscapedHtml.test(string))\n        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Converts `string`, as space separated words, to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.upperCase('--foo-bar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('fooBar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('__foo_bar__');\n     * // => 'FOO BAR'\n     */\n    var upperCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toUpperCase();\n    });\n\n    /**\n     * Converts the first character of `string` to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.upperFirst('fred');\n     * // => 'Fred'\n     *\n     * _.upperFirst('FRED');\n     * // => 'FRED'\n     */\n    var upperFirst = createCaseFirst('toUpperCase');\n\n    /**\n     * Splits `string` into an array of its words.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {RegExp|string} [pattern] The pattern to match words.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the words of `string`.\n     * @example\n     *\n     * _.words('fred, barney, & pebbles');\n     * // => ['fred', 'barney', 'pebbles']\n     *\n     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n     * // => ['fred', 'barney', '&', 'pebbles']\n     */\n    function words(string, pattern, guard) {\n      string = toString(string);\n      pattern = guard ? undefined : pattern;\n\n      if (pattern === undefined) {\n        return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n      }\n      return string.match(pattern) || [];\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Attempts to invoke `func`, returning either the result or the caught error\n     * object. Any additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Function} func The function to attempt.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {*} Returns the `func` result or error object.\n     * @example\n     *\n     * // Avoid throwing errors for invalid selectors.\n     * var elements = _.attempt(function(selector) {\n     *   return document.querySelectorAll(selector);\n     * }, '>_>');\n     *\n     * if (_.isError(elements)) {\n     *   elements = [];\n     * }\n     */\n    var attempt = baseRest(function(func, args) {\n      try {\n        return apply(func, undefined, args);\n      } catch (e) {\n        return isError(e) ? e : new Error(e);\n      }\n    });\n\n    /**\n     * Binds methods of an object to the object itself, overwriting the existing\n     * method.\n     *\n     * **Note:** This method doesn't set the \"length\" property of bound functions.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {...(string|string[])} methodNames The object method names to bind.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'click': function() {\n     *     console.log('clicked ' + this.label);\n     *   }\n     * };\n     *\n     * _.bindAll(view, ['click']);\n     * jQuery(element).on('click', view.click);\n     * // => Logs 'clicked docs' when clicked.\n     */\n    var bindAll = flatRest(function(object, methodNames) {\n      arrayEach(methodNames, function(key) {\n        key = toKey(key);\n        baseAssignValue(object, key, bind(object[key], object));\n      });\n      return object;\n    });\n\n    /**\n     * Creates a function that iterates over `pairs` and invokes the corresponding\n     * function of the first predicate to return truthy. The predicate-function\n     * pairs are invoked with the `this` binding and arguments of the created\n     * function.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Array} pairs The predicate-function pairs.\n     * @returns {Function} Returns the new composite function.\n     * @example\n     *\n     * var func = _.cond([\n     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],\n     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],\n     *   [_.stubTrue,                      _.constant('no match')]\n     * ]);\n     *\n     * func({ 'a': 1, 'b': 2 });\n     * // => 'matches A'\n     *\n     * func({ 'a': 0, 'b': 1 });\n     * // => 'matches B'\n     *\n     * func({ 'a': '1', 'b': '2' });\n     * // => 'no match'\n     */\n    function cond(pairs) {\n      var length = pairs == null ? 0 : pairs.length,\n          toIteratee = getIteratee();\n\n      pairs = !length ? [] : arrayMap(pairs, function(pair) {\n        if (typeof pair[1] != 'function') {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n        return [toIteratee(pair[0]), pair[1]];\n      });\n\n      return baseRest(function(args) {\n        var index = -1;\n        while (++index < length) {\n          var pair = pairs[index];\n          if (apply(pair[0], this, args)) {\n            return apply(pair[1], this, args);\n          }\n        }\n      });\n    }\n\n    /**\n     * Creates a function that invokes the predicate properties of `source` with\n     * the corresponding property values of a given object, returning `true` if\n     * all predicates return truthy, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.conformsTo` with\n     * `source` partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 2, 'b': 1 },\n     *   { 'a': 1, 'b': 2 }\n     * ];\n     *\n     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));\n     * // => [{ 'a': 1, 'b': 2 }]\n     */\n    function conforms(source) {\n      return baseConforms(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that returns `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {*} value The value to return from the new function.\n     * @returns {Function} Returns the new constant function.\n     * @example\n     *\n     * var objects = _.times(2, _.constant({ 'a': 1 }));\n     *\n     * console.log(objects);\n     * // => [{ 'a': 1 }, { 'a': 1 }]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => true\n     */\n    function constant(value) {\n      return function() {\n        return value;\n      };\n    }\n\n    /**\n     * Checks `value` to determine whether a default value should be returned in\n     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,\n     * or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Util\n     * @param {*} value The value to check.\n     * @param {*} defaultValue The default value.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * _.defaultTo(1, 10);\n     * // => 1\n     *\n     * _.defaultTo(undefined, 10);\n     * // => 10\n     */\n    function defaultTo(value, defaultValue) {\n      return (value == null || value !== value) ? defaultValue : value;\n    }\n\n    /**\n     * Creates a function that returns the result of invoking the given functions\n     * with the `this` binding of the created function, where each successive\n     * invocation is supplied the return value of the previous.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flowRight\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flow([_.add, square]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flow = createFlow();\n\n    /**\n     * This method is like `_.flow` except that it creates a function that\n     * invokes the given functions from right to left.\n     *\n     * @static\n     * @since 3.0.0\n     * @memberOf _\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flow\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flowRight([square, _.add]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flowRight = createFlow(true);\n\n    /**\n     * This method returns the first argument it receives.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {*} value Any value.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     *\n     * console.log(_.identity(object) === object);\n     * // => true\n     */\n    function identity(value) {\n      return value;\n    }\n\n    /**\n     * Creates a function that invokes `func` with the arguments of the created\n     * function. If `func` is a property name, the created function returns the\n     * property value for a given element. If `func` is an array or object, the\n     * created function returns `true` for elements that contain the equivalent\n     * source properties, otherwise it returns `false`.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Util\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @returns {Function} Returns the callback.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));\n     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, _.iteratee(['user', 'fred']));\n     * // => [{ 'user': 'fred', 'age': 40 }]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, _.iteratee('user'));\n     * // => ['barney', 'fred']\n     *\n     * // Create custom iteratee shorthands.\n     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {\n     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {\n     *     return func.test(string);\n     *   };\n     * });\n     *\n     * _.filter(['abc', 'def'], /ef/);\n     * // => ['def']\n     */\n    function iteratee(func) {\n      return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between a given\n     * object and `source`, returning `true` if the given object has equivalent\n     * property values, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.isMatch` with `source`\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));\n     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]\n     */\n    function matches(source) {\n      return baseMatches(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between the\n     * value at `path` of a given object to `srcValue`, returning `true` if the\n     * object value is equivalent, else `false`.\n     *\n     * **Note:** Partial comparisons will match empty array and empty object\n     * `srcValue` values against any array or object value, respectively. See\n     * `_.isEqual` for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.find(objects, _.matchesProperty('a', 4));\n     * // => { 'a': 4, 'b': 5, 'c': 6 }\n     */\n    function matchesProperty(path, srcValue) {\n      return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that invokes the method at `path` of a given object.\n     * Any additional arguments are provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': _.constant(2) } },\n     *   { 'a': { 'b': _.constant(1) } }\n     * ];\n     *\n     * _.map(objects, _.method('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(objects, _.method(['a', 'b']));\n     * // => [2, 1]\n     */\n    var method = baseRest(function(path, args) {\n      return function(object) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * The opposite of `_.method`; this method creates a function that invokes\n     * the method at a given path of `object`. Any additional arguments are\n     * provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var array = _.times(3, _.constant),\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n     * // => [2, 0]\n     */\n    var methodOf = baseRest(function(object, args) {\n      return function(path) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * Adds all own enumerable string keyed function properties of a source\n     * object to the destination object. If `object` is a function, then methods\n     * are added to its prototype as well.\n     *\n     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n     * avoid conflicts caused by modifying the original.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Function|Object} [object=lodash] The destination object.\n     * @param {Object} source The object of functions to add.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.\n     * @returns {Function|Object} Returns `object`.\n     * @example\n     *\n     * function vowels(string) {\n     *   return _.filter(string, function(v) {\n     *     return /[aeiou]/i.test(v);\n     *   });\n     * }\n     *\n     * _.mixin({ 'vowels': vowels });\n     * _.vowels('fred');\n     * // => ['e']\n     *\n     * _('fred').vowels().value();\n     * // => ['e']\n     *\n     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n     * _('fred').vowels();\n     * // => ['e']\n     */\n    function mixin(object, source, options) {\n      var props = keys(source),\n          methodNames = baseFunctions(source, props);\n\n      if (options == null &&\n          !(isObject(source) && (methodNames.length || !props.length))) {\n        options = source;\n        source = object;\n        object = this;\n        methodNames = baseFunctions(source, keys(source));\n      }\n      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,\n          isFunc = isFunction(object);\n\n      arrayEach(methodNames, function(methodName) {\n        var func = source[methodName];\n        object[methodName] = func;\n        if (isFunc) {\n          object.prototype[methodName] = function() {\n            var chainAll = this.__chain__;\n            if (chain || chainAll) {\n              var result = object(this.__wrapped__),\n                  actions = result.__actions__ = copyArray(this.__actions__);\n\n              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n              result.__chain__ = chainAll;\n              return result;\n            }\n            return func.apply(object, arrayPush([this.value()], arguments));\n          };\n        }\n      });\n\n      return object;\n    }\n\n    /**\n     * Reverts the `_` variable to its previous value and returns a reference to\n     * the `lodash` function.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @returns {Function} Returns the `lodash` function.\n     * @example\n     *\n     * var lodash = _.noConflict();\n     */\n    function noConflict() {\n      if (root._ === this) {\n        root._ = oldDash;\n      }\n      return this;\n    }\n\n    /**\n     * This method returns `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Util\n     * @example\n     *\n     * _.times(2, _.noop);\n     * // => [undefined, undefined]\n     */\n    function noop() {\n      // No operation performed.\n    }\n\n    /**\n     * Creates a function that gets the argument at index `n`. If `n` is negative,\n     * the nth argument from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [n=0] The index of the argument to return.\n     * @returns {Function} Returns the new pass-thru function.\n     * @example\n     *\n     * var func = _.nthArg(1);\n     * func('a', 'b', 'c', 'd');\n     * // => 'b'\n     *\n     * var func = _.nthArg(-2);\n     * func('a', 'b', 'c', 'd');\n     * // => 'c'\n     */\n    function nthArg(n) {\n      n = toInteger(n);\n      return baseRest(function(args) {\n        return baseNth(args, n);\n      });\n    }\n\n    /**\n     * Creates a function that invokes `iteratees` with the arguments it receives\n     * and returns their results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.over([Math.max, Math.min]);\n     *\n     * func(1, 2, 3, 4);\n     * // => [4, 1]\n     */\n    var over = createOver(arrayMap);\n\n    /**\n     * Creates a function that checks if **all** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overEvery([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => false\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overEvery = createOver(arrayEvery);\n\n    /**\n     * Creates a function that checks if **any** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overSome([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => true\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overSome = createOver(arraySome);\n\n    /**\n     * Creates a function that returns the value at `path` of a given object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': 2 } },\n     *   { 'a': { 'b': 1 } }\n     * ];\n     *\n     * _.map(objects, _.property('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n     * // => [1, 2]\n     */\n    function property(path) {\n      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n    }\n\n    /**\n     * The opposite of `_.property`; this method creates a function that returns\n     * the value at a given path of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var array = [0, 1, 2],\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n     * // => [2, 0]\n     */\n    function propertyOf(object) {\n      return function(path) {\n        return object == null ? undefined : baseGet(object, path);\n      };\n    }\n\n    /**\n     * Creates an array of numbers (positive and/or negative) progressing from\n     * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n     * `start` is specified without an `end` or `step`. If `end` is not specified,\n     * it's set to `start` with `start` then set to `0`.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.rangeRight\n     * @example\n     *\n     * _.range(4);\n     * // => [0, 1, 2, 3]\n     *\n     * _.range(-4);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 5);\n     * // => [1, 2, 3, 4]\n     *\n     * _.range(0, 20, 5);\n     * // => [0, 5, 10, 15]\n     *\n     * _.range(0, -4, -1);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.range(0);\n     * // => []\n     */\n    var range = createRange();\n\n    /**\n     * This method is like `_.range` except that it populates values in\n     * descending order.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.range\n     * @example\n     *\n     * _.rangeRight(4);\n     * // => [3, 2, 1, 0]\n     *\n     * _.rangeRight(-4);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 5);\n     * // => [4, 3, 2, 1]\n     *\n     * _.rangeRight(0, 20, 5);\n     * // => [15, 10, 5, 0]\n     *\n     * _.rangeRight(0, -4, -1);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.rangeRight(0);\n     * // => []\n     */\n    var rangeRight = createRange(true);\n\n    /**\n     * This method returns a new empty array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Array} Returns the new empty array.\n     * @example\n     *\n     * var arrays = _.times(2, _.stubArray);\n     *\n     * console.log(arrays);\n     * // => [[], []]\n     *\n     * console.log(arrays[0] === arrays[1]);\n     * // => false\n     */\n    function stubArray() {\n      return [];\n    }\n\n    /**\n     * This method returns `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `false`.\n     * @example\n     *\n     * _.times(2, _.stubFalse);\n     * // => [false, false]\n     */\n    function stubFalse() {\n      return false;\n    }\n\n    /**\n     * This method returns a new empty object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Object} Returns the new empty object.\n     * @example\n     *\n     * var objects = _.times(2, _.stubObject);\n     *\n     * console.log(objects);\n     * // => [{}, {}]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => false\n     */\n    function stubObject() {\n      return {};\n    }\n\n    /**\n     * This method returns an empty string.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {string} Returns the empty string.\n     * @example\n     *\n     * _.times(2, _.stubString);\n     * // => ['', '']\n     */\n    function stubString() {\n      return '';\n    }\n\n    /**\n     * This method returns `true`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `true`.\n     * @example\n     *\n     * _.times(2, _.stubTrue);\n     * // => [true, true]\n     */\n    function stubTrue() {\n      return true;\n    }\n\n    /**\n     * Invokes the iteratee `n` times, returning an array of the results of\n     * each invocation. The iteratee is invoked with one argument; (index).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} n The number of times to invoke `iteratee`.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.times(3, String);\n     * // => ['0', '1', '2']\n     *\n     *  _.times(4, _.constant(0));\n     * // => [0, 0, 0, 0]\n     */\n    function times(n, iteratee) {\n      n = toInteger(n);\n      if (n < 1 || n > MAX_SAFE_INTEGER) {\n        return [];\n      }\n      var index = MAX_ARRAY_LENGTH,\n          length = nativeMin(n, MAX_ARRAY_LENGTH);\n\n      iteratee = getIteratee(iteratee);\n      n -= MAX_ARRAY_LENGTH;\n\n      var result = baseTimes(length, iteratee);\n      while (++index < n) {\n        iteratee(index);\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a property path array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the new property path array.\n     * @example\n     *\n     * _.toPath('a.b.c');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toPath('a[0].b.c');\n     * // => ['a', '0', 'b', 'c']\n     */\n    function toPath(value) {\n      if (isArray(value)) {\n        return arrayMap(value, toKey);\n      }\n      return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));\n    }\n\n    /**\n     * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {string} [prefix=''] The value to prefix the ID with.\n     * @returns {string} Returns the unique ID.\n     * @example\n     *\n     * _.uniqueId('contact_');\n     * // => 'contact_104'\n     *\n     * _.uniqueId();\n     * // => '105'\n     */\n    function uniqueId(prefix) {\n      var id = ++idCounter;\n      return toString(prefix) + id;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Adds two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {number} augend The first number in an addition.\n     * @param {number} addend The second number in an addition.\n     * @returns {number} Returns the total.\n     * @example\n     *\n     * _.add(6, 4);\n     * // => 10\n     */\n    var add = createMathOperation(function(augend, addend) {\n      return augend + addend;\n    }, 0);\n\n    /**\n     * Computes `number` rounded up to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round up.\n     * @param {number} [precision=0] The precision to round up to.\n     * @returns {number} Returns the rounded up number.\n     * @example\n     *\n     * _.ceil(4.006);\n     * // => 5\n     *\n     * _.ceil(6.004, 2);\n     * // => 6.01\n     *\n     * _.ceil(6040, -2);\n     * // => 6100\n     */\n    var ceil = createRound('ceil');\n\n    /**\n     * Divide two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} dividend The first number in a division.\n     * @param {number} divisor The second number in a division.\n     * @returns {number} Returns the quotient.\n     * @example\n     *\n     * _.divide(6, 4);\n     * // => 1.5\n     */\n    var divide = createMathOperation(function(dividend, divisor) {\n      return dividend / divisor;\n    }, 1);\n\n    /**\n     * Computes `number` rounded down to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round down.\n     * @param {number} [precision=0] The precision to round down to.\n     * @returns {number} Returns the rounded down number.\n     * @example\n     *\n     * _.floor(4.006);\n     * // => 4\n     *\n     * _.floor(0.046, 2);\n     * // => 0.04\n     *\n     * _.floor(4060, -2);\n     * // => 4000\n     */\n    var floor = createRound('floor');\n\n    /**\n     * Computes the maximum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * _.max([4, 2, 8, 6]);\n     * // => 8\n     *\n     * _.max([]);\n     * // => undefined\n     */\n    function max(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseGt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.max` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.maxBy(objects, function(o) { return o.n; });\n     * // => { 'n': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.maxBy(objects, 'n');\n     * // => { 'n': 2 }\n     */\n    function maxBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseGt)\n        : undefined;\n    }\n\n    /**\n     * Computes the mean of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * _.mean([4, 2, 8, 6]);\n     * // => 5\n     */\n    function mean(array) {\n      return baseMean(array, identity);\n    }\n\n    /**\n     * This method is like `_.mean` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be averaged.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.meanBy(objects, function(o) { return o.n; });\n     * // => 5\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.meanBy(objects, 'n');\n     * // => 5\n     */\n    function meanBy(array, iteratee) {\n      return baseMean(array, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * Computes the minimum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * _.min([4, 2, 8, 6]);\n     * // => 2\n     *\n     * _.min([]);\n     * // => undefined\n     */\n    function min(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseLt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.min` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.minBy(objects, function(o) { return o.n; });\n     * // => { 'n': 1 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.minBy(objects, 'n');\n     * // => { 'n': 1 }\n     */\n    function minBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseLt)\n        : undefined;\n    }\n\n    /**\n     * Multiply two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} multiplier The first number in a multiplication.\n     * @param {number} multiplicand The second number in a multiplication.\n     * @returns {number} Returns the product.\n     * @example\n     *\n     * _.multiply(6, 4);\n     * // => 24\n     */\n    var multiply = createMathOperation(function(multiplier, multiplicand) {\n      return multiplier * multiplicand;\n    }, 1);\n\n    /**\n     * Computes `number` rounded to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round.\n     * @param {number} [precision=0] The precision to round to.\n     * @returns {number} Returns the rounded number.\n     * @example\n     *\n     * _.round(4.006);\n     * // => 4\n     *\n     * _.round(4.006, 2);\n     * // => 4.01\n     *\n     * _.round(4060, -2);\n     * // => 4100\n     */\n    var round = createRound('round');\n\n    /**\n     * Subtract two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {number} minuend The first number in a subtraction.\n     * @param {number} subtrahend The second number in a subtraction.\n     * @returns {number} Returns the difference.\n     * @example\n     *\n     * _.subtract(6, 4);\n     * // => 2\n     */\n    var subtract = createMathOperation(function(minuend, subtrahend) {\n      return minuend - subtrahend;\n    }, 0);\n\n    /**\n     * Computes the sum of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.sum([4, 2, 8, 6]);\n     * // => 20\n     */\n    function sum(array) {\n      return (array && array.length)\n        ? baseSum(array, identity)\n        : 0;\n    }\n\n    /**\n     * This method is like `_.sum` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be summed.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.sumBy(objects, function(o) { return o.n; });\n     * // => 20\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sumBy(objects, 'n');\n     * // => 20\n     */\n    function sumBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSum(array, getIteratee(iteratee, 2))\n        : 0;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return wrapped values in chain sequences.\n    lodash.after = after;\n    lodash.ary = ary;\n    lodash.assign = assign;\n    lodash.assignIn = assignIn;\n    lodash.assignInWith = assignInWith;\n    lodash.assignWith = assignWith;\n    lodash.at = at;\n    lodash.before = before;\n    lodash.bind = bind;\n    lodash.bindAll = bindAll;\n    lodash.bindKey = bindKey;\n    lodash.castArray = castArray;\n    lodash.chain = chain;\n    lodash.chunk = chunk;\n    lodash.compact = compact;\n    lodash.concat = concat;\n    lodash.cond = cond;\n    lodash.conforms = conforms;\n    lodash.constant = constant;\n    lodash.countBy = countBy;\n    lodash.create = create;\n    lodash.curry = curry;\n    lodash.curryRight = curryRight;\n    lodash.debounce = debounce;\n    lodash.defaults = defaults;\n    lodash.defaultsDeep = defaultsDeep;\n    lodash.defer = defer;\n    lodash.delay = delay;\n    lodash.difference = difference;\n    lodash.differenceBy = differenceBy;\n    lodash.differenceWith = differenceWith;\n    lodash.drop = drop;\n    lodash.dropRight = dropRight;\n    lodash.dropRightWhile = dropRightWhile;\n    lodash.dropWhile = dropWhile;\n    lodash.fill = fill;\n    lodash.filter = filter;\n    lodash.flatMap = flatMap;\n    lodash.flatMapDeep = flatMapDeep;\n    lodash.flatMapDepth = flatMapDepth;\n    lodash.flatten = flatten;\n    lodash.flattenDeep = flattenDeep;\n    lodash.flattenDepth = flattenDepth;\n    lodash.flip = flip;\n    lodash.flow = flow;\n    lodash.flowRight = flowRight;\n    lodash.fromPairs = fromPairs;\n    lodash.functions = functions;\n    lodash.functionsIn = functionsIn;\n    lodash.groupBy = groupBy;\n    lodash.initial = initial;\n    lodash.intersection = intersection;\n    lodash.intersectionBy = intersectionBy;\n    lodash.intersectionWith = intersectionWith;\n    lodash.invert = invert;\n    lodash.invertBy = invertBy;\n    lodash.invokeMap = invokeMap;\n    lodash.iteratee = iteratee;\n    lodash.keyBy = keyBy;\n    lodash.keys = keys;\n    lodash.keysIn = keysIn;\n    lodash.map = map;\n    lodash.mapKeys = mapKeys;\n    lodash.mapValues = mapValues;\n    lodash.matches = matches;\n    lodash.matchesProperty = matchesProperty;\n    lodash.memoize = memoize;\n    lodash.merge = merge;\n    lodash.mergeWith = mergeWith;\n    lodash.method = method;\n    lodash.methodOf = methodOf;\n    lodash.mixin = mixin;\n    lodash.negate = negate;\n    lodash.nthArg = nthArg;\n    lodash.omit = omit;\n    lodash.omitBy = omitBy;\n    lodash.once = once;\n    lodash.orderBy = orderBy;\n    lodash.over = over;\n    lodash.overArgs = overArgs;\n    lodash.overEvery = overEvery;\n    lodash.overSome = overSome;\n    lodash.partial = partial;\n    lodash.partialRight = partialRight;\n    lodash.partition = partition;\n    lodash.pick = pick;\n    lodash.pickBy = pickBy;\n    lodash.property = property;\n    lodash.propertyOf = propertyOf;\n    lodash.pull = pull;\n    lodash.pullAll = pullAll;\n    lodash.pullAllBy = pullAllBy;\n    lodash.pullAllWith = pullAllWith;\n    lodash.pullAt = pullAt;\n    lodash.range = range;\n    lodash.rangeRight = rangeRight;\n    lodash.rearg = rearg;\n    lodash.reject = reject;\n    lodash.remove = remove;\n    lodash.rest = rest;\n    lodash.reverse = reverse;\n    lodash.sampleSize = sampleSize;\n    lodash.set = set;\n    lodash.setWith = setWith;\n    lodash.shuffle = shuffle;\n    lodash.slice = slice;\n    lodash.sortBy = sortBy;\n    lodash.sortedUniq = sortedUniq;\n    lodash.sortedUniqBy = sortedUniqBy;\n    lodash.split = split;\n    lodash.spread = spread;\n    lodash.tail = tail;\n    lodash.take = take;\n    lodash.takeRight = takeRight;\n    lodash.takeRightWhile = takeRightWhile;\n    lodash.takeWhile = takeWhile;\n    lodash.tap = tap;\n    lodash.throttle = throttle;\n    lodash.thru = thru;\n    lodash.toArray = toArray;\n    lodash.toPairs = toPairs;\n    lodash.toPairsIn = toPairsIn;\n    lodash.toPath = toPath;\n    lodash.toPlainObject = toPlainObject;\n    lodash.transform = transform;\n    lodash.unary = unary;\n    lodash.union = union;\n    lodash.unionBy = unionBy;\n    lodash.unionWith = unionWith;\n    lodash.uniq = uniq;\n    lodash.uniqBy = uniqBy;\n    lodash.uniqWith = uniqWith;\n    lodash.unset = unset;\n    lodash.unzip = unzip;\n    lodash.unzipWith = unzipWith;\n    lodash.update = update;\n    lodash.updateWith = updateWith;\n    lodash.values = values;\n    lodash.valuesIn = valuesIn;\n    lodash.without = without;\n    lodash.words = words;\n    lodash.wrap = wrap;\n    lodash.xor = xor;\n    lodash.xorBy = xorBy;\n    lodash.xorWith = xorWith;\n    lodash.zip = zip;\n    lodash.zipObject = zipObject;\n    lodash.zipObjectDeep = zipObjectDeep;\n    lodash.zipWith = zipWith;\n\n    // Add aliases.\n    lodash.entries = toPairs;\n    lodash.entriesIn = toPairsIn;\n    lodash.extend = assignIn;\n    lodash.extendWith = assignInWith;\n\n    // Add methods to `lodash.prototype`.\n    mixin(lodash, lodash);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return unwrapped values in chain sequences.\n    lodash.add = add;\n    lodash.attempt = attempt;\n    lodash.camelCase = camelCase;\n    lodash.capitalize = capitalize;\n    lodash.ceil = ceil;\n    lodash.clamp = clamp;\n    lodash.clone = clone;\n    lodash.cloneDeep = cloneDeep;\n    lodash.cloneDeepWith = cloneDeepWith;\n    lodash.cloneWith = cloneWith;\n    lodash.conformsTo = conformsTo;\n    lodash.deburr = deburr;\n    lodash.defaultTo = defaultTo;\n    lodash.divide = divide;\n    lodash.endsWith = endsWith;\n    lodash.eq = eq;\n    lodash.escape = escape;\n    lodash.escapeRegExp = escapeRegExp;\n    lodash.every = every;\n    lodash.find = find;\n    lodash.findIndex = findIndex;\n    lodash.findKey = findKey;\n    lodash.findLast = findLast;\n    lodash.findLastIndex = findLastIndex;\n    lodash.findLastKey = findLastKey;\n    lodash.floor = floor;\n    lodash.forEach = forEach;\n    lodash.forEachRight = forEachRight;\n    lodash.forIn = forIn;\n    lodash.forInRight = forInRight;\n    lodash.forOwn = forOwn;\n    lodash.forOwnRight = forOwnRight;\n    lodash.get = get;\n    lodash.gt = gt;\n    lodash.gte = gte;\n    lodash.has = has;\n    lodash.hasIn = hasIn;\n    lodash.head = head;\n    lodash.identity = identity;\n    lodash.includes = includes;\n    lodash.indexOf = indexOf;\n    lodash.inRange = inRange;\n    lodash.invoke = invoke;\n    lodash.isArguments = isArguments;\n    lodash.isArray = isArray;\n    lodash.isArrayBuffer = isArrayBuffer;\n    lodash.isArrayLike = isArrayLike;\n    lodash.isArrayLikeObject = isArrayLikeObject;\n    lodash.isBoolean = isBoolean;\n    lodash.isBuffer = isBuffer;\n    lodash.isDate = isDate;\n    lodash.isElement = isElement;\n    lodash.isEmpty = isEmpty;\n    lodash.isEqual = isEqual;\n    lodash.isEqualWith = isEqualWith;\n    lodash.isError = isError;\n    lodash.isFinite = isFinite;\n    lodash.isFunction = isFunction;\n    lodash.isInteger = isInteger;\n    lodash.isLength = isLength;\n    lodash.isMap = isMap;\n    lodash.isMatch = isMatch;\n    lodash.isMatchWith = isMatchWith;\n    lodash.isNaN = isNaN;\n    lodash.isNative = isNative;\n    lodash.isNil = isNil;\n    lodash.isNull = isNull;\n    lodash.isNumber = isNumber;\n    lodash.isObject = isObject;\n    lodash.isObjectLike = isObjectLike;\n    lodash.isPlainObject = isPlainObject;\n    lodash.isRegExp = isRegExp;\n    lodash.isSafeInteger = isSafeInteger;\n    lodash.isSet = isSet;\n    lodash.isString = isString;\n    lodash.isSymbol = isSymbol;\n    lodash.isTypedArray = isTypedArray;\n    lodash.isUndefined = isUndefined;\n    lodash.isWeakMap = isWeakMap;\n    lodash.isWeakSet = isWeakSet;\n    lodash.join = join;\n    lodash.kebabCase = kebabCase;\n    lodash.last = last;\n    lodash.lastIndexOf = lastIndexOf;\n    lodash.lowerCase = lowerCase;\n    lodash.lowerFirst = lowerFirst;\n    lodash.lt = lt;\n    lodash.lte = lte;\n    lodash.max = max;\n    lodash.maxBy = maxBy;\n    lodash.mean = mean;\n    lodash.meanBy = meanBy;\n    lodash.min = min;\n    lodash.minBy = minBy;\n    lodash.stubArray = stubArray;\n    lodash.stubFalse = stubFalse;\n    lodash.stubObject = stubObject;\n    lodash.stubString = stubString;\n    lodash.stubTrue = stubTrue;\n    lodash.multiply = multiply;\n    lodash.nth = nth;\n    lodash.noConflict = noConflict;\n    lodash.noop = noop;\n    lodash.now = now;\n    lodash.pad = pad;\n    lodash.padEnd = padEnd;\n    lodash.padStart = padStart;\n    lodash.parseInt = parseInt;\n    lodash.random = random;\n    lodash.reduce = reduce;\n    lodash.reduceRight = reduceRight;\n    lodash.repeat = repeat;\n    lodash.replace = replace;\n    lodash.result = result;\n    lodash.round = round;\n    lodash.runInContext = runInContext;\n    lodash.sample = sample;\n    lodash.size = size;\n    lodash.snakeCase = snakeCase;\n    lodash.some = some;\n    lodash.sortedIndex = sortedIndex;\n    lodash.sortedIndexBy = sortedIndexBy;\n    lodash.sortedIndexOf = sortedIndexOf;\n    lodash.sortedLastIndex = sortedLastIndex;\n    lodash.sortedLastIndexBy = sortedLastIndexBy;\n    lodash.sortedLastIndexOf = sortedLastIndexOf;\n    lodash.startCase = startCase;\n    lodash.startsWith = startsWith;\n    lodash.subtract = subtract;\n    lodash.sum = sum;\n    lodash.sumBy = sumBy;\n    lodash.template = template;\n    lodash.times = times;\n    lodash.toFinite = toFinite;\n    lodash.toInteger = toInteger;\n    lodash.toLength = toLength;\n    lodash.toLower = toLower;\n    lodash.toNumber = toNumber;\n    lodash.toSafeInteger = toSafeInteger;\n    lodash.toString = toString;\n    lodash.toUpper = toUpper;\n    lodash.trim = trim;\n    lodash.trimEnd = trimEnd;\n    lodash.trimStart = trimStart;\n    lodash.truncate = truncate;\n    lodash.unescape = unescape;\n    lodash.uniqueId = uniqueId;\n    lodash.upperCase = upperCase;\n    lodash.upperFirst = upperFirst;\n\n    // Add aliases.\n    lodash.each = forEach;\n    lodash.eachRight = forEachRight;\n    lodash.first = head;\n\n    mixin(lodash, (function() {\n      var source = {};\n      baseForOwn(lodash, function(func, methodName) {\n        if (!hasOwnProperty.call(lodash.prototype, methodName)) {\n          source[methodName] = func;\n        }\n      });\n      return source;\n    }()), { 'chain': false });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The semantic version number.\n     *\n     * @static\n     * @memberOf _\n     * @type {string}\n     */\n    lodash.VERSION = VERSION;\n\n    // Assign default placeholders.\n    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n      lodash[methodName].placeholder = lodash;\n    });\n\n    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n    arrayEach(['drop', 'take'], function(methodName, index) {\n      LazyWrapper.prototype[methodName] = function(n) {\n        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);\n\n        var result = (this.__filtered__ && !index)\n          ? new LazyWrapper(this)\n          : this.clone();\n\n        if (result.__filtered__) {\n          result.__takeCount__ = nativeMin(n, result.__takeCount__);\n        } else {\n          result.__views__.push({\n            'size': nativeMin(n, MAX_ARRAY_LENGTH),\n            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')\n          });\n        }\n        return result;\n      };\n\n      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n        return this.reverse()[methodName](n).reverse();\n      };\n    });\n\n    // Add `LazyWrapper` methods that accept an `iteratee` value.\n    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n      var type = index + 1,\n          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;\n\n      LazyWrapper.prototype[methodName] = function(iteratee) {\n        var result = this.clone();\n        result.__iteratees__.push({\n          'iteratee': getIteratee(iteratee, 3),\n          'type': type\n        });\n        result.__filtered__ = result.__filtered__ || isFilter;\n        return result;\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.head` and `_.last`.\n    arrayEach(['head', 'last'], function(methodName, index) {\n      var takeName = 'take' + (index ? 'Right' : '');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this[takeName](1).value()[0];\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.\n    arrayEach(['initial', 'tail'], function(methodName, index) {\n      var dropName = 'drop' + (index ? '' : 'Right');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n      };\n    });\n\n    LazyWrapper.prototype.compact = function() {\n      return this.filter(identity);\n    };\n\n    LazyWrapper.prototype.find = function(predicate) {\n      return this.filter(predicate).head();\n    };\n\n    LazyWrapper.prototype.findLast = function(predicate) {\n      return this.reverse().find(predicate);\n    };\n\n    LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {\n      if (typeof path == 'function') {\n        return new LazyWrapper(this);\n      }\n      return this.map(function(value) {\n        return baseInvoke(value, path, args);\n      });\n    });\n\n    LazyWrapper.prototype.reject = function(predicate) {\n      return this.filter(negate(getIteratee(predicate)));\n    };\n\n    LazyWrapper.prototype.slice = function(start, end) {\n      start = toInteger(start);\n\n      var result = this;\n      if (result.__filtered__ && (start > 0 || end < 0)) {\n        return new LazyWrapper(result);\n      }\n      if (start < 0) {\n        result = result.takeRight(-start);\n      } else if (start) {\n        result = result.drop(start);\n      }\n      if (end !== undefined) {\n        end = toInteger(end);\n        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n      }\n      return result;\n    };\n\n    LazyWrapper.prototype.takeRightWhile = function(predicate) {\n      return this.reverse().takeWhile(predicate).reverse();\n    };\n\n    LazyWrapper.prototype.toArray = function() {\n      return this.take(MAX_ARRAY_LENGTH);\n    };\n\n    // Add `LazyWrapper` methods to `lodash.prototype`.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),\n          isTaker = /^(?:head|last)$/.test(methodName),\n          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],\n          retUnwrapped = isTaker || /^find/.test(methodName);\n\n      if (!lodashFunc) {\n        return;\n      }\n      lodash.prototype[methodName] = function() {\n        var value = this.__wrapped__,\n            args = isTaker ? [1] : arguments,\n            isLazy = value instanceof LazyWrapper,\n            iteratee = args[0],\n            useLazy = isLazy || isArray(value);\n\n        var interceptor = function(value) {\n          var result = lodashFunc.apply(lodash, arrayPush([value], args));\n          return (isTaker && chainAll) ? result[0] : result;\n        };\n\n        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n          isLazy = useLazy = false;\n        }\n        var chainAll = this.__chain__,\n            isHybrid = !!this.__actions__.length,\n            isUnwrapped = retUnwrapped && !chainAll,\n            onlyLazy = isLazy && !isHybrid;\n\n        if (!retUnwrapped && useLazy) {\n          value = onlyLazy ? value : new LazyWrapper(this);\n          var result = func.apply(value, args);\n          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n          return new LodashWrapper(result, chainAll);\n        }\n        if (isUnwrapped && onlyLazy) {\n          return func.apply(this, args);\n        }\n        result = this.thru(interceptor);\n        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;\n      };\n    });\n\n    // Add `Array` methods to `lodash.prototype`.\n    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {\n      var func = arrayProto[methodName],\n          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n          retUnwrapped = /^(?:pop|shift)$/.test(methodName);\n\n      lodash.prototype[methodName] = function() {\n        var args = arguments;\n        if (retUnwrapped && !this.__chain__) {\n          var value = this.value();\n          return func.apply(isArray(value) ? value : [], args);\n        }\n        return this[chainName](function(value) {\n          return func.apply(isArray(value) ? value : [], args);\n        });\n      };\n    });\n\n    // Map minified method names to their real names.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var lodashFunc = lodash[methodName];\n      if (lodashFunc) {\n        var key = (lodashFunc.name + ''),\n            names = realNames[key] || (realNames[key] = []);\n\n        names.push({ 'name': methodName, 'func': lodashFunc });\n      }\n    });\n\n    realNames[createHybrid(undefined, WRAP_BIND_KEY_FLAG).name] = [{\n      'name': 'wrapper',\n      'func': undefined\n    }];\n\n    // Add methods to `LazyWrapper`.\n    LazyWrapper.prototype.clone = lazyClone;\n    LazyWrapper.prototype.reverse = lazyReverse;\n    LazyWrapper.prototype.value = lazyValue;\n\n    // Add chain sequence methods to the `lodash` wrapper.\n    lodash.prototype.at = wrapperAt;\n    lodash.prototype.chain = wrapperChain;\n    lodash.prototype.commit = wrapperCommit;\n    lodash.prototype.next = wrapperNext;\n    lodash.prototype.plant = wrapperPlant;\n    lodash.prototype.reverse = wrapperReverse;\n    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n    // Add lazy aliases.\n    lodash.prototype.first = lodash.prototype.head;\n\n    if (symIterator) {\n      lodash.prototype[symIterator] = wrapperToIterator;\n    }\n    return lodash;\n  });\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export lodash.\n  var _ = runInContext();\n\n  // Some AMD build optimizers, like r.js, check for condition patterns like:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose Lodash on the global object to prevent errors when Lodash is\n    // loaded by a script tag in the presence of an AMD loader.\n    // See http://requirejs.org/docs/errors.html#mismatch for more details.\n    // Use `_.noConflict` to remove Lodash from the global object.\n    root._ = _;\n\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    define(function() {\n      return _;\n    });\n  }\n  // Check for `exports` after `define` in case a build optimizer adds it.\n  else if (freeModule) {\n    // Export for Node.js.\n    (freeModule.exports = _)._ = _;\n    // Export for CommonJS support.\n    freeExports._ = _;\n  }\n  else {\n    // Export to the global object.\n    root._ = _;\n  }\n}.call(this));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash/lodash.js\n// module id = 13\n// module chunks = 0","var _ = require(\"../lodash\"),\n    PriorityQueue = require(\"../data/priority-queue\");\n\nmodule.exports = dijkstra;\n\nvar DEFAULT_WEIGHT_FUNC = _.constant(1);\n\nfunction dijkstra(g, source, weightFn, edgeFn) {\n  return runDijkstra(g, String(source),\n                     weightFn || DEFAULT_WEIGHT_FUNC,\n                     edgeFn || function(v) { return g.outEdges(v); });\n}\n\nfunction runDijkstra(g, source, weightFn, edgeFn) {\n  var results = {},\n      pq = new PriorityQueue(),\n      v, vEntry;\n\n  var updateNeighbors = function(edge) {\n    var w = edge.v !== v ? edge.v : edge.w,\n        wEntry = results[w],\n        weight = weightFn(edge),\n        distance = vEntry.distance + weight;\n\n    if (weight < 0) {\n      throw new Error(\"dijkstra does not allow negative edge weights. \" +\n                      \"Bad edge: \" + edge + \" Weight: \" + weight);\n    }\n\n    if (distance < wEntry.distance) {\n      wEntry.distance = distance;\n      wEntry.predecessor = v;\n      pq.decrease(w, distance);\n    }\n  };\n\n  g.nodes().forEach(function(v) {\n    var distance = v === source ? 0 : Number.POSITIVE_INFINITY;\n    results[v] = { distance: distance };\n    pq.add(v, distance);\n  });\n\n  while (pq.size() > 0) {\n    v = pq.removeMin();\n    vEntry = results[v];\n    if (vEntry.distance === Number.POSITIVE_INFINITY) {\n      break;\n    }\n\n    edgeFn(v).forEach(updateNeighbors);\n  }\n\n  return results;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/graphlib/lib/alg/dijkstra.js\n// module id = 14\n// module chunks = 0","var _ = require(\"../lodash\");\n\nmodule.exports = PriorityQueue;\n\n/**\n * A min-priority queue data structure. This algorithm is derived from Cormen,\n * et al., \"Introduction to Algorithms\". The basic idea of a min-priority\n * queue is that you can efficiently (in O(1) time) get the smallest key in\n * the queue. Adding and removing elements takes O(log n) time. A key can\n * have its priority decreased in O(log n) time.\n */\nfunction PriorityQueue() {\n  this._arr = [];\n  this._keyIndices = {};\n}\n\n/**\n * Returns the number of elements in the queue. Takes `O(1)` time.\n */\nPriorityQueue.prototype.size = function() {\n  return this._arr.length;\n};\n\n/**\n * Returns the keys that are in the queue. Takes `O(n)` time.\n */\nPriorityQueue.prototype.keys = function() {\n  return this._arr.map(function(x) { return x.key; });\n};\n\n/**\n * Returns `true` if **key** is in the queue and `false` if not.\n */\nPriorityQueue.prototype.has = function(key) {\n  return _.has(this._keyIndices, key);\n};\n\n/**\n * Returns the priority for **key**. If **key** is not present in the queue\n * then this function returns `undefined`. Takes `O(1)` time.\n *\n * @param {Object} key\n */\nPriorityQueue.prototype.priority = function(key) {\n  var index = this._keyIndices[key];\n  if (index !== undefined) {\n    return this._arr[index].priority;\n  }\n};\n\n/**\n * Returns the key for the minimum element in this queue. If the queue is\n * empty this function throws an Error. Takes `O(1)` time.\n */\nPriorityQueue.prototype.min = function() {\n  if (this.size() === 0) {\n    throw new Error(\"Queue underflow\");\n  }\n  return this._arr[0].key;\n};\n\n/**\n * Inserts a new key into the priority queue. If the key already exists in\n * the queue this function returns `false`; otherwise it will return `true`.\n * Takes `O(n)` time.\n *\n * @param {Object} key the key to add\n * @param {Number} priority the initial priority for the key\n */\nPriorityQueue.prototype.add = function(key, priority) {\n  var keyIndices = this._keyIndices;\n  key = String(key);\n  if (!_.has(keyIndices, key)) {\n    var arr = this._arr;\n    var index = arr.length;\n    keyIndices[key] = index;\n    arr.push({key: key, priority: priority});\n    this._decrease(index);\n    return true;\n  }\n  return false;\n};\n\n/**\n * Removes and returns the smallest key in the queue. Takes `O(log n)` time.\n */\nPriorityQueue.prototype.removeMin = function() {\n  this._swap(0, this._arr.length - 1);\n  var min = this._arr.pop();\n  delete this._keyIndices[min.key];\n  this._heapify(0);\n  return min.key;\n};\n\n/**\n * Decreases the priority for **key** to **priority**. If the new priority is\n * greater than the previous priority, this function will throw an Error.\n *\n * @param {Object} key the key for which to raise priority\n * @param {Number} priority the new priority for the key\n */\nPriorityQueue.prototype.decrease = function(key, priority) {\n  var index = this._keyIndices[key];\n  if (priority > this._arr[index].priority) {\n    throw new Error(\"New priority is greater than current priority. \" +\n        \"Key: \" + key + \" Old: \" + this._arr[index].priority + \" New: \" + priority);\n  }\n  this._arr[index].priority = priority;\n  this._decrease(index);\n};\n\nPriorityQueue.prototype._heapify = function(i) {\n  var arr = this._arr;\n  var l = 2 * i,\n      r = l + 1,\n      largest = i;\n  if (l < arr.length) {\n    largest = arr[l].priority < arr[largest].priority ? l : largest;\n    if (r < arr.length) {\n      largest = arr[r].priority < arr[largest].priority ? r : largest;\n    }\n    if (largest !== i) {\n      this._swap(i, largest);\n      this._heapify(largest);\n    }\n  }\n};\n\nPriorityQueue.prototype._decrease = function(index) {\n  var arr = this._arr;\n  var priority = arr[index].priority;\n  var parent;\n  while (index !== 0) {\n    parent = index >> 1;\n    if (arr[parent].priority < priority) {\n      break;\n    }\n    this._swap(index, parent);\n    index = parent;\n  }\n};\n\nPriorityQueue.prototype._swap = function(i, j) {\n  var arr = this._arr;\n  var keyIndices = this._keyIndices;\n  var origArrI = arr[i];\n  var origArrJ = arr[j];\n  arr[i] = origArrJ;\n  arr[j] = origArrI;\n  keyIndices[origArrJ.key] = i;\n  keyIndices[origArrI.key] = j;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/graphlib/lib/data/priority-queue.js\n// module id = 15\n// module chunks = 0","var _ = require(\"../lodash\");\n\nmodule.exports = tarjan;\n\nfunction tarjan(g) {\n  var index = 0,\n      stack = [],\n      visited = {}, // node id -> { onStack, lowlink, index }\n      results = [];\n\n  function dfs(v) {\n    var entry = visited[v] = {\n      onStack: true,\n      lowlink: index,\n      index: index++\n    };\n    stack.push(v);\n\n    g.successors(v).forEach(function(w) {\n      if (!_.has(visited, w)) {\n        dfs(w);\n        entry.lowlink = Math.min(entry.lowlink, visited[w].lowlink);\n      } else if (visited[w].onStack) {\n        entry.lowlink = Math.min(entry.lowlink, visited[w].index);\n      }\n    });\n\n    if (entry.lowlink === entry.index) {\n      var cmpt = [],\n          w;\n      do {\n        w = stack.pop();\n        visited[w].onStack = false;\n        cmpt.push(w);\n      } while (v !== w);\n      results.push(cmpt);\n    }\n  }\n\n  g.nodes().forEach(function(v) {\n    if (!_.has(visited, v)) {\n      dfs(v);\n    }\n  });\n\n  return results;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/graphlib/lib/alg/tarjan.js\n// module id = 16\n// module chunks = 0","var _ = require(\"../lodash\");\n\nmodule.exports = topsort;\ntopsort.CycleException = CycleException;\n\nfunction topsort(g) {\n  var visited = {},\n      stack = {},\n      results = [];\n\n  function visit(node) {\n    if (_.has(stack, node)) {\n      throw new CycleException();\n    }\n\n    if (!_.has(visited, node)) {\n      stack[node] = true;\n      visited[node] = true;\n      _.each(g.predecessors(node), visit);\n      delete stack[node];\n      results.push(node);\n    }\n  }\n\n  _.each(g.sinks(), visit);\n\n  if (_.size(visited) !== g.nodeCount()) {\n    throw new CycleException();\n  }\n\n  return results;\n}\n\nfunction CycleException() {}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/graphlib/lib/alg/topsort.js\n// module id = 17\n// module chunks = 0","var _ = require(\"../lodash\");\n\nmodule.exports = dfs;\n\n/*\n * A helper that preforms a pre- or post-order traversal on the input graph\n * and returns the nodes in the order they were visited. If the graph is\n * undirected then this algorithm will navigate using neighbors. If the graph\n * is directed then this algorithm will navigate using successors.\n *\n * Order must be one of \"pre\" or \"post\".\n */\nfunction dfs(g, vs, order) {\n  if (!_.isArray(vs)) {\n    vs = [vs];\n  }\n\n  var navigation = (g.isDirected() ? g.successors : g.neighbors).bind(g);\n\n  var acc = [],\n      visited = {};\n  _.each(vs, function(v) {\n    if (!g.hasNode(v)) {\n      throw new Error(\"Graph does not have node: \" + v);\n    }\n\n    doDfs(g, v, order === \"post\", visited, navigation, acc);\n  });\n  return acc;\n}\n\nfunction doDfs(g, v, postorder, visited, navigation, acc) {\n  if (!_.has(visited, v)) {\n    visited[v] = true;\n\n    if (!postorder) { acc.push(v); }\n    _.each(navigation(v), function(w) {\n      doDfs(g, w, postorder, visited, navigation, acc);\n    });\n    if (postorder) { acc.push(v); }\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/graphlib/lib/alg/dfs.js\n// module id = 18\n// module chunks = 0","\"use strict\";\n\nvar _ = require(\"../lodash\"),\n    Graph = require(\"../graphlib\").Graph,\n    slack = require(\"./util\").slack;\n\nmodule.exports = feasibleTree;\n\n/*\n * Constructs a spanning tree with tight edges and adjusted the input node's\n * ranks to achieve this. A tight edge is one that is has a length that matches\n * its \"minlen\" attribute.\n *\n * The basic structure for this function is derived from Gansner, et al., \"A\n * Technique for Drawing Directed Graphs.\"\n *\n * Pre-conditions:\n *\n *    1. Graph must be a DAG.\n *    2. Graph must be connected.\n *    3. Graph must have at least one node.\n *    5. Graph nodes must have been previously assigned a \"rank\" property that\n *       respects the \"minlen\" property of incident edges.\n *    6. Graph edges must have a \"minlen\" property.\n *\n * Post-conditions:\n *\n *    - Graph nodes will have their rank adjusted to ensure that all edges are\n *      tight.\n *\n * Returns a tree (undirected graph) that is constructed using only \"tight\"\n * edges.\n */\nfunction feasibleTree(g) {\n  var t = new Graph({ directed: false });\n\n  // Choose arbitrary node from which to start our tree\n  var start = g.nodes()[0],\n      size = g.nodeCount();\n  t.setNode(start, {});\n\n  var edge, delta;\n  while (tightTree(t, g) < size) {\n    edge = findMinSlackEdge(t, g);\n    delta = t.hasNode(edge.v) ? slack(g, edge) : -slack(g, edge);\n    shiftRanks(t, g, delta);\n  }\n\n  return t;\n}\n\n/*\n * Finds a maximal tree of tight edges and returns the number of nodes in the\n * tree.\n */\nfunction tightTree(t, g) {\n  function dfs(v) {\n    _.forEach(g.nodeEdges(v), function(e) {\n      var edgeV = e.v,\n          w = (v === edgeV) ? e.w : edgeV;\n      if (!t.hasNode(w) && !slack(g, e)) {\n        t.setNode(w, {});\n        t.setEdge(v, w, {});\n        dfs(w);\n      }\n    });\n  }\n\n  _.forEach(t.nodes(), dfs);\n  return t.nodeCount();\n}\n\n/*\n * Finds the edge with the smallest slack that is incident on tree and returns\n * it.\n */\nfunction findMinSlackEdge(t, g) {\n  return _.minBy(g.edges(), function(e) {\n    if (t.hasNode(e.v) !== t.hasNode(e.w)) {\n      return slack(g, e);\n    }\n  });\n}\n\nfunction shiftRanks(t, g, delta) {\n  _.forEach(t.nodes(), function(v) {\n    g.node(v).rank += delta;\n  });\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/dagre/lib/rank/feasible-tree.js\n// module id = 19\n// module chunks = 0","// @remove-on-eject-begin\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n// @remove-on-eject-end\n'use strict';\n\nif (typeof Promise === 'undefined') {\n  // Rejection tracking prevents a common issue where React gets into an\n  // inconsistent state due to an error, but it gets swallowed by a Promise,\n  // and the user has no idea what causes React's erratic future behavior.\n  require('promise/lib/rejection-tracking').enable();\n  window.Promise = require('promise/lib/es6-extensions.js');\n}\n\n// fetch() polyfill for making API calls.\nrequire('whatwg-fetch');\n\n// Object.assign() is commonly used with React.\n// It will use the native implementation if it's present and isn't buggy.\nObject.assign = require('object-assign');\n\n// In tests, polyfill requestAnimationFrame since jsdom doesn't provide it yet.\n// We don't polyfill it in the browser--this is user's responsibility.\nif (process.env.NODE_ENV === 'test') {\n  require('raf').polyfill(global);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-scripts/config/polyfills.js\n// module id = 21\n// module chunks = 0","'use strict';\n\nvar Promise = require('./core');\n\nvar DEFAULT_WHITELIST = [\n  ReferenceError,\n  TypeError,\n  RangeError\n];\n\nvar enabled = false;\nexports.disable = disable;\nfunction disable() {\n  enabled = false;\n  Promise._47 = null;\n  Promise._71 = null;\n}\n\nexports.enable = enable;\nfunction enable(options) {\n  options = options || {};\n  if (enabled) disable();\n  enabled = true;\n  var id = 0;\n  var displayId = 0;\n  var rejections = {};\n  Promise._47 = function (promise) {\n    if (\n      promise._83 === 2 && // IS REJECTED\n      rejections[promise._56]\n    ) {\n      if (rejections[promise._56].logged) {\n        onHandled(promise._56);\n      } else {\n        clearTimeout(rejections[promise._56].timeout);\n      }\n      delete rejections[promise._56];\n    }\n  };\n  Promise._71 = function (promise, err) {\n    if (promise._75 === 0) { // not yet handled\n      promise._56 = id++;\n      rejections[promise._56] = {\n        displayId: null,\n        error: err,\n        timeout: setTimeout(\n          onUnhandled.bind(null, promise._56),\n          // For reference errors and type errors, this almost always\n          // means the programmer made a mistake, so log them after just\n          // 100ms\n          // otherwise, wait 2 seconds to see if they get handled\n          matchWhitelist(err, DEFAULT_WHITELIST)\n            ? 100\n            : 2000\n        ),\n        logged: false\n      };\n    }\n  };\n  function onUnhandled(id) {\n    if (\n      options.allRejections ||\n      matchWhitelist(\n        rejections[id].error,\n        options.whitelist || DEFAULT_WHITELIST\n      )\n    ) {\n      rejections[id].displayId = displayId++;\n      if (options.onUnhandled) {\n        rejections[id].logged = true;\n        options.onUnhandled(\n          rejections[id].displayId,\n          rejections[id].error\n        );\n      } else {\n        rejections[id].logged = true;\n        logError(\n          rejections[id].displayId,\n          rejections[id].error\n        );\n      }\n    }\n  }\n  function onHandled(id) {\n    if (rejections[id].logged) {\n      if (options.onHandled) {\n        options.onHandled(rejections[id].displayId, rejections[id].error);\n      } else if (!rejections[id].onUnhandled) {\n        console.warn(\n          'Promise Rejection Handled (id: ' + rejections[id].displayId + '):'\n        );\n        console.warn(\n          '  This means you can ignore any previous messages of the form \"Possible Unhandled Promise Rejection\" with id ' +\n          rejections[id].displayId + '.'\n        );\n      }\n    }\n  }\n}\n\nfunction logError(id, error) {\n  console.warn('Possible Unhandled Promise Rejection (id: ' + id + '):');\n  var errStr = (error && (error.stack || error)) + '';\n  errStr.split('\\n').forEach(function (line) {\n    console.warn('  ' + line);\n  });\n}\n\nfunction matchWhitelist(error, list) {\n  return list.some(function (cls) {\n    return error instanceof cls;\n  });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-scripts/node_modules/promise/lib/rejection-tracking.js\n// module id = 22\n// module chunks = 0","\"use strict\";\n\n// Use the fastest means possible to execute a task in its own turn, with\n// priority over other events including IO, animation, reflow, and redraw\n// events in browsers.\n//\n// An exception thrown by a task will permanently interrupt the processing of\n// subsequent tasks. The higher level `asap` function ensures that if an\n// exception is thrown by a task, that the task queue will continue flushing as\n// soon as possible, but if you use `rawAsap` directly, you are responsible to\n// either ensure that no exceptions are thrown from your task, or to manually\n// call `rawAsap.requestFlush` if an exception is thrown.\nmodule.exports = rawAsap;\nfunction rawAsap(task) {\n    if (!queue.length) {\n        requestFlush();\n        flushing = true;\n    }\n    // Equivalent to push, but avoids a function call.\n    queue[queue.length] = task;\n}\n\nvar queue = [];\n// Once a flush has been requested, no further calls to `requestFlush` are\n// necessary until the next `flush` completes.\nvar flushing = false;\n// `requestFlush` is an implementation-specific method that attempts to kick\n// off a `flush` event as quickly as possible. `flush` will attempt to exhaust\n// the event queue before yielding to the browser's own event loop.\nvar requestFlush;\n// The position of the next task to execute in the task queue. This is\n// preserved between calls to `flush` so that it can be resumed if\n// a task throws an exception.\nvar index = 0;\n// If a task schedules additional tasks recursively, the task queue can grow\n// unbounded. To prevent memory exhaustion, the task queue will periodically\n// truncate already-completed tasks.\nvar capacity = 1024;\n\n// The flush function processes all tasks that have been scheduled with\n// `rawAsap` unless and until one of those tasks throws an exception.\n// If a task throws an exception, `flush` ensures that its state will remain\n// consistent and will resume where it left off when called again.\n// However, `flush` does not make any arrangements to be called again if an\n// exception is thrown.\nfunction flush() {\n    while (index < queue.length) {\n        var currentIndex = index;\n        // Advance the index before calling the task. This ensures that we will\n        // begin flushing on the next task the task throws an error.\n        index = index + 1;\n        queue[currentIndex].call();\n        // Prevent leaking memory for long chains of recursive calls to `asap`.\n        // If we call `asap` within tasks scheduled by `asap`, the queue will\n        // grow, but to avoid an O(n) walk for every task we execute, we don't\n        // shift tasks off the queue after they have been executed.\n        // Instead, we periodically shift 1024 tasks off the queue.\n        if (index > capacity) {\n            // Manually shift all values starting at the index back to the\n            // beginning of the queue.\n            for (var scan = 0, newLength = queue.length - index; scan < newLength; scan++) {\n                queue[scan] = queue[scan + index];\n            }\n            queue.length -= index;\n            index = 0;\n        }\n    }\n    queue.length = 0;\n    index = 0;\n    flushing = false;\n}\n\n// `requestFlush` is implemented using a strategy based on data collected from\n// every available SauceLabs Selenium web driver worker at time of writing.\n// https://docs.google.com/spreadsheets/d/1mG-5UYGup5qxGdEMWkhP6BWCz053NUb2E1QoUTU16uA/edit#gid=783724593\n\n// Safari 6 and 6.1 for desktop, iPad, and iPhone are the only browsers that\n// have WebKitMutationObserver but not un-prefixed MutationObserver.\n// Must use `global` or `self` instead of `window` to work in both frames and web\n// workers. `global` is a provision of Browserify, Mr, Mrs, or Mop.\n\n/* globals self */\nvar scope = typeof global !== \"undefined\" ? global : self;\nvar BrowserMutationObserver = scope.MutationObserver || scope.WebKitMutationObserver;\n\n// MutationObservers are desirable because they have high priority and work\n// reliably everywhere they are implemented.\n// They are implemented in all modern browsers.\n//\n// - Android 4-4.3\n// - Chrome 26-34\n// - Firefox 14-29\n// - Internet Explorer 11\n// - iPad Safari 6-7.1\n// - iPhone Safari 7-7.1\n// - Safari 6-7\nif (typeof BrowserMutationObserver === \"function\") {\n    requestFlush = makeRequestCallFromMutationObserver(flush);\n\n// MessageChannels are desirable because they give direct access to the HTML\n// task queue, are implemented in Internet Explorer 10, Safari 5.0-1, and Opera\n// 11-12, and in web workers in many engines.\n// Although message channels yield to any queued rendering and IO tasks, they\n// would be better than imposing the 4ms delay of timers.\n// However, they do not work reliably in Internet Explorer or Safari.\n\n// Internet Explorer 10 is the only browser that has setImmediate but does\n// not have MutationObservers.\n// Although setImmediate yields to the browser's renderer, it would be\n// preferrable to falling back to setTimeout since it does not have\n// the minimum 4ms penalty.\n// Unfortunately there appears to be a bug in Internet Explorer 10 Mobile (and\n// Desktop to a lesser extent) that renders both setImmediate and\n// MessageChannel useless for the purposes of ASAP.\n// https://github.com/kriskowal/q/issues/396\n\n// Timers are implemented universally.\n// We fall back to timers in workers in most engines, and in foreground\n// contexts in the following browsers.\n// However, note that even this simple case requires nuances to operate in a\n// broad spectrum of browsers.\n//\n// - Firefox 3-13\n// - Internet Explorer 6-9\n// - iPad Safari 4.3\n// - Lynx 2.8.7\n} else {\n    requestFlush = makeRequestCallFromTimer(flush);\n}\n\n// `requestFlush` requests that the high priority event queue be flushed as\n// soon as possible.\n// This is useful to prevent an error thrown in a task from stalling the event\n// queue if the exception handled by Node.js’s\n// `process.on(\"uncaughtException\")` or by a domain.\nrawAsap.requestFlush = requestFlush;\n\n// To request a high priority event, we induce a mutation observer by toggling\n// the text of a text node between \"1\" and \"-1\".\nfunction makeRequestCallFromMutationObserver(callback) {\n    var toggle = 1;\n    var observer = new BrowserMutationObserver(callback);\n    var node = document.createTextNode(\"\");\n    observer.observe(node, {characterData: true});\n    return function requestCall() {\n        toggle = -toggle;\n        node.data = toggle;\n    };\n}\n\n// The message channel technique was discovered by Malte Ubl and was the\n// original foundation for this library.\n// http://www.nonblocking.io/2011/06/windownexttick.html\n\n// Safari 6.0.5 (at least) intermittently fails to create message ports on a\n// page's first load. Thankfully, this version of Safari supports\n// MutationObservers, so we don't need to fall back in that case.\n\n// function makeRequestCallFromMessageChannel(callback) {\n//     var channel = new MessageChannel();\n//     channel.port1.onmessage = callback;\n//     return function requestCall() {\n//         channel.port2.postMessage(0);\n//     };\n// }\n\n// For reasons explained above, we are also unable to use `setImmediate`\n// under any circumstances.\n// Even if we were, there is another bug in Internet Explorer 10.\n// It is not sufficient to assign `setImmediate` to `requestFlush` because\n// `setImmediate` must be called *by name* and therefore must be wrapped in a\n// closure.\n// Never forget.\n\n// function makeRequestCallFromSetImmediate(callback) {\n//     return function requestCall() {\n//         setImmediate(callback);\n//     };\n// }\n\n// Safari 6.0 has a problem where timers will get lost while the user is\n// scrolling. This problem does not impact ASAP because Safari 6.0 supports\n// mutation observers, so that implementation is used instead.\n// However, if we ever elect to use timers in Safari, the prevalent work-around\n// is to add a scroll event listener that calls for a flush.\n\n// `setTimeout` does not call the passed callback if the delay is less than\n// approximately 7 in web workers in Firefox 8 through 18, and sometimes not\n// even then.\n\nfunction makeRequestCallFromTimer(callback) {\n    return function requestCall() {\n        // We dispatch a timeout with a specified delay of 0 for engines that\n        // can reliably accommodate that request. This will usually be snapped\n        // to a 4 milisecond delay, but once we're flushing, there's no delay\n        // between events.\n        var timeoutHandle = setTimeout(handleTimer, 0);\n        // However, since this timer gets frequently dropped in Firefox\n        // workers, we enlist an interval handle that will try to fire\n        // an event 20 times per second until it succeeds.\n        var intervalHandle = setInterval(handleTimer, 50);\n\n        function handleTimer() {\n            // Whichever timer succeeds will cancel both timers and\n            // execute the callback.\n            clearTimeout(timeoutHandle);\n            clearInterval(intervalHandle);\n            callback();\n        }\n    };\n}\n\n// This is for `asap.js` only.\n// Its name will be periodically randomized to break any code that depends on\n// its existence.\nrawAsap.makeRequestCallFromTimer = makeRequestCallFromTimer;\n\n// ASAP was originally a nextTick shim included in Q. This was factored out\n// into this ASAP package. It was later adapted to RSVP which made further\n// amendments. These decisions, particularly to marginalize MessageChannel and\n// to capture the MutationObserver implementation in a closure, were integrated\n// back into ASAP proper.\n// https://github.com/tildeio/rsvp.js/blob/cddf7232546a9cf858524b75cde6f9edf72620a7/lib/rsvp/asap.js\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/asap/browser-raw.js\n// module id = 23\n// module chunks = 0","'use strict';\n\n//This file contains the ES6 extensions to the core Promises/A+ API\n\nvar Promise = require('./core.js');\n\nmodule.exports = Promise;\n\n/* Static Functions */\n\nvar TRUE = valuePromise(true);\nvar FALSE = valuePromise(false);\nvar NULL = valuePromise(null);\nvar UNDEFINED = valuePromise(undefined);\nvar ZERO = valuePromise(0);\nvar EMPTYSTRING = valuePromise('');\n\nfunction valuePromise(value) {\n  var p = new Promise(Promise._44);\n  p._83 = 1;\n  p._18 = value;\n  return p;\n}\nPromise.resolve = function (value) {\n  if (value instanceof Promise) return value;\n\n  if (value === null) return NULL;\n  if (value === undefined) return UNDEFINED;\n  if (value === true) return TRUE;\n  if (value === false) return FALSE;\n  if (value === 0) return ZERO;\n  if (value === '') return EMPTYSTRING;\n\n  if (typeof value === 'object' || typeof value === 'function') {\n    try {\n      var then = value.then;\n      if (typeof then === 'function') {\n        return new Promise(then.bind(value));\n      }\n    } catch (ex) {\n      return new Promise(function (resolve, reject) {\n        reject(ex);\n      });\n    }\n  }\n  return valuePromise(value);\n};\n\nPromise.all = function (arr) {\n  var args = Array.prototype.slice.call(arr);\n\n  return new Promise(function (resolve, reject) {\n    if (args.length === 0) return resolve([]);\n    var remaining = args.length;\n    function res(i, val) {\n      if (val && (typeof val === 'object' || typeof val === 'function')) {\n        if (val instanceof Promise && val.then === Promise.prototype.then) {\n          while (val._83 === 3) {\n            val = val._18;\n          }\n          if (val._83 === 1) return res(i, val._18);\n          if (val._83 === 2) reject(val._18);\n          val.then(function (val) {\n            res(i, val);\n          }, reject);\n          return;\n        } else {\n          var then = val.then;\n          if (typeof then === 'function') {\n            var p = new Promise(then.bind(val));\n            p.then(function (val) {\n              res(i, val);\n            }, reject);\n            return;\n          }\n        }\n      }\n      args[i] = val;\n      if (--remaining === 0) {\n        resolve(args);\n      }\n    }\n    for (var i = 0; i < args.length; i++) {\n      res(i, args[i]);\n    }\n  });\n};\n\nPromise.reject = function (value) {\n  return new Promise(function (resolve, reject) {\n    reject(value);\n  });\n};\n\nPromise.race = function (values) {\n  return new Promise(function (resolve, reject) {\n    values.forEach(function(value){\n      Promise.resolve(value).then(resolve, reject);\n    });\n  });\n};\n\n/* Prototype Methods */\n\nPromise.prototype['catch'] = function (onRejected) {\n  return this.then(null, onRejected);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-scripts/node_modules/promise/lib/es6-extensions.js\n// module id = 24\n// module chunks = 0","(function(self) {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob()\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ]\n\n    var isDataView = function(obj) {\n      return obj && DataView.prototype.isPrototypeOf(obj)\n    }\n\n    var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    }\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift()\n        return {done: value === undefined, value: value}\n      }\n    }\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      }\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1])\n      }, this)\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var oldValue = this.map[name]\n    this.map[name] = oldValue ? oldValue+','+value : value\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name)\n    return this.has(name) ? this.map[name] : null\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value)\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this)\n      }\n    }\n  }\n\n  Headers.prototype.keys = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push(name) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.values = function() {\n    var items = []\n    this.forEach(function(value) { items.push(value) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.entries = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push([name, value]) })\n    return iteratorFor(items)\n  }\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsArrayBuffer(blob)\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsText(blob)\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf)\n    var chars = new Array(view.length)\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i])\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength)\n      view.set(new Uint8Array(buf))\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (!body) {\n        this._bodyText = ''\n      } else if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString()\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer)\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer])\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body)\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type)\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n        }\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      }\n    }\n\n    this.text = function() {\n      var rejected = consumed(this)\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    } else {\n      this.url = String(input)\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, { body: this._bodyInit })\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers()\n    rawHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':')\n      var key = parts.shift().trim()\n      if (key) {\n        var value = parts.join(':').trim()\n        headers.append(key, value)\n      }\n    })\n    return headers\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this.type = 'default'\n    this.status = 'status' in options ? options.status : 200\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = 'statusText' in options ? options.statusText : 'OK'\n    this.headers = new Headers(options.headers)\n    this.url = options.url || ''\n    this._initBody(bodyInit)\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init)\n      var xhr = new XMLHttpRequest()\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        }\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n        var body = 'response' in xhr ? xhr.response : xhr.responseText\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})(typeof self !== 'undefined' ? self : this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-scripts/node_modules/whatwg-fetch/fetch.js\n// module id = 25\n// module chunks = 0","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","/** @license React v16.4.1\n * react.production.min.js\n *\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';var k=require(\"object-assign\"),n=require(\"fbjs/lib/invariant\"),p=require(\"fbjs/lib/emptyObject\"),q=require(\"fbjs/lib/emptyFunction\"),r=\"function\"===typeof Symbol&&Symbol.for,t=r?Symbol.for(\"react.element\"):60103,u=r?Symbol.for(\"react.portal\"):60106,v=r?Symbol.for(\"react.fragment\"):60107,w=r?Symbol.for(\"react.strict_mode\"):60108,x=r?Symbol.for(\"react.profiler\"):60114,y=r?Symbol.for(\"react.provider\"):60109,z=r?Symbol.for(\"react.context\"):60110,A=r?Symbol.for(\"react.async_mode\"):60111,B=\nr?Symbol.for(\"react.forward_ref\"):60112;r&&Symbol.for(\"react.timeout\");var C=\"function\"===typeof Symbol&&Symbol.iterator;function D(a){for(var b=arguments.length-1,e=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=0;c<b;c++)e+=\"&args[]=\"+encodeURIComponent(arguments[c+1]);n(!1,\"Minified React error #\"+a+\"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. \",e)}\nvar E={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}};function F(a,b,e){this.props=a;this.context=b;this.refs=p;this.updater=e||E}F.prototype.isReactComponent={};F.prototype.setState=function(a,b){\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a?D(\"85\"):void 0;this.updater.enqueueSetState(this,a,b,\"setState\")};F.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};function G(){}\nG.prototype=F.prototype;function H(a,b,e){this.props=a;this.context=b;this.refs=p;this.updater=e||E}var I=H.prototype=new G;I.constructor=H;k(I,F.prototype);I.isPureReactComponent=!0;var J={current:null},K=Object.prototype.hasOwnProperty,L={key:!0,ref:!0,__self:!0,__source:!0};\nfunction M(a,b,e){var c=void 0,d={},g=null,h=null;if(null!=b)for(c in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(g=\"\"+b.key),b)K.call(b,c)&&!L.hasOwnProperty(c)&&(d[c]=b[c]);var f=arguments.length-2;if(1===f)d.children=e;else if(1<f){for(var l=Array(f),m=0;m<f;m++)l[m]=arguments[m+2];d.children=l}if(a&&a.defaultProps)for(c in f=a.defaultProps,f)void 0===d[c]&&(d[c]=f[c]);return{$$typeof:t,type:a,key:g,ref:h,props:d,_owner:J.current}}\nfunction N(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===t}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+(\"\"+a).replace(/[=:]/g,function(a){return b[a]})}var O=/\\/+/g,P=[];function Q(a,b,e,c){if(P.length){var d=P.pop();d.result=a;d.keyPrefix=b;d.func=e;d.context=c;d.count=0;return d}return{result:a,keyPrefix:b,func:e,context:c,count:0}}function R(a){a.result=null;a.keyPrefix=null;a.func=null;a.context=null;a.count=0;10>P.length&&P.push(a)}\nfunction S(a,b,e,c){var d=typeof a;if(\"undefined\"===d||\"boolean\"===d)a=null;var g=!1;if(null===a)g=!0;else switch(d){case \"string\":case \"number\":g=!0;break;case \"object\":switch(a.$$typeof){case t:case u:g=!0}}if(g)return e(c,a,\"\"===b?\".\"+T(a,0):b),1;g=0;b=\"\"===b?\".\":b+\":\";if(Array.isArray(a))for(var h=0;h<a.length;h++){d=a[h];var f=b+T(d,h);g+=S(d,f,e,c)}else if(null===a||\"undefined\"===typeof a?f=null:(f=C&&a[C]||a[\"@@iterator\"],f=\"function\"===typeof f?f:null),\"function\"===typeof f)for(a=f.call(a),\nh=0;!(d=a.next()).done;)d=d.value,f=b+T(d,h++),g+=S(d,f,e,c);else\"object\"===d&&(e=\"\"+a,D(\"31\",\"[object Object]\"===e?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":e,\"\"));return g}function T(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(a.key):b.toString(36)}function U(a,b){a.func.call(a.context,b,a.count++)}\nfunction V(a,b,e){var c=a.result,d=a.keyPrefix;a=a.func.call(a.context,b,a.count++);Array.isArray(a)?W(a,c,e,q.thatReturnsArgument):null!=a&&(N(a)&&(b=d+(!a.key||b&&b.key===a.key?\"\":(\"\"+a.key).replace(O,\"$&/\")+\"/\")+e,a={$$typeof:t,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}),c.push(a))}function W(a,b,e,c,d){var g=\"\";null!=e&&(g=(\"\"+e).replace(O,\"$&/\")+\"/\");b=Q(b,g,c,d);null==a||S(a,\"\",V,b);R(b)}\nvar X={Children:{map:function(a,b,e){if(null==a)return a;var c=[];W(a,c,null,b,e);return c},forEach:function(a,b,e){if(null==a)return a;b=Q(null,null,b,e);null==a||S(a,\"\",U,b);R(b)},count:function(a){return null==a?0:S(a,\"\",q.thatReturnsNull,null)},toArray:function(a){var b=[];W(a,b,null,q.thatReturnsArgument);return b},only:function(a){N(a)?void 0:D(\"143\");return a}},createRef:function(){return{current:null}},Component:F,PureComponent:H,createContext:function(a,b){void 0===b&&(b=null);a={$$typeof:z,\n_calculateChangedBits:b,_defaultValue:a,_currentValue:a,_currentValue2:a,_changedBits:0,_changedBits2:0,Provider:null,Consumer:null};a.Provider={$$typeof:y,_context:a};return a.Consumer=a},forwardRef:function(a){return{$$typeof:B,render:a}},Fragment:v,StrictMode:w,unstable_AsyncMode:A,unstable_Profiler:x,createElement:M,cloneElement:function(a,b,e){null===a||void 0===a?D(\"267\",a):void 0;var c=void 0,d=k({},a.props),g=a.key,h=a.ref,f=a._owner;if(null!=b){void 0!==b.ref&&(h=b.ref,f=J.current);void 0!==\nb.key&&(g=\"\"+b.key);var l=void 0;a.type&&a.type.defaultProps&&(l=a.type.defaultProps);for(c in b)K.call(b,c)&&!L.hasOwnProperty(c)&&(d[c]=void 0===b[c]&&void 0!==l?l[c]:b[c])}c=arguments.length-2;if(1===c)d.children=e;else if(1<c){l=Array(c);for(var m=0;m<c;m++)l[m]=arguments[m+2];d.children=l}return{$$typeof:t,type:a.type,key:g,ref:h,props:d,_owner:f}},createFactory:function(a){var b=M.bind(null,a);b.type=a;return b},isValidElement:N,version:\"16.4.1\",__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentOwner:J,\nassign:k}},Y={default:X},Z=Y&&X||Y;module.exports=Z.default?Z.default:Z;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react/cjs/react.production.min.js\n// module id = 27\n// module chunks = 0","'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom.production.min.js');\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-dom/index.js\n// module id = 28\n// module chunks = 0","/** @license React v16.4.1\n * react-dom.production.min.js\n *\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/*\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\n'use strict';var aa=require(\"fbjs/lib/invariant\"),ba=require(\"react\"),m=require(\"fbjs/lib/ExecutionEnvironment\"),p=require(\"object-assign\"),v=require(\"fbjs/lib/emptyFunction\"),da=require(\"fbjs/lib/getActiveElement\"),ea=require(\"fbjs/lib/shallowEqual\"),fa=require(\"fbjs/lib/containsNode\"),ha=require(\"fbjs/lib/emptyObject\");\nfunction A(a){for(var b=arguments.length-1,c=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,d=0;d<b;d++)c+=\"&args[]=\"+encodeURIComponent(arguments[d+1]);aa(!1,\"Minified React error #\"+a+\"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. \",c)}ba?void 0:A(\"227\");\nfunction ia(a,b,c,d,e,f,g,h,k){this._hasCaughtError=!1;this._caughtError=null;var n=Array.prototype.slice.call(arguments,3);try{b.apply(c,n)}catch(r){this._caughtError=r,this._hasCaughtError=!0}}\nvar B={_caughtError:null,_hasCaughtError:!1,_rethrowError:null,_hasRethrowError:!1,invokeGuardedCallback:function(a,b,c,d,e,f,g,h,k){ia.apply(B,arguments)},invokeGuardedCallbackAndCatchFirstError:function(a,b,c,d,e,f,g,h,k){B.invokeGuardedCallback.apply(this,arguments);if(B.hasCaughtError()){var n=B.clearCaughtError();B._hasRethrowError||(B._hasRethrowError=!0,B._rethrowError=n)}},rethrowCaughtError:function(){return ka.apply(B,arguments)},hasCaughtError:function(){return B._hasCaughtError},clearCaughtError:function(){if(B._hasCaughtError){var a=\nB._caughtError;B._caughtError=null;B._hasCaughtError=!1;return a}A(\"198\")}};function ka(){if(B._hasRethrowError){var a=B._rethrowError;B._rethrowError=null;B._hasRethrowError=!1;throw a;}}var la=null,ma={};\nfunction na(){if(la)for(var a in ma){var b=ma[a],c=la.indexOf(a);-1<c?void 0:A(\"96\",a);if(!oa[c]){b.extractEvents?void 0:A(\"97\",a);oa[c]=b;c=b.eventTypes;for(var d in c){var e=void 0;var f=c[d],g=b,h=d;pa.hasOwnProperty(h)?A(\"99\",h):void 0;pa[h]=f;var k=f.phasedRegistrationNames;if(k){for(e in k)k.hasOwnProperty(e)&&qa(k[e],g,h);e=!0}else f.registrationName?(qa(f.registrationName,g,h),e=!0):e=!1;e?void 0:A(\"98\",d,a)}}}}\nfunction qa(a,b,c){ra[a]?A(\"100\",a):void 0;ra[a]=b;sa[a]=b.eventTypes[c].dependencies}var oa=[],pa={},ra={},sa={};function ta(a){la?A(\"101\"):void 0;la=Array.prototype.slice.call(a);na()}function ua(a){var b=!1,c;for(c in a)if(a.hasOwnProperty(c)){var d=a[c];ma.hasOwnProperty(c)&&ma[c]===d||(ma[c]?A(\"102\",c):void 0,ma[c]=d,b=!0)}b&&na()}\nvar va={plugins:oa,eventNameDispatchConfigs:pa,registrationNameModules:ra,registrationNameDependencies:sa,possibleRegistrationNames:null,injectEventPluginOrder:ta,injectEventPluginsByName:ua},wa=null,xa=null,ya=null;function za(a,b,c,d){b=a.type||\"unknown-event\";a.currentTarget=ya(d);B.invokeGuardedCallbackAndCatchFirstError(b,c,void 0,a);a.currentTarget=null}\nfunction Aa(a,b){null==b?A(\"30\"):void 0;if(null==a)return b;if(Array.isArray(a)){if(Array.isArray(b))return a.push.apply(a,b),a;a.push(b);return a}return Array.isArray(b)?[a].concat(b):[a,b]}function Ba(a,b,c){Array.isArray(a)?a.forEach(b,c):a&&b.call(c,a)}var Ca=null;\nfunction Da(a,b){if(a){var c=a._dispatchListeners,d=a._dispatchInstances;if(Array.isArray(c))for(var e=0;e<c.length&&!a.isPropagationStopped();e++)za(a,b,c[e],d[e]);else c&&za(a,b,c,d);a._dispatchListeners=null;a._dispatchInstances=null;a.isPersistent()||a.constructor.release(a)}}function Ea(a){return Da(a,!0)}function Fa(a){return Da(a,!1)}var Ga={injectEventPluginOrder:ta,injectEventPluginsByName:ua};\nfunction Ha(a,b){var c=a.stateNode;if(!c)return null;var d=wa(c);if(!d)return null;c=d[b];a:switch(b){case \"onClick\":case \"onClickCapture\":case \"onDoubleClick\":case \"onDoubleClickCapture\":case \"onMouseDown\":case \"onMouseDownCapture\":case \"onMouseMove\":case \"onMouseMoveCapture\":case \"onMouseUp\":case \"onMouseUpCapture\":(d=!d.disabled)||(a=a.type,d=!(\"button\"===a||\"input\"===a||\"select\"===a||\"textarea\"===a));a=!d;break a;default:a=!1}if(a)return null;c&&\"function\"!==typeof c?A(\"231\",b,typeof c):void 0;\nreturn c}function Ia(a,b){null!==a&&(Ca=Aa(Ca,a));a=Ca;Ca=null;a&&(b?Ba(a,Ea):Ba(a,Fa),Ca?A(\"95\"):void 0,B.rethrowCaughtError())}function Ja(a,b,c,d){for(var e=null,f=0;f<oa.length;f++){var g=oa[f];g&&(g=g.extractEvents(a,b,c,d))&&(e=Aa(e,g))}Ia(e,!1)}var Ka={injection:Ga,getListener:Ha,runEventsInBatch:Ia,runExtractedEventsInBatch:Ja},La=Math.random().toString(36).slice(2),C=\"__reactInternalInstance$\"+La,Ma=\"__reactEventHandlers$\"+La;\nfunction Na(a){if(a[C])return a[C];for(;!a[C];)if(a.parentNode)a=a.parentNode;else return null;a=a[C];return 5===a.tag||6===a.tag?a:null}function Oa(a){if(5===a.tag||6===a.tag)return a.stateNode;A(\"33\")}function Pa(a){return a[Ma]||null}var Qa={precacheFiberNode:function(a,b){b[C]=a},getClosestInstanceFromNode:Na,getInstanceFromNode:function(a){a=a[C];return!a||5!==a.tag&&6!==a.tag?null:a},getNodeFromInstance:Oa,getFiberCurrentPropsFromNode:Pa,updateFiberProps:function(a,b){a[Ma]=b}};\nfunction F(a){do a=a.return;while(a&&5!==a.tag);return a?a:null}function Ra(a,b,c){for(var d=[];a;)d.push(a),a=F(a);for(a=d.length;0<a--;)b(d[a],\"captured\",c);for(a=0;a<d.length;a++)b(d[a],\"bubbled\",c)}function Sa(a,b,c){if(b=Ha(a,c.dispatchConfig.phasedRegistrationNames[b]))c._dispatchListeners=Aa(c._dispatchListeners,b),c._dispatchInstances=Aa(c._dispatchInstances,a)}function Ta(a){a&&a.dispatchConfig.phasedRegistrationNames&&Ra(a._targetInst,Sa,a)}\nfunction Ua(a){if(a&&a.dispatchConfig.phasedRegistrationNames){var b=a._targetInst;b=b?F(b):null;Ra(b,Sa,a)}}function Va(a,b,c){a&&c&&c.dispatchConfig.registrationName&&(b=Ha(a,c.dispatchConfig.registrationName))&&(c._dispatchListeners=Aa(c._dispatchListeners,b),c._dispatchInstances=Aa(c._dispatchInstances,a))}function Xa(a){a&&a.dispatchConfig.registrationName&&Va(a._targetInst,null,a)}function Ya(a){Ba(a,Ta)}\nfunction Za(a,b,c,d){if(c&&d)a:{var e=c;for(var f=d,g=0,h=e;h;h=F(h))g++;h=0;for(var k=f;k;k=F(k))h++;for(;0<g-h;)e=F(e),g--;for(;0<h-g;)f=F(f),h--;for(;g--;){if(e===f||e===f.alternate)break a;e=F(e);f=F(f)}e=null}else e=null;f=e;for(e=[];c&&c!==f;){g=c.alternate;if(null!==g&&g===f)break;e.push(c);c=F(c)}for(c=[];d&&d!==f;){g=d.alternate;if(null!==g&&g===f)break;c.push(d);d=F(d)}for(d=0;d<e.length;d++)Va(e[d],\"bubbled\",a);for(a=c.length;0<a--;)Va(c[a],\"captured\",b)}\nvar $a={accumulateTwoPhaseDispatches:Ya,accumulateTwoPhaseDispatchesSkipTarget:function(a){Ba(a,Ua)},accumulateEnterLeaveDispatches:Za,accumulateDirectDispatches:function(a){Ba(a,Xa)}};function ab(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c[\"Webkit\"+a]=\"webkit\"+b;c[\"Moz\"+a]=\"moz\"+b;c[\"ms\"+a]=\"MS\"+b;c[\"O\"+a]=\"o\"+b.toLowerCase();return c}\nvar bb={animationend:ab(\"Animation\",\"AnimationEnd\"),animationiteration:ab(\"Animation\",\"AnimationIteration\"),animationstart:ab(\"Animation\",\"AnimationStart\"),transitionend:ab(\"Transition\",\"TransitionEnd\")},cb={},db={};m.canUseDOM&&(db=document.createElement(\"div\").style,\"AnimationEvent\"in window||(delete bb.animationend.animation,delete bb.animationiteration.animation,delete bb.animationstart.animation),\"TransitionEvent\"in window||delete bb.transitionend.transition);\nfunction eb(a){if(cb[a])return cb[a];if(!bb[a])return a;var b=bb[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in db)return cb[a]=b[c];return a}var fb=eb(\"animationend\"),gb=eb(\"animationiteration\"),hb=eb(\"animationstart\"),ib=eb(\"transitionend\"),jb=\"abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting\".split(\" \"),kb=null;\nfunction lb(){!kb&&m.canUseDOM&&(kb=\"textContent\"in document.documentElement?\"textContent\":\"innerText\");return kb}var G={_root:null,_startText:null,_fallbackText:null};function mb(){if(G._fallbackText)return G._fallbackText;var a,b=G._startText,c=b.length,d,e=nb(),f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);G._fallbackText=e.slice(a,1<d?1-d:void 0);return G._fallbackText}function nb(){return\"value\"in G._root?G._root.value:G._root[lb()]}\nvar ob=\"dispatchConfig _targetInst nativeEvent isDefaultPrevented isPropagationStopped _dispatchListeners _dispatchInstances\".split(\" \"),pb={type:null,target:null,currentTarget:v.thatReturnsNull,eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null};\nfunction H(a,b,c,d){this.dispatchConfig=a;this._targetInst=b;this.nativeEvent=c;a=this.constructor.Interface;for(var e in a)a.hasOwnProperty(e)&&((b=a[e])?this[e]=b(c):\"target\"===e?this.target=d:this[e]=c[e]);this.isDefaultPrevented=(null!=c.defaultPrevented?c.defaultPrevented:!1===c.returnValue)?v.thatReturnsTrue:v.thatReturnsFalse;this.isPropagationStopped=v.thatReturnsFalse;return this}\np(H.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():\"unknown\"!==typeof a.returnValue&&(a.returnValue=!1),this.isDefaultPrevented=v.thatReturnsTrue)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():\"unknown\"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=v.thatReturnsTrue)},persist:function(){this.isPersistent=v.thatReturnsTrue},isPersistent:v.thatReturnsFalse,\ndestructor:function(){var a=this.constructor.Interface,b;for(b in a)this[b]=null;for(a=0;a<ob.length;a++)this[ob[a]]=null}});H.Interface=pb;H.extend=function(a){function b(){}function c(){return d.apply(this,arguments)}var d=this;b.prototype=d.prototype;var e=new b;p(e,c.prototype);c.prototype=e;c.prototype.constructor=c;c.Interface=p({},d.Interface,a);c.extend=d.extend;qb(c);return c};qb(H);\nfunction rb(a,b,c,d){if(this.eventPool.length){var e=this.eventPool.pop();this.call(e,a,b,c,d);return e}return new this(a,b,c,d)}function sb(a){a instanceof this?void 0:A(\"223\");a.destructor();10>this.eventPool.length&&this.eventPool.push(a)}function qb(a){a.eventPool=[];a.getPooled=rb;a.release=sb}var tb=H.extend({data:null}),ub=H.extend({data:null}),vb=[9,13,27,32],wb=m.canUseDOM&&\"CompositionEvent\"in window,xb=null;m.canUseDOM&&\"documentMode\"in document&&(xb=document.documentMode);\nvar yb=m.canUseDOM&&\"TextEvent\"in window&&!xb,zb=m.canUseDOM&&(!wb||xb&&8<xb&&11>=xb),Ab=String.fromCharCode(32),Bb={beforeInput:{phasedRegistrationNames:{bubbled:\"onBeforeInput\",captured:\"onBeforeInputCapture\"},dependencies:[\"compositionend\",\"keypress\",\"textInput\",\"paste\"]},compositionEnd:{phasedRegistrationNames:{bubbled:\"onCompositionEnd\",captured:\"onCompositionEndCapture\"},dependencies:\"blur compositionend keydown keypress keyup mousedown\".split(\" \")},compositionStart:{phasedRegistrationNames:{bubbled:\"onCompositionStart\",\ncaptured:\"onCompositionStartCapture\"},dependencies:\"blur compositionstart keydown keypress keyup mousedown\".split(\" \")},compositionUpdate:{phasedRegistrationNames:{bubbled:\"onCompositionUpdate\",captured:\"onCompositionUpdateCapture\"},dependencies:\"blur compositionupdate keydown keypress keyup mousedown\".split(\" \")}},Cb=!1;\nfunction Db(a,b){switch(a){case \"keyup\":return-1!==vb.indexOf(b.keyCode);case \"keydown\":return 229!==b.keyCode;case \"keypress\":case \"mousedown\":case \"blur\":return!0;default:return!1}}function Eb(a){a=a.detail;return\"object\"===typeof a&&\"data\"in a?a.data:null}var Fb=!1;function Gb(a,b){switch(a){case \"compositionend\":return Eb(b);case \"keypress\":if(32!==b.which)return null;Cb=!0;return Ab;case \"textInput\":return a=b.data,a===Ab&&Cb?null:a;default:return null}}\nfunction Hb(a,b){if(Fb)return\"compositionend\"===a||!wb&&Db(a,b)?(a=mb(),G._root=null,G._startText=null,G._fallbackText=null,Fb=!1,a):null;switch(a){case \"paste\":return null;case \"keypress\":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case \"compositionend\":return zb?null:b.data;default:return null}}\nvar Ib={eventTypes:Bb,extractEvents:function(a,b,c,d){var e=void 0;var f=void 0;if(wb)b:{switch(a){case \"compositionstart\":e=Bb.compositionStart;break b;case \"compositionend\":e=Bb.compositionEnd;break b;case \"compositionupdate\":e=Bb.compositionUpdate;break b}e=void 0}else Fb?Db(a,c)&&(e=Bb.compositionEnd):\"keydown\"===a&&229===c.keyCode&&(e=Bb.compositionStart);e?(zb&&(Fb||e!==Bb.compositionStart?e===Bb.compositionEnd&&Fb&&(f=mb()):(G._root=d,G._startText=nb(),Fb=!0)),e=tb.getPooled(e,b,c,d),f?e.data=\nf:(f=Eb(c),null!==f&&(e.data=f)),Ya(e),f=e):f=null;(a=yb?Gb(a,c):Hb(a,c))?(b=ub.getPooled(Bb.beforeInput,b,c,d),b.data=a,Ya(b)):b=null;return null===f?b:null===b?f:[f,b]}},Jb=null,Kb={injectFiberControlledHostComponent:function(a){Jb=a}},Lb=null,Mb=null;function Nb(a){if(a=xa(a)){Jb&&\"function\"===typeof Jb.restoreControlledState?void 0:A(\"194\");var b=wa(a.stateNode);Jb.restoreControlledState(a.stateNode,a.type,b)}}function Ob(a){Lb?Mb?Mb.push(a):Mb=[a]:Lb=a}\nfunction Pb(){return null!==Lb||null!==Mb}function Qb(){if(Lb){var a=Lb,b=Mb;Mb=Lb=null;Nb(a);if(b)for(a=0;a<b.length;a++)Nb(b[a])}}var Rb={injection:Kb,enqueueStateRestore:Ob,needsStateRestore:Pb,restoreStateIfNeeded:Qb};function Sb(a,b){return a(b)}function Tb(a,b,c){return a(b,c)}function Ub(){}var Vb=!1;function Wb(a,b){if(Vb)return a(b);Vb=!0;try{return Sb(a,b)}finally{Vb=!1,Pb()&&(Ub(),Qb())}}\nvar Xb={color:!0,date:!0,datetime:!0,\"datetime-local\":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Yb(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return\"input\"===b?!!Xb[a.type]:\"textarea\"===b?!0:!1}function Zb(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}\nfunction $b(a,b){if(!m.canUseDOM||b&&!(\"addEventListener\"in document))return!1;a=\"on\"+a;b=a in document;b||(b=document.createElement(\"div\"),b.setAttribute(a,\"return;\"),b=\"function\"===typeof b[a]);return b}function ac(a){var b=a.type;return(a=a.nodeName)&&\"input\"===a.toLowerCase()&&(\"checkbox\"===b||\"radio\"===b)}\nfunction bc(a){var b=ac(a)?\"checked\":\"value\",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=\"\"+a[b];if(!a.hasOwnProperty(b)&&\"undefined\"!==typeof c&&\"function\"===typeof c.get&&\"function\"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=\"\"+a;f.call(this,a)}});Object.defineProperty(a,b,{enumerable:c.enumerable});return{getValue:function(){return d},setValue:function(a){d=\"\"+a},stopTracking:function(){a._valueTracker=\nnull;delete a[b]}}}}function cc(a){a._valueTracker||(a._valueTracker=bc(a))}function dc(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d=\"\";a&&(d=ac(a)?a.checked?\"true\":\"false\":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}\nvar ec=ba.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,fc=\"function\"===typeof Symbol&&Symbol.for,gc=fc?Symbol.for(\"react.element\"):60103,hc=fc?Symbol.for(\"react.portal\"):60106,ic=fc?Symbol.for(\"react.fragment\"):60107,jc=fc?Symbol.for(\"react.strict_mode\"):60108,kc=fc?Symbol.for(\"react.profiler\"):60114,lc=fc?Symbol.for(\"react.provider\"):60109,mc=fc?Symbol.for(\"react.context\"):60110,pc=fc?Symbol.for(\"react.async_mode\"):60111,qc=fc?Symbol.for(\"react.forward_ref\"):60112,rc=fc?Symbol.for(\"react.timeout\"):\n60113,sc=\"function\"===typeof Symbol&&Symbol.iterator;function tc(a){if(null===a||\"undefined\"===typeof a)return null;a=sc&&a[sc]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}\nfunction uc(a){var b=a.type;if(\"function\"===typeof b)return b.displayName||b.name;if(\"string\"===typeof b)return b;switch(b){case pc:return\"AsyncMode\";case mc:return\"Context.Consumer\";case ic:return\"ReactFragment\";case hc:return\"ReactPortal\";case kc:return\"Profiler(\"+a.pendingProps.id+\")\";case lc:return\"Context.Provider\";case jc:return\"StrictMode\";case rc:return\"Timeout\"}if(\"object\"===typeof b&&null!==b)switch(b.$$typeof){case qc:return a=b.render.displayName||b.render.name||\"\",\"\"!==a?\"ForwardRef(\"+\na+\")\":\"ForwardRef\"}return null}function vc(a){var b=\"\";do{a:switch(a.tag){case 0:case 1:case 2:case 5:var c=a._debugOwner,d=a._debugSource;var e=uc(a);var f=null;c&&(f=uc(c));c=d;e=\"\\n    in \"+(e||\"Unknown\")+(c?\" (at \"+c.fileName.replace(/^.*[\\\\\\/]/,\"\")+\":\"+c.lineNumber+\")\":f?\" (created by \"+f+\")\":\"\");break a;default:e=\"\"}b+=e;a=a.return}while(a);return b}\nvar wc=/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,xc={},zc={};function Ac(a){if(zc.hasOwnProperty(a))return!0;if(xc.hasOwnProperty(a))return!1;if(wc.test(a))return zc[a]=!0;xc[a]=!0;return!1}\nfunction Bc(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case \"function\":case \"symbol\":return!0;case \"boolean\":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return\"data-\"!==a&&\"aria-\"!==a;default:return!1}}function Cc(a,b,c,d){if(null===b||\"undefined\"===typeof b||Bc(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}\nfunction I(a,b,c,d,e){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b}var J={};\"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style\".split(\" \").forEach(function(a){J[a]=new I(a,0,!1,a,null)});\n[[\"acceptCharset\",\"accept-charset\"],[\"className\",\"class\"],[\"htmlFor\",\"for\"],[\"httpEquiv\",\"http-equiv\"]].forEach(function(a){var b=a[0];J[b]=new I(b,1,!1,a[1],null)});[\"contentEditable\",\"draggable\",\"spellCheck\",\"value\"].forEach(function(a){J[a]=new I(a,2,!1,a.toLowerCase(),null)});[\"autoReverse\",\"externalResourcesRequired\",\"preserveAlpha\"].forEach(function(a){J[a]=new I(a,2,!1,a,null)});\n\"allowFullScreen async autoFocus autoPlay controls default defer disabled formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope\".split(\" \").forEach(function(a){J[a]=new I(a,3,!1,a.toLowerCase(),null)});[\"checked\",\"multiple\",\"muted\",\"selected\"].forEach(function(a){J[a]=new I(a,3,!0,a.toLowerCase(),null)});[\"capture\",\"download\"].forEach(function(a){J[a]=new I(a,4,!1,a.toLowerCase(),null)});\n[\"cols\",\"rows\",\"size\",\"span\"].forEach(function(a){J[a]=new I(a,6,!1,a.toLowerCase(),null)});[\"rowSpan\",\"start\"].forEach(function(a){J[a]=new I(a,5,!1,a.toLowerCase(),null)});var Dc=/[\\-:]([a-z])/g;function Ec(a){return a[1].toUpperCase()}\n\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height\".split(\" \").forEach(function(a){var b=a.replace(Dc,\nEc);J[b]=new I(b,1,!1,a,null)});\"xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type\".split(\" \").forEach(function(a){var b=a.replace(Dc,Ec);J[b]=new I(b,1,!1,a,\"http://www.w3.org/1999/xlink\")});[\"xml:base\",\"xml:lang\",\"xml:space\"].forEach(function(a){var b=a.replace(Dc,Ec);J[b]=new I(b,1,!1,a,\"http://www.w3.org/XML/1998/namespace\")});J.tabIndex=new I(\"tabIndex\",1,!1,\"tabindex\",null);\nfunction Fc(a,b,c,d){var e=J.hasOwnProperty(b)?J[b]:null;var f=null!==e?0===e.type:d?!1:!(2<b.length)||\"o\"!==b[0]&&\"O\"!==b[0]||\"n\"!==b[1]&&\"N\"!==b[1]?!1:!0;f||(Cc(b,c,e,d)&&(c=null),d||null===e?Ac(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,\"\"+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:\"\":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?\"\":\"\"+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c))))}\nfunction Gc(a,b){var c=b.checked;return p({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}function Hc(a,b){var c=null==b.defaultValue?\"\":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=Ic(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:\"checkbox\"===b.type||\"radio\"===b.type?null!=b.checked:null!=b.value}}function Jc(a,b){b=b.checked;null!=b&&Fc(a,\"checked\",b,!1)}\nfunction Kc(a,b){Jc(a,b);var c=Ic(b.value);if(null!=c)if(\"number\"===b.type){if(0===c&&\"\"===a.value||a.value!=c)a.value=\"\"+c}else a.value!==\"\"+c&&(a.value=\"\"+c);b.hasOwnProperty(\"value\")?Lc(a,b.type,c):b.hasOwnProperty(\"defaultValue\")&&Lc(a,b.type,Ic(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}\nfunction Mc(a,b,c){if(b.hasOwnProperty(\"value\")||b.hasOwnProperty(\"defaultValue\")){b=\"\"+a._wrapperState.initialValue;var d=a.value;c||b===d||(a.value=b);a.defaultValue=b}c=a.name;\"\"!==c&&(a.name=\"\");a.defaultChecked=!a.defaultChecked;a.defaultChecked=!a.defaultChecked;\"\"!==c&&(a.name=c)}function Lc(a,b,c){if(\"number\"!==b||a.ownerDocument.activeElement!==a)null==c?a.defaultValue=\"\"+a._wrapperState.initialValue:a.defaultValue!==\"\"+c&&(a.defaultValue=\"\"+c)}\nfunction Ic(a){switch(typeof a){case \"boolean\":case \"number\":case \"object\":case \"string\":case \"undefined\":return a;default:return\"\"}}var Nc={change:{phasedRegistrationNames:{bubbled:\"onChange\",captured:\"onChangeCapture\"},dependencies:\"blur change click focus input keydown keyup selectionchange\".split(\" \")}};function Oc(a,b,c){a=H.getPooled(Nc.change,a,b,c);a.type=\"change\";Ob(c);Ya(a);return a}var Pc=null,Qc=null;function Rc(a){Ia(a,!1)}function Sc(a){var b=Oa(a);if(dc(b))return a}\nfunction Tc(a,b){if(\"change\"===a)return b}var Uc=!1;m.canUseDOM&&(Uc=$b(\"input\")&&(!document.documentMode||9<document.documentMode));function Vc(){Pc&&(Pc.detachEvent(\"onpropertychange\",Wc),Qc=Pc=null)}function Wc(a){\"value\"===a.propertyName&&Sc(Qc)&&(a=Oc(Qc,a,Zb(a)),Wb(Rc,a))}function Xc(a,b,c){\"focus\"===a?(Vc(),Pc=b,Qc=c,Pc.attachEvent(\"onpropertychange\",Wc)):\"blur\"===a&&Vc()}function Yc(a){if(\"selectionchange\"===a||\"keyup\"===a||\"keydown\"===a)return Sc(Qc)}\nfunction Zc(a,b){if(\"click\"===a)return Sc(b)}function $c(a,b){if(\"input\"===a||\"change\"===a)return Sc(b)}\nvar ad={eventTypes:Nc,_isInputEventSupported:Uc,extractEvents:function(a,b,c,d){var e=b?Oa(b):window,f=void 0,g=void 0,h=e.nodeName&&e.nodeName.toLowerCase();\"select\"===h||\"input\"===h&&\"file\"===e.type?f=Tc:Yb(e)?Uc?f=$c:(f=Yc,g=Xc):(h=e.nodeName)&&\"input\"===h.toLowerCase()&&(\"checkbox\"===e.type||\"radio\"===e.type)&&(f=Zc);if(f&&(f=f(a,b)))return Oc(f,c,d);g&&g(a,e,b);\"blur\"===a&&(a=e._wrapperState)&&a.controlled&&\"number\"===e.type&&Lc(e,\"number\",e.value)}},bd=H.extend({view:null,detail:null}),cd={Alt:\"altKey\",\nControl:\"ctrlKey\",Meta:\"metaKey\",Shift:\"shiftKey\"};function dd(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=cd[a])?!!b[a]:!1}function ed(){return dd}\nvar fd=bd.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:ed,button:null,buttons:null,relatedTarget:function(a){return a.relatedTarget||(a.fromElement===a.srcElement?a.toElement:a.fromElement)}}),gd=fd.extend({pointerId:null,width:null,height:null,pressure:null,tiltX:null,tiltY:null,pointerType:null,isPrimary:null}),hd={mouseEnter:{registrationName:\"onMouseEnter\",dependencies:[\"mouseout\",\"mouseover\"]},\nmouseLeave:{registrationName:\"onMouseLeave\",dependencies:[\"mouseout\",\"mouseover\"]},pointerEnter:{registrationName:\"onPointerEnter\",dependencies:[\"pointerout\",\"pointerover\"]},pointerLeave:{registrationName:\"onPointerLeave\",dependencies:[\"pointerout\",\"pointerover\"]}},id={eventTypes:hd,extractEvents:function(a,b,c,d){var e=\"mouseover\"===a||\"pointerover\"===a,f=\"mouseout\"===a||\"pointerout\"===a;if(e&&(c.relatedTarget||c.fromElement)||!f&&!e)return null;e=d.window===d?d:(e=d.ownerDocument)?e.defaultView||\ne.parentWindow:window;f?(f=b,b=(b=c.relatedTarget||c.toElement)?Na(b):null):f=null;if(f===b)return null;var g=void 0,h=void 0,k=void 0,n=void 0;if(\"mouseout\"===a||\"mouseover\"===a)g=fd,h=hd.mouseLeave,k=hd.mouseEnter,n=\"mouse\";else if(\"pointerout\"===a||\"pointerover\"===a)g=gd,h=hd.pointerLeave,k=hd.pointerEnter,n=\"pointer\";a=null==f?e:Oa(f);e=null==b?e:Oa(b);h=g.getPooled(h,f,c,d);h.type=n+\"leave\";h.target=a;h.relatedTarget=e;c=g.getPooled(k,b,c,d);c.type=n+\"enter\";c.target=e;c.relatedTarget=a;Za(h,\nc,f,b);return[h,c]}};function jd(a){var b=a;if(a.alternate)for(;b.return;)b=b.return;else{if(0!==(b.effectTag&2))return 1;for(;b.return;)if(b=b.return,0!==(b.effectTag&2))return 1}return 3===b.tag?2:3}function kd(a){2!==jd(a)?A(\"188\"):void 0}\nfunction ld(a){var b=a.alternate;if(!b)return b=jd(a),3===b?A(\"188\"):void 0,1===b?null:a;for(var c=a,d=b;;){var e=c.return,f=e?e.alternate:null;if(!e||!f)break;if(e.child===f.child){for(var g=e.child;g;){if(g===c)return kd(e),a;if(g===d)return kd(e),b;g=g.sibling}A(\"188\")}if(c.return!==d.return)c=e,d=f;else{g=!1;for(var h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===c){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}g?\nvoid 0:A(\"189\")}}c.alternate!==d?A(\"190\"):void 0}3!==c.tag?A(\"188\"):void 0;return c.stateNode.current===c?a:b}function md(a){a=ld(a);if(!a)return null;for(var b=a;;){if(5===b.tag||6===b.tag)return b;if(b.child)b.child.return=b,b=b.child;else{if(b===a)break;for(;!b.sibling;){if(!b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}}return null}\nfunction nd(a){a=ld(a);if(!a)return null;for(var b=a;;){if(5===b.tag||6===b.tag)return b;if(b.child&&4!==b.tag)b.child.return=b,b=b.child;else{if(b===a)break;for(;!b.sibling;){if(!b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}}return null}var od=H.extend({animationName:null,elapsedTime:null,pseudoElement:null}),pd=H.extend({clipboardData:function(a){return\"clipboardData\"in a?a.clipboardData:window.clipboardData}}),qd=bd.extend({relatedTarget:null});\nfunction rd(a){var b=a.keyCode;\"charCode\"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}\nvar sd={Esc:\"Escape\",Spacebar:\" \",Left:\"ArrowLeft\",Up:\"ArrowUp\",Right:\"ArrowRight\",Down:\"ArrowDown\",Del:\"Delete\",Win:\"OS\",Menu:\"ContextMenu\",Apps:\"ContextMenu\",Scroll:\"ScrollLock\",MozPrintableKey:\"Unidentified\"},td={8:\"Backspace\",9:\"Tab\",12:\"Clear\",13:\"Enter\",16:\"Shift\",17:\"Control\",18:\"Alt\",19:\"Pause\",20:\"CapsLock\",27:\"Escape\",32:\" \",33:\"PageUp\",34:\"PageDown\",35:\"End\",36:\"Home\",37:\"ArrowLeft\",38:\"ArrowUp\",39:\"ArrowRight\",40:\"ArrowDown\",45:\"Insert\",46:\"Delete\",112:\"F1\",113:\"F2\",114:\"F3\",115:\"F4\",\n116:\"F5\",117:\"F6\",118:\"F7\",119:\"F8\",120:\"F9\",121:\"F10\",122:\"F11\",123:\"F12\",144:\"NumLock\",145:\"ScrollLock\",224:\"Meta\"},ud=bd.extend({key:function(a){if(a.key){var b=sd[a.key]||a.key;if(\"Unidentified\"!==b)return b}return\"keypress\"===a.type?(a=rd(a),13===a?\"Enter\":String.fromCharCode(a)):\"keydown\"===a.type||\"keyup\"===a.type?td[a.keyCode]||\"Unidentified\":\"\"},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:ed,charCode:function(a){return\"keypress\"===\na.type?rd(a):0},keyCode:function(a){return\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0},which:function(a){return\"keypress\"===a.type?rd(a):\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0}}),vd=fd.extend({dataTransfer:null}),wd=bd.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:ed}),xd=H.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),yd=fd.extend({deltaX:function(a){return\"deltaX\"in a?a.deltaX:\"wheelDeltaX\"in\na?-a.wheelDeltaX:0},deltaY:function(a){return\"deltaY\"in a?a.deltaY:\"wheelDeltaY\"in a?-a.wheelDeltaY:\"wheelDelta\"in a?-a.wheelDelta:0},deltaZ:null,deltaMode:null}),zd=[[\"abort\",\"abort\"],[fb,\"animationEnd\"],[gb,\"animationIteration\"],[hb,\"animationStart\"],[\"canplay\",\"canPlay\"],[\"canplaythrough\",\"canPlayThrough\"],[\"drag\",\"drag\"],[\"dragenter\",\"dragEnter\"],[\"dragexit\",\"dragExit\"],[\"dragleave\",\"dragLeave\"],[\"dragover\",\"dragOver\"],[\"durationchange\",\"durationChange\"],[\"emptied\",\"emptied\"],[\"encrypted\",\"encrypted\"],\n[\"ended\",\"ended\"],[\"error\",\"error\"],[\"gotpointercapture\",\"gotPointerCapture\"],[\"load\",\"load\"],[\"loadeddata\",\"loadedData\"],[\"loadedmetadata\",\"loadedMetadata\"],[\"loadstart\",\"loadStart\"],[\"lostpointercapture\",\"lostPointerCapture\"],[\"mousemove\",\"mouseMove\"],[\"mouseout\",\"mouseOut\"],[\"mouseover\",\"mouseOver\"],[\"playing\",\"playing\"],[\"pointermove\",\"pointerMove\"],[\"pointerout\",\"pointerOut\"],[\"pointerover\",\"pointerOver\"],[\"progress\",\"progress\"],[\"scroll\",\"scroll\"],[\"seeking\",\"seeking\"],[\"stalled\",\"stalled\"],\n[\"suspend\",\"suspend\"],[\"timeupdate\",\"timeUpdate\"],[\"toggle\",\"toggle\"],[\"touchmove\",\"touchMove\"],[ib,\"transitionEnd\"],[\"waiting\",\"waiting\"],[\"wheel\",\"wheel\"]],Ad={},Bd={};function Cd(a,b){var c=a[0];a=a[1];var d=\"on\"+(a[0].toUpperCase()+a.slice(1));b={phasedRegistrationNames:{bubbled:d,captured:d+\"Capture\"},dependencies:[c],isInteractive:b};Ad[a]=b;Bd[c]=b}\n[[\"blur\",\"blur\"],[\"cancel\",\"cancel\"],[\"click\",\"click\"],[\"close\",\"close\"],[\"contextmenu\",\"contextMenu\"],[\"copy\",\"copy\"],[\"cut\",\"cut\"],[\"dblclick\",\"doubleClick\"],[\"dragend\",\"dragEnd\"],[\"dragstart\",\"dragStart\"],[\"drop\",\"drop\"],[\"focus\",\"focus\"],[\"input\",\"input\"],[\"invalid\",\"invalid\"],[\"keydown\",\"keyDown\"],[\"keypress\",\"keyPress\"],[\"keyup\",\"keyUp\"],[\"mousedown\",\"mouseDown\"],[\"mouseup\",\"mouseUp\"],[\"paste\",\"paste\"],[\"pause\",\"pause\"],[\"play\",\"play\"],[\"pointercancel\",\"pointerCancel\"],[\"pointerdown\",\"pointerDown\"],\n[\"pointerup\",\"pointerUp\"],[\"ratechange\",\"rateChange\"],[\"reset\",\"reset\"],[\"seeked\",\"seeked\"],[\"submit\",\"submit\"],[\"touchcancel\",\"touchCancel\"],[\"touchend\",\"touchEnd\"],[\"touchstart\",\"touchStart\"],[\"volumechange\",\"volumeChange\"]].forEach(function(a){Cd(a,!0)});zd.forEach(function(a){Cd(a,!1)});\nvar Dd={eventTypes:Ad,isInteractiveTopLevelEventType:function(a){a=Bd[a];return void 0!==a&&!0===a.isInteractive},extractEvents:function(a,b,c,d){var e=Bd[a];if(!e)return null;switch(a){case \"keypress\":if(0===rd(c))return null;case \"keydown\":case \"keyup\":a=ud;break;case \"blur\":case \"focus\":a=qd;break;case \"click\":if(2===c.button)return null;case \"dblclick\":case \"mousedown\":case \"mousemove\":case \"mouseup\":case \"mouseout\":case \"mouseover\":case \"contextmenu\":a=fd;break;case \"drag\":case \"dragend\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"dragstart\":case \"drop\":a=\nvd;break;case \"touchcancel\":case \"touchend\":case \"touchmove\":case \"touchstart\":a=wd;break;case fb:case gb:case hb:a=od;break;case ib:a=xd;break;case \"scroll\":a=bd;break;case \"wheel\":a=yd;break;case \"copy\":case \"cut\":case \"paste\":a=pd;break;case \"gotpointercapture\":case \"lostpointercapture\":case \"pointercancel\":case \"pointerdown\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"pointerup\":a=gd;break;default:a=H}b=a.getPooled(e,b,c,d);Ya(b);return b}},Ed=Dd.isInteractiveTopLevelEventType,\nFd=[];function Gd(a){var b=a.targetInst;do{if(!b){a.ancestors.push(b);break}var c;for(c=b;c.return;)c=c.return;c=3!==c.tag?null:c.stateNode.containerInfo;if(!c)break;a.ancestors.push(b);b=Na(c)}while(b);for(c=0;c<a.ancestors.length;c++)b=a.ancestors[c],Ja(a.topLevelType,b,a.nativeEvent,Zb(a.nativeEvent))}var Hd=!0;function Id(a){Hd=!!a}function K(a,b){if(!b)return null;var c=(Ed(a)?Kd:Ld).bind(null,a);b.addEventListener(a,c,!1)}\nfunction Md(a,b){if(!b)return null;var c=(Ed(a)?Kd:Ld).bind(null,a);b.addEventListener(a,c,!0)}function Kd(a,b){Tb(Ld,a,b)}function Ld(a,b){if(Hd){var c=Zb(b);c=Na(c);null===c||\"number\"!==typeof c.tag||2===jd(c)||(c=null);if(Fd.length){var d=Fd.pop();d.topLevelType=a;d.nativeEvent=b;d.targetInst=c;a=d}else a={topLevelType:a,nativeEvent:b,targetInst:c,ancestors:[]};try{Wb(Gd,a)}finally{a.topLevelType=null,a.nativeEvent=null,a.targetInst=null,a.ancestors.length=0,10>Fd.length&&Fd.push(a)}}}\nvar Nd={get _enabled(){return Hd},setEnabled:Id,isEnabled:function(){return Hd},trapBubbledEvent:K,trapCapturedEvent:Md,dispatchEvent:Ld},Od={},Pd=0,Qd=\"_reactListenersID\"+(\"\"+Math.random()).slice(2);function Rd(a){Object.prototype.hasOwnProperty.call(a,Qd)||(a[Qd]=Pd++,Od[a[Qd]]={});return Od[a[Qd]]}function Sd(a){for(;a&&a.firstChild;)a=a.firstChild;return a}\nfunction Td(a,b){var c=Sd(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=Sd(c)}}function Ud(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&(\"input\"===b&&(\"text\"===a.type||\"search\"===a.type||\"tel\"===a.type||\"url\"===a.type||\"password\"===a.type)||\"textarea\"===b||\"true\"===a.contentEditable)}\nvar Vd=m.canUseDOM&&\"documentMode\"in document&&11>=document.documentMode,Wd={select:{phasedRegistrationNames:{bubbled:\"onSelect\",captured:\"onSelectCapture\"},dependencies:\"blur contextmenu focus keydown keyup mousedown mouseup selectionchange\".split(\" \")}},Xd=null,Yd=null,Zd=null,$d=!1;\nfunction ae(a,b){if($d||null==Xd||Xd!==da())return null;var c=Xd;\"selectionStart\"in c&&Ud(c)?c={start:c.selectionStart,end:c.selectionEnd}:window.getSelection?(c=window.getSelection(),c={anchorNode:c.anchorNode,anchorOffset:c.anchorOffset,focusNode:c.focusNode,focusOffset:c.focusOffset}):c=void 0;return Zd&&ea(Zd,c)?null:(Zd=c,a=H.getPooled(Wd.select,Yd,a,b),a.type=\"select\",a.target=Xd,Ya(a),a)}\nvar be={eventTypes:Wd,extractEvents:function(a,b,c,d){var e=d.window===d?d.document:9===d.nodeType?d:d.ownerDocument,f;if(!(f=!e)){a:{e=Rd(e);f=sa.onSelect;for(var g=0;g<f.length;g++){var h=f[g];if(!e.hasOwnProperty(h)||!e[h]){e=!1;break a}}e=!0}f=!e}if(f)return null;e=b?Oa(b):window;switch(a){case \"focus\":if(Yb(e)||\"true\"===e.contentEditable)Xd=e,Yd=b,Zd=null;break;case \"blur\":Zd=Yd=Xd=null;break;case \"mousedown\":$d=!0;break;case \"contextmenu\":case \"mouseup\":return $d=!1,ae(c,d);case \"selectionchange\":if(Vd)break;\ncase \"keydown\":case \"keyup\":return ae(c,d)}return null}};Ga.injectEventPluginOrder(\"ResponderEventPlugin SimpleEventPlugin TapEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin\".split(\" \"));wa=Qa.getFiberCurrentPropsFromNode;xa=Qa.getInstanceFromNode;ya=Qa.getNodeFromInstance;Ga.injectEventPluginsByName({SimpleEventPlugin:Dd,EnterLeaveEventPlugin:id,ChangeEventPlugin:ad,SelectEventPlugin:be,BeforeInputEventPlugin:Ib});\nvar ce=\"function\"===typeof requestAnimationFrame?requestAnimationFrame:void 0,de=Date,ee=setTimeout,fe=clearTimeout,ge=void 0;if(\"object\"===typeof performance&&\"function\"===typeof performance.now){var he=performance;ge=function(){return he.now()}}else ge=function(){return de.now()};var ie=void 0,je=void 0;\nif(m.canUseDOM){var ke=\"function\"===typeof ce?ce:function(){A(\"276\")},L=null,le=null,me=-1,ne=!1,oe=!1,pe=0,qe=33,re=33,se={didTimeout:!1,timeRemaining:function(){var a=pe-ge();return 0<a?a:0}},ue=function(a,b){var c=a.scheduledCallback,d=!1;try{c(b),d=!0}finally{je(a),d||(ne=!0,window.postMessage(te,\"*\"))}},te=\"__reactIdleCallback$\"+Math.random().toString(36).slice(2);window.addEventListener(\"message\",function(a){if(a.source===window&&a.data===te&&(ne=!1,null!==L)){if(null!==L){var b=ge();if(!(-1===\nme||me>b)){a=-1;for(var c=[],d=L;null!==d;){var e=d.timeoutTime;-1!==e&&e<=b?c.push(d):-1!==e&&(-1===a||e<a)&&(a=e);d=d.next}if(0<c.length)for(se.didTimeout=!0,b=0,d=c.length;b<d;b++)ue(c[b],se);me=a}}for(a=ge();0<pe-a&&null!==L;)a=L,se.didTimeout=!1,ue(a,se),a=ge();null===L||oe||(oe=!0,ke(ve))}},!1);var ve=function(a){oe=!1;var b=a-pe+re;b<re&&qe<re?(8>b&&(b=8),re=b<qe?qe:b):qe=b;pe=a+re;ne||(ne=!0,window.postMessage(te,\"*\"))};ie=function(a,b){var c=-1;null!=b&&\"number\"===typeof b.timeout&&(c=ge()+\nb.timeout);if(-1===me||-1!==c&&c<me)me=c;a={scheduledCallback:a,timeoutTime:c,prev:null,next:null};null===L?L=a:(b=a.prev=le,null!==b&&(b.next=a));le=a;oe||(oe=!0,ke(ve));return a};je=function(a){if(null!==a.prev||L===a){var b=a.next,c=a.prev;a.next=null;a.prev=null;null!==b?null!==c?(c.next=b,b.prev=c):(b.prev=null,L=b):null!==c?(c.next=null,le=c):le=L=null}}}else{var we=new Map;ie=function(a){var b={scheduledCallback:a,timeoutTime:0,next:null,prev:null},c=ee(function(){a({timeRemaining:function(){return Infinity},\ndidTimeout:!1})});we.set(a,c);return b};je=function(a){var b=we.get(a.scheduledCallback);we.delete(a);fe(b)}}function xe(a){var b=\"\";ba.Children.forEach(a,function(a){null==a||\"string\"!==typeof a&&\"number\"!==typeof a||(b+=a)});return b}function ye(a,b){a=p({children:void 0},b);if(b=xe(b.children))a.children=b;return a}\nfunction ze(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b[\"$\"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty(\"$\"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=\"\"+c;b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}\nfunction Ae(a,b){var c=b.value;a._wrapperState={initialValue:null!=c?c:b.defaultValue,wasMultiple:!!b.multiple}}function Be(a,b){null!=b.dangerouslySetInnerHTML?A(\"91\"):void 0;return p({},b,{value:void 0,defaultValue:void 0,children:\"\"+a._wrapperState.initialValue})}function Ce(a,b){var c=b.value;null==c&&(c=b.defaultValue,b=b.children,null!=b&&(null!=c?A(\"92\"):void 0,Array.isArray(b)&&(1>=b.length?void 0:A(\"93\"),b=b[0]),c=\"\"+b),null==c&&(c=\"\"));a._wrapperState={initialValue:\"\"+c}}\nfunction De(a,b){var c=b.value;null!=c&&(c=\"\"+c,c!==a.value&&(a.value=c),null==b.defaultValue&&(a.defaultValue=c));null!=b.defaultValue&&(a.defaultValue=b.defaultValue)}function Ee(a){var b=a.textContent;b===a._wrapperState.initialValue&&(a.value=b)}var Fe={html:\"http://www.w3.org/1999/xhtml\",mathml:\"http://www.w3.org/1998/Math/MathML\",svg:\"http://www.w3.org/2000/svg\"};\nfunction Ge(a){switch(a){case \"svg\":return\"http://www.w3.org/2000/svg\";case \"math\":return\"http://www.w3.org/1998/Math/MathML\";default:return\"http://www.w3.org/1999/xhtml\"}}function He(a,b){return null==a||\"http://www.w3.org/1999/xhtml\"===a?Ge(b):\"http://www.w3.org/2000/svg\"===a&&\"foreignObject\"===b?\"http://www.w3.org/1999/xhtml\":a}\nvar Ie=void 0,Je=function(a){return\"undefined\"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(a.namespaceURI!==Fe.svg||\"innerHTML\"in a)a.innerHTML=b;else{Ie=Ie||document.createElement(\"div\");Ie.innerHTML=\"<svg>\"+b+\"</svg>\";for(b=Ie.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});\nfunction Ke(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}\nvar Le={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,\nstopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},Me=[\"Webkit\",\"ms\",\"Moz\",\"O\"];Object.keys(Le).forEach(function(a){Me.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);Le[b]=Le[a]})});\nfunction Ne(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf(\"--\");var e=c;var f=b[c];e=null==f||\"boolean\"===typeof f||\"\"===f?\"\":d||\"number\"!==typeof f||0===f||Le.hasOwnProperty(e)&&Le[e]?(\"\"+f).trim():f+\"px\";\"float\"===c&&(c=\"cssFloat\");d?a.setProperty(c,e):a[c]=e}}var Oe=p({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});\nfunction Pe(a,b,c){b&&(Oe[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML?A(\"137\",a,c()):void 0),null!=b.dangerouslySetInnerHTML&&(null!=b.children?A(\"60\"):void 0,\"object\"===typeof b.dangerouslySetInnerHTML&&\"__html\"in b.dangerouslySetInnerHTML?void 0:A(\"61\")),null!=b.style&&\"object\"!==typeof b.style?A(\"62\",c()):void 0)}\nfunction Qe(a,b){if(-1===a.indexOf(\"-\"))return\"string\"===typeof b.is;switch(a){case \"annotation-xml\":case \"color-profile\":case \"font-face\":case \"font-face-src\":case \"font-face-uri\":case \"font-face-format\":case \"font-face-name\":case \"missing-glyph\":return!1;default:return!0}}var Re=v.thatReturns(\"\");\nfunction Se(a,b){a=9===a.nodeType||11===a.nodeType?a:a.ownerDocument;var c=Rd(a);b=sa[b];for(var d=0;d<b.length;d++){var e=b[d];if(!c.hasOwnProperty(e)||!c[e]){switch(e){case \"scroll\":Md(\"scroll\",a);break;case \"focus\":case \"blur\":Md(\"focus\",a);Md(\"blur\",a);c.blur=!0;c.focus=!0;break;case \"cancel\":case \"close\":$b(e,!0)&&Md(e,a);break;case \"invalid\":case \"submit\":case \"reset\":break;default:-1===jb.indexOf(e)&&K(e,a)}c[e]=!0}}}\nfunction Te(a,b,c,d){c=9===c.nodeType?c:c.ownerDocument;d===Fe.html&&(d=Ge(a));d===Fe.html?\"script\"===a?(a=c.createElement(\"div\"),a.innerHTML=\"<script>\\x3c/script>\",a=a.removeChild(a.firstChild)):a=\"string\"===typeof b.is?c.createElement(a,{is:b.is}):c.createElement(a):a=c.createElementNS(d,a);return a}function Ue(a,b){return(9===b.nodeType?b:b.ownerDocument).createTextNode(a)}\nfunction Ve(a,b,c,d){var e=Qe(b,c);switch(b){case \"iframe\":case \"object\":K(\"load\",a);var f=c;break;case \"video\":case \"audio\":for(f=0;f<jb.length;f++)K(jb[f],a);f=c;break;case \"source\":K(\"error\",a);f=c;break;case \"img\":case \"image\":case \"link\":K(\"error\",a);K(\"load\",a);f=c;break;case \"form\":K(\"reset\",a);K(\"submit\",a);f=c;break;case \"details\":K(\"toggle\",a);f=c;break;case \"input\":Hc(a,c);f=Gc(a,c);K(\"invalid\",a);Se(d,\"onChange\");break;case \"option\":f=ye(a,c);break;case \"select\":Ae(a,c);f=p({},c,{value:void 0});\nK(\"invalid\",a);Se(d,\"onChange\");break;case \"textarea\":Ce(a,c);f=Be(a,c);K(\"invalid\",a);Se(d,\"onChange\");break;default:f=c}Pe(b,f,Re);var g=f,h;for(h in g)if(g.hasOwnProperty(h)){var k=g[h];\"style\"===h?Ne(a,k,Re):\"dangerouslySetInnerHTML\"===h?(k=k?k.__html:void 0,null!=k&&Je(a,k)):\"children\"===h?\"string\"===typeof k?(\"textarea\"!==b||\"\"!==k)&&Ke(a,k):\"number\"===typeof k&&Ke(a,\"\"+k):\"suppressContentEditableWarning\"!==h&&\"suppressHydrationWarning\"!==h&&\"autoFocus\"!==h&&(ra.hasOwnProperty(h)?null!=k&&Se(d,\nh):null!=k&&Fc(a,h,k,e))}switch(b){case \"input\":cc(a);Mc(a,c,!1);break;case \"textarea\":cc(a);Ee(a,c);break;case \"option\":null!=c.value&&a.setAttribute(\"value\",c.value);break;case \"select\":a.multiple=!!c.multiple;b=c.value;null!=b?ze(a,!!c.multiple,b,!1):null!=c.defaultValue&&ze(a,!!c.multiple,c.defaultValue,!0);break;default:\"function\"===typeof f.onClick&&(a.onclick=v)}}\nfunction We(a,b,c,d,e){var f=null;switch(b){case \"input\":c=Gc(a,c);d=Gc(a,d);f=[];break;case \"option\":c=ye(a,c);d=ye(a,d);f=[];break;case \"select\":c=p({},c,{value:void 0});d=p({},d,{value:void 0});f=[];break;case \"textarea\":c=Be(a,c);d=Be(a,d);f=[];break;default:\"function\"!==typeof c.onClick&&\"function\"===typeof d.onClick&&(a.onclick=v)}Pe(b,d,Re);b=a=void 0;var g=null;for(a in c)if(!d.hasOwnProperty(a)&&c.hasOwnProperty(a)&&null!=c[a])if(\"style\"===a){var h=c[a];for(b in h)h.hasOwnProperty(b)&&(g||\n(g={}),g[b]=\"\")}else\"dangerouslySetInnerHTML\"!==a&&\"children\"!==a&&\"suppressContentEditableWarning\"!==a&&\"suppressHydrationWarning\"!==a&&\"autoFocus\"!==a&&(ra.hasOwnProperty(a)?f||(f=[]):(f=f||[]).push(a,null));for(a in d){var k=d[a];h=null!=c?c[a]:void 0;if(d.hasOwnProperty(a)&&k!==h&&(null!=k||null!=h))if(\"style\"===a)if(h){for(b in h)!h.hasOwnProperty(b)||k&&k.hasOwnProperty(b)||(g||(g={}),g[b]=\"\");for(b in k)k.hasOwnProperty(b)&&h[b]!==k[b]&&(g||(g={}),g[b]=k[b])}else g||(f||(f=[]),f.push(a,g)),\ng=k;else\"dangerouslySetInnerHTML\"===a?(k=k?k.__html:void 0,h=h?h.__html:void 0,null!=k&&h!==k&&(f=f||[]).push(a,\"\"+k)):\"children\"===a?h===k||\"string\"!==typeof k&&\"number\"!==typeof k||(f=f||[]).push(a,\"\"+k):\"suppressContentEditableWarning\"!==a&&\"suppressHydrationWarning\"!==a&&(ra.hasOwnProperty(a)?(null!=k&&Se(e,a),f||h===k||(f=[])):(f=f||[]).push(a,k))}g&&(f=f||[]).push(\"style\",g);return f}\nfunction Xe(a,b,c,d,e){\"input\"===c&&\"radio\"===e.type&&null!=e.name&&Jc(a,e);Qe(c,d);d=Qe(c,e);for(var f=0;f<b.length;f+=2){var g=b[f],h=b[f+1];\"style\"===g?Ne(a,h,Re):\"dangerouslySetInnerHTML\"===g?Je(a,h):\"children\"===g?Ke(a,h):Fc(a,g,h,d)}switch(c){case \"input\":Kc(a,e);break;case \"textarea\":De(a,e);break;case \"select\":a._wrapperState.initialValue=void 0,b=a._wrapperState.wasMultiple,a._wrapperState.wasMultiple=!!e.multiple,c=e.value,null!=c?ze(a,!!e.multiple,c,!1):b!==!!e.multiple&&(null!=e.defaultValue?\nze(a,!!e.multiple,e.defaultValue,!0):ze(a,!!e.multiple,e.multiple?[]:\"\",!1))}}\nfunction Ye(a,b,c,d,e){switch(b){case \"iframe\":case \"object\":K(\"load\",a);break;case \"video\":case \"audio\":for(d=0;d<jb.length;d++)K(jb[d],a);break;case \"source\":K(\"error\",a);break;case \"img\":case \"image\":case \"link\":K(\"error\",a);K(\"load\",a);break;case \"form\":K(\"reset\",a);K(\"submit\",a);break;case \"details\":K(\"toggle\",a);break;case \"input\":Hc(a,c);K(\"invalid\",a);Se(e,\"onChange\");break;case \"select\":Ae(a,c);K(\"invalid\",a);Se(e,\"onChange\");break;case \"textarea\":Ce(a,c),K(\"invalid\",a),Se(e,\"onChange\")}Pe(b,\nc,Re);d=null;for(var f in c)if(c.hasOwnProperty(f)){var g=c[f];\"children\"===f?\"string\"===typeof g?a.textContent!==g&&(d=[\"children\",g]):\"number\"===typeof g&&a.textContent!==\"\"+g&&(d=[\"children\",\"\"+g]):ra.hasOwnProperty(f)&&null!=g&&Se(e,f)}switch(b){case \"input\":cc(a);Mc(a,c,!0);break;case \"textarea\":cc(a);Ee(a,c);break;case \"select\":case \"option\":break;default:\"function\"===typeof c.onClick&&(a.onclick=v)}return d}function Ze(a,b){return a.nodeValue!==b}\nvar $e={createElement:Te,createTextNode:Ue,setInitialProperties:Ve,diffProperties:We,updateProperties:Xe,diffHydratedProperties:Ye,diffHydratedText:Ze,warnForUnmatchedText:function(){},warnForDeletedHydratableElement:function(){},warnForDeletedHydratableText:function(){},warnForInsertedHydratedElement:function(){},warnForInsertedHydratedText:function(){},restoreControlledState:function(a,b,c){switch(b){case \"input\":Kc(a,c);b=c.name;if(\"radio\"===c.type&&null!=b){for(c=a;c.parentNode;)c=c.parentNode;\nc=c.querySelectorAll(\"input[name=\"+JSON.stringify(\"\"+b)+'][type=\"radio\"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=Pa(d);e?void 0:A(\"90\");dc(d);Kc(d,e)}}}break;case \"textarea\":De(a,c);break;case \"select\":b=c.value,null!=b&&ze(a,!!c.multiple,b,!1)}}},af=null,bf=null;function cf(a,b){switch(a){case \"button\":case \"input\":case \"select\":case \"textarea\":return!!b.autoFocus}return!1}\nfunction df(a,b){return\"textarea\"===a||\"string\"===typeof b.children||\"number\"===typeof b.children||\"object\"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&\"string\"===typeof b.dangerouslySetInnerHTML.__html}var ef=ge,ff=ie,gf=je;function hf(a){for(a=a.nextSibling;a&&1!==a.nodeType&&3!==a.nodeType;)a=a.nextSibling;return a}function jf(a){for(a=a.firstChild;a&&1!==a.nodeType&&3!==a.nodeType;)a=a.nextSibling;return a}new Set;var kf=[],lf=-1;function mf(a){return{current:a}}\nfunction M(a){0>lf||(a.current=kf[lf],kf[lf]=null,lf--)}function N(a,b){lf++;kf[lf]=a.current;a.current=b}var nf=mf(ha),O=mf(!1),of=ha;function pf(a){return qf(a)?of:nf.current}\nfunction rf(a,b){var c=a.type.contextTypes;if(!c)return ha;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}function qf(a){return 2===a.tag&&null!=a.type.childContextTypes}function sf(a){qf(a)&&(M(O,a),M(nf,a))}function tf(a){M(O,a);M(nf,a)}\nfunction uf(a,b,c){nf.current!==ha?A(\"168\"):void 0;N(nf,b,a);N(O,c,a)}function vf(a,b){var c=a.stateNode,d=a.type.childContextTypes;if(\"function\"!==typeof c.getChildContext)return b;c=c.getChildContext();for(var e in c)e in d?void 0:A(\"108\",uc(a)||\"Unknown\",e);return p({},b,c)}function wf(a){if(!qf(a))return!1;var b=a.stateNode;b=b&&b.__reactInternalMemoizedMergedChildContext||ha;of=nf.current;N(nf,b,a);N(O,O.current,a);return!0}\nfunction xf(a,b){var c=a.stateNode;c?void 0:A(\"169\");if(b){var d=vf(a,of);c.__reactInternalMemoizedMergedChildContext=d;M(O,a);M(nf,a);N(nf,d,a)}else M(O,a);N(O,b,a)}\nfunction yf(a,b,c,d){this.tag=a;this.key=c;this.sibling=this.child=this.return=this.stateNode=this.type=null;this.index=0;this.ref=null;this.pendingProps=b;this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.effectTag=0;this.lastEffect=this.firstEffect=this.nextEffect=null;this.expirationTime=0;this.alternate=null}\nfunction zf(a,b,c){var d=a.alternate;null===d?(d=new yf(a.tag,b,a.key,a.mode),d.type=a.type,d.stateNode=a.stateNode,d.alternate=a,a.alternate=d):(d.pendingProps=b,d.effectTag=0,d.nextEffect=null,d.firstEffect=null,d.lastEffect=null);d.expirationTime=c;d.child=a.child;d.memoizedProps=a.memoizedProps;d.memoizedState=a.memoizedState;d.updateQueue=a.updateQueue;d.sibling=a.sibling;d.index=a.index;d.ref=a.ref;return d}\nfunction Af(a,b,c){var d=a.type,e=a.key;a=a.props;if(\"function\"===typeof d)var f=d.prototype&&d.prototype.isReactComponent?2:0;else if(\"string\"===typeof d)f=5;else switch(d){case ic:return Bf(a.children,b,c,e);case pc:f=11;b|=3;break;case jc:f=11;b|=2;break;case kc:return d=new yf(15,a,e,b|4),d.type=kc,d.expirationTime=c,d;case rc:f=16;b|=2;break;default:a:{switch(\"object\"===typeof d&&null!==d?d.$$typeof:null){case lc:f=13;break a;case mc:f=12;break a;case qc:f=14;break a;default:A(\"130\",null==d?\nd:typeof d,\"\")}f=void 0}}b=new yf(f,a,e,b);b.type=d;b.expirationTime=c;return b}function Bf(a,b,c,d){a=new yf(10,a,d,b);a.expirationTime=c;return a}function Cf(a,b,c){a=new yf(6,a,null,b);a.expirationTime=c;return a}function Df(a,b,c){b=new yf(4,null!==a.children?a.children:[],a.key,b);b.expirationTime=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}\nfunction Ef(a,b,c){b=new yf(3,null,null,b?3:0);a={current:b,containerInfo:a,pendingChildren:null,earliestPendingTime:0,latestPendingTime:0,earliestSuspendedTime:0,latestSuspendedTime:0,latestPingedTime:0,pendingCommitExpirationTime:0,finishedWork:null,context:null,pendingContext:null,hydrate:c,remainingExpirationTime:0,firstBatch:null,nextScheduledRoot:null};return b.stateNode=a}var Ff=null,Gf=null;function Hf(a){return function(b){try{return a(b)}catch(c){}}}\nfunction If(a){if(\"undefined\"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var b=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(b.isDisabled||!b.supportsFiber)return!0;try{var c=b.inject(a);Ff=Hf(function(a){return b.onCommitFiberRoot(c,a)});Gf=Hf(function(a){return b.onCommitFiberUnmount(c,a)})}catch(d){}return!0}function Jf(a){\"function\"===typeof Ff&&Ff(a)}function Kf(a){\"function\"===typeof Gf&&Gf(a)}var Lf=!1;\nfunction Mf(a){return{expirationTime:0,baseState:a,firstUpdate:null,lastUpdate:null,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function Nf(a){return{expirationTime:a.expirationTime,baseState:a.baseState,firstUpdate:a.firstUpdate,lastUpdate:a.lastUpdate,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}\nfunction Of(a){return{expirationTime:a,tag:0,payload:null,callback:null,next:null,nextEffect:null}}function Pf(a,b,c){null===a.lastUpdate?a.firstUpdate=a.lastUpdate=b:(a.lastUpdate.next=b,a.lastUpdate=b);if(0===a.expirationTime||a.expirationTime>c)a.expirationTime=c}\nfunction Qf(a,b,c){var d=a.alternate;if(null===d){var e=a.updateQueue;var f=null;null===e&&(e=a.updateQueue=Mf(a.memoizedState))}else e=a.updateQueue,f=d.updateQueue,null===e?null===f?(e=a.updateQueue=Mf(a.memoizedState),f=d.updateQueue=Mf(d.memoizedState)):e=a.updateQueue=Nf(f):null===f&&(f=d.updateQueue=Nf(e));null===f||e===f?Pf(e,b,c):null===e.lastUpdate||null===f.lastUpdate?(Pf(e,b,c),Pf(f,b,c)):(Pf(e,b,c),f.lastUpdate=b)}\nfunction Rf(a,b,c){var d=a.updateQueue;d=null===d?a.updateQueue=Mf(a.memoizedState):Sf(a,d);null===d.lastCapturedUpdate?d.firstCapturedUpdate=d.lastCapturedUpdate=b:(d.lastCapturedUpdate.next=b,d.lastCapturedUpdate=b);if(0===d.expirationTime||d.expirationTime>c)d.expirationTime=c}function Sf(a,b){var c=a.alternate;null!==c&&b===c.updateQueue&&(b=a.updateQueue=Nf(b));return b}\nfunction Tf(a,b,c,d,e,f){switch(c.tag){case 1:return a=c.payload,\"function\"===typeof a?a.call(f,d,e):a;case 3:a.effectTag=a.effectTag&-1025|64;case 0:a=c.payload;e=\"function\"===typeof a?a.call(f,d,e):a;if(null===e||void 0===e)break;return p({},d,e);case 2:Lf=!0}return d}\nfunction Uf(a,b,c,d,e){Lf=!1;if(!(0===b.expirationTime||b.expirationTime>e)){b=Sf(a,b);for(var f=b.baseState,g=null,h=0,k=b.firstUpdate,n=f;null!==k;){var r=k.expirationTime;if(r>e){if(null===g&&(g=k,f=n),0===h||h>r)h=r}else n=Tf(a,b,k,n,c,d),null!==k.callback&&(a.effectTag|=32,k.nextEffect=null,null===b.lastEffect?b.firstEffect=b.lastEffect=k:(b.lastEffect.nextEffect=k,b.lastEffect=k));k=k.next}r=null;for(k=b.firstCapturedUpdate;null!==k;){var w=k.expirationTime;if(w>e){if(null===r&&(r=k,null===\ng&&(f=n)),0===h||h>w)h=w}else n=Tf(a,b,k,n,c,d),null!==k.callback&&(a.effectTag|=32,k.nextEffect=null,null===b.lastCapturedEffect?b.firstCapturedEffect=b.lastCapturedEffect=k:(b.lastCapturedEffect.nextEffect=k,b.lastCapturedEffect=k));k=k.next}null===g&&(b.lastUpdate=null);null===r?b.lastCapturedUpdate=null:a.effectTag|=32;null===g&&null===r&&(f=n);b.baseState=f;b.firstUpdate=g;b.firstCapturedUpdate=r;b.expirationTime=h;a.memoizedState=n}}\nfunction Vf(a,b){\"function\"!==typeof a?A(\"191\",a):void 0;a.call(b)}\nfunction Wf(a,b,c){null!==b.firstCapturedUpdate&&(null!==b.lastUpdate&&(b.lastUpdate.next=b.firstCapturedUpdate,b.lastUpdate=b.lastCapturedUpdate),b.firstCapturedUpdate=b.lastCapturedUpdate=null);a=b.firstEffect;for(b.firstEffect=b.lastEffect=null;null!==a;){var d=a.callback;null!==d&&(a.callback=null,Vf(d,c));a=a.nextEffect}a=b.firstCapturedEffect;for(b.firstCapturedEffect=b.lastCapturedEffect=null;null!==a;)b=a.callback,null!==b&&(a.callback=null,Vf(b,c)),a=a.nextEffect}\nfunction Xf(a,b){return{value:a,source:b,stack:vc(b)}}var Yf=mf(null),Zf=mf(null),$f=mf(0);function ag(a){var b=a.type._context;N($f,b._changedBits,a);N(Zf,b._currentValue,a);N(Yf,a,a);b._currentValue=a.pendingProps.value;b._changedBits=a.stateNode}function bg(a){var b=$f.current,c=Zf.current;M(Yf,a);M(Zf,a);M($f,a);a=a.type._context;a._currentValue=c;a._changedBits=b}var cg={},dg=mf(cg),eg=mf(cg),fg=mf(cg);function gg(a){a===cg?A(\"174\"):void 0;return a}\nfunction ig(a,b){N(fg,b,a);N(eg,a,a);N(dg,cg,a);var c=b.nodeType;switch(c){case 9:case 11:b=(b=b.documentElement)?b.namespaceURI:He(null,\"\");break;default:c=8===c?b.parentNode:b,b=c.namespaceURI||null,c=c.tagName,b=He(b,c)}M(dg,a);N(dg,b,a)}function jg(a){M(dg,a);M(eg,a);M(fg,a)}function kg(a){eg.current===a&&(M(dg,a),M(eg,a))}function lg(a,b,c){var d=a.memoizedState;b=b(c,d);d=null===b||void 0===b?d:p({},d,b);a.memoizedState=d;a=a.updateQueue;null!==a&&0===a.expirationTime&&(a.baseState=d)}\nvar pg={isMounted:function(a){return(a=a._reactInternalFiber)?2===jd(a):!1},enqueueSetState:function(a,b,c){a=a._reactInternalFiber;var d=mg();d=ng(d,a);var e=Of(d);e.payload=b;void 0!==c&&null!==c&&(e.callback=c);Qf(a,e,d);og(a,d)},enqueueReplaceState:function(a,b,c){a=a._reactInternalFiber;var d=mg();d=ng(d,a);var e=Of(d);e.tag=1;e.payload=b;void 0!==c&&null!==c&&(e.callback=c);Qf(a,e,d);og(a,d)},enqueueForceUpdate:function(a,b){a=a._reactInternalFiber;var c=mg();c=ng(c,a);var d=Of(c);d.tag=2;void 0!==\nb&&null!==b&&(d.callback=b);Qf(a,d,c);og(a,c)}};function qg(a,b,c,d,e,f){var g=a.stateNode;a=a.type;return\"function\"===typeof g.shouldComponentUpdate?g.shouldComponentUpdate(c,e,f):a.prototype&&a.prototype.isPureReactComponent?!ea(b,c)||!ea(d,e):!0}\nfunction rg(a,b,c,d){a=b.state;\"function\"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);\"function\"===typeof b.UNSAFE_componentWillReceiveProps&&b.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&pg.enqueueReplaceState(b,b.state,null)}\nfunction sg(a,b){var c=a.type,d=a.stateNode,e=a.pendingProps,f=pf(a);d.props=e;d.state=a.memoizedState;d.refs=ha;d.context=rf(a,f);f=a.updateQueue;null!==f&&(Uf(a,f,e,d,b),d.state=a.memoizedState);f=a.type.getDerivedStateFromProps;\"function\"===typeof f&&(lg(a,f,e),d.state=a.memoizedState);\"function\"===typeof c.getDerivedStateFromProps||\"function\"===typeof d.getSnapshotBeforeUpdate||\"function\"!==typeof d.UNSAFE_componentWillMount&&\"function\"!==typeof d.componentWillMount||(c=d.state,\"function\"===typeof d.componentWillMount&&\nd.componentWillMount(),\"function\"===typeof d.UNSAFE_componentWillMount&&d.UNSAFE_componentWillMount(),c!==d.state&&pg.enqueueReplaceState(d,d.state,null),f=a.updateQueue,null!==f&&(Uf(a,f,e,d,b),d.state=a.memoizedState));\"function\"===typeof d.componentDidMount&&(a.effectTag|=4)}var tg=Array.isArray;\nfunction ug(a,b,c){a=c.ref;if(null!==a&&\"function\"!==typeof a&&\"object\"!==typeof a){if(c._owner){c=c._owner;var d=void 0;c&&(2!==c.tag?A(\"110\"):void 0,d=c.stateNode);d?void 0:A(\"147\",a);var e=\"\"+a;if(null!==b&&null!==b.ref&&\"function\"===typeof b.ref&&b.ref._stringRef===e)return b.ref;b=function(a){var b=d.refs===ha?d.refs={}:d.refs;null===a?delete b[e]:b[e]=a};b._stringRef=e;return b}\"string\"!==typeof a?A(\"148\"):void 0;c._owner?void 0:A(\"254\",a)}return a}\nfunction vg(a,b){\"textarea\"!==a.type&&A(\"31\",\"[object Object]\"===Object.prototype.toString.call(b)?\"object with keys {\"+Object.keys(b).join(\", \")+\"}\":b,\"\")}\nfunction wg(a){function b(b,c){if(a){var d=b.lastEffect;null!==d?(d.nextEffect=c,b.lastEffect=c):b.firstEffect=b.lastEffect=c;c.nextEffect=null;c.effectTag=8}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b,c){a=zf(a,b,c);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.effectTag=\n2,c):d;b.effectTag=2;return c}function g(b){a&&null===b.alternate&&(b.effectTag=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=Cf(c,a.mode,d),b.return=a,b;b=e(b,c,d);b.return=a;return b}function k(a,b,c,d){if(null!==b&&b.type===c.type)return d=e(b,c.props,d),d.ref=ug(a,b,c),d.return=a,d;d=Af(c,a.mode,d);d.ref=ug(a,b,c);d.return=a;return d}function n(a,b,c,d){if(null===b||4!==b.tag||b.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==c.implementation)return b=\nDf(c,a.mode,d),b.return=a,b;b=e(b,c.children||[],d);b.return=a;return b}function r(a,b,c,d,f){if(null===b||10!==b.tag)return b=Bf(c,a.mode,d,f),b.return=a,b;b=e(b,c,d);b.return=a;return b}function w(a,b,c){if(\"string\"===typeof b||\"number\"===typeof b)return b=Cf(\"\"+b,a.mode,c),b.return=a,b;if(\"object\"===typeof b&&null!==b){switch(b.$$typeof){case gc:return c=Af(b,a.mode,c),c.ref=ug(a,null,b),c.return=a,c;case hc:return b=Df(b,a.mode,c),b.return=a,b}if(tg(b)||tc(b))return b=Bf(b,a.mode,c,null),b.return=\na,b;vg(a,b)}return null}function P(a,b,c,d){var e=null!==b?b.key:null;if(\"string\"===typeof c||\"number\"===typeof c)return null!==e?null:h(a,b,\"\"+c,d);if(\"object\"===typeof c&&null!==c){switch(c.$$typeof){case gc:return c.key===e?c.type===ic?r(a,b,c.props.children,d,e):k(a,b,c,d):null;case hc:return c.key===e?n(a,b,c,d):null}if(tg(c)||tc(c))return null!==e?null:r(a,b,c,d,null);vg(a,c)}return null}function nc(a,b,c,d,e){if(\"string\"===typeof d||\"number\"===typeof d)return a=a.get(c)||null,h(b,a,\"\"+d,e);\nif(\"object\"===typeof d&&null!==d){switch(d.$$typeof){case gc:return a=a.get(null===d.key?c:d.key)||null,d.type===ic?r(b,a,d.props.children,e,d.key):k(b,a,d,e);case hc:return a=a.get(null===d.key?c:d.key)||null,n(b,a,d,e)}if(tg(d)||tc(d))return a=a.get(c)||null,r(b,a,d,e,null);vg(b,d)}return null}function Jd(e,g,h,k){for(var u=null,x=null,t=g,q=g=0,n=null;null!==t&&q<h.length;q++){t.index>q?(n=t,t=null):n=t.sibling;var l=P(e,t,h[q],k);if(null===l){null===t&&(t=n);break}a&&t&&null===l.alternate&&b(e,\nt);g=f(l,g,q);null===x?u=l:x.sibling=l;x=l;t=n}if(q===h.length)return c(e,t),u;if(null===t){for(;q<h.length;q++)if(t=w(e,h[q],k))g=f(t,g,q),null===x?u=t:x.sibling=t,x=t;return u}for(t=d(e,t);q<h.length;q++)if(n=nc(t,e,q,h[q],k))a&&null!==n.alternate&&t.delete(null===n.key?q:n.key),g=f(n,g,q),null===x?u=n:x.sibling=n,x=n;a&&t.forEach(function(a){return b(e,a)});return u}function E(e,g,h,k){var u=tc(h);\"function\"!==typeof u?A(\"150\"):void 0;h=u.call(h);null==h?A(\"151\"):void 0;for(var t=u=null,n=g,x=\ng=0,y=null,l=h.next();null!==n&&!l.done;x++,l=h.next()){n.index>x?(y=n,n=null):y=n.sibling;var r=P(e,n,l.value,k);if(null===r){n||(n=y);break}a&&n&&null===r.alternate&&b(e,n);g=f(r,g,x);null===t?u=r:t.sibling=r;t=r;n=y}if(l.done)return c(e,n),u;if(null===n){for(;!l.done;x++,l=h.next())l=w(e,l.value,k),null!==l&&(g=f(l,g,x),null===t?u=l:t.sibling=l,t=l);return u}for(n=d(e,n);!l.done;x++,l=h.next())l=nc(n,e,x,l.value,k),null!==l&&(a&&null!==l.alternate&&n.delete(null===l.key?x:l.key),g=f(l,g,x),null===\nt?u=l:t.sibling=l,t=l);a&&n.forEach(function(a){return b(e,a)});return u}return function(a,d,f,h){var k=\"object\"===typeof f&&null!==f&&f.type===ic&&null===f.key;k&&(f=f.props.children);var n=\"object\"===typeof f&&null!==f;if(n)switch(f.$$typeof){case gc:a:{n=f.key;for(k=d;null!==k;){if(k.key===n)if(10===k.tag?f.type===ic:k.type===f.type){c(a,k.sibling);d=e(k,f.type===ic?f.props.children:f.props,h);d.ref=ug(a,k,f);d.return=a;a=d;break a}else{c(a,k);break}else b(a,k);k=k.sibling}f.type===ic?(d=Bf(f.props.children,\na.mode,h,f.key),d.return=a,a=d):(h=Af(f,a.mode,h),h.ref=ug(a,d,f),h.return=a,a=h)}return g(a);case hc:a:{for(k=f.key;null!==d;){if(d.key===k)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[],h);d.return=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=Df(f,a.mode,h);d.return=a;a=d}return g(a)}if(\"string\"===typeof f||\"number\"===typeof f)return f=\"\"+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f,h),d.return=\na,a=d):(c(a,d),d=Cf(f,a.mode,h),d.return=a,a=d),g(a);if(tg(f))return Jd(a,d,f,h);if(tc(f))return E(a,d,f,h);n&&vg(a,f);if(\"undefined\"===typeof f&&!k)switch(a.tag){case 2:case 1:h=a.type,A(\"152\",h.displayName||h.name||\"Component\")}return c(a,d)}}var xg=wg(!0),yg=wg(!1),zg=null,Ag=null,Bg=!1;function Cg(a,b){var c=new yf(5,null,null,0);c.type=\"DELETED\";c.stateNode=b;c.return=a;c.effectTag=8;null!==a.lastEffect?(a.lastEffect.nextEffect=c,a.lastEffect=c):a.firstEffect=a.lastEffect=c}\nfunction Dg(a,b){switch(a.tag){case 5:var c=a.type;b=1!==b.nodeType||c.toLowerCase()!==b.nodeName.toLowerCase()?null:b;return null!==b?(a.stateNode=b,!0):!1;case 6:return b=\"\"===a.pendingProps||3!==b.nodeType?null:b,null!==b?(a.stateNode=b,!0):!1;default:return!1}}function Eg(a){if(Bg){var b=Ag;if(b){var c=b;if(!Dg(a,b)){b=hf(c);if(!b||!Dg(a,b)){a.effectTag|=2;Bg=!1;zg=a;return}Cg(zg,c)}zg=a;Ag=jf(b)}else a.effectTag|=2,Bg=!1,zg=a}}\nfunction Fg(a){for(a=a.return;null!==a&&5!==a.tag&&3!==a.tag;)a=a.return;zg=a}function Gg(a){if(a!==zg)return!1;if(!Bg)return Fg(a),Bg=!0,!1;var b=a.type;if(5!==a.tag||\"head\"!==b&&\"body\"!==b&&!df(b,a.memoizedProps))for(b=Ag;b;)Cg(a,b),b=hf(b);Fg(a);Ag=zg?hf(a.stateNode):null;return!0}function Hg(){Ag=zg=null;Bg=!1}function Q(a,b,c){Ig(a,b,c,b.expirationTime)}function Ig(a,b,c,d){b.child=null===a?yg(b,null,c,d):xg(b,a.child,c,d)}\nfunction Jg(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.effectTag|=128}function Kg(a,b,c,d,e){Jg(a,b);var f=0!==(b.effectTag&64);if(!c&&!f)return d&&xf(b,!1),R(a,b);c=b.stateNode;ec.current=b;var g=f?null:c.render();b.effectTag|=1;f&&(Ig(a,b,null,e),b.child=null);Ig(a,b,g,e);b.memoizedState=c.state;b.memoizedProps=c.props;d&&xf(b,!0);return b.child}\nfunction Lg(a){var b=a.stateNode;b.pendingContext?uf(a,b.pendingContext,b.pendingContext!==b.context):b.context&&uf(a,b.context,!1);ig(a,b.containerInfo)}\nfunction Mg(a,b,c,d){var e=a.child;null!==e&&(e.return=a);for(;null!==e;){switch(e.tag){case 12:var f=e.stateNode|0;if(e.type===b&&0!==(f&c)){for(f=e;null!==f;){var g=f.alternate;if(0===f.expirationTime||f.expirationTime>d)f.expirationTime=d,null!==g&&(0===g.expirationTime||g.expirationTime>d)&&(g.expirationTime=d);else if(null!==g&&(0===g.expirationTime||g.expirationTime>d))g.expirationTime=d;else break;f=f.return}f=null}else f=e.child;break;case 13:f=e.type===a.type?null:e.child;break;default:f=\ne.child}if(null!==f)f.return=e;else for(f=e;null!==f;){if(f===a){f=null;break}e=f.sibling;if(null!==e){e.return=f.return;f=e;break}f=f.return}e=f}}\nfunction Qg(a,b,c){var d=b.type._context,e=b.pendingProps,f=b.memoizedProps,g=!0;if(O.current)g=!1;else if(f===e)return b.stateNode=0,ag(b),R(a,b);var h=e.value;b.memoizedProps=e;if(null===f)h=1073741823;else if(f.value===e.value){if(f.children===e.children&&g)return b.stateNode=0,ag(b),R(a,b);h=0}else{var k=f.value;if(k===h&&(0!==k||1/k===1/h)||k!==k&&h!==h){if(f.children===e.children&&g)return b.stateNode=0,ag(b),R(a,b);h=0}else if(h=\"function\"===typeof d._calculateChangedBits?d._calculateChangedBits(k,\nh):1073741823,h|=0,0===h){if(f.children===e.children&&g)return b.stateNode=0,ag(b),R(a,b)}else Mg(b,d,h,c)}b.stateNode=h;ag(b);Q(a,b,e.children);return b.child}function R(a,b){null!==a&&b.child!==a.child?A(\"153\"):void 0;if(null!==b.child){a=b.child;var c=zf(a,a.pendingProps,a.expirationTime);b.child=c;for(c.return=b;null!==a.sibling;)a=a.sibling,c=c.sibling=zf(a,a.pendingProps,a.expirationTime),c.return=b;c.sibling=null}return b.child}\nfunction Rg(a,b,c){if(0===b.expirationTime||b.expirationTime>c){switch(b.tag){case 3:Lg(b);break;case 2:wf(b);break;case 4:ig(b,b.stateNode.containerInfo);break;case 13:ag(b)}return null}switch(b.tag){case 0:null!==a?A(\"155\"):void 0;var d=b.type,e=b.pendingProps,f=pf(b);f=rf(b,f);d=d(e,f);b.effectTag|=1;\"object\"===typeof d&&null!==d&&\"function\"===typeof d.render&&void 0===d.$$typeof?(f=b.type,b.tag=2,b.memoizedState=null!==d.state&&void 0!==d.state?d.state:null,f=f.getDerivedStateFromProps,\"function\"===\ntypeof f&&lg(b,f,e),e=wf(b),d.updater=pg,b.stateNode=d,d._reactInternalFiber=b,sg(b,c),a=Kg(a,b,!0,e,c)):(b.tag=1,Q(a,b,d),b.memoizedProps=e,a=b.child);return a;case 1:return e=b.type,c=b.pendingProps,O.current||b.memoizedProps!==c?(d=pf(b),d=rf(b,d),e=e(c,d),b.effectTag|=1,Q(a,b,e),b.memoizedProps=c,a=b.child):a=R(a,b),a;case 2:e=wf(b);if(null===a)if(null===b.stateNode){var g=b.pendingProps,h=b.type;d=pf(b);var k=2===b.tag&&null!=b.type.contextTypes;f=k?rf(b,d):ha;g=new h(g,f);b.memoizedState=null!==\ng.state&&void 0!==g.state?g.state:null;g.updater=pg;b.stateNode=g;g._reactInternalFiber=b;k&&(k=b.stateNode,k.__reactInternalMemoizedUnmaskedChildContext=d,k.__reactInternalMemoizedMaskedChildContext=f);sg(b,c);d=!0}else{h=b.type;d=b.stateNode;k=b.memoizedProps;f=b.pendingProps;d.props=k;var n=d.context;g=pf(b);g=rf(b,g);var r=h.getDerivedStateFromProps;(h=\"function\"===typeof r||\"function\"===typeof d.getSnapshotBeforeUpdate)||\"function\"!==typeof d.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof d.componentWillReceiveProps||\n(k!==f||n!==g)&&rg(b,d,f,g);Lf=!1;var w=b.memoizedState;n=d.state=w;var P=b.updateQueue;null!==P&&(Uf(b,P,f,d,c),n=b.memoizedState);k!==f||w!==n||O.current||Lf?(\"function\"===typeof r&&(lg(b,r,f),n=b.memoizedState),(k=Lf||qg(b,k,f,w,n,g))?(h||\"function\"!==typeof d.UNSAFE_componentWillMount&&\"function\"!==typeof d.componentWillMount||(\"function\"===typeof d.componentWillMount&&d.componentWillMount(),\"function\"===typeof d.UNSAFE_componentWillMount&&d.UNSAFE_componentWillMount()),\"function\"===typeof d.componentDidMount&&\n(b.effectTag|=4)):(\"function\"===typeof d.componentDidMount&&(b.effectTag|=4),b.memoizedProps=f,b.memoizedState=n),d.props=f,d.state=n,d.context=g,d=k):(\"function\"===typeof d.componentDidMount&&(b.effectTag|=4),d=!1)}else h=b.type,d=b.stateNode,f=b.memoizedProps,k=b.pendingProps,d.props=f,n=d.context,g=pf(b),g=rf(b,g),r=h.getDerivedStateFromProps,(h=\"function\"===typeof r||\"function\"===typeof d.getSnapshotBeforeUpdate)||\"function\"!==typeof d.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof d.componentWillReceiveProps||\n(f!==k||n!==g)&&rg(b,d,k,g),Lf=!1,n=b.memoizedState,w=d.state=n,P=b.updateQueue,null!==P&&(Uf(b,P,k,d,c),w=b.memoizedState),f!==k||n!==w||O.current||Lf?(\"function\"===typeof r&&(lg(b,r,k),w=b.memoizedState),(r=Lf||qg(b,f,k,n,w,g))?(h||\"function\"!==typeof d.UNSAFE_componentWillUpdate&&\"function\"!==typeof d.componentWillUpdate||(\"function\"===typeof d.componentWillUpdate&&d.componentWillUpdate(k,w,g),\"function\"===typeof d.UNSAFE_componentWillUpdate&&d.UNSAFE_componentWillUpdate(k,w,g)),\"function\"===typeof d.componentDidUpdate&&\n(b.effectTag|=4),\"function\"===typeof d.getSnapshotBeforeUpdate&&(b.effectTag|=256)):(\"function\"!==typeof d.componentDidUpdate||f===a.memoizedProps&&n===a.memoizedState||(b.effectTag|=4),\"function\"!==typeof d.getSnapshotBeforeUpdate||f===a.memoizedProps&&n===a.memoizedState||(b.effectTag|=256),b.memoizedProps=k,b.memoizedState=w),d.props=k,d.state=w,d.context=g,d=r):(\"function\"!==typeof d.componentDidUpdate||f===a.memoizedProps&&n===a.memoizedState||(b.effectTag|=4),\"function\"!==typeof d.getSnapshotBeforeUpdate||\nf===a.memoizedProps&&n===a.memoizedState||(b.effectTag|=256),d=!1);return Kg(a,b,d,e,c);case 3:Lg(b);e=b.updateQueue;if(null!==e)if(d=b.memoizedState,d=null!==d?d.element:null,Uf(b,e,b.pendingProps,null,c),e=b.memoizedState.element,e===d)Hg(),a=R(a,b);else{d=b.stateNode;if(d=(null===a||null===a.child)&&d.hydrate)Ag=jf(b.stateNode.containerInfo),zg=b,d=Bg=!0;d?(b.effectTag|=2,b.child=yg(b,null,e,c)):(Hg(),Q(a,b,e));a=b.child}else Hg(),a=R(a,b);return a;case 5:a:{gg(fg.current);e=gg(dg.current);d=He(e,\nb.type);e!==d&&(N(eg,b,b),N(dg,d,b));null===a&&Eg(b);e=b.type;k=b.memoizedProps;d=b.pendingProps;f=null!==a?a.memoizedProps:null;if(!O.current&&k===d){if(k=b.mode&1&&!!d.hidden)b.expirationTime=1073741823;if(!k||1073741823!==c){a=R(a,b);break a}}k=d.children;df(e,d)?k=null:f&&df(e,f)&&(b.effectTag|=16);Jg(a,b);1073741823!==c&&b.mode&1&&d.hidden?(b.expirationTime=1073741823,b.memoizedProps=d,a=null):(Q(a,b,k),b.memoizedProps=d,a=b.child)}return a;case 6:return null===a&&Eg(b),b.memoizedProps=b.pendingProps,\nnull;case 16:return null;case 4:return ig(b,b.stateNode.containerInfo),e=b.pendingProps,O.current||b.memoizedProps!==e?(null===a?b.child=xg(b,null,e,c):Q(a,b,e),b.memoizedProps=e,a=b.child):a=R(a,b),a;case 14:return e=b.type.render,c=b.pendingProps,d=b.ref,O.current||b.memoizedProps!==c||d!==(null!==a?a.ref:null)?(e=e(c,d),Q(a,b,e),b.memoizedProps=c,a=b.child):a=R(a,b),a;case 10:return c=b.pendingProps,O.current||b.memoizedProps!==c?(Q(a,b,c),b.memoizedProps=c,a=b.child):a=R(a,b),a;case 11:return c=\nb.pendingProps.children,O.current||null!==c&&b.memoizedProps!==c?(Q(a,b,c),b.memoizedProps=c,a=b.child):a=R(a,b),a;case 15:return c=b.pendingProps,b.memoizedProps===c?a=R(a,b):(Q(a,b,c.children),b.memoizedProps=c,a=b.child),a;case 13:return Qg(a,b,c);case 12:a:if(d=b.type,f=b.pendingProps,k=b.memoizedProps,e=d._currentValue,g=d._changedBits,O.current||0!==g||k!==f){b.memoizedProps=f;h=f.unstable_observedBits;if(void 0===h||null===h)h=1073741823;b.stateNode=h;if(0!==(g&h))Mg(b,d,g,c);else if(k===f){a=\nR(a,b);break a}c=f.children;c=c(e);b.effectTag|=1;Q(a,b,c);a=b.child}else a=R(a,b);return a;default:A(\"156\")}}function Sg(a){a.effectTag|=4}var Tg=void 0,Ug=void 0,Vg=void 0;Tg=function(){};Ug=function(a,b,c){(b.updateQueue=c)&&Sg(b)};Vg=function(a,b,c,d){c!==d&&Sg(b)};\nfunction Wg(a,b){var c=b.pendingProps;switch(b.tag){case 1:return null;case 2:return sf(b),null;case 3:jg(b);tf(b);var d=b.stateNode;d.pendingContext&&(d.context=d.pendingContext,d.pendingContext=null);if(null===a||null===a.child)Gg(b),b.effectTag&=-3;Tg(b);return null;case 5:kg(b);d=gg(fg.current);var e=b.type;if(null!==a&&null!=b.stateNode){var f=a.memoizedProps,g=b.stateNode,h=gg(dg.current);g=We(g,e,f,c,d);Ug(a,b,g,e,f,c,d,h);a.ref!==b.ref&&(b.effectTag|=128)}else{if(!c)return null===b.stateNode?\nA(\"166\"):void 0,null;a=gg(dg.current);if(Gg(b))c=b.stateNode,e=b.type,f=b.memoizedProps,c[C]=b,c[Ma]=f,d=Ye(c,e,f,a,d),b.updateQueue=d,null!==d&&Sg(b);else{a=Te(e,c,d,a);a[C]=b;a[Ma]=c;a:for(f=b.child;null!==f;){if(5===f.tag||6===f.tag)a.appendChild(f.stateNode);else if(4!==f.tag&&null!==f.child){f.child.return=f;f=f.child;continue}if(f===b)break;for(;null===f.sibling;){if(null===f.return||f.return===b)break a;f=f.return}f.sibling.return=f.return;f=f.sibling}Ve(a,e,c,d);cf(e,c)&&Sg(b);b.stateNode=\na}null!==b.ref&&(b.effectTag|=128)}return null;case 6:if(a&&null!=b.stateNode)Vg(a,b,a.memoizedProps,c);else{if(\"string\"!==typeof c)return null===b.stateNode?A(\"166\"):void 0,null;d=gg(fg.current);gg(dg.current);Gg(b)?(d=b.stateNode,c=b.memoizedProps,d[C]=b,Ze(d,c)&&Sg(b)):(d=Ue(c,d),d[C]=b,b.stateNode=d)}return null;case 14:return null;case 16:return null;case 10:return null;case 11:return null;case 15:return null;case 4:return jg(b),Tg(b),null;case 13:return bg(b),null;case 12:return null;case 0:A(\"167\");\ndefault:A(\"156\")}}function Xg(a,b){var c=b.source;null===b.stack&&null!==c&&vc(c);null!==c&&uc(c);b=b.value;null!==a&&2===a.tag&&uc(a);try{b&&b.suppressReactErrorLogging||console.error(b)}catch(d){d&&d.suppressReactErrorLogging||console.error(d)}}function Yg(a){var b=a.ref;if(null!==b)if(\"function\"===typeof b)try{b(null)}catch(c){Zg(a,c)}else b.current=null}\nfunction $g(a){\"function\"===typeof Kf&&Kf(a);switch(a.tag){case 2:Yg(a);var b=a.stateNode;if(\"function\"===typeof b.componentWillUnmount)try{b.props=a.memoizedProps,b.state=a.memoizedState,b.componentWillUnmount()}catch(c){Zg(a,c)}break;case 5:Yg(a);break;case 4:ah(a)}}function bh(a){return 5===a.tag||3===a.tag||4===a.tag}\nfunction ch(a){a:{for(var b=a.return;null!==b;){if(bh(b)){var c=b;break a}b=b.return}A(\"160\");c=void 0}var d=b=void 0;switch(c.tag){case 5:b=c.stateNode;d=!1;break;case 3:b=c.stateNode.containerInfo;d=!0;break;case 4:b=c.stateNode.containerInfo;d=!0;break;default:A(\"161\")}c.effectTag&16&&(Ke(b,\"\"),c.effectTag&=-17);a:b:for(c=a;;){for(;null===c.sibling;){if(null===c.return||bh(c.return)){c=null;break a}c=c.return}c.sibling.return=c.return;for(c=c.sibling;5!==c.tag&&6!==c.tag;){if(c.effectTag&2)continue b;\nif(null===c.child||4===c.tag)continue b;else c.child.return=c,c=c.child}if(!(c.effectTag&2)){c=c.stateNode;break a}}for(var e=a;;){if(5===e.tag||6===e.tag)if(c)if(d){var f=b,g=e.stateNode,h=c;8===f.nodeType?f.parentNode.insertBefore(g,h):f.insertBefore(g,h)}else b.insertBefore(e.stateNode,c);else d?(f=b,g=e.stateNode,8===f.nodeType?f.parentNode.insertBefore(g,f):f.appendChild(g)):b.appendChild(e.stateNode);else if(4!==e.tag&&null!==e.child){e.child.return=e;e=e.child;continue}if(e===a)break;for(;null===\ne.sibling;){if(null===e.return||e.return===a)return;e=e.return}e.sibling.return=e.return;e=e.sibling}}\nfunction ah(a){for(var b=a,c=!1,d=void 0,e=void 0;;){if(!c){c=b.return;a:for(;;){null===c?A(\"160\"):void 0;switch(c.tag){case 5:d=c.stateNode;e=!1;break a;case 3:d=c.stateNode.containerInfo;e=!0;break a;case 4:d=c.stateNode.containerInfo;e=!0;break a}c=c.return}c=!0}if(5===b.tag||6===b.tag){a:for(var f=b,g=f;;)if($g(g),null!==g.child&&4!==g.tag)g.child.return=g,g=g.child;else{if(g===f)break;for(;null===g.sibling;){if(null===g.return||g.return===f)break a;g=g.return}g.sibling.return=g.return;g=g.sibling}e?\n(f=d,g=b.stateNode,8===f.nodeType?f.parentNode.removeChild(g):f.removeChild(g)):d.removeChild(b.stateNode)}else if(4===b.tag?d=b.stateNode.containerInfo:$g(b),null!==b.child){b.child.return=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return;b=b.return;4===b.tag&&(c=!1)}b.sibling.return=b.return;b=b.sibling}}\nfunction dh(a,b){switch(b.tag){case 2:break;case 5:var c=b.stateNode;if(null!=c){var d=b.memoizedProps;a=null!==a?a.memoizedProps:d;var e=b.type,f=b.updateQueue;b.updateQueue=null;null!==f&&(c[Ma]=d,Xe(c,f,e,a,d))}break;case 6:null===b.stateNode?A(\"162\"):void 0;b.stateNode.nodeValue=b.memoizedProps;break;case 3:break;case 15:break;case 16:break;default:A(\"163\")}}function eh(a,b,c){c=Of(c);c.tag=3;c.payload={element:null};var d=b.value;c.callback=function(){fh(d);Xg(a,b)};return c}\nfunction gh(a,b,c){c=Of(c);c.tag=3;var d=a.stateNode;null!==d&&\"function\"===typeof d.componentDidCatch&&(c.callback=function(){null===hh?hh=new Set([this]):hh.add(this);var c=b.value,d=b.stack;Xg(a,b);this.componentDidCatch(c,{componentStack:null!==d?d:\"\"})});return c}\nfunction ih(a,b,c,d,e,f){c.effectTag|=512;c.firstEffect=c.lastEffect=null;d=Xf(d,c);a=b;do{switch(a.tag){case 3:a.effectTag|=1024;d=eh(a,d,f);Rf(a,d,f);return;case 2:if(b=d,c=a.stateNode,0===(a.effectTag&64)&&null!==c&&\"function\"===typeof c.componentDidCatch&&(null===hh||!hh.has(c))){a.effectTag|=1024;d=gh(a,b,f);Rf(a,d,f);return}}a=a.return}while(null!==a)}\nfunction jh(a){switch(a.tag){case 2:sf(a);var b=a.effectTag;return b&1024?(a.effectTag=b&-1025|64,a):null;case 3:return jg(a),tf(a),b=a.effectTag,b&1024?(a.effectTag=b&-1025|64,a):null;case 5:return kg(a),null;case 16:return b=a.effectTag,b&1024?(a.effectTag=b&-1025|64,a):null;case 4:return jg(a),null;case 13:return bg(a),null;default:return null}}var kh=ef(),lh=2,mh=kh,nh=0,oh=0,ph=!1,S=null,qh=null,T=0,rh=-1,sh=!1,U=null,th=!1,uh=!1,hh=null;\nfunction vh(){if(null!==S)for(var a=S.return;null!==a;){var b=a;switch(b.tag){case 2:sf(b);break;case 3:jg(b);tf(b);break;case 5:kg(b);break;case 4:jg(b);break;case 13:bg(b)}a=a.return}qh=null;T=0;rh=-1;sh=!1;S=null;uh=!1}\nfunction wh(a){for(;;){var b=a.alternate,c=a.return,d=a.sibling;if(0===(a.effectTag&512)){b=Wg(b,a,T);var e=a;if(1073741823===T||1073741823!==e.expirationTime){var f=0;switch(e.tag){case 3:case 2:var g=e.updateQueue;null!==g&&(f=g.expirationTime)}for(g=e.child;null!==g;)0!==g.expirationTime&&(0===f||f>g.expirationTime)&&(f=g.expirationTime),g=g.sibling;e.expirationTime=f}if(null!==b)return b;null!==c&&0===(c.effectTag&512)&&(null===c.firstEffect&&(c.firstEffect=a.firstEffect),null!==a.lastEffect&&\n(null!==c.lastEffect&&(c.lastEffect.nextEffect=a.firstEffect),c.lastEffect=a.lastEffect),1<a.effectTag&&(null!==c.lastEffect?c.lastEffect.nextEffect=a:c.firstEffect=a,c.lastEffect=a));if(null!==d)return d;if(null!==c)a=c;else{uh=!0;break}}else{a=jh(a,sh,T);if(null!==a)return a.effectTag&=511,a;null!==c&&(c.firstEffect=c.lastEffect=null,c.effectTag|=512);if(null!==d)return d;if(null!==c)a=c;else break}}return null}\nfunction xh(a){var b=Rg(a.alternate,a,T);null===b&&(b=wh(a));ec.current=null;return b}\nfunction yh(a,b,c){ph?A(\"243\"):void 0;ph=!0;if(b!==T||a!==qh||null===S)vh(),qh=a,T=b,rh=-1,S=zf(qh.current,null,T),a.pendingCommitExpirationTime=0;var d=!1;sh=!c||T<=lh;do{try{if(c)for(;null!==S&&!zh();)S=xh(S);else for(;null!==S;)S=xh(S)}catch(f){if(null===S)d=!0,fh(f);else{null===S?A(\"271\"):void 0;c=S;var e=c.return;if(null===e){d=!0;fh(f);break}ih(a,e,c,f,sh,T,mh);S=wh(c)}}break}while(1);ph=!1;if(d)return null;if(null===S){if(uh)return a.pendingCommitExpirationTime=b,a.current.alternate;sh?A(\"262\"):\nvoid 0;0<=rh&&setTimeout(function(){var b=a.current.expirationTime;0!==b&&(0===a.remainingExpirationTime||a.remainingExpirationTime<b)&&Ah(a,b)},rh);Bh(a.current.expirationTime)}return null}\nfunction Zg(a,b){var c;a:{ph&&!th?A(\"263\"):void 0;for(c=a.return;null!==c;){switch(c.tag){case 2:var d=c.stateNode;if(\"function\"===typeof c.type.getDerivedStateFromCatch||\"function\"===typeof d.componentDidCatch&&(null===hh||!hh.has(d))){a=Xf(b,a);a=gh(c,a,1);Qf(c,a,1);og(c,1);c=void 0;break a}break;case 3:a=Xf(b,a);a=eh(c,a,1);Qf(c,a,1);og(c,1);c=void 0;break a}c=c.return}3===a.tag&&(c=Xf(b,a),c=eh(a,c,1),Qf(a,c,1),og(a,1));c=void 0}return c}\nfunction Ch(){var a=2+25*(((mg()-2+500)/25|0)+1);a<=nh&&(a=nh+1);return nh=a}function ng(a,b){a=0!==oh?oh:ph?th?1:T:b.mode&1?Dh?2+10*(((a-2+15)/10|0)+1):2+25*(((a-2+500)/25|0)+1):1;Dh&&(0===Eh||a>Eh)&&(Eh=a);return a}\nfunction og(a,b){for(;null!==a;){if(0===a.expirationTime||a.expirationTime>b)a.expirationTime=b;null!==a.alternate&&(0===a.alternate.expirationTime||a.alternate.expirationTime>b)&&(a.alternate.expirationTime=b);if(null===a.return)if(3===a.tag){var c=a.stateNode;!ph&&0!==T&&b<T&&vh();var d=c.current.expirationTime;ph&&!th&&qh===c||Ah(c,d);Fh>Gh&&A(\"185\")}else break;a=a.return}}function mg(){mh=ef()-kh;return lh=(mh/10|0)+2}\nfunction Hh(a){var b=oh;oh=2+25*(((mg()-2+500)/25|0)+1);try{return a()}finally{oh=b}}function Ih(a,b,c,d,e){var f=oh;oh=1;try{return a(b,c,d,e)}finally{oh=f}}var Jh=null,V=null,Kh=0,Lh=void 0,W=!1,X=null,Y=0,Eh=0,Mh=!1,Nh=!1,Oh=null,Ph=null,Z=!1,Qh=!1,Dh=!1,Rh=null,Gh=1E3,Fh=0,Sh=1;function Th(a){if(0!==Kh){if(a>Kh)return;null!==Lh&&gf(Lh)}var b=ef()-kh;Kh=a;Lh=ff(Uh,{timeout:10*(a-2)-b})}\nfunction Ah(a,b){if(null===a.nextScheduledRoot)a.remainingExpirationTime=b,null===V?(Jh=V=a,a.nextScheduledRoot=a):(V=V.nextScheduledRoot=a,V.nextScheduledRoot=Jh);else{var c=a.remainingExpirationTime;if(0===c||b<c)a.remainingExpirationTime=b}W||(Z?Qh&&(X=a,Y=1,Vh(a,1,!1)):1===b?Wh():Th(b))}\nfunction Xh(){var a=0,b=null;if(null!==V)for(var c=V,d=Jh;null!==d;){var e=d.remainingExpirationTime;if(0===e){null===c||null===V?A(\"244\"):void 0;if(d===d.nextScheduledRoot){Jh=V=d.nextScheduledRoot=null;break}else if(d===Jh)Jh=e=d.nextScheduledRoot,V.nextScheduledRoot=e,d.nextScheduledRoot=null;else if(d===V){V=c;V.nextScheduledRoot=Jh;d.nextScheduledRoot=null;break}else c.nextScheduledRoot=d.nextScheduledRoot,d.nextScheduledRoot=null;d=c.nextScheduledRoot}else{if(0===a||e<a)a=e,b=d;if(d===V)break;\nc=d;d=d.nextScheduledRoot}}c=X;null!==c&&c===b&&1===a?Fh++:Fh=0;X=b;Y=a}function Uh(a){Yh(0,!0,a)}function Wh(){Yh(1,!1,null)}function Yh(a,b,c){Ph=c;Xh();if(b)for(;null!==X&&0!==Y&&(0===a||a>=Y)&&(!Mh||mg()>=Y);)mg(),Vh(X,Y,!Mh),Xh();else for(;null!==X&&0!==Y&&(0===a||a>=Y);)Vh(X,Y,!1),Xh();null!==Ph&&(Kh=0,Lh=null);0!==Y&&Th(Y);Ph=null;Mh=!1;Zh()}function $h(a,b){W?A(\"253\"):void 0;X=a;Y=b;Vh(a,b,!1);Wh();Zh()}\nfunction Zh(){Fh=0;if(null!==Rh){var a=Rh;Rh=null;for(var b=0;b<a.length;b++){var c=a[b];try{c._onComplete()}catch(d){Nh||(Nh=!0,Oh=d)}}}if(Nh)throw a=Oh,Oh=null,Nh=!1,a;}function Vh(a,b,c){W?A(\"245\"):void 0;W=!0;c?(c=a.finishedWork,null!==c?ai(a,c,b):(c=yh(a,b,!0),null!==c&&(zh()?a.finishedWork=c:ai(a,c,b)))):(c=a.finishedWork,null!==c?ai(a,c,b):(c=yh(a,b,!1),null!==c&&ai(a,c,b)));W=!1}\nfunction ai(a,b,c){var d=a.firstBatch;if(null!==d&&d._expirationTime<=c&&(null===Rh?Rh=[d]:Rh.push(d),d._defer)){a.finishedWork=b;a.remainingExpirationTime=0;return}a.finishedWork=null;th=ph=!0;c=b.stateNode;c.current===b?A(\"177\"):void 0;d=c.pendingCommitExpirationTime;0===d?A(\"261\"):void 0;c.pendingCommitExpirationTime=0;mg();ec.current=null;if(1<b.effectTag)if(null!==b.lastEffect){b.lastEffect.nextEffect=b;var e=b.firstEffect}else e=b;else e=b.firstEffect;af=Hd;var f=da();if(Ud(f)){if(\"selectionStart\"in\nf)var g={start:f.selectionStart,end:f.selectionEnd};else a:{var h=window.getSelection&&window.getSelection();if(h&&0!==h.rangeCount){g=h.anchorNode;var k=h.anchorOffset,n=h.focusNode;h=h.focusOffset;try{g.nodeType,n.nodeType}catch(Wa){g=null;break a}var r=0,w=-1,P=-1,nc=0,Jd=0,E=f,t=null;b:for(;;){for(var x;;){E!==g||0!==k&&3!==E.nodeType||(w=r+k);E!==n||0!==h&&3!==E.nodeType||(P=r+h);3===E.nodeType&&(r+=E.nodeValue.length);if(null===(x=E.firstChild))break;t=E;E=x}for(;;){if(E===f)break b;t===g&&\n++nc===k&&(w=r);t===n&&++Jd===h&&(P=r);if(null!==(x=E.nextSibling))break;E=t;t=E.parentNode}E=x}g=-1===w||-1===P?null:{start:w,end:P}}else g=null}g=g||{start:0,end:0}}else g=null;bf={focusedElem:f,selectionRange:g};Id(!1);for(U=e;null!==U;){f=!1;g=void 0;try{for(;null!==U;){if(U.effectTag&256){var u=U.alternate;k=U;switch(k.tag){case 2:if(k.effectTag&256&&null!==u){var y=u.memoizedProps,D=u.memoizedState,ja=k.stateNode;ja.props=k.memoizedProps;ja.state=k.memoizedState;var mi=ja.getSnapshotBeforeUpdate(y,\nD);ja.__reactInternalSnapshotBeforeUpdate=mi}break;case 3:case 5:case 6:case 4:break;default:A(\"163\")}}U=U.nextEffect}}catch(Wa){f=!0,g=Wa}f&&(null===U?A(\"178\"):void 0,Zg(U,g),null!==U&&(U=U.nextEffect))}for(U=e;null!==U;){u=!1;y=void 0;try{for(;null!==U;){var q=U.effectTag;q&16&&Ke(U.stateNode,\"\");if(q&128){var z=U.alternate;if(null!==z){var l=z.ref;null!==l&&(\"function\"===typeof l?l(null):l.current=null)}}switch(q&14){case 2:ch(U);U.effectTag&=-3;break;case 6:ch(U);U.effectTag&=-3;dh(U.alternate,\nU);break;case 4:dh(U.alternate,U);break;case 8:D=U,ah(D),D.return=null,D.child=null,D.alternate&&(D.alternate.child=null,D.alternate.return=null)}U=U.nextEffect}}catch(Wa){u=!0,y=Wa}u&&(null===U?A(\"178\"):void 0,Zg(U,y),null!==U&&(U=U.nextEffect))}l=bf;z=da();q=l.focusedElem;u=l.selectionRange;if(z!==q&&fa(document.documentElement,q)){null!==u&&Ud(q)&&(z=u.start,l=u.end,void 0===l&&(l=z),\"selectionStart\"in q?(q.selectionStart=z,q.selectionEnd=Math.min(l,q.value.length)):window.getSelection&&(z=window.getSelection(),\ny=q[lb()].length,l=Math.min(u.start,y),u=void 0===u.end?l:Math.min(u.end,y),!z.extend&&l>u&&(y=u,u=l,l=y),y=Td(q,l),D=Td(q,u),y&&D&&(1!==z.rangeCount||z.anchorNode!==y.node||z.anchorOffset!==y.offset||z.focusNode!==D.node||z.focusOffset!==D.offset)&&(ja=document.createRange(),ja.setStart(y.node,y.offset),z.removeAllRanges(),l>u?(z.addRange(ja),z.extend(D.node,D.offset)):(ja.setEnd(D.node,D.offset),z.addRange(ja)))));z=[];for(l=q;l=l.parentNode;)1===l.nodeType&&z.push({element:l,left:l.scrollLeft,\ntop:l.scrollTop});\"function\"===typeof q.focus&&q.focus();for(q=0;q<z.length;q++)l=z[q],l.element.scrollLeft=l.left,l.element.scrollTop=l.top}bf=null;Id(af);af=null;c.current=b;for(U=e;null!==U;){e=!1;q=void 0;try{for(z=d;null!==U;){var hg=U.effectTag;if(hg&36){var oc=U.alternate;l=U;u=z;switch(l.tag){case 2:var ca=l.stateNode;if(l.effectTag&4)if(null===oc)ca.props=l.memoizedProps,ca.state=l.memoizedState,ca.componentDidMount();else{var wi=oc.memoizedProps,xi=oc.memoizedState;ca.props=l.memoizedProps;\nca.state=l.memoizedState;ca.componentDidUpdate(wi,xi,ca.__reactInternalSnapshotBeforeUpdate)}var Ng=l.updateQueue;null!==Ng&&(ca.props=l.memoizedProps,ca.state=l.memoizedState,Wf(l,Ng,ca,u));break;case 3:var Og=l.updateQueue;if(null!==Og){y=null;if(null!==l.child)switch(l.child.tag){case 5:y=l.child.stateNode;break;case 2:y=l.child.stateNode}Wf(l,Og,y,u)}break;case 5:var yi=l.stateNode;null===oc&&l.effectTag&4&&cf(l.type,l.memoizedProps)&&yi.focus();break;case 6:break;case 4:break;case 15:break;case 16:break;\ndefault:A(\"163\")}}if(hg&128){l=void 0;var yc=U.ref;if(null!==yc){var Pg=U.stateNode;switch(U.tag){case 5:l=Pg;break;default:l=Pg}\"function\"===typeof yc?yc(l):yc.current=l}}var zi=U.nextEffect;U.nextEffect=null;U=zi}}catch(Wa){e=!0,q=Wa}e&&(null===U?A(\"178\"):void 0,Zg(U,q),null!==U&&(U=U.nextEffect))}ph=th=!1;\"function\"===typeof Jf&&Jf(b.stateNode);b=c.current.expirationTime;0===b&&(hh=null);a.remainingExpirationTime=b}function zh(){return null===Ph||Ph.timeRemaining()>Sh?!1:Mh=!0}\nfunction fh(a){null===X?A(\"246\"):void 0;X.remainingExpirationTime=0;Nh||(Nh=!0,Oh=a)}function Bh(a){null===X?A(\"246\"):void 0;X.remainingExpirationTime=a}function bi(a,b){var c=Z;Z=!0;try{return a(b)}finally{(Z=c)||W||Wh()}}function ci(a,b){if(Z&&!Qh){Qh=!0;try{return a(b)}finally{Qh=!1}}return a(b)}function di(a,b){W?A(\"187\"):void 0;var c=Z;Z=!0;try{return Ih(a,b)}finally{Z=c,Wh()}}\nfunction ei(a,b,c){if(Dh)return a(b,c);Z||W||0===Eh||(Yh(Eh,!1,null),Eh=0);var d=Dh,e=Z;Z=Dh=!0;try{return a(b,c)}finally{Dh=d,(Z=e)||W||Wh()}}function fi(a){var b=Z;Z=!0;try{Ih(a)}finally{(Z=b)||W||Yh(1,!1,null)}}\nfunction gi(a,b,c,d,e){var f=b.current;if(c){c=c._reactInternalFiber;var g;b:{2===jd(c)&&2===c.tag?void 0:A(\"170\");for(g=c;3!==g.tag;){if(qf(g)){g=g.stateNode.__reactInternalMemoizedMergedChildContext;break b}(g=g.return)?void 0:A(\"171\")}g=g.stateNode.context}c=qf(c)?vf(c,g):g}else c=ha;null===b.context?b.context=c:b.pendingContext=c;b=e;e=Of(d);e.payload={element:a};b=void 0===b?null:b;null!==b&&(e.callback=b);Qf(f,e,d);og(f,d);return d}\nfunction hi(a){var b=a._reactInternalFiber;void 0===b&&(\"function\"===typeof a.render?A(\"188\"):A(\"268\",Object.keys(a)));a=md(b);return null===a?null:a.stateNode}function ii(a,b,c,d){var e=b.current,f=mg();e=ng(f,e);return gi(a,b,c,e,d)}function ji(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return a.child.stateNode;default:return a.child.stateNode}}\nfunction ki(a){var b=a.findFiberByHostInstance;return If(p({},a,{findHostInstanceByFiber:function(a){a=md(a);return null===a?null:a.stateNode},findFiberByHostInstance:function(a){return b?b(a):null}}))}\nvar li={updateContainerAtExpirationTime:gi,createContainer:function(a,b,c){return Ef(a,b,c)},updateContainer:ii,flushRoot:$h,requestWork:Ah,computeUniqueAsyncExpiration:Ch,batchedUpdates:bi,unbatchedUpdates:ci,deferredUpdates:Hh,syncUpdates:Ih,interactiveUpdates:ei,flushInteractiveUpdates:function(){W||0===Eh||(Yh(Eh,!1,null),Eh=0)},flushControlled:fi,flushSync:di,getPublicRootInstance:ji,findHostInstance:hi,findHostInstanceWithNoPortals:function(a){a=nd(a);return null===a?null:a.stateNode},injectIntoDevTools:ki};\nfunction ni(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:hc,key:null==d?null:\"\"+d,children:a,containerInfo:b,implementation:c}}Kb.injectFiberControlledHostComponent($e);function oi(a){this._expirationTime=Ch();this._root=a;this._callbacks=this._next=null;this._hasChildren=this._didComplete=!1;this._children=null;this._defer=!0}\noi.prototype.render=function(a){this._defer?void 0:A(\"250\");this._hasChildren=!0;this._children=a;var b=this._root._internalRoot,c=this._expirationTime,d=new pi;gi(a,b,null,c,d._onCommit);return d};oi.prototype.then=function(a){if(this._didComplete)a();else{var b=this._callbacks;null===b&&(b=this._callbacks=[]);b.push(a)}};\noi.prototype.commit=function(){var a=this._root._internalRoot,b=a.firstBatch;this._defer&&null!==b?void 0:A(\"251\");if(this._hasChildren){var c=this._expirationTime;if(b!==this){this._hasChildren&&(c=this._expirationTime=b._expirationTime,this.render(this._children));for(var d=null,e=b;e!==this;)d=e,e=e._next;null===d?A(\"251\"):void 0;d._next=e._next;this._next=b;a.firstBatch=this}this._defer=!1;$h(a,c);b=this._next;this._next=null;b=a.firstBatch=b;null!==b&&b._hasChildren&&b.render(b._children)}else this._next=\nnull,this._defer=!1};oi.prototype._onComplete=function(){if(!this._didComplete){this._didComplete=!0;var a=this._callbacks;if(null!==a)for(var b=0;b<a.length;b++)(0,a[b])()}};function pi(){this._callbacks=null;this._didCommit=!1;this._onCommit=this._onCommit.bind(this)}pi.prototype.then=function(a){if(this._didCommit)a();else{var b=this._callbacks;null===b&&(b=this._callbacks=[]);b.push(a)}};\npi.prototype._onCommit=function(){if(!this._didCommit){this._didCommit=!0;var a=this._callbacks;if(null!==a)for(var b=0;b<a.length;b++){var c=a[b];\"function\"!==typeof c?A(\"191\",c):void 0;c()}}};function qi(a,b,c){this._internalRoot=Ef(a,b,c)}qi.prototype.render=function(a,b){var c=this._internalRoot,d=new pi;b=void 0===b?null:b;null!==b&&d.then(b);ii(a,c,null,d._onCommit);return d};\nqi.prototype.unmount=function(a){var b=this._internalRoot,c=new pi;a=void 0===a?null:a;null!==a&&c.then(a);ii(null,b,null,c._onCommit);return c};qi.prototype.legacy_renderSubtreeIntoContainer=function(a,b,c){var d=this._internalRoot,e=new pi;c=void 0===c?null:c;null!==c&&e.then(c);ii(b,d,a,e._onCommit);return e};\nqi.prototype.createBatch=function(){var a=new oi(this),b=a._expirationTime,c=this._internalRoot,d=c.firstBatch;if(null===d)c.firstBatch=a,a._next=null;else{for(c=null;null!==d&&d._expirationTime<=b;)c=d,d=d._next;a._next=d;null!==c&&(c._next=a)}return a};function ri(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||\" react-mount-point-unstable \"!==a.nodeValue))}Sb=li.batchedUpdates;Tb=li.interactiveUpdates;Ub=li.flushInteractiveUpdates;\nfunction si(a,b){b||(b=a?9===a.nodeType?a.documentElement:a.firstChild:null,b=!(!b||1!==b.nodeType||!b.hasAttribute(\"data-reactroot\")));if(!b)for(var c;c=a.lastChild;)a.removeChild(c);return new qi(a,!1,b)}\nfunction ti(a,b,c,d,e){ri(c)?void 0:A(\"200\");var f=c._reactRootContainer;if(f){if(\"function\"===typeof e){var g=e;e=function(){var a=ji(f._internalRoot);g.call(a)}}null!=a?f.legacy_renderSubtreeIntoContainer(a,b,e):f.render(b,e)}else{f=c._reactRootContainer=si(c,d);if(\"function\"===typeof e){var h=e;e=function(){var a=ji(f._internalRoot);h.call(a)}}ci(function(){null!=a?f.legacy_renderSubtreeIntoContainer(a,b,e):f.render(b,e)})}return ji(f._internalRoot)}\nfunction ui(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;ri(b)?void 0:A(\"200\");return ni(a,b,null,c)}\nvar vi={createPortal:ui,findDOMNode:function(a){return null==a?null:1===a.nodeType?a:hi(a)},hydrate:function(a,b,c){return ti(null,a,b,!0,c)},render:function(a,b,c){return ti(null,a,b,!1,c)},unstable_renderSubtreeIntoContainer:function(a,b,c,d){null==a||void 0===a._reactInternalFiber?A(\"38\"):void 0;return ti(a,b,c,!1,d)},unmountComponentAtNode:function(a){ri(a)?void 0:A(\"40\");return a._reactRootContainer?(ci(function(){ti(null,null,a,!1,function(){a._reactRootContainer=null})}),!0):!1},unstable_createPortal:function(){return ui.apply(void 0,\narguments)},unstable_batchedUpdates:bi,unstable_deferredUpdates:Hh,unstable_interactiveUpdates:ei,flushSync:di,unstable_flushControlled:fi,__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{EventPluginHub:Ka,EventPluginRegistry:va,EventPropagators:$a,ReactControlledComponent:Rb,ReactDOMComponentTree:Qa,ReactDOMEventListener:Nd},unstable_createRoot:function(a,b){return new qi(a,!0,null!=b&&!0===b.hydrate)}};ki({findFiberByHostInstance:Na,bundleType:0,version:\"16.4.1\",rendererPackageName:\"react-dom\"});\nvar Ai={default:vi},Bi=Ai&&vi||Ai;module.exports=Bi.default?Bi.default:Bi;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-dom/cjs/react-dom.production.min.js\n// module id = 29\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\nvar canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\n\n/**\n * Simple, lightweight module assisting with the detection and context of\n * Worker. Helps avoid circular dependencies and allows code to reason about\n * whether or not they are in a Worker, even if they never include the main\n * `ReactWorker` dependency.\n */\nvar ExecutionEnvironment = {\n\n  canUseDOM: canUseDOM,\n\n  canUseWorkers: typeof Worker !== 'undefined',\n\n  canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),\n\n  canUseViewport: canUseDOM && !!window.screen,\n\n  isInWorker: !canUseDOM // For now, this is true - might change in the future.\n\n};\n\nmodule.exports = ExecutionEnvironment;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/fbjs/lib/ExecutionEnvironment.js\n// module id = 30\n// module chunks = 0","'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n */\n\n/* eslint-disable fb-www/typeof-undefined */\n\n/**\n * Same as document.activeElement but wraps in a try-catch block. In IE it is\n * not safe to call document.activeElement if there is nothing focused.\n *\n * The activeElement will be null only if the document or document body is not\n * yet defined.\n *\n * @param {?DOMDocument} doc Defaults to current document.\n * @return {?DOMElement}\n */\nfunction getActiveElement(doc) /*?DOMElement*/{\n  doc = doc || (typeof document !== 'undefined' ? document : undefined);\n  if (typeof doc === 'undefined') {\n    return null;\n  }\n  try {\n    return doc.activeElement || doc.body;\n  } catch (e) {\n    return doc.body;\n  }\n}\n\nmodule.exports = getActiveElement;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/fbjs/lib/getActiveElement.js\n// module id = 31\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n * \n */\n\n/*eslint-disable no-self-compare */\n\n'use strict';\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\nfunction is(x, y) {\n  // SameValue algorithm\n  if (x === y) {\n    // Steps 1-5, 7-10\n    // Steps 6.b-6.e: +0 != -0\n    // Added the nonzero y check to make Flow happy, but it is redundant\n    return x !== 0 || y !== 0 || 1 / x === 1 / y;\n  } else {\n    // Step 6.a: NaN == NaN\n    return x !== x && y !== y;\n  }\n}\n\n/**\n * Performs equality by iterating through keys on an object and returning false\n * when any key has values which are not strictly equal between the arguments.\n * Returns true when the values of all keys are strictly equal.\n */\nfunction shallowEqual(objA, objB) {\n  if (is(objA, objB)) {\n    return true;\n  }\n\n  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {\n    return false;\n  }\n\n  var keysA = Object.keys(objA);\n  var keysB = Object.keys(objB);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  // Test for A's keys different from B.\n  for (var i = 0; i < keysA.length; i++) {\n    if (!hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nmodule.exports = shallowEqual;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/fbjs/lib/shallowEqual.js\n// module id = 32\n// module chunks = 0","'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nvar isTextNode = require('./isTextNode');\n\n/*eslint-disable no-bitwise */\n\n/**\n * Checks if a given DOM node contains or is another DOM node.\n */\nfunction containsNode(outerNode, innerNode) {\n  if (!outerNode || !innerNode) {\n    return false;\n  } else if (outerNode === innerNode) {\n    return true;\n  } else if (isTextNode(outerNode)) {\n    return false;\n  } else if (isTextNode(innerNode)) {\n    return containsNode(outerNode, innerNode.parentNode);\n  } else if ('contains' in outerNode) {\n    return outerNode.contains(innerNode);\n  } else if (outerNode.compareDocumentPosition) {\n    return !!(outerNode.compareDocumentPosition(innerNode) & 16);\n  } else {\n    return false;\n  }\n}\n\nmodule.exports = containsNode;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/fbjs/lib/containsNode.js\n// module id = 33\n// module chunks = 0","'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n */\n\nvar isNode = require('./isNode');\n\n/**\n * @param {*} object The object to check.\n * @return {boolean} Whether or not the object is a DOM text node.\n */\nfunction isTextNode(object) {\n  return isNode(object) && object.nodeType == 3;\n}\n\nmodule.exports = isTextNode;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/fbjs/lib/isTextNode.js\n// module id = 34\n// module chunks = 0","'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n */\n\n/**\n * @param {*} object The object to check.\n * @return {boolean} Whether or not the object is a DOM node.\n */\nfunction isNode(object) {\n  var doc = object ? object.ownerDocument || object : document;\n  var defaultView = doc.defaultView || window;\n  return !!(object && (typeof defaultView.Node === 'function' ? object instanceof defaultView.Node : typeof object === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string'));\n}\n\nmodule.exports = isNode;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/fbjs/lib/isNode.js\n// module id = 35\n// module chunks = 0","import React, { Component } from 'react';\nimport { jsPlumb } from \"jsplumb\";\nimport dagre from \"dagre\";\n\nconst JSPLUMB_ID = 'jsplumb_box';\nconst color = \"gray\";\nconst arrowCommon = {\n  foldback: 0.5,\n  fill: color,\n  fillStyle: color,\n  width: 14\n};\nconst overlays = [\n  [\"Arrow\", {\n    location: 1\n  }, arrowCommon]\n];\n\nlet edges = [\n  {\n    sourceId: \"1\",\n    targetId: \"2\",\n  },\n  {\n    sourceId: \"2\",\n    targetId: \"3\",\n  },\n  {\n    sourceId: \"3\",\n    targetId: \"4\",\n  },\n]\n\nlet nodes = [\n  {\n    id: \"1\",\n    name: 'Node 1',\n    style: {\n    },\n  },\n  {\n    id: \"2\",\n    name: 'Node 2',\n    style: {\n    },\n  },\n  {\n    id: \"3\",\n    name: 'Node 3',\n    style: {\n    },\n  },\n  {\n    id: \"4\",\n    name: 'Node 4',\n    style: {\n    },\n  },\n]\n\n\nconst getLayout = (nodes, edges, separation = 30) => {\n  const graph = new dagre.graphlib.Graph();\n  graph.setGraph({\n    marginx: ((document.documentElement.clientWidth || document.body.clientWidth) - 224 - 50 - 240) / 2,\n    marginy: 0,\n    nodesep: 30,\n    rankdir: \"TB\",\n    ranker: \"longest-path\",\n    ranksep: separation,\n  });\n  graph.setDefaultEdgeLabel(() => ({}));\n\n  nodes.forEach(node => {\n    const id = node.id;\n    graph.setNode(id, { width: 240, height: 80 });\n  });\n\n  edges.forEach(connection => {\n    graph.setEdge(connection.sourceId, connection.targetId);\n  });\n\n  dagre.layout(graph);\n  return graph;\n};\nconst graphNodes = getLayout(nodes, edges);\nnodes = nodes.map(node => {\n  const location = graphNodes._nodes[node.id];\n  let top = node.style ? node.style.top : ''\n  let left = node.style ? node.style.left : ''\n  return {\n    ...node,\n    style: {\n      left: left ? left : `${location.x}px`,\n      top: top ? top : `${location.y}px`,\n    },\n  };\n});\n\nconst jsPlumbSettings = {\n  Connector: [\n    \"Flowchart\",\n    {\n      alwaysRespectStubs: true,\n      cornerRadius: 20,\n      midpoint: 0.5,\n      stub: [30, 30],\n    },\n  ],\n  DragOptions: {\n    cursor: \"pointer\",\n    zIndex: 2000\n  },\n  PaintStyle: {\n    stroke: color,\n    strokeStyle: color,\n    lineWidth: 2\n  },\n  EndpointStyle: {\n    radius: 9,\n    fill: color,\n    fillStyle: color\n  },\n  HoverPaintStyle: {\n    stroke: \"#ec9f2e\",\n    strokeStyle: \"#ec9f2e\"\n  },\n  EndpointHoverStyle: {\n    fill: \"#ec9f2e\",\n    fillStyle: \"#ec9f2e\"\n  },\n  ConnectionOverlays: overlays,\n  Container: \"canvas\"\n}\n\n\nclass App extends Component {\n\n  state = {\n    edges,\n    nodes,\n    jsPlumbInstance: null,\n    isJsPlumbInstanceCreated: false,\n    dragging: false, // 是否触发画布拖动\n    nodeDragging: false, // 是否触发node拖动\n    _ratio: 0.25, // 滚轮的比率\n    _scale: 1, // 画布缩放比例\n    _left: 0, // 画布Left位置\n    _top: 0, // 画布Top位置\n    _initX: 0, // 拖动按下鼠标时的X位置\n    _initY: 0 // 拖动按下鼠标时的Y位置\n  }\n\n  // 连线事件\n  onConnection = (connObj, originalEvent) => {\n    if (!originalEvent) {\n      return;\n    }\n    connObj.connection.setPaintStyle({\n      stroke: \"#8b91a0\",\n      strokeStyle: \"#8b91a0\"\n    });\n    let sourceId = connObj.sourceId;\n    let targetId = connObj.targetId;\n    this.setState({\n      edges: [...this.state.edges, {\n        sourceId: sourceId,\n        targetId: targetId\n      }],\n    });\n    return false;\n  }\n\n  // 删线事件\n  onDelConnection = (connObj, originalEvent) => {\n    if (!originalEvent) {\n      return;\n    }\n    this.removeConnection(connObj)\n    return false;\n  }\n\n  // 删除连接线\n  removeConnection = (connection) => {\n    this.setState({\n      edges: this.state.edges.filter(\n        (conn) =>\n          !(\n            conn.sourceId === connection.sourceId &&\n            conn.targetId === connection.targetId\n          )\n      ),\n    });\n    this.updateParent();\n  };\n\n  // 更新父组件状态\n  updateParent = () => {\n    if (this.props.onChange) {\n      this.props.onChange({\n        edges: this.state.edges,\n        nodes: this.state.nodes,\n      });\n    }\n  };\n\n  // 绑定父组件传入的事件\n  setEventListeners = (jsPlumbInstance) => {\n    const eventListeners = this.props.eventListeners\n    if (eventListeners && typeof eventListeners === \"object\" && typeof eventListeners.length === \"number\") {\n      Object.keys(eventListeners).forEach(event => {\n        if (typeof eventListeners[event] !== \"undefined\") {\n          jsPlumbInstance.bind(event, eventListeners[event]);\n        }\n      });\n    }\n  }\n\n  // 缩放画布\n  onCanvasMousewheel = (e) => {\n    let self = this.state\n    //放大\n    if (e.deltaY < 0) {\n      this.setState({\n        _scale: self._scale + self._scale * self._ratio\n      })\n    }\n    //缩小\n    if (e.deltaY > 0) {\n      this.setState({\n        _scale: self._scale - self._scale * self._ratio\n      })\n    }\n  }\n\n  // node move\n  onMouseMove = (e) => {\n    if (!this.state.nodeDragging) {\n      this.setState({\n        nodeDragging: true\n      })\n    }\n  }\n\n  // 拖动画布\n  onCanvasMousedown = (e) => {\n    this.setState({\n      _initX: e.pageX,\n      _initY: e.pageY,\n      dragging: true\n    })\n  }\n\n  upDateNode = (options) => {\n    let nodesDom = this.refs[JSPLUMB_ID].querySelectorAll('.gui-canvas-node')\n    if (options) {\n      this.refs[JSPLUMB_ID].style.left = '0px'\n      this.refs[JSPLUMB_ID].style.top = '0px'\n    }\n    options = options || {}\n    this.setState({\n      ...options,\n      nodeDragging: false,\n      nodes: this.state.nodes.map((el) => {\n        for(let i = 0, l = nodesDom.length; i < l; i++){\n          let nodeDom = nodesDom[i]\n          if (nodeDom.id == el.id) {\n            el.style = {\n              top: nodeDom.style.top,\n              left: nodeDom.style.left\n            }\n            break;\n          }\n        }\n        return el\n      })\n    })\n  }\n\n  // 释放画布\n  onCanvasMouseUpLeave = (e) => {\n    let self = this.state\n    \n    if (self.dragging) {\n      let _left = self._left + e.pageX - self._initX\n      let _top = self._top + e.pageY - self._initY\n\n      this.refs[JSPLUMB_ID].style.left = _left + 'px'\n      this.refs[JSPLUMB_ID].style.top = _top + 'px'\n      this.setState({\n        _left,\n        _top,\n        nodeDragging: false,\n        dragging: false\n      })\n    } else if (self.nodeDragging) {\n      // node 的onMouseDown事件被阻止\n      this.upDateNode()\n    }\n  }\n\n  // 移动画布\n  onCanvasMousemove = (e) => {\n    let self = this.state\n    if (!self.dragging) {\n      return;\n    }\n    this.refs[JSPLUMB_ID].style.left = self._left + e.pageX - self._initX + 'px'\n    this.refs[JSPLUMB_ID].style.top = self._top + e.pageY - self._initY + 'px'\n  }\n\n  componentDidMount() {\n\n    jsPlumb.ready(() => {\n      const jsPlumbInstance = jsPlumb.getInstance(jsPlumbSettings || {})\n      jsPlumbInstance.setContainer(document.getElementById(JSPLUMB_ID));\n      jsPlumbInstance.bind(\"connection\", this.onConnection);\n      jsPlumbInstance.bind(\"contextmenu\", this.onDelConnection);\n      jsPlumbInstance.bind(\"connectionDetached\", this.onDelConnection);\n      this.setEventListeners(jsPlumbInstance);\n\n      let sourceEndpointStyle = {\n        fill: \"#1fb139\",\n        fillStyle: \"#1fb139\"\n      };\n      let targetEndpointStyle = {\n        fill: \"#f65d3b\",\n        fillStyle: \"#f65d3b\"\n      };\n      let endpoint = [\"Dot\", {\n        cssClass: \"endpointClass\",\n        radius: 5,\n        hoverClass: \"endpointHoverClass\"\n      }];\n      let connector = [\"Flowchart\", {\n        cssClass: \"connectorClass\",\n        hoverClass: \"connectorHoverClass\"\n      }];\n      let connectorStyle = {\n        lineWidth: 2,\n        stroke: \"#15a4fa\",\n        strokeStyle: \"#15a4fa\"\n      };\n      let hoverStyle = {\n        stroke: \"#1e8151\",\n        strokeStyle: \"#1e8151\",\n        lineWidth: 2\n      };\n      let anSourceEndpoint = {\n        endpoint: endpoint,\n        paintStyle: sourceEndpointStyle,\n        hoverPaintStyle: {\n          fill: \"#449999\",\n          fillStyle: \"#449999\"\n        },\n        isSource: true,\n        maxConnections: -1,\n        Anchor: [\"TopCenter\"],\n        connector: connector,\n        connectorStyle: connectorStyle,\n        connectorHoverStyle: hoverStyle\n      };\n      let anTargetEndpoint = {\n        endpoint: endpoint,\n        paintStyle: targetEndpointStyle,\n        hoverPaintStyle: {\n          fill: \"#449999\",\n          fillStyle: \"#449999\"\n        },\n        isTarget: true,\n        maxConnections: -1,\n        Anchor: [\"BottomCenter\"],\n        connector: connector,\n        connectorStyle: connectorStyle,\n        connectorHoverStyle: hoverStyle\n      };\n\n      //画点\n      let nodes = this.state.nodes\n      for (let i = 0; i < nodes.length; i++) {\n        let nUUID = nodes[i].id;\n        jsPlumbInstance.addEndpoint(nUUID, anSourceEndpoint, {\n          uuid: nUUID + \"-bottom\",\n          anchor: \"Bottom\",\n          maxConnections: -1\n        });\n        jsPlumbInstance.addEndpoint(nUUID, anTargetEndpoint, {\n          uuid: nUUID + \"-top\",\n          anchor: \"Top\",\n          maxConnections: -1\n        });\n        jsPlumbInstance.draggable(nUUID);\n      }\n\n\n      //画线\n      let edges = this.state.edges\n      for (let j = 0; j < edges.length; j++) {\n        let connection = jsPlumbInstance.connect({\n          uuids: [edges[j].sourceId + \"-bottom\", edges[j].targetId + \"-top\"],\n        });\n        connection.setPaintStyle({\n          stroke: \"#8b91a0\",\n          strokeStyle: \"#8b91a0\"\n        });\n      }\n\n      this.setState({\n        isJsPlumbInstanceCreated: true,\n        jsPlumbInstance,\n      });\n    });\n\n  }\n\n  render() {\n\n    let leftArray = [];\n    let topArray = [];\n\n    const nodesDom = this.state.nodes.map((node) => {\n      const style = node.style || {};\n\n      leftArray.push(parseFloat(style.left || 0));\n      topArray.push(parseFloat(style.top || 0));\n\n      return <div className=\"gui-canvas-node\"\n        onMouseMove={this.onMouseMove}\n        key={node.id} style={style} id={node.id}>\n        <div className=\"node-cnt\">\n          <h3 className=\"node-title\">{node.name}</h3>\n        </div>\n      </div>\n    })\n\n    const nodesMap = this.state.nodes.map((node) => {\n      return <div className=\"gui-canvas-node\" key={node.id + '_map'} style={node.style}>\n        <div className=\"node-cnt\">\n          <h3 className=\"node-title\">{node.name}</h3>\n        </div>\n      </div>\n    })\n\n\n    leftArray.sort((a, b) => { return a > b })\n    topArray.sort((a, b) => { return a > b })\n\n    let difLeft = leftArray[leftArray.length - 1] - leftArray[0] + 240\n    let difTop = topArray[topArray.length - 1] - topArray[0] + 80\n\n    let scale = Math.min(144 / (difLeft), 144 / (difTop))\n    let left = 0\n    let top = 0\n\n    if (difLeft > difTop) {\n      left = -leftArray[0] * scale\n      top = -topArray[0] * scale + (144 - difTop * scale) / 2\n    } else {\n      left = -leftArray[0] * scale + (144 - difLeft * scale) / 2\n      top = -topArray[0] * scale\n    }\n\n    let translateWidth = (document.documentElement.clientWidth * (1 - this.state._scale)) / 2;\n    let translateHeight = ((document.documentElement.clientHeight - 60) * (1 - this.state._scale)) / 2;\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">主页\n          <a style={{ marginLeft: '30px' }} href=\"javascript:;\" onClick={(e)=> { this.upDateNode({ _scale: 1, _left: 0, _top: 0 }) }}>还原</a>\n          <a style={{ marginLeft: '30px' }} href=\"javascript:;\" onClick={(e)=> { console.log({ nodes: this.state.nodes, edges: this.state.edges }) }}>提交参数</a>\n        </header>\n        <div key={JSPLUMB_ID} className=\"jsplumb-box\"\n          onWheel={this.onCanvasMousewheel}\n          onMouseMove={this.onCanvasMousemove}\n          onMouseDown={this.onCanvasMousedown}\n          onMouseUp={this.onCanvasMouseUpLeave}\n          onMouseLeave={this.onCanvasMouseUpLeave}\n          onContextMenu={(event) => { event.stopPropagation(); event.preventDefault(); }}\n        >\n          <div style={{\n            width: '150px',\n            height: '150px',\n            padding: '2px',\n            position: 'absolute',\n            right: '30px',\n            top: '30px',\n            border: '1px solid #c1c1c1',\n            background: '#F6F6F6',\n            zIndex: 2,\n            cursor: 'move',\n          }}>\n            <div style={{\n              position: 'relative',\n              width: '50px',\n              height: '50px',\n              left: `${left}px`,\n              top: `${top}px`,\n              transformOrigin: '0px 0px 0px',\n              transform: `scale(${scale})`\n            }}>\n              {\n                nodesMap\n              }\n            </div>\n          </div>\n          <div className=\"jsplumb-canvas\"\n            ref={JSPLUMB_ID}\n            id={JSPLUMB_ID}\n            style={{\n              transformOrigin: '0px 0px 0px',\n              transform: `translate(${translateWidth}px, ${translateHeight}px) scale(${this.state._scale})`\n            }}\n          >\n            {\n              nodesDom\n            }\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n\n\n// WEBPACK FOOTER //\n// ./src/App.js","/**\n * jsBezier\n *\n * Copyright (c) 2010 - 2017 jsPlumb (hello@jsplumbtoolkit.com)\n *\n * licensed under the MIT license.\n *\n * a set of Bezier curve functions that deal with Beziers, used by jsPlumb, and perhaps useful for other people.  These functions work with Bezier\n * curves of arbitrary degree.\n *\n * - functions are all in the 'jsBezier' namespace.\n *\n * - all input points should be in the format {x:.., y:..}. all output points are in this format too.\n *\n * - all input curves should be in the format [ {x:.., y:..}, {x:.., y:..}, {x:.., y:..}, {x:.., y:..} ]\n *\n * - 'location' as used as an input here refers to a decimal in the range 0-1 inclusive, which indicates a point some proportion along the length\n * of the curve.  location as output has the same format and meaning.\n *\n *\n * Function List:\n * --------------\n *\n * distanceFromCurve(point, curve)\n *\n * \tCalculates the distance that the given point lies from the given Bezier.  Note that it is computed relative to the center of the Bezier,\n * so if you have stroked the curve with a wide pen you may wish to take that into account!  The distance returned is relative to the values\n * of the curve and the point - it will most likely be pixels.\n *\n * gradientAtPoint(curve, location)\n *\n * \tCalculates the gradient to the curve at the given location, as a decimal between 0 and 1 inclusive.\n *\n * gradientAtPointAlongCurveFrom (curve, location)\n *\n *\tCalculates the gradient at the point on the given curve that is 'distance' units from location.\n *\n * nearestPointOnCurve(point, curve)\n *\n *\tCalculates the nearest point to the given point on the given curve.  The return value of this is a JS object literal, containing both the\n *point's coordinates and also the 'location' of the point (see above), for example:  { point:{x:551,y:150}, location:0.263365 }.\n *\n * pointOnCurve(curve, location)\n *\n * \tCalculates the coordinates of the point on the given Bezier curve at the given location.\n *\n * pointAlongCurveFrom(curve, location, distance)\n *\n * \tCalculates the coordinates of the point on the given curve that is 'distance' units from location.  'distance' should be in the same coordinate\n * space as that used to construct the Bezier curve.  For an HTML Canvas usage, for example, distance would be a measure of pixels.\n *\n * locationAlongCurveFrom(curve, location, distance)\n *\n * \tCalculates the location on the given curve that is 'distance' units from location.  'distance' should be in the same coordinate\n * space as that used to construct the Bezier curve.  For an HTML Canvas usage, for example, distance would be a measure of pixels.\n *\n * perpendicularToCurveAt(curve, location, length, distance)\n *\n * \tCalculates the perpendicular to the given curve at the given location.  length is the length of the line you wish for (it will be centered\n * on the point at 'location'). distance is optional, and allows you to specify a point along the path from the given location as the center of\n * the perpendicular returned.  The return value of this is an array of two points: [ {x:...,y:...}, {x:...,y:...} ].\n *\n *\n */\n\n(function() {\n\n    var root = this;\n\n    if(typeof Math.sgn == \"undefined\") {\n        Math.sgn = function(x) { return x == 0 ? 0 : x > 0 ? 1 :-1; };\n    }\n\n    var Vectors = {\n            subtract \t: \tfunction(v1, v2) { return {x:v1.x - v2.x, y:v1.y - v2.y }; },\n            dotProduct\t: \tfunction(v1, v2) { return (v1.x * v2.x)  + (v1.y * v2.y); },\n            square\t\t:\tfunction(v) { return Math.sqrt((v.x * v.x) + (v.y * v.y)); },\n            scale\t\t:\tfunction(v, s) { return {x:v.x * s, y:v.y * s }; }\n        },\n\n        maxRecursion = 64,\n        flatnessTolerance = Math.pow(2.0,-maxRecursion-1);\n\n    /**\n     * Calculates the distance that the point lies from the curve.\n     *\n     * @param point a point in the form {x:567, y:3342}\n     * @param curve a Bezier curve in the form [{x:..., y:...}, {x:..., y:...}, {x:..., y:...}, {x:..., y:...}].  note that this is currently\n     * hardcoded to assume cubiz beziers, but would be better off supporting any degree.\n     * @return a JS object literal containing location and distance, for example: {location:0.35, distance:10}.  Location is analogous to the location\n     * argument you pass to the pointOnPath function: it is a ratio of distance travelled along the curve.  Distance is the distance in pixels from\n     * the point to the curve.\n     */\n    var _distanceFromCurve = function(point, curve) {\n        var candidates = [],\n            w = _convertToBezier(point, curve),\n            degree = curve.length - 1, higherDegree = (2 * degree) - 1,\n            numSolutions = _findRoots(w, higherDegree, candidates, 0),\n            v = Vectors.subtract(point, curve[0]), dist = Vectors.square(v), t = 0.0;\n\n        for (var i = 0; i < numSolutions; i++) {\n            v = Vectors.subtract(point, _bezier(curve, degree, candidates[i], null, null));\n            var newDist = Vectors.square(v);\n            if (newDist < dist) {\n                dist = newDist;\n                t = candidates[i];\n            }\n        }\n        v = Vectors.subtract(point, curve[degree]);\n        newDist = Vectors.square(v);\n        if (newDist < dist) {\n            dist = newDist;\n            t = 1.0;\n        }\n        return {location:t, distance:dist};\n    };\n    /**\n     * finds the nearest point on the curve to the given point.\n     */\n    var _nearestPointOnCurve = function(point, curve) {\n        var td = _distanceFromCurve(point, curve);\n        return {point:_bezier(curve, curve.length - 1, td.location, null, null), location:td.location};\n    };\n    var _convertToBezier = function(point, curve) {\n        var degree = curve.length - 1, higherDegree = (2 * degree) - 1,\n            c = [], d = [], cdTable = [], w = [],\n            z = [ [1.0, 0.6, 0.3, 0.1], [0.4, 0.6, 0.6, 0.4], [0.1, 0.3, 0.6, 1.0] ];\n\n        for (var i = 0; i <= degree; i++) c[i] = Vectors.subtract(curve[i], point);\n        for (var i = 0; i <= degree - 1; i++) {\n            d[i] = Vectors.subtract(curve[i+1], curve[i]);\n            d[i] = Vectors.scale(d[i], 3.0);\n        }\n        for (var row = 0; row <= degree - 1; row++) {\n            for (var column = 0; column <= degree; column++) {\n                if (!cdTable[row]) cdTable[row] = [];\n                cdTable[row][column] = Vectors.dotProduct(d[row], c[column]);\n            }\n        }\n        for (i = 0; i <= higherDegree; i++) {\n            if (!w[i]) w[i] = [];\n            w[i].y = 0.0;\n            w[i].x = parseFloat(i) / higherDegree;\n        }\n        var n = degree, m = degree-1;\n        for (var k = 0; k <= n + m; k++) {\n            var lb = Math.max(0, k - m),\n                ub = Math.min(k, n);\n            for (i = lb; i <= ub; i++) {\n                j = k - i;\n                w[i+j].y += cdTable[j][i] * z[j][i];\n            }\n        }\n        return w;\n    };\n    /**\n     * counts how many roots there are.\n     */\n    var _findRoots = function(w, degree, t, depth) {\n        var left = [], right = [],\n            left_count, right_count,\n            left_t = [], right_t = [];\n\n        switch (_getCrossingCount(w, degree)) {\n            case 0 : {\n                return 0;\n            }\n            case 1 : {\n                if (depth >= maxRecursion) {\n                    t[0] = (w[0].x + w[degree].x) / 2.0;\n                    return 1;\n                }\n                if (_isFlatEnough(w, degree)) {\n                    t[0] = _computeXIntercept(w, degree);\n                    return 1;\n                }\n                break;\n            }\n        }\n        _bezier(w, degree, 0.5, left, right);\n        left_count  = _findRoots(left,  degree, left_t, depth+1);\n        right_count = _findRoots(right, degree, right_t, depth+1);\n        for (var i = 0; i < left_count; i++) t[i] = left_t[i];\n        for (var i = 0; i < right_count; i++) t[i+left_count] = right_t[i];\n        return (left_count+right_count);\n    };\n    var _getCrossingCount = function(curve, degree) {\n        var n_crossings = 0, sign, old_sign;\n        sign = old_sign = Math.sgn(curve[0].y);\n        for (var i = 1; i <= degree; i++) {\n            sign = Math.sgn(curve[i].y);\n            if (sign != old_sign) n_crossings++;\n            old_sign = sign;\n        }\n        return n_crossings;\n    };\n    var _isFlatEnough = function(curve, degree) {\n        var  error,\n            intercept_1, intercept_2, left_intercept, right_intercept,\n            a, b, c, det, dInv, a1, b1, c1, a2, b2, c2;\n        a = curve[0].y - curve[degree].y;\n        b = curve[degree].x - curve[0].x;\n        c = curve[0].x * curve[degree].y - curve[degree].x * curve[0].y;\n\n        var max_distance_above = max_distance_below = 0.0;\n\n        for (var i = 1; i < degree; i++) {\n            var value = a * curve[i].x + b * curve[i].y + c;\n            if (value > max_distance_above)\n                max_distance_above = value;\n            else if (value < max_distance_below)\n                max_distance_below = value;\n        }\n\n        a1 = 0.0; b1 = 1.0; c1 = 0.0; a2 = a; b2 = b;\n        c2 = c - max_distance_above;\n        det = a1 * b2 - a2 * b1;\n        dInv = 1.0/det;\n        intercept_1 = (b1 * c2 - b2 * c1) * dInv;\n        a2 = a; b2 = b; c2 = c - max_distance_below;\n        det = a1 * b2 - a2 * b1;\n        dInv = 1.0/det;\n        intercept_2 = (b1 * c2 - b2 * c1) * dInv;\n        left_intercept = Math.min(intercept_1, intercept_2);\n        right_intercept = Math.max(intercept_1, intercept_2);\n        error = right_intercept - left_intercept;\n        return (error < flatnessTolerance)? 1 : 0;\n    };\n    var _computeXIntercept = function(curve, degree) {\n        var XLK = 1.0, YLK = 0.0,\n            XNM = curve[degree].x - curve[0].x, YNM = curve[degree].y - curve[0].y,\n            XMK = curve[0].x - 0.0, YMK = curve[0].y - 0.0,\n            det = XNM*YLK - YNM*XLK, detInv = 1.0/det,\n            S = (XNM*YMK - YNM*XMK) * detInv;\n        return 0.0 + XLK * S;\n    };\n    var _bezier = function(curve, degree, t, left, right) {\n        var temp = [[]];\n        for (var j =0; j <= degree; j++) temp[0][j] = curve[j];\n        for (var i = 1; i <= degree; i++) {\n            for (var j =0 ; j <= degree - i; j++) {\n                if (!temp[i]) temp[i] = [];\n                if (!temp[i][j]) temp[i][j] = {};\n                temp[i][j].x = (1.0 - t) * temp[i-1][j].x + t * temp[i-1][j+1].x;\n                temp[i][j].y = (1.0 - t) * temp[i-1][j].y + t * temp[i-1][j+1].y;\n            }\n        }\n        if (left != null)\n            for (j = 0; j <= degree; j++) left[j]  = temp[j][0];\n        if (right != null)\n            for (j = 0; j <= degree; j++) right[j] = temp[degree-j][j];\n\n        return (temp[degree][0]);\n    };\n\n    var _curveFunctionCache = {};\n    var _getCurveFunctions = function(order) {\n        var fns = _curveFunctionCache[order];\n        if (!fns) {\n            fns = [];\n            var f_term = function() { return function(t) { return Math.pow(t, order); }; },\n                l_term = function() { return function(t) { return Math.pow((1-t), order); }; },\n                c_term = function(c) { return function(t) { return c; }; },\n                t_term = function() { return function(t) { return t; }; },\n                one_minus_t_term = function() { return function(t) { return 1-t; }; },\n                _termFunc = function(terms) {\n                    return function(t) {\n                        var p = 1;\n                        for (var i = 0; i < terms.length; i++) p = p * terms[i](t);\n                        return p;\n                    };\n                };\n\n            fns.push(new f_term());  // first is t to the power of the curve order\n            for (var i = 1; i < order; i++) {\n                var terms = [new c_term(order)];\n                for (var j = 0 ; j < (order - i); j++) terms.push(new t_term());\n                for (var j = 0 ; j < i; j++) terms.push(new one_minus_t_term());\n                fns.push(new _termFunc(terms));\n            }\n            fns.push(new l_term());  // last is (1-t) to the power of the curve order\n\n            _curveFunctionCache[order] = fns;\n        }\n\n        return fns;\n    };\n\n\n    /**\n     * calculates a point on the curve, for a Bezier of arbitrary order.\n     * @param curve an array of control points, eg [{x:10,y:20}, {x:50,y:50}, {x:100,y:100}, {x:120,y:100}].  For a cubic bezier this should have four points.\n     * @param location a decimal indicating the distance along the curve the point should be located at.  this is the distance along the curve as it travels, taking the way it bends into account.  should be a number from 0 to 1, inclusive.\n     */\n    var _pointOnPath = function(curve, location) {\n        var cc = _getCurveFunctions(curve.length - 1),\n            _x = 0, _y = 0;\n        for (var i = 0; i < curve.length ; i++) {\n            _x = _x + (curve[i].x * cc[i](location));\n            _y = _y + (curve[i].y * cc[i](location));\n        }\n\n        return {x:_x, y:_y};\n    };\n\n    var _dist = function(p1,p2) {\n        return Math.sqrt(Math.pow(p1.x - p2.x, 2) + Math.pow(p1.y - p2.y, 2));\n    };\n\n    var _isPoint = function(curve) {\n        return curve[0].x == curve[1].x && curve[0].y == curve[1].y;\n    };\n\n    /**\n     * finds the point that is 'distance' along the path from 'location'.  this method returns both the x,y location of the point and also\n     * its 'location' (proportion of travel along the path); the method below - _pointAlongPathFrom - calls this method and just returns the\n     * point.\n     */\n    var _pointAlongPath = function(curve, location, distance) {\n\n        if (_isPoint(curve)) {\n            return {\n                point:curve[0],\n                location:location\n            };\n        }\n\n        var prev = _pointOnPath(curve, location),\n            tally = 0,\n            curLoc = location,\n            direction = distance > 0 ? 1 : -1,\n            cur = null;\n\n        while (tally < Math.abs(distance)) {\n            curLoc += (0.005 * direction);\n            cur = _pointOnPath(curve, curLoc);\n            tally += _dist(cur, prev);\n            prev = cur;\n        }\n        return {point:cur, location:curLoc};\n    };\n\n    var _length = function(curve) {\n        if (_isPoint(curve)) return 0;\n\n        var prev = _pointOnPath(curve, 0),\n            tally = 0,\n            curLoc = 0,\n            direction = 1,\n            cur = null;\n\n        while (curLoc < 1) {\n            curLoc += (0.005 * direction);\n            cur = _pointOnPath(curve, curLoc);\n            tally += _dist(cur, prev);\n            prev = cur;\n        }\n        return tally;\n    };\n\n    /**\n     * finds the point that is 'distance' along the path from 'location'.\n     */\n    var _pointAlongPathFrom = function(curve, location, distance) {\n        return _pointAlongPath(curve, location, distance).point;\n    };\n\n    /**\n     * finds the location that is 'distance' along the path from 'location'.\n     */\n    var _locationAlongPathFrom = function(curve, location, distance) {\n        return _pointAlongPath(curve, location, distance).location;\n    };\n\n    /**\n     * returns the gradient of the curve at the given location, which is a decimal between 0 and 1 inclusive.\n     *\n     * thanks // http://bimixual.org/AnimationLibrary/beziertangents.html\n     */\n    var _gradientAtPoint = function(curve, location) {\n        var p1 = _pointOnPath(curve, location),\n            p2 = _pointOnPath(curve.slice(0, curve.length - 1), location),\n            dy = p2.y - p1.y, dx = p2.x - p1.x;\n        return dy == 0 ? Infinity : Math.atan(dy / dx);\n    };\n\n    /**\n     returns the gradient of the curve at the point which is 'distance' from the given location.\n     if this point is greater than location 1, the gradient at location 1 is returned.\n     if this point is less than location 0, the gradient at location 0 is returned.\n     */\n    var _gradientAtPointAlongPathFrom = function(curve, location, distance) {\n        var p = _pointAlongPath(curve, location, distance);\n        if (p.location > 1) p.location = 1;\n        if (p.location < 0) p.location = 0;\n        return _gradientAtPoint(curve, p.location);\n    };\n\n    /**\n     * calculates a line that is 'length' pixels long, perpendicular to, and centered on, the path at 'distance' pixels from the given location.\n     * if distance is not supplied, the perpendicular for the given location is computed (ie. we set distance to zero).\n     */\n    var _perpendicularToPathAt = function(curve, location, length, distance) {\n        distance = distance == null ? 0 : distance;\n        var p = _pointAlongPath(curve, location, distance),\n            m = _gradientAtPoint(curve, p.location),\n            _theta2 = Math.atan(-1 / m),\n            y =  length / 2 * Math.sin(_theta2),\n            x =  length / 2 * Math.cos(_theta2);\n        return [{x:p.point.x + x, y:p.point.y + y}, {x:p.point.x - x, y:p.point.y - y}];\n    };\n\n    var jsBezier = this.jsBezier = {\n        distanceFromCurve : _distanceFromCurve,\n        gradientAtPoint : _gradientAtPoint,\n        gradientAtPointAlongCurveFrom : _gradientAtPointAlongPathFrom,\n        nearestPointOnCurve : _nearestPointOnCurve,\n        pointOnCurve : _pointOnPath,\n        pointAlongCurveFrom : _pointAlongPathFrom,\n        perpendicularToCurveAt : _perpendicularToPathAt,\n        locationAlongCurveFrom:_locationAlongPathFrom,\n        getLength:_length,\n        version:\"0.9.0\"\n    };\n\n    if (typeof exports !== \"undefined\") {\n        exports.jsBezier = jsBezier;\n    }\n\n}).call(typeof window !== 'undefined' ? window : this);\n\n/**\n * Biltong v0.4.0\n *\n * Various geometry functions written as part of jsPlumb and perhaps useful for others.\n *\n * Copyright (c) 2017 jsPlumb\n * https://jsplumbtoolkit.com\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n;(function() {\n\n    \"use strict\";\n    var root = this;\n\n    var Biltong = root.Biltong = {\n        version:\"0.4.0\"\n    };\n\n    if (typeof exports !== \"undefined\") {\n        exports.Biltong = Biltong;\n    }\n\n    var _isa = function(a) { return Object.prototype.toString.call(a) === \"[object Array]\"; },\n        _pointHelper = function(p1, p2, fn) {\n            p1 = _isa(p1) ? p1 : [p1.x, p1.y];\n            p2 = _isa(p2) ? p2 : [p2.x, p2.y];\n            return fn(p1, p2);\n        },\n        /**\n         * @name Biltong.gradient\n         * @function\n         * @desc Calculates the gradient of a line between the two points.\n         * @param {Point} p1 First point, either as a 2 entry array or object with `left` and `top` properties.\n         * @param {Point} p2 Second point, either as a 2 entry array or object with `left` and `top` properties.\n         * @return {Float} The gradient of a line between the two points.\n         */\n        _gradient = Biltong.gradient = function(p1, p2) {\n            return _pointHelper(p1, p2, function(_p1, _p2) {\n                if (_p2[0] == _p1[0])\n                    return _p2[1] > _p1[1] ? Infinity : -Infinity;\n                else if (_p2[1] == _p1[1])\n                    return _p2[0] > _p1[0] ? 0 : -0;\n                else\n                    return (_p2[1] - _p1[1]) / (_p2[0] - _p1[0]);\n            });\n        },\n        /**\n         * @name Biltong.normal\n         * @function\n         * @desc Calculates the gradient of a normal to a line between the two points.\n         * @param {Point} p1 First point, either as a 2 entry array or object with `left` and `top` properties.\n         * @param {Point} p2 Second point, either as a 2 entry array or object with `left` and `top` properties.\n         * @return {Float} The gradient of a normal to a line between the two points.\n         */\n        _normal = Biltong.normal = function(p1, p2) {\n            return -1 / _gradient(p1, p2);\n        },\n        /**\n         * @name Biltong.lineLength\n         * @function\n         * @desc Calculates the length of a line between the two points.\n         * @param {Point} p1 First point, either as a 2 entry array or object with `left` and `top` properties.\n         * @param {Point} p2 Second point, either as a 2 entry array or object with `left` and `top` properties.\n         * @return {Float} The length of a line between the two points.\n         */\n        _lineLength = Biltong.lineLength = function(p1, p2) {\n            return _pointHelper(p1, p2, function(_p1, _p2) {\n                return Math.sqrt(Math.pow(_p2[1] - _p1[1], 2) + Math.pow(_p2[0] - _p1[0], 2));\n            });\n        },\n        /**\n         * @name Biltong.quadrant\n         * @function\n         * @desc Calculates the quadrant in which the angle between the two points lies.\n         * @param {Point} p1 First point, either as a 2 entry array or object with `left` and `top` properties.\n         * @param {Point} p2 Second point, either as a 2 entry array or object with `left` and `top` properties.\n         * @return {Integer} The quadrant - 1 for upper right, 2 for lower right, 3 for lower left, 4 for upper left.\n         */\n        _quadrant = Biltong.quadrant = function(p1, p2) {\n            return _pointHelper(p1, p2, function(_p1, _p2) {\n                if (_p2[0] > _p1[0]) {\n                    return (_p2[1] > _p1[1]) ? 2 : 1;\n                }\n                else if (_p2[0] == _p1[0]) {\n                    return _p2[1] > _p1[1] ? 2 : 1;\n                }\n                else {\n                    return (_p2[1] > _p1[1]) ? 3 : 4;\n                }\n            });\n        },\n        /**\n         * @name Biltong.theta\n         * @function\n         * @desc Calculates the angle between the two points.\n         * @param {Point} p1 First point, either as a 2 entry array or object with `left` and `top` properties.\n         * @param {Point} p2 Second point, either as a 2 entry array or object with `left` and `top` properties.\n         * @return {Float} The angle between the two points.\n         */\n        _theta = Biltong.theta = function(p1, p2) {\n            return _pointHelper(p1, p2, function(_p1, _p2) {\n                var m = _gradient(_p1, _p2),\n                    t = Math.atan(m),\n                    s = _quadrant(_p1, _p2);\n                if ((s == 4 || s== 3)) t += Math.PI;\n                if (t < 0) t += (2 * Math.PI);\n\n                return t;\n            });\n        },\n        /**\n         * @name Biltong.intersects\n         * @function\n         * @desc Calculates whether or not the two rectangles intersect.\n         * @param {Rectangle} r1 First rectangle, as a js object in the form `{x:.., y:.., w:.., h:..}`\n         * @param {Rectangle} r2 Second rectangle, as a js object in the form `{x:.., y:.., w:.., h:..}`\n         * @return {Boolean} True if the rectangles intersect, false otherwise.\n         */\n        _intersects = Biltong.intersects = function(r1, r2) {\n            var x1 = r1.x, x2 = r1.x + r1.w, y1 = r1.y, y2 = r1.y + r1.h,\n                a1 = r2.x, a2 = r2.x + r2.w, b1 = r2.y, b2 = r2.y + r2.h;\n\n            return  ( (x1 <= a1 && a1 <= x2) && (y1 <= b1 && b1 <= y2) ) ||\n                ( (x1 <= a2 && a2 <= x2) && (y1 <= b1 && b1 <= y2) ) ||\n                ( (x1 <= a1 && a1 <= x2) && (y1 <= b2 && b2 <= y2) ) ||\n                ( (x1 <= a2 && a1 <= x2) && (y1 <= b2 && b2 <= y2) ) ||\n                ( (a1 <= x1 && x1 <= a2) && (b1 <= y1 && y1 <= b2) ) ||\n                ( (a1 <= x2 && x2 <= a2) && (b1 <= y1 && y1 <= b2) ) ||\n                ( (a1 <= x1 && x1 <= a2) && (b1 <= y2 && y2 <= b2) ) ||\n                ( (a1 <= x2 && x1 <= a2) && (b1 <= y2 && y2 <= b2) );\n        },\n        /**\n         * @name Biltong.encloses\n         * @function\n         * @desc Calculates whether or not r2 is completely enclosed by r1.\n         * @param {Rectangle} r1 First rectangle, as a js object in the form `{x:.., y:.., w:.., h:..}`\n         * @param {Rectangle} r2 Second rectangle, as a js object in the form `{x:.., y:.., w:.., h:..}`\n         * @param {Boolean} [allowSharedEdges=false] If true, the concept of enclosure allows for one or more edges to be shared by the two rectangles.\n         * @return {Boolean} True if r1 encloses r2, false otherwise.\n         */\n        _encloses = Biltong.encloses = function(r1, r2, allowSharedEdges) {\n            var x1 = r1.x, x2 = r1.x + r1.w, y1 = r1.y, y2 = r1.y + r1.h,\n                a1 = r2.x, a2 = r2.x + r2.w, b1 = r2.y, b2 = r2.y + r2.h,\n                c = function(v1, v2, v3, v4) { return allowSharedEdges ? v1 <= v2 && v3>= v4 : v1 < v2 && v3 > v4; };\n\n            return c(x1,a1,x2,a2) && c(y1,b1,y2,b2);\n        },\n        _segmentMultipliers = [null, [1, -1], [1, 1], [-1, 1], [-1, -1] ],\n        _inverseSegmentMultipliers = [null, [-1, -1], [-1, 1], [1, 1], [1, -1] ],\n        /**\n         * @name Biltong.pointOnLine\n         * @function\n         * @desc Calculates a point on the line from `fromPoint` to `toPoint` that is `distance` units along the length of the line.\n         * @param {Point} p1 First point, either as a 2 entry array or object with `left` and `top` properties.\n         * @param {Point} p2 Second point, either as a 2 entry array or object with `left` and `top` properties.\n         * @return {Point} Point on the line, in the form `{ x:..., y:... }`.\n         */\n        _pointOnLine = Biltong.pointOnLine = function(fromPoint, toPoint, distance) {\n            var m = _gradient(fromPoint, toPoint),\n                s = _quadrant(fromPoint, toPoint),\n                segmentMultiplier = distance > 0 ? _segmentMultipliers[s] : _inverseSegmentMultipliers[s],\n                theta = Math.atan(m),\n                y = Math.abs(distance * Math.sin(theta)) * segmentMultiplier[1],\n                x =  Math.abs(distance * Math.cos(theta)) * segmentMultiplier[0];\n            return { x:fromPoint.x + x, y:fromPoint.y + y };\n        },\n        /**\n         * @name Biltong.perpendicularLineTo\n         * @function\n         * @desc Calculates a line of length `length` that is perpendicular to the line from `fromPoint` to `toPoint` and passes through `toPoint`.\n         * @param {Point} p1 First point, either as a 2 entry array or object with `left` and `top` properties.\n         * @param {Point} p2 Second point, either as a 2 entry array or object with `left` and `top` properties.\n         * @return {Line} Perpendicular line, in the form `[ { x:..., y:... }, { x:..., y:... } ]`.\n         */\n        _perpendicularLineTo = Biltong.perpendicularLineTo = function(fromPoint, toPoint, length) {\n            var m = _gradient(fromPoint, toPoint),\n                theta2 = Math.atan(-1 / m),\n                y =  length / 2 * Math.sin(theta2),\n                x =  length / 2 * Math.cos(theta2);\n            return [{x:toPoint.x + x, y:toPoint.y + y}, {x:toPoint.x - x, y:toPoint.y - y}];\n        };\n}).call(typeof window !== 'undefined' ? window : this);\n;\n(function () {\n\n    \"use strict\";\n\n    var root = this,\n        Sniff = {\n            android: navigator.userAgent.toLowerCase().indexOf(\"android\") > -1\n        },\n        matchesSelector = function (el, selector, ctx) {\n            ctx = ctx || el.parentNode;\n            var possibles = ctx.querySelectorAll(selector);\n            for (var i = 0; i < possibles.length; i++) {\n                if (possibles[i] === el) {\n                    return true;\n                }\n            }\n            return false;\n        },\n        _gel = function (el) {\n            return (typeof el == \"string\" || el.constructor === String) ? document.getElementById(el) : el;\n        },\n        _t = function (e) {\n            return e.srcElement || e.target;\n        },\n    //\n    // gets path info for the given event - the path from target to obj, in the event's bubble chain. if doCompute\n    // is false we just return target for the path.\n    //\n        _pi = function(e, target, obj, doCompute) {\n            if (!doCompute) return { path:[target], end:1 };\n            else if (typeof e.path !== \"undefined\" && e.path.indexOf) {\n                return { path: e.path, end: e.path.indexOf(obj) };\n            } else {\n                var out = { path:[], end:-1 }, _one = function(el) {\n                    out.path.push(el);\n                    if (el === obj) {\n                        out.end = out.path.length - 1;\n                    }\n                    else if (el.parentNode != null) {\n                        _one(el.parentNode)\n                    }\n                };\n                _one(target);\n                return out;\n            }\n        },\n        _d = function (l, fn) {\n            for (var i = 0, j = l.length; i < j; i++) {\n                if (l[i] == fn) break;\n            }\n            if (i < l.length) l.splice(i, 1);\n        },\n        guid = 1,\n    //\n    // this function generates a guid for every handler, sets it on the handler, then adds\n    // it to the associated object's map of handlers for the given event. this is what enables us\n    // to unbind all events of some type, or all events (the second of which can be requested by the user,\n    // but it also used by Mottle when an element is removed.)\n        _store = function (obj, event, fn) {\n            var g = guid++;\n            obj.__ta = obj.__ta || {};\n            obj.__ta[event] = obj.__ta[event] || {};\n            // store each handler with a unique guid.\n            obj.__ta[event][g] = fn;\n            // set the guid on the handler.\n            fn.__tauid = g;\n            return g;\n        },\n        _unstore = function (obj, event, fn) {\n            obj.__ta && obj.__ta[event] && delete obj.__ta[event][fn.__tauid];\n            // a handler might have attached extra functions, so we unbind those too.\n            if (fn.__taExtra) {\n                for (var i = 0; i < fn.__taExtra.length; i++) {\n                    _unbind(obj, fn.__taExtra[i][0], fn.__taExtra[i][1]);\n                }\n                fn.__taExtra.length = 0;\n            }\n            // a handler might have attached an unstore callback\n            fn.__taUnstore && fn.__taUnstore();\n        },\n        _curryChildFilter = function (children, obj, fn, evt) {\n            if (children == null) return fn;\n            else {\n                var c = children.split(\",\"),\n                    _fn = function (e) {\n                        _fn.__tauid = fn.__tauid;\n                        var t = _t(e), target = t;  // t is the target element on which the event occurred. it is the\n                        // element we will wish to pass to any callbacks.\n                        var pathInfo = _pi(e, t, obj, children != null)\n                        if (pathInfo.end != -1) {\n                            for (var p = 0; p < pathInfo.end; p++) {\n                                target = pathInfo.path[p];\n                                for (var i = 0; i < c.length; i++) {\n                                    if (matchesSelector(target, c[i], obj)) {\n                                        fn.apply(target, arguments);\n                                    }\n                                }\n                            }\n                        }\n                    };\n                registerExtraFunction(fn, evt, _fn);\n                return _fn;\n            }\n        },\n    //\n    // registers an 'extra' function on some event listener function we were given - a function that we\n    // created and bound to the element as part of our housekeeping, and which we want to unbind and remove\n    // whenever the given function is unbound.\n        registerExtraFunction = function (fn, evt, newFn) {\n            fn.__taExtra = fn.__taExtra || [];\n            fn.__taExtra.push([evt, newFn]);\n        },\n        DefaultHandler = function (obj, evt, fn, children) {\n            if (isTouchDevice && touchMap[evt]) {\n                var tfn = _curryChildFilter(children, obj, fn, touchMap[evt]);\n                _bind(obj, touchMap[evt], tfn , fn);\n            }\n            if (evt === \"focus\" && obj.getAttribute(\"tabindex\") == null) {\n                obj.setAttribute(\"tabindex\", \"1\");\n            }\n            _bind(obj, evt, _curryChildFilter(children, obj, fn, evt), fn);\n        },\n        SmartClickHandler = function (obj, evt, fn, children) {\n            if (obj.__taSmartClicks == null) {\n                var down = function (e) {\n                        obj.__tad = _pageLocation(e);\n                    },\n                    up = function (e) {\n                        obj.__tau = _pageLocation(e);\n                    },\n                    click = function (e) {\n                        if (obj.__tad && obj.__tau && obj.__tad[0] === obj.__tau[0] && obj.__tad[1] === obj.__tau[1]) {\n                            for (var i = 0; i < obj.__taSmartClicks.length; i++)\n                                obj.__taSmartClicks[i].apply(_t(e), [ e ]);\n                        }\n                    };\n                DefaultHandler(obj, \"mousedown\", down, children);\n                DefaultHandler(obj, \"mouseup\", up, children);\n                DefaultHandler(obj, \"click\", click, children);\n                obj.__taSmartClicks = [];\n            }\n\n            // store in the list of callbacks\n            obj.__taSmartClicks.push(fn);\n            // the unstore function removes this function from the object's listener list for this type.\n            fn.__taUnstore = function () {\n                _d(obj.__taSmartClicks, fn);\n            };\n        },\n        _tapProfiles = {\n            \"tap\": {touches: 1, taps: 1},\n            \"dbltap\": {touches: 1, taps: 2},\n            \"contextmenu\": {touches: 2, taps: 1}\n        },\n        TapHandler = function (clickThreshold, dblClickThreshold) {\n            return function (obj, evt, fn, children) {\n                // if event is contextmenu, for devices which are mouse only, we want to\n                // use the default bind.\n                if (evt == \"contextmenu\" && isMouseDevice)\n                    DefaultHandler(obj, evt, fn, children);\n                else {\n                    // the issue here is that this down handler gets registered only for the\n                    // child nodes in the first registration. in fact it should be registered with\n                    // no child selector and then on down we should cycle through the registered\n                    // functions to see if one of them matches. on mouseup we should execute ALL of\n                    // the functions whose children are either null or match the element.\n                    if (obj.__taTapHandler == null) {\n                        var tt = obj.__taTapHandler = {\n                            tap: [],\n                            dbltap: [],\n                            contextmenu: [],\n                            down: false,\n                            taps: 0,\n                            downSelectors: []\n                        };\n                        var down = function (e) {\n                                var target = _t(e), pathInfo = _pi(e, target, obj, children != null), finished = false;\n                                for (var p = 0; p < pathInfo.end; p++) {\n                                    if (finished) return;\n                                    target = pathInfo.path[p];\n                                    for (var i = 0; i < tt.downSelectors.length; i++) {\n                                        if (tt.downSelectors[i] == null || matchesSelector(target, tt.downSelectors[i], obj)) {\n                                            tt.down = true;\n                                            setTimeout(clearSingle, clickThreshold);\n                                            setTimeout(clearDouble, dblClickThreshold);\n                                            finished = true;\n                                            break; // we only need one match on mousedown\n                                        }\n                                    }\n                                }\n                            },\n                            up = function (e) {\n                                if (tt.down) {\n                                    var target = _t(e), currentTarget, pathInfo;\n                                    tt.taps++;\n                                    var tc = _touchCount(e);\n                                    for (var eventId in _tapProfiles) {\n                                        if (_tapProfiles.hasOwnProperty(eventId)) {\n                                            var p = _tapProfiles[eventId];\n                                            if (p.touches === tc && (p.taps === 1 || p.taps === tt.taps)) {\n                                                for (var i = 0; i < tt[eventId].length; i++) {\n                                                    pathInfo = _pi(e, target, obj, tt[eventId][i][1] != null);\n                                                    for (var pLoop = 0; pLoop < pathInfo.end; pLoop++) {\n                                                        currentTarget = pathInfo.path[pLoop];\n                                                        // this is a single event registration handler.\n                                                        if (tt[eventId][i][1] == null || matchesSelector(currentTarget, tt[eventId][i][1], obj)) {\n                                                            tt[eventId][i][0].apply(currentTarget, [ e ]);\n                                                            break;\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            },\n                            clearSingle = function () {\n                                tt.down = false;\n                            },\n                            clearDouble = function () {\n                                tt.taps = 0;\n                            };\n\n                        DefaultHandler(obj, \"mousedown\", down);\n                        DefaultHandler(obj, \"mouseup\", up);\n                    }\n                    // add this child selector (it can be null, that's fine).\n                    obj.__taTapHandler.downSelectors.push(children);\n\n                    obj.__taTapHandler[evt].push([fn, children]);\n                    // the unstore function removes this function from the object's listener list for this type.\n                    fn.__taUnstore = function () {\n                        _d(obj.__taTapHandler[evt], fn);\n                    };\n                }\n            };\n        },\n        meeHelper = function (type, evt, obj, target) {\n            for (var i in obj.__tamee[type]) {\n                if (obj.__tamee[type].hasOwnProperty(i)) {\n                    obj.__tamee[type][i].apply(target, [ evt ]);\n                }\n            }\n        },\n        MouseEnterExitHandler = function () {\n            var activeElements = [];\n            return function (obj, evt, fn, children) {\n                if (!obj.__tamee) {\n                    // __tamee holds a flag saying whether the mouse is currently \"in\" the element, and a list of\n                    // both mouseenter and mouseexit functions.\n                    obj.__tamee = { over: false, mouseenter: [], mouseexit: [] };\n                    // register over and out functions\n                    var over = function (e) {\n                            var t = _t(e);\n                            if ((children == null && (t == obj && !obj.__tamee.over)) || (matchesSelector(t, children, obj) && (t.__tamee == null || !t.__tamee.over))) {\n                                meeHelper(\"mouseenter\", e, obj, t);\n                                t.__tamee = t.__tamee || {};\n                                t.__tamee.over = true;\n                                activeElements.push(t);\n                            }\n                        },\n                        out = function (e) {\n                            var t = _t(e);\n                            // is the current target one of the activeElements? and is the\n                            // related target NOT a descendant of it?\n                            for (var i = 0; i < activeElements.length; i++) {\n                                if (t == activeElements[i] && !matchesSelector((e.relatedTarget || e.toElement), \"*\", t)) {\n                                    t.__tamee.over = false;\n                                    activeElements.splice(i, 1);\n                                    meeHelper(\"mouseexit\", e, obj, t);\n                                }\n                            }\n                        };\n\n                    _bind(obj, \"mouseover\", _curryChildFilter(children, obj, over, \"mouseover\"), over);\n                    _bind(obj, \"mouseout\", _curryChildFilter(children, obj, out, \"mouseout\"), out);\n                }\n\n                fn.__taUnstore = function () {\n                    delete obj.__tamee[evt][fn.__tauid];\n                };\n\n                _store(obj, evt, fn);\n                obj.__tamee[evt][fn.__tauid] = fn;\n            };\n        },\n        isTouchDevice = \"ontouchstart\" in document.documentElement,\n        isMouseDevice = \"onmousedown\" in document.documentElement,\n        touchMap = { \"mousedown\": \"touchstart\", \"mouseup\": \"touchend\", \"mousemove\": \"touchmove\" },\n        touchstart = \"touchstart\", touchend = \"touchend\", touchmove = \"touchmove\",\n        iev = (function () {\n            var rv = -1;\n            if (navigator.appName == 'Microsoft Internet Explorer') {\n                var ua = navigator.userAgent,\n                    re = new RegExp(\"MSIE ([0-9]{1,}[\\.0-9]{0,})\");\n                if (re.exec(ua) != null)\n                    rv = parseFloat(RegExp.$1);\n            }\n            return rv;\n        })(),\n        isIELT9 = iev > -1 && iev < 9,\n        _genLoc = function (e, prefix) {\n            if (e == null) return [ 0, 0 ];\n            var ts = _touches(e), t = _getTouch(ts, 0);\n            return [t[prefix + \"X\"], t[prefix + \"Y\"]];\n        },\n        _pageLocation = function (e) {\n            if (e == null) return [ 0, 0 ];\n            if (isIELT9) {\n                return [ e.clientX + document.documentElement.scrollLeft, e.clientY + document.documentElement.scrollTop ];\n            }\n            else {\n                return _genLoc(e, \"page\");\n            }\n        },\n        _screenLocation = function (e) {\n            return _genLoc(e, \"screen\");\n        },\n        _clientLocation = function (e) {\n            return _genLoc(e, \"client\");\n        },\n        _getTouch = function (touches, idx) {\n            return touches.item ? touches.item(idx) : touches[idx];\n        },\n        _touches = function (e) {\n            return e.touches && e.touches.length > 0 ? e.touches :\n                    e.changedTouches && e.changedTouches.length > 0 ? e.changedTouches :\n                    e.targetTouches && e.targetTouches.length > 0 ? e.targetTouches :\n                [ e ];\n        },\n        _touchCount = function (e) {\n            return _touches(e).length;\n        },\n    //http://www.quirksmode.org/blog/archives/2005/10/_and_the_winner_1.html\n        _bind = function (obj, type, fn, originalFn) {\n            _store(obj, type, fn);\n            originalFn.__tauid = fn.__tauid;\n            if (obj.addEventListener)\n                obj.addEventListener(type, fn, false);\n            else if (obj.attachEvent) {\n                var key = type + fn.__tauid;\n                obj[\"e\" + key] = fn;\n                // TODO look at replacing with .call(..)\n                obj[key] = function () {\n                    obj[\"e\" + key] && obj[\"e\" + key](window.event);\n                };\n                obj.attachEvent(\"on\" + type, obj[key]);\n            }\n        },\n        _unbind = function (obj, type, fn) {\n            if (fn == null) return;\n            _each(obj, function () {\n                var _el = _gel(this);\n                _unstore(_el, type, fn);\n                // it has been bound if there is a tauid. otherwise it was not bound and we can ignore it.\n                if (fn.__tauid != null) {\n                    if (_el.removeEventListener) {\n                        _el.removeEventListener(type, fn, false);\n                        if (isTouchDevice && touchMap[type]) _el.removeEventListener(touchMap[type], fn, false);\n                    }\n                    else if (this.detachEvent) {\n                        var key = type + fn.__tauid;\n                        _el[key] && _el.detachEvent(\"on\" + type, _el[key]);\n                        _el[key] = null;\n                        _el[\"e\" + key] = null;\n                    }\n                }\n\n                // if a touch event was also registered, deregister now.\n                if (fn.__taTouchProxy) {\n                    _unbind(obj, fn.__taTouchProxy[1], fn.__taTouchProxy[0]);\n                }\n            });\n        },\n        _each = function (obj, fn) {\n            if (obj == null) return;\n            // if a list (or list-like), use it. if a string, get a list\n            // by running the string through querySelectorAll. else, assume\n            // it's an Element.\n            // obj.top is \"unknown\" in IE8.\n            obj = (typeof Window !== \"undefined\" && (typeof obj.top !== \"unknown\" && obj == obj.top)) ? [ obj ] :\n                    (typeof obj !== \"string\") && (obj.tagName == null && obj.length != null) ? obj :\n                    typeof obj === \"string\" ? document.querySelectorAll(obj)\n                : [ obj ];\n\n            for (var i = 0; i < obj.length; i++)\n                fn.apply(obj[i]);\n        };\n\n    /**\n     * Mottle offers support for abstracting out the differences\n     * between touch and mouse devices, plus \"smart click\" functionality\n     * (don't fire click if the mouse has moved between mousedown and mouseup),\n     * and synthesized click/tap events.\n     * @class Mottle\n     * @constructor\n     * @param {Object} params Constructor params\n     * @param {Number} [params.clickThreshold=250] Threshold, in milliseconds beyond which a touchstart followed by a touchend is not considered to be a click.\n     * @param {Number} [params.dblClickThreshold=450] Threshold, in milliseconds beyond which two successive tap events are not considered to be a click.\n     * @param {Boolean} [params.smartClicks=false] If true, won't fire click events if the mouse has moved between mousedown and mouseup. Note that this functionality\n     * requires that Mottle consume the mousedown event, and so may not be viable in all use cases.\n     */\n    root.Mottle = function (params) {\n        params = params || {};\n        var clickThreshold = params.clickThreshold || 250,\n            dblClickThreshold = params.dblClickThreshold || 450,\n            mouseEnterExitHandler = new MouseEnterExitHandler(),\n            tapHandler = new TapHandler(clickThreshold, dblClickThreshold),\n            _smartClicks = params.smartClicks,\n            _doBind = function (obj, evt, fn, children) {\n                if (fn == null) return;\n                _each(obj, function () {\n                    var _el = _gel(this);\n                    if (_smartClicks && evt === \"click\")\n                        SmartClickHandler(_el, evt, fn, children);\n                    else if (evt === \"tap\" || evt === \"dbltap\" || evt === \"contextmenu\") {\n                        tapHandler(_el, evt, fn, children);\n                    }\n                    else if (evt === \"mouseenter\" || evt == \"mouseexit\")\n                        mouseEnterExitHandler(_el, evt, fn, children);\n                    else\n                        DefaultHandler(_el, evt, fn, children);\n                });\n            };\n\n        /**\n         * Removes an element from the DOM, and deregisters all event handlers for it. You should use this\n         * to ensure you don't leak memory.\n         * @method remove\n         * @param {String|Element} el Element, or id of the element, to remove.\n         * @return {Mottle} The current Mottle instance; you can chain this method.\n         */\n        this.remove = function (el) {\n            _each(el, function () {\n                var _el = _gel(this);\n                if (_el.__ta) {\n                    for (var evt in _el.__ta) {\n                        if (_el.__ta.hasOwnProperty(evt)) {\n                            for (var h in _el.__ta[evt]) {\n                                if (_el.__ta[evt].hasOwnProperty(h))\n                                    _unbind(_el, evt, _el.__ta[evt][h]);\n                            }\n                        }\n                    }\n                }\n                _el.parentNode && _el.parentNode.removeChild(_el);\n            });\n            return this;\n        };\n\n        /**\n         * Register an event handler, optionally as a delegate for some set of descendant elements. Note\n         * that this method takes either 3 or 4 arguments - if you supply 3 arguments it is assumed you have\n         * omitted the `children` parameter, and that the event handler should be bound directly to the given element.\n         * @method on\n         * @param {Element[]|Element|String} el Either an Element, or a CSS spec for a list of elements, or an array of Elements.\n         * @param {String} [children] Comma-delimited list of selectors identifying allowed children.\n         * @param {String} event Event ID.\n         * @param {Function} fn Event handler function.\n         * @return {Mottle} The current Mottle instance; you can chain this method.\n         */\n        this.on = function (el, event, children, fn) {\n            var _el = arguments[0],\n                _c = arguments.length == 4 ? arguments[2] : null,\n                _e = arguments[1],\n                _f = arguments[arguments.length - 1];\n\n            _doBind(_el, _e, _f, _c);\n            return this;\n        };\n\n        /**\n         * Cancel delegate event handling for the given function. Note that unlike with 'on' you do not supply\n         * a list of child selectors here: it removes event delegation from all of the child selectors for which the\n         * given function was registered (if any).\n         * @method off\n         * @param {Element[]|Element|String} el Element - or ID of element - from which to remove event listener.\n         * @param {String} event Event ID.\n         * @param {Function} fn Event handler function.\n         * @return {Mottle} The current Mottle instance; you can chain this method.\n         */\n        this.off = function (el, event, fn) {\n            _unbind(el, event, fn);\n            return this;\n        };\n\n        /**\n         * Triggers some event for a given element.\n         * @method trigger\n         * @param {Element} el Element for which to trigger the event.\n         * @param {String} event Event ID.\n         * @param {Event} originalEvent The original event. Should be optional of course, but currently is not, due\n         * to the jsPlumb use case that caused this method to be added.\n         * @param {Object} [payload] Optional object to set as `payload` on the generated event; useful for message passing.\n         * @return {Mottle} The current Mottle instance; you can chain this method.\n         */\n        this.trigger = function (el, event, originalEvent, payload) {\n            // MouseEvent undefined in old IE; that's how we know it's a mouse event.  A fine Microsoft paradox.\n            var originalIsMouse = isMouseDevice && (typeof MouseEvent === \"undefined\" || originalEvent == null || originalEvent.constructor === MouseEvent);\n\n            var eventToBind = (isTouchDevice && !isMouseDevice && touchMap[event]) ? touchMap[event] : event,\n                bindingAMouseEvent = !(isTouchDevice && !isMouseDevice && touchMap[event]);\n\n            var pl = _pageLocation(originalEvent), sl = _screenLocation(originalEvent), cl = _clientLocation(originalEvent);\n            _each(el, function () {\n                var _el = _gel(this), evt;\n                originalEvent = originalEvent || {\n                    screenX: sl[0],\n                    screenY: sl[1],\n                    clientX: cl[0],\n                    clientY: cl[1]\n                };\n\n                var _decorate = function (_evt) {\n                    if (payload) _evt.payload = payload;\n                };\n\n                var eventGenerators = {\n                    \"TouchEvent\": function (evt) {\n                        var touch = document.createTouch(window, _el, 0, pl[0], pl[1],\n                            sl[0], sl[1],\n                            cl[0], cl[1],\n                            0, 0, 0, 0);\n\n                        // https://gist.github.com/sstephenson/448808\n                        var touches = document.createTouchList(touch);\n                        var targetTouches = document.createTouchList(touch);\n                        var changedTouches = document.createTouchList(touch);\n                        evt.initTouchEvent(eventToBind, true, true, window, null, sl[0], sl[1],\n                            cl[0], cl[1], false, false, false, false,\n                            touches, targetTouches, changedTouches, 1, 0);\n                    },\n                    \"MouseEvents\": function (evt) {\n                        evt.initMouseEvent(eventToBind, true, true, window, 0,\n                            sl[0], sl[1],\n                            cl[0], cl[1],\n                            false, false, false, false, 1, _el);\n\n                        if (Sniff.android) {\n                            // Android's touch events are not standard.\n                            var t = document.createTouch(window, _el, 0, pl[0], pl[1],\n                                sl[0], sl[1],\n                                cl[0], cl[1],\n                                0, 0, 0, 0);\n\n                            evt.touches = evt.targetTouches = evt.changedTouches = document.createTouchList(t);\n                        }\n                    }\n                };\n\n                if (document.createEvent) {\n\n                    var ite = !bindingAMouseEvent && !originalIsMouse && (isTouchDevice && touchMap[event] && !Sniff.android),\n                        evtName = ite ? \"TouchEvent\" : \"MouseEvents\";\n\n                    evt = document.createEvent(evtName);\n                    eventGenerators[evtName](evt);\n                    _decorate(evt);\n                    _el.dispatchEvent(evt);\n                }\n                else if (document.createEventObject) {\n                    evt = document.createEventObject();\n                    evt.eventType = evt.eventName = eventToBind;\n                    evt.screenX = sl[0];\n                    evt.screenY = sl[1];\n                    evt.clientX = cl[0];\n                    evt.clientY = cl[1];\n                    _decorate(evt);\n                    _el.fireEvent('on' + eventToBind, evt);\n                }\n            });\n            return this;\n        }\n    };\n\n    /**\n     * Static method to assist in 'consuming' an element: uses `stopPropagation` where available, or sets\n     * `e.returnValue=false` where it is not.\n     * @method Mottle.consume\n     * @param {Event} e Event to consume\n     * @param {Boolean} [doNotPreventDefault=false] If true, does not call `preventDefault()` on the event.\n     */\n    root.Mottle.consume = function (e, doNotPreventDefault) {\n        if (e.stopPropagation)\n            e.stopPropagation();\n        else\n            e.returnValue = false;\n\n        if (!doNotPreventDefault && e.preventDefault)\n            e.preventDefault();\n    };\n\n    /**\n     * Gets the page location corresponding to the given event. For touch events this means get the page location of the first touch.\n     * @method Mottle.pageLocation\n     * @param {Event} e Event to get page location for.\n     * @return {Number[]} [left, top] for the given event.\n     */\n    root.Mottle.pageLocation = _pageLocation;\n\n    /**\n     * Forces touch events to be turned \"on\". Useful for testing: even if you don't have a touch device, you can still\n     * trigger a touch event when this is switched on and it will be captured and acted on.\n     * @method setForceTouchEvents\n     * @param {Boolean} value If true, force touch events to be on.\n     */\n    root.Mottle.setForceTouchEvents = function (value) {\n        isTouchDevice = value;\n    };\n\n    /**\n     * Forces mouse events to be turned \"on\". Useful for testing: even if you don't have a mouse, you can still\n     * trigger a mouse event when this is switched on and it will be captured and acted on.\n     * @method setForceMouseEvents\n     * @param {Boolean} value If true, force mouse events to be on.\n     */\n    root.Mottle.setForceMouseEvents = function (value) {\n        isMouseDevice = value;\n    };\n\n    root.Mottle.version = \"0.8.0\";\n\n    if (typeof exports !== \"undefined\") {\n        exports.Mottle = root.Mottle;\n    }\n\n}).call(typeof window === \"undefined\" ? this : window);\n\n/**\n drag/drop functionality for use with jsPlumb but with\n no knowledge of jsPlumb. supports multiple scopes (separated by whitespace), dragging\n multiple elements, constrain to parent, drop filters, drag start filters, custom\n css classes.\n\n a lot of the functionality of this script is expected to be plugged in:\n\n addClass\n removeClass\n\n addEvent\n removeEvent\n\n getPosition\n setPosition\n getSize\n\n indexOf\n intersects\n\n the name came from here:\n\n http://mrsharpoblunto.github.io/foswig.js/\n\n copyright 2016 jsPlumb\n */\n\n;(function() {\n\n    \"use strict\";\n    var root = this;\n\n    var _suggest = function(list, item, head) {\n        if (list.indexOf(item) === -1) {\n            head ? list.unshift(item) : list.push(item);\n            return true;\n        }\n        return false;\n    };\n\n    var _vanquish = function(list, item) {\n        var idx = list.indexOf(item);\n        if (idx !== -1) list.splice(idx, 1);\n    };\n\n    var _difference = function(l1, l2) {\n        var d = [];\n        for (var i = 0; i < l1.length; i++) {\n            if (l2.indexOf(l1[i]) === -1)\n                d.push(l1[i]);\n        }\n        return d;\n    };\n\n    var _isString = function(f) {\n        return f == null ? false : (typeof f === \"string\" || f.constructor === String);\n    };\n\n    var getOffsetRect = function (elem) {\n        // (1)\n        var box = elem.getBoundingClientRect(),\n            body = document.body,\n            docElem = document.documentElement,\n        // (2)\n            scrollTop = window.pageYOffset || docElem.scrollTop || body.scrollTop,\n            scrollLeft = window.pageXOffset || docElem.scrollLeft || body.scrollLeft,\n        // (3)\n            clientTop = docElem.clientTop || body.clientTop || 0,\n            clientLeft = docElem.clientLeft || body.clientLeft || 0,\n        // (4)\n            top  = box.top +  scrollTop - clientTop,\n            left = box.left + scrollLeft - clientLeft;\n\n        return { top: Math.round(top), left: Math.round(left) };\n    };\n\n    var matchesSelector = function(el, selector, ctx) {\n        ctx = ctx || el.parentNode;\n        var possibles = ctx.querySelectorAll(selector);\n        for (var i = 0; i < possibles.length; i++) {\n            if (possibles[i] === el)\n                return true;\n        }\n        return false;\n    };\n\n    var iev = (function() {\n            var rv = -1;\n            if (navigator.appName === 'Microsoft Internet Explorer') {\n                var ua = navigator.userAgent,\n                    re = new RegExp(\"MSIE ([0-9]{1,}[\\.0-9]{0,})\");\n                if (re.exec(ua) != null)\n                    rv = parseFloat(RegExp.$1);\n            }\n            return rv;\n        })(),\n        DEFAULT_GRID_X = 10,\n        DEFAULT_GRID_Y = 10,\n        isIELT9 = iev > -1 && iev < 9,\n        isIE9 = iev === 9,\n        _pl = function(e) {\n            if (isIELT9) {\n                return [ e.clientX + document.documentElement.scrollLeft, e.clientY + document.documentElement.scrollTop ];\n            }\n            else {\n                var ts = _touches(e), t = _getTouch(ts, 0);\n                // for IE9 pageX might be null if the event was synthesized. We try for pageX/pageY first,\n                // falling back to clientX/clientY if necessary. In every other browser we want to use pageX/pageY.\n                return isIE9 ? [t.pageX || t.clientX, t.pageY || t.clientY] : [t.pageX, t.pageY];\n            }\n        },\n        _getTouch = function(touches, idx) { return touches.item ? touches.item(idx) : touches[idx]; },\n        _touches = function(e) {\n            return e.touches && e.touches.length > 0 ? e.touches :\n                    e.changedTouches && e.changedTouches.length > 0 ? e.changedTouches :\n                    e.targetTouches && e.targetTouches.length > 0 ? e.targetTouches :\n                [ e ];\n        },\n        _classes = {\n            draggable:\"katavorio-draggable\",    // draggable elements\n            droppable:\"katavorio-droppable\",    // droppable elements\n            drag : \"katavorio-drag\",            // elements currently being dragged\n            selected:\"katavorio-drag-selected\", // elements in current drag selection\n            active : \"katavorio-drag-active\",   // droppables that are targets of a currently dragged element\n            hover : \"katavorio-drag-hover\",     // droppables over which a matching drag element is hovering\n            noSelect : \"katavorio-drag-no-select\", // added to the body to provide a hook to suppress text selection\n            ghostProxy:\"katavorio-ghost-proxy\",  // added to a ghost proxy element in use when a drag has exited the bounds of its parent.\n            clonedDrag:\"katavorio-clone-drag\"     // added to a node that is a clone of an element created at the start of a drag\n        },\n        _defaultScope = \"katavorio-drag-scope\",\n        _events = [ \"stop\", \"start\", \"drag\", \"drop\", \"over\", \"out\", \"beforeStart\" ],\n        _devNull = function() {},\n        _true = function() { return true; },\n        _foreach = function(l, fn, from) {\n            for (var i = 0; i < l.length; i++) {\n                if (l[i] != from)\n                    fn(l[i]);\n            }\n        },\n        _setDroppablesActive = function(dd, val, andHover, drag) {\n            _foreach(dd, function(e) {\n                e.setActive(val);\n                if (val) e.updatePosition();\n                if (andHover) e.setHover(drag, val);\n            });\n        },\n        _each = function(obj, fn) {\n            if (obj == null) return;\n            obj = !_isString(obj) && (obj.tagName == null && obj.length != null) ? obj : [ obj ];\n            for (var i = 0; i < obj.length; i++)\n                fn.apply(obj[i], [ obj[i] ]);\n        },\n        _consume = function(e) {\n            if (e.stopPropagation) {\n                e.stopPropagation();\n                e.preventDefault();\n            }\n            else {\n                e.returnValue = false;\n            }\n        },\n        _defaultInputFilterSelector = \"input,textarea,select,button,option\",\n    //\n    // filters out events on all input elements, like textarea, checkbox, input, select.\n        _inputFilter = function(e, el, _katavorio) {\n            var t = e.srcElement || e.target;\n            return !matchesSelector(t, _katavorio.getInputFilterSelector(), el);\n        };\n\n    var Super = function(el, params, css, scope) {\n        this.params = params || {};\n        this.el = el;\n        this.params.addClass(this.el, this._class);\n        this.uuid = _uuid();\n        var enabled = true;\n        this.setEnabled = function(e) { enabled = e; };\n        this.isEnabled = function() { return enabled; };\n        this.toggleEnabled = function() { enabled = !enabled; };\n        this.setScope = function(scopes) {\n            this.scopes = scopes ? scopes.split(/\\s+/) : [ scope ];\n        };\n        this.addScope = function(scopes) {\n            var m = {};\n            _each(this.scopes, function(s) { m[s] = true;});\n            _each(scopes ? scopes.split(/\\s+/) : [], function(s) { m[s] = true;});\n            this.scopes = [];\n            for (var i in m) this.scopes.push(i);\n        };\n        this.removeScope = function(scopes) {\n            var m = {};\n            _each(this.scopes, function(s) { m[s] = true;});\n            _each(scopes ? scopes.split(/\\s+/) : [], function(s) { delete m[s];});\n            this.scopes = [];\n            for (var i in m) this.scopes.push(i);\n        };\n        this.toggleScope = function(scopes) {\n            var m = {};\n            _each(this.scopes, function(s) { m[s] = true;});\n            _each(scopes ? scopes.split(/\\s+/) : [], function(s) {\n                if (m[s]) delete m[s];\n                else m[s] = true;\n            });\n            this.scopes = [];\n            for (var i in m) this.scopes.push(i);\n        };\n        this.setScope(params.scope);\n        this.k = params.katavorio;\n        return params.katavorio;\n    };\n\n    var TRUE = function() { return true; };\n    var FALSE = function() { return false; };\n\n    var Drag = function(el, params, css, scope) {\n        this._class = css.draggable;\n        var k = Super.apply(this, arguments);\n        this.rightButtonCanDrag = this.params.rightButtonCanDrag;\n        var downAt = [0,0], posAtDown = null, pagePosAtDown = null, pageDelta = [0,0], moving = false,\n            consumeStartEvent = this.params.consumeStartEvent !== false,\n            dragEl = this.el,\n            clone = this.params.clone,\n            scroll = this.params.scroll,\n            _multipleDrop = params.multipleDrop !== false,\n            isConstrained = false,\n            useGhostProxy = params.ghostProxy === true ? TRUE : params.ghostProxy && typeof params.ghostProxy === \"function\" ? params.ghostProxy : FALSE,\n            ghostProxy = function(el) { return el.cloneNode(true); };\n\n        var snapThreshold = params.snapThreshold,\n            _snap = function(pos, gridX, gridY, thresholdX, thresholdY) {\n                var _dx = Math.floor(pos[0] / gridX),\n                    _dxl = gridX * _dx,\n                    _dxt = _dxl + gridX,\n                    _x = Math.abs(pos[0] - _dxl) <= thresholdX ? _dxl : Math.abs(_dxt - pos[0]) <= thresholdX ? _dxt : pos[0];\n\n                var _dy = Math.floor(pos[1] / gridY),\n                    _dyl = gridY * _dy,\n                    _dyt = _dyl + gridY,\n                    _y = Math.abs(pos[1] - _dyl) <= thresholdY ? _dyl : Math.abs(_dyt - pos[1]) <= thresholdY ? _dyt : pos[1];\n\n                return [ _x, _y];\n            };\n\n        this.posses = [];\n        this.posseRoles = {};\n\n        this.toGrid = function(pos) {\n            if (this.params.grid == null) {\n                return pos;\n            }\n            else {\n                var tx = this.params.grid ? this.params.grid[0] / 2 : snapThreshold ? snapThreshold : DEFAULT_GRID_X / 2,\n                    ty = this.params.grid ? this.params.grid[1] / 2 : snapThreshold ? snapThreshold : DEFAULT_GRID_Y / 2;\n\n                return _snap(pos, this.params.grid[0], this.params.grid[1], tx, ty);\n            }\n        };\n\n        this.snap = function(x, y) {\n            if (dragEl == null) return;\n            x = x || (this.params.grid ? this.params.grid[0] : DEFAULT_GRID_X);\n            y = y || (this.params.grid ? this.params.grid[1] : DEFAULT_GRID_Y);\n            var p = this.params.getPosition(dragEl),\n                tx = this.params.grid ? this.params.grid[0] / 2 : snapThreshold,\n                ty = this.params.grid ? this.params.grid[1] / 2 : snapThreshold;\n\n            this.params.setPosition(dragEl, _snap(p, x, y, tx, ty));\n        };\n\n        this.setUseGhostProxy = function(val) {\n            useGhostProxy = val ? TRUE : FALSE;\n        };\n\n        var constrain;\n        var negativeFilter = function(pos) {\n            return (params.allowNegative === false) ? [ Math.max (0, pos[0]), Math.max(0, pos[1]) ] : pos;\n        };\n\n        var _setConstrain = function(value) {\n            constrain = typeof value === \"function\" ? value : value ? function(pos, dragEl, _constrainRect, _size) {\n                return negativeFilter([\n                    Math.max(0, Math.min(_constrainRect.w - _size[0], pos[0])),\n                    Math.max(0, Math.min(_constrainRect.h - _size[1], pos[1]))\n                ]);\n            }.bind(this) : function(pos) { return negativeFilter(pos); };\n        }.bind(this);\n\n        _setConstrain(typeof this.params.constrain === \"function\" ? this.params.constrain  : (this.params.constrain || this.params.containment));\n\n\n        /**\n         * Sets whether or not the Drag is constrained. A value of 'true' means constrain to parent bounds; a function\n         * will be executed and returns true if the position is allowed.\n         * @param value\n         */\n        this.setConstrain = function(value) {\n            _setConstrain(value);\n        };\n\n        var revertFunction;\n        /**\n         * Sets a function to call on drag stop, which, if it returns true, indicates that the given element should\n         * revert to its position before the previous drag.\n         * @param fn\n         */\n        this.setRevert = function(fn) {\n            revertFunction = fn;\n        };\n\n        var _assignId = function(obj) {\n                if (typeof obj === \"function\") {\n                    obj._katavorioId = _uuid();\n                    return obj._katavorioId;\n                } else {\n                    return obj;\n                }\n            },\n        // a map of { spec -> [ fn, exclusion ] } entries.\n            _filters = {},\n            _testFilter = function(e) {\n                for (var key in _filters) {\n                    var f = _filters[key];\n                    var rv = f[0](e);\n                    if (f[1]) rv = !rv;\n                    if (!rv) return false;\n                }\n                return true;\n            },\n            _setFilter = this.setFilter = function(f, _exclude) {\n                if (f) {\n                    var key = _assignId(f);\n                    _filters[key] = [\n                        function(e) {\n                            var t = e.srcElement || e.target, m;\n                            if (_isString(f)) {\n                                m = matchesSelector(t, f, el);\n                            }\n                            else if (typeof f === \"function\") {\n                                m = f(e, el);\n                            }\n                            return m;\n                        },\n                            _exclude !== false\n                    ];\n\n                }\n            },\n            _addFilter = this.addFilter = _setFilter,\n            _removeFilter = this.removeFilter = function(f) {\n                var key = typeof f === \"function\" ? f._katavorioId : f;\n                delete _filters[key];\n            };\n\n        this.clearAllFilters = function() {\n            _filters = {};\n        };\n\n        this.canDrag = this.params.canDrag || _true;\n\n        var constrainRect,\n            matchingDroppables = [],\n            intersectingDroppables = [];\n\n        this.downListener = function(e) {\n            var isNotRightClick = this.rightButtonCanDrag || (e.which !== 3 && e.button !== 2);\n            if (isNotRightClick && this.isEnabled() && this.canDrag()) {\n                var _f =  _testFilter(e) && _inputFilter(e, this.el, this.k);\n                if (_f) {\n                    if (!clone)\n                        dragEl = this.el;\n                    else {\n                        dragEl = this.el.cloneNode(true);\n                        this.params.addClass(dragEl, _classes.clonedDrag);\n\n                        dragEl.setAttribute(\"id\", null);\n                        dragEl.style.position = \"absolute\";\n\n                        if (this.params.parent != null) {\n                            var p = this.params.getPosition(this.el);\n                            dragEl.style.left = p[0] + \"px\";\n                            dragEl.style.top = p[1] + \"px\";\n                            this.params.parent.appendChild(dragEl);\n                        } else {\n                            // the clone node is added to the body; getOffsetRect gives us a value\n                            // relative to the body.\n                            var b = getOffsetRect(this.el);\n                            dragEl.style.left = b.left + \"px\";\n                            dragEl.style.top = b.top + \"px\";\n\n                            document.body.appendChild(dragEl);\n                        }\n\n                    }\n                    consumeStartEvent && _consume(e);\n                    downAt = _pl(e);\n                    //\n                    this.params.bind(document, \"mousemove\", this.moveListener);\n                    this.params.bind(document, \"mouseup\", this.upListener);\n                    k.markSelection(this);\n                    k.markPosses(this);\n                    this.params.addClass(document.body, css.noSelect);\n                    _dispatch(\"beforeStart\", {el:this.el, pos:posAtDown, e:e, drag:this});\n                }\n                else if (this.params.consumeFilteredEvents) {\n                    _consume(e);\n                }\n            }\n        }.bind(this);\n\n        this.moveListener = function(e) {\n            if (downAt) {\n                if (!moving) {\n                    var _continue = _dispatch(\"start\", {el:this.el, pos:posAtDown, e:e, drag:this});\n                    if (_continue !== false) {\n                        if (!downAt) {\n                            return;\n                        }\n                        this.mark(true);\n                        moving = true;\n                    } else {\n                        this.abort();\n                    }\n                }\n\n                // it is possible that the start event caused the drag to be aborted. So we check\n                // again that we are currently dragging.\n                if (downAt) {\n                    intersectingDroppables.length = 0;\n                    var pos = _pl(e), dx = pos[0] - downAt[0], dy = pos[1] - downAt[1],\n                        z = this.params.ignoreZoom ? 1 : k.getZoom();\n                    dx /= z;\n                    dy /= z;\n                    this.moveBy(dx, dy, e);\n                    k.updateSelection(dx, dy, this);\n                    k.updatePosses(dx, dy, this);\n                }\n            }\n        }.bind(this);\n\n        this.upListener = function(e) {\n            if (downAt) {\n                downAt = null;\n                this.params.unbind(document, \"mousemove\", this.moveListener);\n                this.params.unbind(document, \"mouseup\", this.upListener);\n                this.params.removeClass(document.body, css.noSelect);\n                this.unmark(e);\n                k.unmarkSelection(this, e);\n                k.unmarkPosses(this, e);\n                this.stop(e);\n                k.notifySelectionDragStop(this, e);\n                k.notifyPosseDragStop(this, e);\n                moving = false;\n                if (clone) {\n                    dragEl && dragEl.parentNode && dragEl.parentNode.removeChild(dragEl);\n                    dragEl = null;\n                }\n\n                intersectingDroppables.length = 0;\n\n                if (revertFunction && revertFunction(this.el, this.params.getPosition(this.el)) === true) {\n                    this.params.setPosition(this.el, posAtDown);\n                    _dispatch(\"revert\", this.el);\n                }\n            }\n        }.bind(this);\n\n        this.getFilters = function() { return _filters; };\n\n        this.abort = function() {\n            if (downAt != null)\n                this.upListener();\n        };\n\n        this.getDragElement = function() {\n            return dragEl || this.el;\n        };\n\n        var listeners = {\"start\":[], \"drag\":[], \"stop\":[], \"over\":[], \"out\":[], \"beforeStart\":[], \"revert\":[] };\n        if (params.events.start) listeners.start.push(params.events.start);\n        if (params.events.beforeStart) listeners.beforeStart.push(params.events.beforeStart);\n        if (params.events.stop) listeners.stop.push(params.events.stop);\n        if (params.events.drag) listeners.drag.push(params.events.drag);\n        if (params.events.revert) listeners.revert.push(params.events.revert);\n\n        this.on = function(evt, fn) {\n            if (listeners[evt]) listeners[evt].push(fn);\n        };\n\n        this.off = function(evt, fn) {\n            if (listeners[evt]) {\n                var l = [];\n                for (var i = 0; i < listeners[evt].length; i++) {\n                    if (listeners[evt][i] !== fn) l.push(listeners[evt][i]);\n                }\n                listeners[evt] = l;\n            }\n        };\n\n        var _dispatch = function(evt, value) {\n            var result = null;\n            if (listeners[evt]) {\n                for (var i = 0; i < listeners[evt].length; i++) {\n                    try {\n                        var v = listeners[evt][i](value);\n                        if (v != null) {\n                            result = v;\n                        }\n                    }\n                    catch (e) { }\n                }\n            }\n            return result;\n        };\n\n        this.notifyStart = function(e) {\n            _dispatch(\"start\", {el:this.el, pos:this.params.getPosition(dragEl), e:e, drag:this});\n        };\n\n        this.stop = function(e, force) {\n            if (force || moving) {\n                var positions = [],\n                    sel = k.getSelection(),\n                    dPos = this.params.getPosition(dragEl);\n\n                if (sel.length > 1) {\n                    for (var i = 0; i < sel.length; i++) {\n                        var p = this.params.getPosition(sel[i].el);\n                        positions.push([ sel[i].el, { left: p[0], top: p[1] }, sel[i] ]);\n                    }\n                }\n                else {\n                    positions.push([ dragEl, {left:dPos[0], top:dPos[1]}, this ]);\n                }\n\n                _dispatch(\"stop\", {\n                    el: dragEl,\n                    pos: ghostProxyOffsets || dPos,\n                    finalPos:dPos,\n                    e: e,\n                    drag: this,\n                    selection:positions\n                });\n            }\n        };\n\n        this.mark = function(andNotify) {\n            posAtDown = this.params.getPosition(dragEl);\n            pagePosAtDown = this.params.getPosition(dragEl, true);\n            pageDelta = [pagePosAtDown[0] - posAtDown[0], pagePosAtDown[1] - posAtDown[1]];\n            this.size = this.params.getSize(dragEl);\n            matchingDroppables = k.getMatchingDroppables(this);\n            _setDroppablesActive(matchingDroppables, true, false, this);\n            this.params.addClass(dragEl, this.params.dragClass || css.drag);\n\n            var cs;\n            if (this.params.getConstrainingRectangle) {\n                cs = this.params.getConstrainingRectangle(dragEl)\n            } else {\n                cs = this.params.getSize(dragEl.parentNode);\n            }\n            constrainRect = {w: cs[0], h: cs[1]};\n\n            if (andNotify) {\n                k.notifySelectionDragStart(this);\n            }\n        };\n        var ghostProxyOffsets;\n        this.unmark = function(e, doNotCheckDroppables) {\n            _setDroppablesActive(matchingDroppables, false, true, this);\n\n            if (isConstrained && useGhostProxy(this.el)) {\n                ghostProxyOffsets = [dragEl.offsetLeft, dragEl.offsetTop];\n                this.el.parentNode.removeChild(dragEl);\n                dragEl = this.el;\n            }\n            else {\n                ghostProxyOffsets = null;\n            }\n\n            this.params.removeClass(dragEl, this.params.dragClass || css.drag);\n            matchingDroppables.length = 0;\n            isConstrained = false;\n            if (!doNotCheckDroppables) {\n                if (intersectingDroppables.length > 0 && ghostProxyOffsets) {\n                    params.setPosition(this.el, ghostProxyOffsets);\n                }\n                intersectingDroppables.sort(_rankSort);\n                for (var i = 0; i < intersectingDroppables.length; i++) {\n                    var retVal = intersectingDroppables[i].drop(this, e);\n                    if (retVal === true) break;\n                }\n            }\n        };\n        this.moveBy = function(dx, dy, e) {\n            intersectingDroppables.length = 0;\n            var desiredLoc = this.toGrid([posAtDown[0] + dx, posAtDown[1] + dy]),\n                cPos = constrain(desiredLoc, dragEl, constrainRect, this.size);\n\n            if (useGhostProxy(this.el)) {\n                if (desiredLoc[0] !== cPos[0] || desiredLoc[1] !== cPos[1]) {\n                    if (!isConstrained) {\n                        var gp = ghostProxy(this.el);\n                        params.addClass(gp, _classes.ghostProxy);\n                        this.el.parentNode.appendChild(gp);\n                        dragEl = gp;\n                        isConstrained = true;\n                    }\n                    cPos = desiredLoc;\n                }\n                else {\n                    if (isConstrained) {\n                        this.el.parentNode.removeChild(dragEl);\n                        dragEl = this.el;\n                        isConstrained = false;\n                    }\n                }\n            }\n\n            var rect = { x:cPos[0], y:cPos[1], w:this.size[0], h:this.size[1]},\n                pageRect = { x:rect.x + pageDelta[0], y:rect.y + pageDelta[1], w:rect.w, h:rect.h},\n                focusDropElement = null;\n\n            this.params.setPosition(dragEl, cPos);\n            for (var i = 0; i < matchingDroppables.length; i++) {\n                var r2 = { x:matchingDroppables[i].pagePosition[0], y:matchingDroppables[i].pagePosition[1], w:matchingDroppables[i].size[0], h:matchingDroppables[i].size[1]};\n                if (this.params.intersects(pageRect, r2) && (_multipleDrop || focusDropElement == null || focusDropElement === matchingDroppables[i].el) && matchingDroppables[i].canDrop(this)) {\n                    if (!focusDropElement) focusDropElement = matchingDroppables[i].el;\n                    intersectingDroppables.push(matchingDroppables[i]);\n                    matchingDroppables[i].setHover(this, true, e);\n                }\n                else if (matchingDroppables[i].isHover()) {\n                    matchingDroppables[i].setHover(this, false, e);\n                }\n            }\n\n            _dispatch(\"drag\", {el:this.el, pos:cPos, e:e, drag:this});\n\n            /* test to see if the parent needs to be scrolled (future)\n             if (scroll) {\n             var pnsl = dragEl.parentNode.scrollLeft, pnst = dragEl.parentNode.scrollTop;\n             console.log(\"scroll!\", pnsl, pnst);\n             }*/\n        };\n        this.destroy = function() {\n            this.params.unbind(this.el, \"mousedown\", this.downListener);\n            this.params.unbind(document, \"mousemove\", this.moveListener);\n            this.params.unbind(document, \"mouseup\", this.upListener);\n            this.downListener = null;\n            this.upListener = null;\n            this.moveListener = null;\n        };\n\n        // init:register mousedown, and perhaps set a filter\n        this.params.bind(this.el, \"mousedown\", this.downListener);\n\n        // if handle provded, use that.  otherwise, try to set a filter.\n        // note that a `handle` selector always results in filterExclude being set to false, ie.\n        // the selector defines the handle element(s).\n        if (this.params.handle)\n            _setFilter(this.params.handle, false);\n        else\n            _setFilter(this.params.filter, this.params.filterExclude);\n    };\n\n    var Drop = function(el, params, css, scope) {\n        this._class = css.droppable;\n        this.params = params || {};\n        this.rank = params.rank || 0;\n        this._activeClass = this.params.activeClass || css.active;\n        this._hoverClass = this.params.hoverClass || css.hover;\n        Super.apply(this, arguments);\n        var hover = false;\n        this.allowLoopback = this.params.allowLoopback !== false;\n\n        this.setActive = function(val) {\n            this.params[val ? \"addClass\" : \"removeClass\"](this.el, this._activeClass);\n        };\n\n        this.updatePosition = function() {\n            this.position = this.params.getPosition(this.el);\n            this.pagePosition = this.params.getPosition(this.el, true);\n            this.size = this.params.getSize(this.el);\n        };\n\n        this.canDrop = this.params.canDrop || function(drag) {\n            return true;\n        };\n\n        this.isHover = function() { return hover; };\n\n        this.setHover = function(drag, val, e) {\n            // if turning off hover but this was not the drag that caused the hover, ignore.\n            if (val || this.el._katavorioDragHover == null || this.el._katavorioDragHover === drag.el._katavorio) {\n                this.params[val ? \"addClass\" : \"removeClass\"](this.el, this._hoverClass);\n                //this.el._katavorioDragHover = val ? drag.el._katavorio : null;\n                this.el._katavorioDragHover = val ? drag.el._katavorio : null;\n                if (hover !== val)\n                    this.params.events[val ? \"over\" : \"out\"]({el:this.el, e:e, drag:drag, drop:this});\n                hover = val;\n            }\n        };\n\n        this.drop = function(drag, event) {\n            return this.params.events[\"drop\"]({ drag:drag, e:event, drop:this });\n        };\n\n        this.destroy = function() {\n            this._class = null;\n            this._activeClass = null;\n            this._hoverClass = null;\n            //this.params = null;\n            hover = null;\n            //this.el = null;\n        };\n    };\n\n    var _uuid = function() {\n        return ('xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n            var r = Math.random()*16|0, v = c === 'x' ? r : (r&0x3|0x8);\n            return v.toString(16);\n        }));\n    };\n\n    var _rankSort = function(a,b) {\n        return a.rank < b.rank ? 1 : a.rank > b.rank ? -1 : 0;\n    };\n\n    var _gel = function(el) {\n        if (el == null) return null;\n        el = (typeof el === \"string\" || el.constructor === String)  ? document.getElementById(el) : el;\n        if (el == null) return null;\n        el._katavorio = el._katavorio || _uuid();\n        return el;\n    };\n\n    root.Katavorio = function(katavorioParams) {\n\n        var _selection = [],\n            _selectionMap = {};\n\n        this._dragsByScope = {};\n        this._dropsByScope = {};\n        var _zoom = 1,\n            _reg = function(obj, map) {\n                _each(obj, function(_obj) {\n                    for(var i = 0; i < _obj.scopes.length; i++) {\n                        map[_obj.scopes[i]] = map[_obj.scopes[i]] || [];\n                        map[_obj.scopes[i]].push(_obj);\n                    }\n                });\n            },\n            _unreg = function(obj, map) {\n                var c = 0;\n                _each(obj, function(_obj) {\n                    for(var i = 0; i < _obj.scopes.length; i++) {\n                        if (map[_obj.scopes[i]]) {\n                            var idx = katavorioParams.indexOf(map[_obj.scopes[i]], _obj);\n                            if (idx !== -1) {\n                                map[_obj.scopes[i]].splice(idx, 1);\n                                c++;\n                            }\n                        }\n                    }\n                });\n\n                return c > 0 ;\n            },\n            _getMatchingDroppables = this.getMatchingDroppables = function(drag) {\n                var dd = [], _m = {};\n                for (var i = 0; i < drag.scopes.length; i++) {\n                    var _dd = this._dropsByScope[drag.scopes[i]];\n                    if (_dd) {\n                        for (var j = 0; j < _dd.length; j++) {\n                            if (_dd[j].canDrop(drag) &&  !_m[_dd[j].uuid] && (_dd[j].allowLoopback || _dd[j].el !== drag.el)) {\n                                _m[_dd[j].uuid] = true;\n                                dd.push(_dd[j]);\n                            }\n                        }\n                    }\n                }\n                dd.sort(_rankSort);\n                return dd;\n            },\n            _prepareParams = function(p) {\n                p = p || {};\n                var _p = {\n                    events:{}\n                }, i;\n                for (i in katavorioParams) _p[i] = katavorioParams[i];\n                for (i in p) _p[i] = p[i];\n                // events\n\n                for (i = 0; i < _events.length; i++) {\n                    _p.events[_events[i]] = p[_events[i]] || _devNull;\n                }\n                _p.katavorio = this;\n                return _p;\n            }.bind(this),\n            _mistletoe = function(existingDrag, params) {\n                for (var i = 0; i < _events.length; i++) {\n                    if (params[_events[i]]) {\n                        existingDrag.on(_events[i], params[_events[i]]);\n                    }\n                }\n            }.bind(this),\n            _css = {},\n            overrideCss = katavorioParams.css || {},\n            _scope = katavorioParams.scope || _defaultScope;\n\n        // prepare map of css classes based on defaults frst, then optional overrides\n        for (var i in _classes) _css[i] = _classes[i];\n        for (var i in overrideCss) _css[i] = overrideCss[i];\n\n        var inputFilterSelector = katavorioParams.inputFilterSelector || _defaultInputFilterSelector;\n        /**\n         * Gets the selector identifying which input elements to filter from drag events.\n         * @method getInputFilterSelector\n         * @return {String} Current input filter selector.\n         */\n        this.getInputFilterSelector = function() { return inputFilterSelector; };\n\n        /**\n         * Sets the selector identifying which input elements to filter from drag events.\n         * @method setInputFilterSelector\n         * @param {String} selector Input filter selector to set.\n         * @return {Katavorio} Current instance; method may be chained.\n         */\n        this.setInputFilterSelector = function(selector) {\n            inputFilterSelector = selector;\n            return this;\n        };\n\n        this.draggable = function(el, params) {\n            var o = [];\n            _each(el, function(_el) {\n                _el = _gel(_el);\n                if (_el != null) {\n                    if (_el._katavorioDrag == null) {\n                        var p = _prepareParams(params);\n                        _el._katavorioDrag = new Drag(_el, p, _css, _scope);\n                        _reg(_el._katavorioDrag, this._dragsByScope);\n                        o.push(_el._katavorioDrag);\n                        katavorioParams.addClass(_el, _css.draggable);\n                    }\n                    else {\n                        _mistletoe(_el._katavorioDrag, params);\n                    }\n                }\n            }.bind(this));\n            return o;\n\n        };\n\n        this.droppable = function(el, params) {\n            var o = [];\n            _each(el, function(_el) {\n                _el = _gel(_el);\n                if (_el != null) {\n                    var drop = new Drop(_el, _prepareParams(params), _css, _scope);\n                    _el._katavorioDrop = _el._katavorioDrop || [];\n                    _el._katavorioDrop.push(drop);\n                    _reg(drop, this._dropsByScope);\n                    o.push(drop);\n                    katavorioParams.addClass(_el, _css.droppable);\n                }\n            }.bind(this));\n            return o;\n        };\n\n        /**\n         * @name Katavorio#select\n         * @function\n         * @desc Adds an element to the current selection (for multiple node drag)\n         * @param {Element|String} DOM element - or id of the element - to add.\n         */\n        this.select = function(el) {\n            _each(el, function() {\n                var _el = _gel(this);\n                if (_el && _el._katavorioDrag) {\n                    if (!_selectionMap[_el._katavorio]) {\n                        _selection.push(_el._katavorioDrag);\n                        _selectionMap[_el._katavorio] = [ _el, _selection.length - 1 ];\n                        katavorioParams.addClass(_el, _css.selected);\n                    }\n                }\n            });\n            return this;\n        };\n\n        /**\n         * @name Katavorio#deselect\n         * @function\n         * @desc Removes an element from the current selection (for multiple node drag)\n         * @param {Element|String} DOM element - or id of the element - to remove.\n         */\n        this.deselect = function(el) {\n            _each(el, function() {\n                var _el = _gel(this);\n                if (_el && _el._katavorio) {\n                    var e = _selectionMap[_el._katavorio];\n                    if (e) {\n                        var _s = [];\n                        for (var i = 0; i < _selection.length; i++)\n                            if (_selection[i].el !== _el) _s.push(_selection[i]);\n                        _selection = _s;\n                        delete _selectionMap[_el._katavorio];\n                        katavorioParams.removeClass(_el, _css.selected);\n                    }\n                }\n            });\n            return this;\n        };\n\n        this.deselectAll = function() {\n            for (var i in _selectionMap) {\n                var d = _selectionMap[i];\n                katavorioParams.removeClass(d[0], _css.selected);\n            }\n\n            _selection.length = 0;\n            _selectionMap = {};\n        };\n\n        this.markSelection = function(drag) {\n            _foreach(_selection, function(e) { e.mark(); }, drag);\n        };\n\n        this.markPosses = function(drag) {\n            if (drag.posses) {\n                _each(drag.posses, function(p) {\n                    if (drag.posseRoles[p] && _posses[p]) {\n                        _foreach(_posses[p].members, function (d) {\n                            d.mark();\n                        }, drag);\n                    }\n                })\n            }\n        };\n\n        this.unmarkSelection = function(drag, event) {\n            _foreach(_selection, function(e) { e.unmark(event); }, drag);\n        };\n\n        this.unmarkPosses = function(drag, event) {\n            if (drag.posses) {\n                _each(drag.posses, function(p) {\n                    if (drag.posseRoles[p] && _posses[p]) {\n                        _foreach(_posses[p].members, function (d) {\n                            d.unmark(event, true);\n                        }, drag);\n                    }\n                });\n            }\n        };\n\n        this.getSelection = function() { return _selection.slice(0); };\n\n        this.updateSelection = function(dx, dy, drag) {\n            _foreach(_selection, function(e) { e.moveBy(dx, dy); }, drag);\n        };\n\n        var _posseAction = function(fn, drag) {\n            if (drag.posses) {\n                _each(drag.posses, function(p) {\n                    if (drag.posseRoles[p] && _posses[p]) {\n                        _foreach(_posses[p].members, function (e) {\n                            fn(e);\n                        }, drag);\n                    }\n                });\n            }\n        };\n\n        this.updatePosses = function(dx, dy, drag) {\n            _posseAction(function(e) { e.moveBy(dx, dy); }, drag);\n        };\n\n        this.notifyPosseDragStop = function(drag, evt) {\n            _posseAction(function(e) { e.stop(evt, true); }, drag);\n        };\n\n        this.notifySelectionDragStop = function(drag, evt) {\n            _foreach(_selection, function(e) { e.stop(evt, true); }, drag);\n        };\n\n        this.notifySelectionDragStart = function(drag, evt) {\n            _foreach(_selection, function(e) { e.notifyStart(evt);}, drag);\n        };\n\n        this.setZoom = function(z) { _zoom = z; };\n        this.getZoom = function() { return _zoom; };\n\n        // does the work of changing scopes\n        var _scopeManip = function(kObj, scopes, map, fn) {\n            _each(kObj, function(_kObj) {\n                _unreg(_kObj, map);  // deregister existing scopes\n                _kObj[fn](scopes); // set scopes\n                _reg(_kObj, map); // register new ones\n            });\n        };\n\n        _each([ \"set\", \"add\", \"remove\", \"toggle\"], function(v) {\n            this[v + \"Scope\"] = function(el, scopes) {\n                _scopeManip(el._katavorioDrag, scopes, this._dragsByScope, v + \"Scope\");\n                _scopeManip(el._katavorioDrop, scopes, this._dropsByScope, v + \"Scope\");\n            }.bind(this);\n            this[v + \"DragScope\"] = function(el, scopes) {\n                _scopeManip(el.constructor === Drag ? el : el._katavorioDrag, scopes, this._dragsByScope, v + \"Scope\");\n            }.bind(this);\n            this[v + \"DropScope\"] = function(el, scopes) {\n                _scopeManip(el.constructor === Drop ? el : el._katavorioDrop, scopes, this._dropsByScope, v + \"Scope\");\n            }.bind(this);\n        }.bind(this));\n\n        this.snapToGrid = function(x, y) {\n            for (var s in this._dragsByScope) {\n                _foreach(this._dragsByScope[s], function(d) { d.snap(x, y); });\n            }\n        };\n\n        this.getDragsForScope = function(s) { return this._dragsByScope[s]; };\n        this.getDropsForScope = function(s) { return this._dropsByScope[s]; };\n\n        var _destroy = function(el, type, map) {\n            el = _gel(el);\n            if (el[type]) {\n\n                // remove from selection, if present.\n                var selIdx = _selection.indexOf(el[type]);\n                if (selIdx >= 0) {\n                    _selection.splice(selIdx, 1);\n                }\n\n                if (_unreg(el[type], map)) {\n                    _each(el[type], function(kObj) { kObj.destroy() });\n                }\n\n                delete el[type];\n            }\n        };\n\n        var _removeListener = function(el, type, evt, fn) {\n            el = _gel(el);\n            if (el[type]) {\n                el[type].off(evt, fn);\n            }\n        };\n\n        this.elementRemoved = function(el) {\n            this.destroyDraggable(el);\n            this.destroyDroppable(el);\n        };\n\n        /**\n         * Either completely remove drag functionality from the given element, or remove a specific event handler. If you\n         * call this method with a single argument - the element - all drag functionality is removed from it. Otherwise, if\n         * you provide an event name and listener function, this function is de-registered (if found).\n         * @param el Element to update\n         * @param {string} [evt] Optional event name to unsubscribe\n         * @param {Function} [fn] Optional function to unsubscribe\n         */\n        this.destroyDraggable = function(el, evt, fn) {\n            if (arguments.length === 1) {\n                _destroy(el, \"_katavorioDrag\", this._dragsByScope);\n            } else {\n                _removeListener(el, \"_katavorioDrag\", evt, fn);\n            }\n        };\n\n        /**\n         * Either completely remove drop functionality from the given element, or remove a specific event handler. If you\n         * call this method with a single argument - the element - all drop functionality is removed from it. Otherwise, if\n         * you provide an event name and listener function, this function is de-registered (if found).\n         * @param el Element to update\n         * @param {string} [evt] Optional event name to unsubscribe\n         * @param {Function} [fn] Optional function to unsubscribe\n         */\n        this.destroyDroppable = function(el, evt, fn) {\n            if (arguments.length === 1) {\n                _destroy(el, \"_katavorioDrop\", this._dropsByScope);\n            } else {\n                _removeListener(el, \"_katavorioDrop\", evt, fn);\n            }\n        };\n\n        this.reset = function() {\n            this._dragsByScope = {};\n            this._dropsByScope = {};\n            _selection = [];\n            _selectionMap = {};\n            _posses = {};\n        };\n\n        // ----- groups\n        var _posses = {};\n\n        var _processOneSpec = function(el, _spec, dontAddExisting) {\n            var posseId = _isString(_spec) ? _spec : _spec.id;\n            var active = _isString(_spec) ? true : _spec.active !== false;\n            var posse = _posses[posseId] || (function() {\n                var g = {name:posseId, members:[]};\n                _posses[posseId] = g;\n                return g;\n            })();\n            _each(el, function(_el) {\n                if (_el._katavorioDrag) {\n\n                    if (dontAddExisting && _el._katavorioDrag.posseRoles[posse.name] != null) return;\n\n                    _suggest(posse.members, _el._katavorioDrag);\n                    _suggest(_el._katavorioDrag.posses, posse.name);\n                    _el._katavorioDrag.posseRoles[posse.name] = active;\n                }\n            });\n            return posse;\n        };\n\n        /**\n         * Add the given element to the posse with the given id, creating the group if it at first does not exist.\n         * @method addToPosse\n         * @param {Element} el Element to add.\n         * @param {String...|Object...} spec Variable args parameters. Each argument can be a either a String, indicating\n         * the ID of a Posse to which the element should be added as an active participant, or an Object containing\n         * `{ id:\"posseId\", active:false/true}`. In the latter case, if `active` is not provided it is assumed to be\n         * true.\n         * @returns {Posse|Posse[]} The Posse(s) to which the element(s) was/were added.\n         */\n        this.addToPosse = function(el, spec) {\n\n            var posses = [];\n\n            for (var i = 1; i < arguments.length; i++) {\n                posses.push(_processOneSpec(el, arguments[i]));\n            }\n\n            return posses.length === 1 ? posses[0] : posses;\n        };\n\n        /**\n         * Sets the posse(s) for the element with the given id, creating those that do not yet exist, and removing from\n         * the element any current Posses that are not specified by this method call. This method will not change the\n         * active/passive state if it is given a posse in which the element is already a member.\n         * @method setPosse\n         * @param {Element} el Element to set posse(s) on.\n         * @param {String...|Object...} spec Variable args parameters. Each argument can be a either a String, indicating\n         * the ID of a Posse to which the element should be added as an active participant, or an Object containing\n         * `{ id:\"posseId\", active:false/true}`. In the latter case, if `active` is not provided it is assumed to be\n         * true.\n         * @returns {Posse|Posse[]} The Posse(s) to which the element(s) now belongs.\n         */\n        this.setPosse = function(el, spec) {\n\n            var posses = [];\n\n            for (var i = 1; i < arguments.length; i++) {\n                posses.push(_processOneSpec(el, arguments[i], true).name);\n            }\n\n            _each(el, function(_el) {\n                if (_el._katavorioDrag) {\n                    var diff = _difference(_el._katavorioDrag.posses, posses);\n                    var p = [];\n                    Array.prototype.push.apply(p, _el._katavorioDrag.posses);\n                    for (var i = 0; i < diff.length; i++) {\n                        this.removeFromPosse(_el, diff[i]);\n                    }\n                }\n            }.bind(this));\n\n            return posses.length === 1 ? posses[0] : posses;\n        };\n\n        /**\n         * Remove the given element from the given posse(s).\n         * @method removeFromPosse\n         * @param {Element} el Element to remove.\n         * @param {String...} posseId Varargs parameter: one value for each posse to remove the element from.\n         */\n        this.removeFromPosse = function(el, posseId) {\n            if (arguments.length < 2) throw new TypeError(\"No posse id provided for remove operation\");\n            for(var i = 1; i < arguments.length; i++) {\n                posseId = arguments[i];\n                _each(el, function (_el) {\n                    if (_el._katavorioDrag && _el._katavorioDrag.posses) {\n                        var d = _el._katavorioDrag;\n                        _each(posseId, function (p) {\n                            _vanquish(_posses[p].members, d);\n                            _vanquish(d.posses, p);\n                            delete d.posseRoles[p];\n                        });\n                    }\n                });\n            }\n        };\n\n        /**\n         * Remove the given element from all Posses to which it belongs.\n         * @method removeFromAllPosses\n         * @param {Element|Element[]} el Element to remove from Posses.\n         */\n        this.removeFromAllPosses = function(el) {\n            _each(el, function(_el) {\n                if (_el._katavorioDrag && _el._katavorioDrag.posses) {\n                    var d = _el._katavorioDrag;\n                    _each(d.posses, function(p) {\n                        _vanquish(_posses[p].members, d);\n                    });\n                    d.posses.length = 0;\n                    d.posseRoles = {};\n                }\n            });\n        };\n\n        /**\n         * Changes the participation state for the element in the Posse with the given ID.\n         * @param {Element|Element[]} el Element(s) to change state for.\n         * @param {String} posseId ID of the Posse to change element state for.\n         * @param {Boolean} state True to make active, false to make passive.\n         */\n        this.setPosseState = function(el, posseId, state) {\n            var posse = _posses[posseId];\n            if (posse) {\n                _each(el, function(_el) {\n                    if (_el._katavorioDrag && _el._katavorioDrag.posses) {\n                        _el._katavorioDrag.posseRoles[posse.name] = state;\n                    }\n                });\n            }\n        };\n\n    };\n\n    root.Katavorio.version = \"0.27.0\";\n\n    if (typeof exports !== \"undefined\") {\n        exports.Katavorio = root.Katavorio;\n    }\n\n}).call(typeof window !== 'undefined' ? window : this);\n\n;(function() {\n\n    \"use strict\";\n\n    var root = this;\n    var exports = root.jsPlumbUtil = {};\n\n    function isArray(a) {\n        return Object.prototype.toString.call(a) === \"[object Array]\";\n    }\n    function isNumber(n) {\n        return Object.prototype.toString.call(n) === \"[object Number]\";\n    }\n    function isString(s) {\n        return typeof s === \"string\";\n    }\n    function isBoolean(s) {\n        return typeof s === \"boolean\";\n    }\n    function isNull(s) {\n        return s == null;\n    }\n    function isObject(o) {\n        return o == null ? false : Object.prototype.toString.call(o) === \"[object Object]\";\n    }\n    function isDate(o) {\n        return Object.prototype.toString.call(o) === \"[object Date]\";\n    }\n    function isFunction(o) {\n        return Object.prototype.toString.call(o) === \"[object Function]\";\n    }\n    function isNamedFunction(o) {\n        return isFunction(o) && o.name != null && o.name.length > 0;\n    }\n    function isEmpty(o) {\n        for (var i in o) {\n            if (o.hasOwnProperty(i)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    function clone(a) {\n        if (isString(a)) {\n            return \"\" + a;\n        }\n        else if (isBoolean(a)) {\n            return !!a;\n        }\n        else if (isDate(a)) {\n            return new Date(a.getTime());\n        }\n        else if (isFunction(a)) {\n            return a;\n        }\n        else if (isArray(a)) {\n            var b = [];\n            for (var i = 0; i < a.length; i++) {\n                b.push(clone(a[i]));\n            }\n            return b;\n        }\n        else if (isObject(a)) {\n            var c = {};\n            for (var j in a) {\n                c[j] = clone(a[j]);\n            }\n            return c;\n        }\n        else {\n            return a;\n        }\n    }\n    function merge(a, b, collations) {\n        // first change the collations array - if present - into a lookup table, because its faster.\n        var cMap = {}, ar, i;\n        collations = collations || [];\n        for (i = 0; i < collations.length; i++) {\n            cMap[collations[i]] = true;\n        }\n        var c = clone(a);\n        for (i in b) {\n            if (c[i] == null) {\n                c[i] = b[i];\n            }\n            else if (isString(b[i]) || isBoolean(b[i])) {\n                if (!cMap[i]) {\n                    c[i] = b[i]; // if we dont want to collate, just copy it in.\n                }\n                else {\n                    ar = [];\n                    // if c's object is also an array we can keep its values.\n                    ar.push.apply(ar, isArray(c[i]) ? c[i] : [c[i]]);\n                    ar.push.apply(ar, isBoolean(b[i]) ? b[i] : [b[i]]);\n                    c[i] = ar;\n                }\n            }\n            else {\n                if (isArray(b[i])) {\n                    ar = [];\n                    // if c's object is also an array we can keep its values.\n                    if (isArray(c[i])) {\n                        ar.push.apply(ar, c[i]);\n                    }\n                    ar.push.apply(ar, b[i]);\n                    c[i] = ar;\n                }\n                else if (isObject(b[i])) {\n                    // overwrite c's value with an object if it is not already one.\n                    if (!isObject(c[i])) {\n                        c[i] = {};\n                    }\n                    for (var j in b[i]) {\n                        c[i][j] = b[i][j];\n                    }\n                }\n            }\n        }\n        return c;\n    }\n    function replace(inObj, path, value) {\n        if (inObj == null) {\n            return;\n        }\n        var q = inObj, t = q;\n        path.replace(/([^\\.])+/g, function (term, lc, pos, str) {\n            var array = term.match(/([^\\[0-9]+){1}(\\[)([0-9+])/), last = pos + term.length >= str.length, _getArray = function () {\n                return t[array[1]] || (function () {\n                        t[array[1]] = [];\n                        return t[array[1]];\n                    })();\n            };\n            if (last) {\n                // set term = value on current t, creating term as array if necessary.\n                if (array) {\n                    _getArray()[array[3]] = value;\n                }\n                else {\n                    t[term] = value;\n                }\n            }\n            else {\n                // set to current t[term], creating t[term] if necessary.\n                if (array) {\n                    var a_1 = _getArray();\n                    t = a_1[array[3]] || (function () {\n                            a_1[array[3]] = {};\n                            return a_1[array[3]];\n                        })();\n                }\n                else {\n                    t = t[term] || (function () {\n                            t[term] = {};\n                            return t[term];\n                        })();\n                }\n            }\n            return \"\";\n        });\n        return inObj;\n    }\n    //\n    // chain a list of functions, supplied by [ object, method name, args ], and return on the first\n    // one that returns the failValue. if none return the failValue, return the successValue.\n    //\n    function functionChain(successValue, failValue, fns) {\n        for (var i = 0; i < fns.length; i++) {\n            var o = fns[i][0][fns[i][1]].apply(fns[i][0], fns[i][2]);\n            if (o === failValue) {\n                return o;\n            }\n        }\n        return successValue;\n    }\n    /**\n     *\n     * Take the given model and expand out any parameters. 'functionPrefix' is optional, and if present, helps jsplumb figure out what to do if a value is a Function.\n     * if you do not provide it (and doNotExpandFunctions is null, or false), jsplumb will run the given values through any functions it finds, and use the function's\n     * output as the value in the result. if you do provide the prefix, only functions that are named and have this prefix\n     * will be executed; other functions will be passed as values to the output.\n     *\n     * @param model\n     * @param values\n     * @param functionPrefix\n     * @param doNotExpandFunctions\n     * @returns {any}\n     */\n    function populate(model, values, functionPrefix, doNotExpandFunctions) {\n        // for a string, see if it has parameter matches, and if so, try to make the substitutions.\n        var getValue = function (fromString) {\n            var matches = fromString.match(/(\\${.*?})/g);\n            if (matches != null) {\n                for (var i = 0; i < matches.length; i++) {\n                    var val = values[matches[i].substring(2, matches[i].length - 1)] || \"\";\n                    if (val != null) {\n                        fromString = fromString.replace(matches[i], val);\n                    }\n                }\n            }\n            return fromString;\n        };\n        // process one entry.\n        var _one = function (d) {\n            if (d != null) {\n                if (isString(d)) {\n                    return getValue(d);\n                }\n                else if (isFunction(d) && !doNotExpandFunctions && (functionPrefix == null || (d.name || \"\").indexOf(functionPrefix) === 0)) {\n                    return d(values);\n                }\n                else if (isArray(d)) {\n                    var r = [];\n                    for (var i = 0; i < d.length; i++) {\n                        r.push(_one(d[i]));\n                    }\n                    return r;\n                }\n                else if (isObject(d)) {\n                    var s = {};\n                    for (var j in d) {\n                        s[j] = _one(d[j]);\n                    }\n                    return s;\n                }\n                else {\n                    return d;\n                }\n            }\n        };\n        return _one(model);\n    }\n    function findWithFunction(a, f) {\n        if (a) {\n            for (var i = 0; i < a.length; i++) {\n                if (f(a[i])) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    }\n    function removeWithFunction(a, f) {\n        var idx = findWithFunction(a, f);\n        if (idx > -1) {\n            a.splice(idx, 1);\n        }\n        return idx !== -1;\n    }\n    function remove(l, v) {\n        var idx = l.indexOf(v);\n        if (idx > -1) {\n            l.splice(idx, 1);\n        }\n        return idx !== -1;\n    }\n    function addWithFunction(list, item, hashFunction) {\n        if (findWithFunction(list, hashFunction) === -1) {\n            list.push(item);\n        }\n    }\n    function addToList(map, key, value, insertAtStart) {\n        var l = map[key];\n        if (l == null) {\n            l = [];\n            map[key] = l;\n        }\n        l[insertAtStart ? \"unshift\" : \"push\"](value);\n        return l;\n    }\n    function suggest(list, item, insertAtHead) {\n        if (list.indexOf(item) === -1) {\n            if (insertAtHead) {\n                list.unshift(item);\n            }\n            else {\n                list.push(item);\n            }\n            return true;\n        }\n        return false;\n    }\n    //\n    // extends the given obj (which can be an array) with the given constructor function, prototype functions, and\n    // class members, any of which may be null.\n    //\n    function extend(child, parent, _protoFn) {\n        var i;\n        parent = isArray(parent) ? parent : [parent];\n        var _copyProtoChain = function (focus) {\n            var proto = focus.__proto__;\n            while (proto != null) {\n                if (proto.prototype != null) {\n                    for (var j in proto.prototype) {\n                        if (proto.prototype.hasOwnProperty(j) && !child.prototype.hasOwnProperty(j)) {\n                            child.prototype[j] = proto.prototype[j];\n                        }\n                    }\n                    proto = proto.prototype.__proto__;\n                }\n                else {\n                    proto = null;\n                }\n            }\n        };\n        for (i = 0; i < parent.length; i++) {\n            for (var j in parent[i].prototype) {\n                if (parent[i].prototype.hasOwnProperty(j) && !child.prototype.hasOwnProperty(j)) {\n                    child.prototype[j] = parent[i].prototype[j];\n                }\n            }\n            _copyProtoChain(parent[i]);\n        }\n        var _makeFn = function (name, protoFn) {\n            return function () {\n                for (i = 0; i < parent.length; i++) {\n                    if (parent[i].prototype[name]) {\n                        parent[i].prototype[name].apply(this, arguments);\n                    }\n                }\n                return protoFn.apply(this, arguments);\n            };\n        };\n        var _oneSet = function (fns) {\n            for (var k in fns) {\n                child.prototype[k] = _makeFn(k, fns[k]);\n            }\n        };\n        if (arguments.length > 2) {\n            for (i = 2; i < arguments.length; i++) {\n                _oneSet(arguments[i]);\n            }\n        }\n        return child;\n    }\n    function uuid() {\n        return ('xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n            var r = Math.random() * 16 | 0, v = c === 'x' ? r : (r & 0x3 | 0x8);\n            return v.toString(16);\n        }));\n    }\n    function fastTrim(s) {\n        if (s == null) {\n            return null;\n        }\n        var str = s.replace(/^\\s\\s*/, ''), ws = /\\s/, i = str.length;\n        while (ws.test(str.charAt(--i))) { }\n        return str.slice(0, i + 1);\n    }\n    function each(obj, fn) {\n        obj = obj.length == null || typeof obj === \"string\" ? [obj] : obj;\n        for (var i = 0; i < obj.length; i++) {\n            fn(obj[i]);\n        }\n    }\n    function map(obj, fn) {\n        var o = [];\n        for (var i = 0; i < obj.length; i++) {\n            o.push(fn(obj[i]));\n        }\n        return o;\n    }\n    function mergeWithParents(type, map, parentAttribute) {\n        parentAttribute = parentAttribute || \"parent\";\n        var _def = function (id) {\n            return id ? map[id] : null;\n        };\n        var _parent = function (def) {\n            return def ? _def(def[parentAttribute]) : null;\n        };\n        var _one = function (parent, def) {\n            if (parent == null) {\n                return def;\n            }\n            else {\n                var d_1 = merge(parent, def);\n                return _one(_parent(parent), d_1);\n            }\n        };\n        var _getDef = function (t) {\n            if (t == null) {\n                return {};\n            }\n            if (typeof t === \"string\") {\n                return _def(t);\n            }\n            else if (t.length) {\n                var done = false, i = 0, _dd = void 0;\n                while (!done && i < t.length) {\n                    _dd = _getDef(t[i]);\n                    if (_dd) {\n                        done = true;\n                    }\n                    else {\n                        i++;\n                    }\n                }\n                return _dd;\n            }\n        };\n        var d = _getDef(type);\n        if (d) {\n            return _one(_parent(d), d);\n        }\n        else {\n            return {};\n        }\n    }\n    var logEnabled = true;\n    function log() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (logEnabled && typeof console !== \"undefined\") {\n            try {\n                var msg = arguments[arguments.length - 1];\n                console.log(msg);\n            }\n            catch (e) {\n            }\n        }\n    }\n    /**\n     * Wraps one function with another, creating a placeholder for the\n     * wrapped function if it was null. this is used to wrap the various\n     * drag/drop event functions - to allow jsPlumb to be notified of\n     * important lifecycle events without imposing itself on the user's\n     * drag/drop functionality.\n     * @method jsPlumbUtil.wrap\n     * @param {Function} wrappedFunction original function to wrap; may be null.\n     * @param {Function} newFunction function to wrap the original with.\n     * @param {Object} [returnOnThisValue] Optional. Indicates that the wrappedFunction should\n     * not be executed if the newFunction returns a value matching 'returnOnThisValue'.\n     * note that this is a simple comparison and only works for primitives right now.\n     */\n    function wrap(wrappedFunction, newFunction, returnOnThisValue) {\n        return function () {\n            var r = null;\n            try {\n                if (newFunction != null) {\n                    r = newFunction.apply(this, arguments);\n                }\n            }\n            catch (e) {\n                log(\"jsPlumb function failed : \" + e);\n            }\n            if ((wrappedFunction != null) && (returnOnThisValue == null || (r !== returnOnThisValue))) {\n                try {\n                    r = wrappedFunction.apply(this, arguments);\n                }\n                catch (e) {\n                    log(\"wrapped function failed : \" + e);\n                }\n            }\n            return r;\n        };\n    }\n    var EventGenerator = /** @class */ (function () {\n        function EventGenerator() {\n            var _this = this;\n            this._listeners = {};\n            this.eventsSuspended = false;\n            this.tick = false;\n            // this is a list of events that should re-throw any errors that occur during their dispatch.\n            this.eventsToDieOn = { \"ready\": true };\n            this.queue = [];\n            this.bind = function (event, listener, insertAtStart) {\n                var _one = function (evt) {\n                    addToList(_this._listeners, evt, listener, insertAtStart);\n                    listener.__jsPlumb = listener.__jsPlumb || {};\n                    listener.__jsPlumb[uuid()] = evt;\n                };\n                if (typeof event === \"string\") {\n                    _one(event);\n                }\n                else if (event.length != null) {\n                    for (var i = 0; i < event.length; i++) {\n                        _one(event[i]);\n                    }\n                }\n                return _this;\n            };\n            this.fire = function (event, value, originalEvent) {\n                if (!this.tick) {\n                    this.tick = true;\n                    if (!this.eventsSuspended && this._listeners[event]) {\n                        var l = this._listeners[event].length, i = 0, _gone = false, ret = null;\n                        if (!this.shouldFireEvent || this.shouldFireEvent(event, value, originalEvent)) {\n                            while (!_gone && i < l && ret !== false) {\n                                // doing it this way rather than catching and then possibly re-throwing means that an error propagated by this\n                                // method will have the whole call stack available in the debugger.\n                                if (this.eventsToDieOn[event]) {\n                                    this._listeners[event][i].apply(this, [value, originalEvent]);\n                                }\n                                else {\n                                    try {\n                                        ret = this._listeners[event][i].apply(this, [value, originalEvent]);\n                                    }\n                                    catch (e) {\n                                        log(\"jsPlumb: fire failed for event \" + event + \" : \" + e);\n                                    }\n                                }\n                                i++;\n                                if (this._listeners == null || this._listeners[event] == null) {\n                                    _gone = true;\n                                }\n                            }\n                        }\n                    }\n                    this.tick = false;\n                    this._drain();\n                }\n                else {\n                    this.queue.unshift(arguments);\n                }\n                return this;\n            };\n            this._drain = function () {\n                var n = _this.queue.pop();\n                if (n) {\n                    _this.fire.apply(_this, n);\n                }\n            };\n            this.unbind = function (eventOrListener, listener) {\n                if (arguments.length === 0) {\n                    this._listeners = {};\n                }\n                else if (arguments.length === 1) {\n                    if (typeof eventOrListener === \"string\") {\n                        delete this._listeners[eventOrListener];\n                    }\n                    else if (eventOrListener.__jsPlumb) {\n                        var evt = void 0;\n                        for (var i in eventOrListener.__jsPlumb) {\n                            evt = eventOrListener.__jsPlumb[i];\n                            remove(this._listeners[evt] || [], eventOrListener);\n                        }\n                    }\n                }\n                else if (arguments.length === 2) {\n                    remove(this._listeners[eventOrListener] || [], listener);\n                }\n                return this;\n            };\n            this.getListener = function (forEvent) {\n                return _this._listeners[forEvent];\n            };\n            this.setSuspendEvents = function (val) {\n                _this.eventsSuspended = val;\n            };\n            this.isSuspendEvents = function () {\n                return _this.eventsSuspended;\n            };\n            this.silently = function (fn) {\n                _this.setSuspendEvents(true);\n                try {\n                    fn();\n                }\n                catch (e) {\n                    log(\"Cannot execute silent function \" + e);\n                }\n                _this.setSuspendEvents(false);\n            };\n            this.cleanupListeners = function () {\n                for (var i in _this._listeners) {\n                    _this._listeners[i] = null;\n                }\n            };\n        }\n        return EventGenerator;\n    }());\n\n    exports.isArray = isArray;\n    exports.isNumber = isNumber;\n    exports.isString = isString;\n    exports.isBoolean = isBoolean;\n    exports.isNull = isNull;\n    exports.isObject = isObject;\n    exports.isDate = isDate;\n    exports.isFunction = isFunction;\n    exports.isNamedFunction = isNamedFunction;\n    exports.isEmpty = isEmpty;\n    exports.clone = clone;\n    exports.merge = merge;\n    exports.replace = replace;\n    exports.functionChain = functionChain;\n    exports.populate = populate;\n    exports.findWithFunction = findWithFunction;\n    exports.removeWithFunction = removeWithFunction;\n    exports.remove = remove;\n    exports.addWithFunction = addWithFunction;\n    exports.addToList = addToList;\n    exports.suggest = suggest;\n    exports.extend = extend;\n    exports.uuid = uuid;\n    exports.fastTrim = fastTrim;\n    exports.each = each;\n    exports.map = map;\n    exports.mergeWithParents = mergeWithParents;\n    exports.logEnabled = logEnabled;\n    exports.log = log;\n    exports.wrap = wrap;\n    exports.EventGenerator = EventGenerator;\n\n\n}).call(typeof window !== 'undefined' ? window : this);\n\n/*\n * This file contains utility functions that run in browsers only.\n *\n * Copyright (c) 2010 - 2018 jsPlumb (hello@jsplumbtoolkit.com)\n *\n * https://jsplumbtoolkit.com\n * https://github.com/jsplumb/jsplumb\n *\n * Dual licensed under the MIT and GPL2 licenses.\n */\n ;(function() {\n\n  \"use strict\";\n\n   var root = this;\n\n    root.jsPlumbUtil.matchesSelector = function(el, selector, ctx) {\n       ctx = ctx || el.parentNode;\n       var possibles = ctx.querySelectorAll(selector);\n       for (var i = 0; i < possibles.length; i++) {\n           if (possibles[i] === el) {\n               return true;\n           }\n       }\n       return false;\n   };\n\n    root.jsPlumbUtil.consume = function(e, doNotPreventDefault) {\n       if (e.stopPropagation) {\n           e.stopPropagation();\n       }\n       else {\n           e.returnValue = false;\n       }\n\n       if (!doNotPreventDefault && e.preventDefault){\n           e.preventDefault();\n       }\n   };\n\n   /*\n    * Function: sizeElement\n    * Helper to size and position an element. You would typically use\n    * this when writing your own Connector or Endpoint implementation.\n    *\n    * Parameters:\n    *  x - [int] x position for the element origin\n    *  y - [int] y position for the element origin\n    *  w - [int] width of the element\n    *  h - [int] height of the element\n    *\n    */\n    root.jsPlumbUtil.sizeElement = function(el, x, y, w, h) {\n       if (el) {\n           el.style.height = h + \"px\";\n           el.height = h;\n           el.style.width = w + \"px\";\n           el.width = w;\n           el.style.left = x + \"px\";\n           el.style.top = y + \"px\";\n       }\n   };\n\n }).call(typeof window !== 'undefined' ? window : this);\n\n/*\n * This file contains the core code.\n *\n * Copyright (c) 2010 - 2018 jsPlumb (hello@jsplumbtoolkit.com)\n *\n * https://jsplumbtoolkit.com\n * https://github.com/jsplumb/jsplumb\n *\n * Dual licensed under the MIT and GPL2 licenses.\n */\n;(function () {\n\n    \"use strict\";\n\n    var root = this;\n\n    var _ju = root.jsPlumbUtil,\n\n        /**\n         * creates a timestamp, using milliseconds since 1970, but as a string.\n         */\n        _timestamp = function () {\n            return \"\" + (new Date()).getTime();\n        },\n\n    // helper method to update the hover style whenever it, or paintStyle, changes.\n    // we use paintStyle as the foundation and merge hoverPaintStyle over the\n    // top.\n        _updateHoverStyle = function (component) {\n            if (component._jsPlumb.paintStyle && component._jsPlumb.hoverPaintStyle) {\n                var mergedHoverStyle = {};\n                jsPlumb.extend(mergedHoverStyle, component._jsPlumb.paintStyle);\n                jsPlumb.extend(mergedHoverStyle, component._jsPlumb.hoverPaintStyle);\n                delete component._jsPlumb.hoverPaintStyle;\n                // we want the fill of paintStyle to override a gradient, if possible.\n                if (mergedHoverStyle.gradient && component._jsPlumb.paintStyle.fill) {\n                    delete mergedHoverStyle.gradient;\n                }\n                component._jsPlumb.hoverPaintStyle = mergedHoverStyle;\n            }\n        },\n        events = [\"tap\", \"dbltap\", \"click\", \"dblclick\", \"mouseover\", \"mouseout\", \"mousemove\", \"mousedown\", \"mouseup\", \"contextmenu\" ],\n        eventFilters = { \"mouseout\": \"mouseleave\", \"mouseexit\": \"mouseleave\" },\n        _updateAttachedElements = function (component, state, timestamp, sourceElement) {\n            var affectedElements = component.getAttachedElements();\n            if (affectedElements) {\n                for (var i = 0, j = affectedElements.length; i < j; i++) {\n                    if (!sourceElement || sourceElement !== affectedElements[i]) {\n                        affectedElements[i].setHover(state, true, timestamp);\t\t\t// tell the attached elements not to inform their own attached elements.\n                    }\n                }\n            }\n        },\n        _splitType = function (t) {\n            return t == null ? null : t.split(\" \");\n        },\n        _mapType = function(map, obj, typeId) {\n            for (var i in obj) {\n                map[i] = typeId;\n            }\n        },\n        _each = function(fn, obj) {\n            obj = _ju.isArray(obj) || (obj.length != null && !_ju.isString(obj)) ? obj : [ obj ];\n            for (var i = 0; i < obj.length; i++) {\n                try {\n                    fn.apply(obj[i], [ obj[i] ]);\n                }\n                catch (e) {\n                    _ju.log(\".each iteration failed : \" + e);\n                }\n            }\n        },\n        _applyTypes = function (component, params, doNotRepaint) {\n            if (component.getDefaultType) {\n                var td = component.getTypeDescriptor(), map = {};\n                var defType = component.getDefaultType();\n                var o = _ju.merge({}, defType);\n                _mapType(map, defType, \"__default\");\n                for (var i = 0, j = component._jsPlumb.types.length; i < j; i++) {\n                    var tid = component._jsPlumb.types[i];\n                    if (tid !== \"__default\") {\n                        var _t = component._jsPlumb.instance.getType(tid, td);\n                        if (_t != null) {\n                            o = _ju.merge(o, _t, [ \"cssClass\" ]);\n                            _mapType(map, _t, tid);\n                        }\n                    }\n                }\n\n                if (params) {\n                    o = _ju.populate(o, params, \"_\");\n                }\n\n                component.applyType(o, doNotRepaint, map);\n                if (!doNotRepaint) {\n                    component.repaint();\n                }\n            }\n        },\n\n// ------------------------------ BEGIN jsPlumbUIComponent --------------------------------------------\n\n        jsPlumbUIComponent = root.jsPlumbUIComponent = function (params) {\n\n            _ju.EventGenerator.apply(this, arguments);\n\n            var self = this,\n                a = arguments,\n                idPrefix = self.idPrefix,\n                id = idPrefix + (new Date()).getTime();\n\n            this._jsPlumb = {\n                instance: params._jsPlumb,\n                parameters: params.parameters || {},\n                paintStyle: null,\n                hoverPaintStyle: null,\n                paintStyleInUse: null,\n                hover: false,\n                beforeDetach: params.beforeDetach,\n                beforeDrop: params.beforeDrop,\n                overlayPlacements: [],\n                hoverClass: params.hoverClass || params._jsPlumb.Defaults.HoverClass,\n                types: [],\n                typeCache:{}\n            };\n\n            this.cacheTypeItem = function(key, item, typeId) {\n                this._jsPlumb.typeCache[typeId] = this._jsPlumb.typeCache[typeId] || {};\n                this._jsPlumb.typeCache[typeId][key] = item;\n            };\n            this.getCachedTypeItem = function(key, typeId) {\n                return this._jsPlumb.typeCache[typeId] ? this._jsPlumb.typeCache[typeId][key] : null;\n            };\n\n            this.getId = function () {\n                return id;\n            };\n\n// ----------------------------- default type --------------------------------------------\n\n\n            var o = params.overlays || [], oo = {};\n            if (this.defaultOverlayKeys) {\n                for (var i = 0; i < this.defaultOverlayKeys.length; i++) {\n                    Array.prototype.push.apply(o, this._jsPlumb.instance.Defaults[this.defaultOverlayKeys[i]] || []);\n                }\n\n                for (i = 0; i < o.length; i++) {\n                    // if a string, convert to object representation so that we can store the typeid on it.\n                    // also assign an id.\n                    var fo = jsPlumb.convertToFullOverlaySpec(o[i]);\n                    oo[fo[1].id] = fo;\n                }\n            }\n\n            var _defaultType = {\n                overlays:oo,\n                parameters: params.parameters || {},\n                scope: params.scope || this._jsPlumb.instance.getDefaultScope()\n            };\n            this.getDefaultType = function() {\n                return _defaultType;\n            };\n            this.appendToDefaultType = function(obj) {\n                for (var i in obj) {\n                    _defaultType[i] = obj[i];\n                }\n            };\n\n// ----------------------------- end default type --------------------------------------------\n\n            // all components can generate events\n\n            if (params.events) {\n                for (var evtName in params.events) {\n                    self.bind(evtName, params.events[evtName]);\n                }\n            }\n\n            // all components get this clone function.\n            // TODO issue 116 showed a problem with this - it seems 'a' that is in\n            // the clone function's scope is shared by all invocations of it, the classic\n            // JS closure problem.  for now, jsPlumb does a version of this inline where\n            // it used to call clone.  but it would be nice to find some time to look\n            // further at this.\n            this.clone = function () {\n                var o = Object.create(this.constructor.prototype);\n                this.constructor.apply(o, a);\n                return o;\n            }.bind(this);\n\n            // user can supply a beforeDetach callback, which will be executed before a detach\n            // is performed; returning false prevents the detach.\n            this.isDetachAllowed = function (connection) {\n                var r = true;\n                if (this._jsPlumb.beforeDetach) {\n                    try {\n                        r = this._jsPlumb.beforeDetach(connection);\n                    }\n                    catch (e) {\n                        _ju.log(\"jsPlumb: beforeDetach callback failed\", e);\n                    }\n                }\n                return r;\n            };\n\n            // user can supply a beforeDrop callback, which will be executed before a dropped\n            // connection is confirmed. user can return false to reject connection.\n            this.isDropAllowed = function (sourceId, targetId, scope, connection, dropEndpoint, source, target) {\n                var r = this._jsPlumb.instance.checkCondition(\"beforeDrop\", {\n                    sourceId: sourceId,\n                    targetId: targetId,\n                    scope: scope,\n                    connection: connection,\n                    dropEndpoint: dropEndpoint,\n                    source: source, target: target\n                });\n                if (this._jsPlumb.beforeDrop) {\n                    try {\n                        r = this._jsPlumb.beforeDrop({\n                            sourceId: sourceId,\n                            targetId: targetId,\n                            scope: scope,\n                            connection: connection,\n                            dropEndpoint: dropEndpoint,\n                            source: source, target: target\n                        });\n                    }\n                    catch (e) {\n                        _ju.log(\"jsPlumb: beforeDrop callback failed\", e);\n                    }\n                }\n                return r;\n            };\n\n            var domListeners = [];\n\n            // sets the component associated with listener events. for instance, an overlay delegates\n            // its events back to a connector. but if the connector is swapped on the underlying connection,\n            // then this component must be changed. This is called by setConnector in the Connection class.\n            this.setListenerComponent = function (c) {\n                for (var i = 0; i < domListeners.length; i++) {\n                    domListeners[i][3] = c;\n                }\n            };\n\n\n        };\n\n    var _removeTypeCssHelper = function (component, typeIndex) {\n        var typeId = component._jsPlumb.types[typeIndex],\n            type = component._jsPlumb.instance.getType(typeId, component.getTypeDescriptor());\n\n        if (type != null && type.cssClass && component.canvas) {\n            component._jsPlumb.instance.removeClass(component.canvas, type.cssClass);\n        }\n    };\n\n    _ju.extend(root.jsPlumbUIComponent, _ju.EventGenerator, {\n\n        getParameter: function (name) {\n            return this._jsPlumb.parameters[name];\n        },\n\n        setParameter: function (name, value) {\n            this._jsPlumb.parameters[name] = value;\n        },\n\n        getParameters: function () {\n            return this._jsPlumb.parameters;\n        },\n\n        setParameters: function (p) {\n            this._jsPlumb.parameters = p;\n        },\n\n        getClass:function() {\n            return jsPlumb.getClass(this.canvas);\n        },\n\n        hasClass:function(clazz) {\n            return jsPlumb.hasClass(this.canvas, clazz);\n        },\n\n        addClass: function (clazz) {\n            jsPlumb.addClass(this.canvas, clazz);\n        },\n\n        removeClass: function (clazz) {\n            jsPlumb.removeClass(this.canvas, clazz);\n        },\n\n        updateClasses: function (classesToAdd, classesToRemove) {\n            jsPlumb.updateClasses(this.canvas, classesToAdd, classesToRemove);\n        },\n\n        setType: function (typeId, params, doNotRepaint) {\n            this.clearTypes();\n            this._jsPlumb.types = _splitType(typeId) || [];\n            _applyTypes(this, params, doNotRepaint);\n        },\n\n        getType: function () {\n            return this._jsPlumb.types;\n        },\n\n        reapplyTypes: function (params, doNotRepaint) {\n            _applyTypes(this, params, doNotRepaint);\n        },\n\n        hasType: function (typeId) {\n            return this._jsPlumb.types.indexOf(typeId) !== -1;\n        },\n\n        addType: function (typeId, params, doNotRepaint) {\n            var t = _splitType(typeId), _cont = false;\n            if (t != null) {\n                for (var i = 0, j = t.length; i < j; i++) {\n                    if (!this.hasType(t[i])) {\n                        this._jsPlumb.types.push(t[i]);\n                        _cont = true;\n                    }\n                }\n                if (_cont) {\n                    _applyTypes(this, params, doNotRepaint);\n                }\n            }\n        },\n\n        removeType: function (typeId, params, doNotRepaint) {\n            var t = _splitType(typeId), _cont = false, _one = function (tt) {\n                var idx = this._jsPlumb.types.indexOf(tt);\n                if (idx !== -1) {\n                    // remove css class if necessary\n                    _removeTypeCssHelper(this, idx);\n                    this._jsPlumb.types.splice(idx, 1);\n                    return true;\n                }\n                return false;\n            }.bind(this);\n\n            if (t != null) {\n                for (var i = 0, j = t.length; i < j; i++) {\n                    _cont = _one(t[i]) || _cont;\n                }\n                if (_cont) {\n                    _applyTypes(this, params, doNotRepaint);\n                }\n            }\n        },\n        clearTypes: function (params, doNotRepaint) {\n            var i = this._jsPlumb.types.length;\n            for (var j = 0; j < i; j++) {\n                _removeTypeCssHelper(this, 0);\n                this._jsPlumb.types.splice(0, 1);\n            }\n            _applyTypes(this, params, doNotRepaint);\n        },\n\n        toggleType: function (typeId, params, doNotRepaint) {\n            var t = _splitType(typeId);\n            if (t != null) {\n                for (var i = 0, j = t.length; i < j; i++) {\n                    var idx = this._jsPlumb.types.indexOf(t[i]);\n                    if (idx !== -1) {\n                        _removeTypeCssHelper(this, idx);\n                        this._jsPlumb.types.splice(idx, 1);\n                    }\n                    else {\n                        this._jsPlumb.types.push(t[i]);\n                    }\n                }\n\n                _applyTypes(this, params, doNotRepaint);\n            }\n        },\n        applyType: function (t, doNotRepaint) {\n            this.setPaintStyle(t.paintStyle, doNotRepaint);\n            this.setHoverPaintStyle(t.hoverPaintStyle, doNotRepaint);\n            if (t.parameters) {\n                for (var i in t.parameters) {\n                    this.setParameter(i, t.parameters[i]);\n                }\n            }\n            this._jsPlumb.paintStyleInUse = this.getPaintStyle();\n        },\n        setPaintStyle: function (style, doNotRepaint) {\n            // this._jsPlumb.paintStyle = jsPlumb.extend({}, style);\n            // TODO figure out if we want components to clone paintStyle so as not to share it.\n            this._jsPlumb.paintStyle = style;\n            this._jsPlumb.paintStyleInUse = this._jsPlumb.paintStyle;\n            _updateHoverStyle(this);\n            if (!doNotRepaint) {\n                this.repaint();\n            }\n        },\n        getPaintStyle: function () {\n            return this._jsPlumb.paintStyle;\n        },\n        setHoverPaintStyle: function (style, doNotRepaint) {\n            //this._jsPlumb.hoverPaintStyle = jsPlumb.extend({}, style);\n            // TODO figure out if we want components to clone paintStyle so as not to share it.\n            this._jsPlumb.hoverPaintStyle = style;\n            _updateHoverStyle(this);\n            if (!doNotRepaint) {\n                this.repaint();\n            }\n        },\n        getHoverPaintStyle: function () {\n            return this._jsPlumb.hoverPaintStyle;\n        },\n        destroy: function (force) {\n            if (force || this.typeId == null) {\n                this.cleanupListeners(); // this is on EventGenerator\n                this.clone = null;\n                this._jsPlumb = null;\n            }\n        },\n\n        isHover: function () {\n            return this._jsPlumb.hover;\n        },\n\n        setHover: function (hover, ignoreAttachedElements, timestamp) {\n            // while dragging, we ignore these events.  this keeps the UI from flashing and\n            // swishing and whatevering.\n            if (this._jsPlumb && !this._jsPlumb.instance.currentlyDragging && !this._jsPlumb.instance.isHoverSuspended()) {\n\n                this._jsPlumb.hover = hover;\n                var method = hover ? \"addClass\" : \"removeClass\";\n\n                if (this.canvas != null) {\n                    if (this._jsPlumb.instance.hoverClass != null) {\n                        this._jsPlumb.instance[method](this.canvas, this._jsPlumb.instance.hoverClass);\n                    }\n                    if (this._jsPlumb.hoverClass != null) {\n                        this._jsPlumb.instance[method](this.canvas, this._jsPlumb.hoverClass);\n                    }\n                }\n                if (this._jsPlumb.hoverPaintStyle != null) {\n                    this._jsPlumb.paintStyleInUse = hover ? this._jsPlumb.hoverPaintStyle : this._jsPlumb.paintStyle;\n                    if (!this._jsPlumb.instance.isSuspendDrawing()) {\n                        timestamp = timestamp || _timestamp();\n                        this.repaint({timestamp: timestamp, recalc: false});\n                    }\n                }\n                // get the list of other affected elements, if supported by this component.\n                // for a connection, its the endpoints.  for an endpoint, its the connections! surprise.\n                if (this.getAttachedElements && !ignoreAttachedElements) {\n                    _updateAttachedElements(this, hover, _timestamp(), this);\n                }\n            }\n        }\n    });\n\n// ------------------------------ END jsPlumbUIComponent --------------------------------------------\n\n    var _jsPlumbInstanceIndex = 0,\n        getInstanceIndex = function () {\n            var i = _jsPlumbInstanceIndex + 1;\n            _jsPlumbInstanceIndex++;\n            return i;\n        };\n\n    var jsPlumbInstance = root.jsPlumbInstance = function (_defaults) {\n\n        this.version = \"2.7.9\";\n\n        this.Defaults = {\n            Anchor: \"Bottom\",\n            Anchors: [ null, null ],\n            ConnectionsDetachable: true,\n            ConnectionOverlays: [ ],\n            Connector: \"Bezier\",\n            Container: null,\n            DoNotThrowErrors: false,\n            DragOptions: { },\n            DropOptions: { },\n            Endpoint: \"Dot\",\n            EndpointOverlays: [ ],\n            Endpoints: [ null, null ],\n            EndpointStyle: { fill: \"#456\" },\n            EndpointStyles: [ null, null ],\n            EndpointHoverStyle: null,\n            EndpointHoverStyles: [ null, null ],\n            HoverPaintStyle: null,\n            LabelStyle: { color: \"black\" },\n            LogEnabled: false,\n            Overlays: [ ],\n            MaxConnections: 1,\n            PaintStyle: { \"stroke-width\": 4, stroke: \"#456\" },\n            ReattachConnections: false,\n            RenderMode: \"svg\",\n            Scope: \"jsPlumb_DefaultScope\"\n        };\n\n        if (_defaults) {\n            jsPlumb.extend(this.Defaults, _defaults);\n        }\n\n        this.logEnabled = this.Defaults.LogEnabled;\n        this._connectionTypes = {};\n        this._endpointTypes = {};\n\n        _ju.EventGenerator.apply(this);\n\n        var _currentInstance = this,\n            _instanceIndex = getInstanceIndex(),\n            _bb = _currentInstance.bind,\n            _initialDefaults = {},\n            _zoom = 1,\n            _info = function (el) {\n                if (el == null) {\n                    return null;\n                }\n                else if (el.nodeType === 3 || el.nodeType === 8) {\n                    return { el:el, text:true };\n                }\n                else {\n                    var _el = _currentInstance.getElement(el);\n                    return { el: _el, id: (_ju.isString(el) && _el == null) ? el : _getId(_el) };\n                }\n            };\n\n        this.getInstanceIndex = function () {\n            return _instanceIndex;\n        };\n\n        // CONVERTED\n        this.setZoom = function (z, repaintEverything) {\n            _zoom = z;\n            _currentInstance.fire(\"zoom\", _zoom);\n            if (repaintEverything) {\n                _currentInstance.repaintEverything();\n            }\n            return true;\n        };\n        // CONVERTED\n        this.getZoom = function () {\n            return _zoom;\n        };\n\n        for (var i in this.Defaults) {\n            _initialDefaults[i] = this.Defaults[i];\n        }\n\n        var _container, _containerDelegations = [];\n        this.unbindContainer = function() {\n            if (_container != null && _containerDelegations.length > 0) {\n                for (var i = 0; i < _containerDelegations.length; i++) {\n                    _currentInstance.off(_container, _containerDelegations[i][0], _containerDelegations[i][1]);\n                }\n            }\n        };\n        this.setContainer = function (c) {\n\n            this.unbindContainer();\n\n            // get container as dom element.\n            c = this.getElement(c);\n            // move existing connections and endpoints, if any.\n            this.select().each(function (conn) {\n                conn.moveParent(c);\n            });\n            this.selectEndpoints().each(function (ep) {\n                ep.moveParent(c);\n            });\n\n            // set container.\n            var previousContainer = _container;\n            _container = c;\n            _containerDelegations.length = 0;\n            var eventAliases = {\n                \"endpointclick\":\"endpointClick\",\n                \"endpointdblclick\":\"endpointDblClick\"\n            };\n\n            var _oneDelegateHandler = function (id, e, componentType) {\n                var t = e.srcElement || e.target,\n                    jp = (t && t.parentNode ? t.parentNode._jsPlumb : null) || (t ? t._jsPlumb : null) || (t && t.parentNode && t.parentNode.parentNode ? t.parentNode.parentNode._jsPlumb : null);\n                if (jp) {\n                    jp.fire(id, jp, e);\n                    var alias = componentType ? eventAliases[componentType + id] || id : id;\n                    // jsplumb also fires every event coming from components/overlays. That's what the test for `jp.component` is for.\n                    _currentInstance.fire(alias, jp.component || jp, e);\n                }\n            };\n\n            var _addOneDelegate = function(eventId, selector, fn) {\n                _containerDelegations.push([eventId, fn]);\n                _currentInstance.on(_container, eventId, selector, fn);\n            };\n\n            // delegate one event on the container to jsplumb elements. it might be possible to\n            // abstract this out: each of endpoint, connection and overlay could register themselves with\n            // jsplumb as \"component types\" or whatever, and provide a suitable selector. this would be\n            // done by the renderer (although admittedly from 2.0 onwards we're not supporting vml anymore)\n            var _oneDelegate = function (id) {\n                // connections.\n                _addOneDelegate(id, \".jtk-connector\", function (e) {\n                    _oneDelegateHandler(id, e);\n                });\n                // endpoints. note they can have an enclosing div, or not.\n                _addOneDelegate(id, \".jtk-endpoint\", function (e) {\n                    _oneDelegateHandler(id, e, \"endpoint\");\n                });\n                // overlays\n                _addOneDelegate(id, \".jtk-overlay\", function (e) {\n                    _oneDelegateHandler(id, e);\n                });\n            };\n\n            for (var i = 0; i < events.length; i++) {\n                _oneDelegate(events[i]);\n            }\n\n            // managed elements\n            for (var elId in managedElements) {\n                var el = managedElements[elId].el;\n                if (el.parentNode === previousContainer) {\n                    previousContainer.removeChild(el);\n                    _container.appendChild(el);\n                }\n            }\n\n        };\n        this.getContainer = function () {\n            return _container;\n        };\n\n        this.bind = function (event, fn) {\n            if (\"ready\" === event && initialized) {\n                fn();\n            }\n            else {\n                _bb.apply(_currentInstance, [event, fn]);\n            }\n        };\n\n        _currentInstance.importDefaults = function (d) {\n            for (var i in d) {\n                _currentInstance.Defaults[i] = d[i];\n            }\n            if (d.Container) {\n                _currentInstance.setContainer(d.Container);\n            }\n\n            return _currentInstance;\n        };\n\n        _currentInstance.restoreDefaults = function () {\n            _currentInstance.Defaults = jsPlumb.extend({}, _initialDefaults);\n            return _currentInstance;\n        };\n\n        var log = null,\n            initialized = false,\n        // TODO remove from window scope\n            connections = [],\n        // map of element id -> endpoint lists. an element can have an arbitrary\n        // number of endpoints on it, and not all of them have to be connected\n        // to anything.\n            endpointsByElement = {},\n            endpointsByUUID = {},\n            managedElements = {},\n            offsets = {},\n            offsetTimestamps = {},\n            draggableStates = {},\n            connectionBeingDragged = false,\n            sizes = [],\n            _suspendDrawing = false,\n            _suspendedAt = null,\n            DEFAULT_SCOPE = this.Defaults.Scope,\n            _curIdStamp = 1,\n            _idstamp = function () {\n                return \"\" + _curIdStamp++;\n            },\n\n        //\n        // appends an element to some other element, which is calculated as follows:\n        //\n        // 1. if Container exists, use that element.\n        // 2. if the 'parent' parameter exists, use that.\n        // 3. otherwise just use the root element.\n        //\n        //\n            _appendElement = function (el, parent) {\n                if (_container) {\n                    _container.appendChild(el);\n                }\n                else if (!parent) {\n                    this.appendToRoot(el);\n                }\n                else {\n                    this.getElement(parent).appendChild(el);\n                }\n            }.bind(this),\n\n        //\n        // Draws an endpoint and its connections. this is the main entry point into drawing connections as well\n        // as endpoints, since jsPlumb is endpoint-centric under the hood.\n        //\n        // @param element element to draw (of type library specific element object)\n        // @param ui UI object from current library's event system. optional.\n        // @param timestamp timestamp for this paint cycle. used to speed things up a little by cutting down the amount of offset calculations we do.\n        // @param clearEdits defaults to false; indicates that mouse edits for connectors should be cleared\n        ///\n            _draw = function (element, ui, timestamp, clearEdits) {\n\n                if (!_suspendDrawing) {\n                    var id = _getId(element),\n                        repaintEls,\n                        dm = _currentInstance.getDragManager();\n\n                    if (dm) {\n                        repaintEls = dm.getElementsForDraggable(id);\n                    }\n\n                    if (timestamp == null) {\n                        timestamp = _timestamp();\n                    }\n\n                    // update the offset of everything _before_ we try to draw anything.\n                    var o = _updateOffset({ elId: id, offset: ui, recalc: false, timestamp: timestamp });\n\n                    if (repaintEls && o && o.o) {\n                        for (var i in repaintEls) {\n                            _updateOffset({\n                                elId: repaintEls[i].id,\n                                offset: {\n                                    left: o.o.left + repaintEls[i].offset.left,\n                                    top: o.o.top + repaintEls[i].offset.top\n                                },\n                                recalc: false,\n                                timestamp: timestamp\n                            });\n                        }\n                    }\n\n                    _currentInstance.anchorManager.redraw(id, ui, timestamp, null, clearEdits);\n\n                    if (repaintEls) {\n                        for (var j in repaintEls) {\n                            _currentInstance.anchorManager.redraw(repaintEls[j].id, ui, timestamp, repaintEls[j].offset, clearEdits, true);\n                        }\n                    }\n                }\n            },\n\n        //\n        // gets an Endpoint by uuid.\n        //\n            _getEndpoint = function (uuid) {\n                return endpointsByUUID[uuid];\n            },\n\n            /**\n             * inits a draggable if it's not already initialised.\n             * TODO: somehow abstract this to the adapter, because the concept of \"draggable\" has no\n             * place on the server.\n             */\n            _initDraggableIfNecessary = function (element, isDraggable, dragOptions, id, fireEvent) {\n                // move to DragManager?\n                if (!jsPlumb.headless) {\n                    var _draggable = isDraggable == null ? false : isDraggable;\n                    if (_draggable) {\n                        if (jsPlumb.isDragSupported(element, _currentInstance)) {\n                            var options = dragOptions || _currentInstance.Defaults.DragOptions;\n                            options = jsPlumb.extend({}, options); // make a copy.\n                            if (!jsPlumb.isAlreadyDraggable(element, _currentInstance)) {\n                                var dragEvent = jsPlumb.dragEvents.drag,\n                                    stopEvent = jsPlumb.dragEvents.stop,\n                                    startEvent = jsPlumb.dragEvents.start,\n                                    _started = false;\n\n                                _manage(id, element);\n\n                                options[startEvent] = _ju.wrap(options[startEvent], function () {\n                                    _currentInstance.setHoverSuspended(true);\n                                    _currentInstance.select({source: element}).addClass(_currentInstance.elementDraggingClass + \" \" + _currentInstance.sourceElementDraggingClass, true);\n                                    _currentInstance.select({target: element}).addClass(_currentInstance.elementDraggingClass + \" \" + _currentInstance.targetElementDraggingClass, true);\n                                    _currentInstance.setConnectionBeingDragged(true);\n                                    if (options.canDrag) {\n                                        return dragOptions.canDrag();\n                                    }\n                                }, false);\n\n                                options[dragEvent] = _ju.wrap(options[dragEvent], function () {\n                                    var ui = _currentInstance.getUIPosition(arguments, _currentInstance.getZoom());\n                                    if (ui != null) {\n                                        _draw(element, ui, null, true);\n                                        if (_started) {\n                                            _currentInstance.addClass(element, \"jtk-dragged\");\n                                        }\n                                        _started = true;\n                                    }\n                                });\n                                options[stopEvent] = _ju.wrap(options[stopEvent], function () {\n                                    var elements = arguments[0].selection, uip;\n\n                                    var _one = function (_e) {\n                                        if (_e[1] != null) {\n                                            // run the reported offset through the code that takes parent containers\n                                            // into account, to adjust if necessary (issue 554)\n                                            uip = _currentInstance.getUIPosition([{\n                                                el:_e[2].el,\n                                                pos:[_e[1].left, _e[1].top]\n                                            }]);\n                                            _draw(_e[2].el, uip);\n                                        }\n                                        _currentInstance.removeClass(_e[0], \"jtk-dragged\");\n                                        _currentInstance.select({source: _e[2].el}).removeClass(_currentInstance.elementDraggingClass + \" \" + _currentInstance.sourceElementDraggingClass, true);\n                                        _currentInstance.select({target: _e[2].el}).removeClass(_currentInstance.elementDraggingClass + \" \" + _currentInstance.targetElementDraggingClass, true);\n                                        _currentInstance.getDragManager().dragEnded(_e[2].el);\n                                    };\n\n                                    for (var i = 0; i < elements.length; i++) {\n                                        _one(elements[i]);\n                                    }\n\n                                    _started = false;\n                                    _currentInstance.setHoverSuspended(false);\n                                    _currentInstance.setConnectionBeingDragged(false);\n                                });\n                                var elId = _getId(element); // need ID\n                                draggableStates[elId] = true;\n                                var draggable = draggableStates[elId];\n                                options.disabled = draggable == null ? false : !draggable;\n                                _currentInstance.initDraggable(element, options);\n                                _currentInstance.getDragManager().register(element);\n                                if (fireEvent) {\n                                    _currentInstance.fire(\"elementDraggable\", {el:element, options:options});\n                                }\n                            }\n                            else {\n                                // already draggable. attach any start, drag or stop listeners to the current Drag.\n                                if (dragOptions.force) {\n                                    _currentInstance.initDraggable(element, options);\n                                }\n                            }\n                        }\n                    }\n                }\n            },\n\n            _scopeMatch = function (e1, e2) {\n                var s1 = e1.scope.split(/\\s/), s2 = e2.scope.split(/\\s/);\n                for (var i = 0; i < s1.length; i++) {\n                    for (var j = 0; j < s2.length; j++) {\n                        if (s2[j] === s1[i]) {\n                            return true;\n                        }\n                    }\n                }\n\n                return false;\n            },\n\n            _mergeOverrides = function (def, values) {\n                var m = jsPlumb.extend({}, def);\n                for (var i in values) {\n                    if (values[i]) {\n                        m[i] = values[i];\n                    }\n                }\n                return m;\n            },\n\n        /*\n         * prepares a final params object that can be passed to _newConnection, taking into account defaults, events, etc.\n         */\n            _prepareConnectionParams = function (params, referenceParams) {\n                var _p = jsPlumb.extend({ }, params);\n                if (referenceParams) {\n                    jsPlumb.extend(_p, referenceParams);\n                }\n\n                // hotwire endpoints passed as source or target to sourceEndpoint/targetEndpoint, respectively.\n                if (_p.source) {\n                    if (_p.source.endpoint) {\n                        _p.sourceEndpoint = _p.source;\n                    }\n                    else {\n                        _p.source = _currentInstance.getElement(_p.source);\n                    }\n                }\n                if (_p.target) {\n                    if (_p.target.endpoint) {\n                        _p.targetEndpoint = _p.target;\n                    }\n                    else {\n                        _p.target = _currentInstance.getElement(_p.target);\n                    }\n                }\n\n                // test for endpoint uuids to connect\n                if (params.uuids) {\n                    _p.sourceEndpoint = _getEndpoint(params.uuids[0]);\n                    _p.targetEndpoint = _getEndpoint(params.uuids[1]);\n                }\n\n                // now ensure that if we do have Endpoints already, they're not full.\n                // source:\n                if (_p.sourceEndpoint && _p.sourceEndpoint.isFull()) {\n                    _ju.log(_currentInstance, \"could not add connection; source endpoint is full\");\n                    return;\n                }\n\n                // target:\n                if (_p.targetEndpoint && _p.targetEndpoint.isFull()) {\n                    _ju.log(_currentInstance, \"could not add connection; target endpoint is full\");\n                    return;\n                }\n\n                // if source endpoint mandates connection type and nothing specified in our params, use it.\n                if (!_p.type && _p.sourceEndpoint) {\n                    _p.type = _p.sourceEndpoint.connectionType;\n                }\n\n                // copy in any connectorOverlays that were specified on the source endpoint.\n                // it doesnt copy target endpoint overlays.  i'm not sure if we want it to or not.\n                if (_p.sourceEndpoint && _p.sourceEndpoint.connectorOverlays) {\n                    _p.overlays = _p.overlays || [];\n                    for (var i = 0, j = _p.sourceEndpoint.connectorOverlays.length; i < j; i++) {\n                        _p.overlays.push(_p.sourceEndpoint.connectorOverlays[i]);\n                    }\n                }\n\n                // scope\n                if (_p.sourceEndpoint && _p.sourceEndpoint.scope) {\n                    _p.scope = _p.sourceEndpoint.scope;\n                }\n\n                // pointer events\n                if (!_p[\"pointer-events\"] && _p.sourceEndpoint && _p.sourceEndpoint.connectorPointerEvents) {\n                    _p[\"pointer-events\"] = _p.sourceEndpoint.connectorPointerEvents;\n                }\n\n\n                var _addEndpoint = function (el, def, idx) {\n                    return _currentInstance.addEndpoint(el, _mergeOverrides(def, {\n                        anchor: _p.anchors ? _p.anchors[idx] : _p.anchor,\n                        endpoint: _p.endpoints ? _p.endpoints[idx] : _p.endpoint,\n                        paintStyle: _p.endpointStyles ? _p.endpointStyles[idx] : _p.endpointStyle,\n                        hoverPaintStyle: _p.endpointHoverStyles ? _p.endpointHoverStyles[idx] : _p.endpointHoverStyle\n                    }));\n                };\n\n                // check for makeSource/makeTarget specs.\n\n                var _oneElementDef = function (type, idx, defs, matchType) {\n                    if (_p[type] && !_p[type].endpoint && !_p[type + \"Endpoint\"] && !_p.newConnection) {\n                        var tid = _getId(_p[type]), tep = defs[tid];\n\n                        tep = tep ? tep[matchType] : null;\n\n                        if (tep) {\n                            // if not enabled, return.\n                            if (!tep.enabled) {\n                                return false;\n                            }\n                            var newEndpoint = tep.endpoint != null && tep.endpoint._jsPlumb ? tep.endpoint : _addEndpoint(_p[type], tep.def, idx);\n                            if (newEndpoint.isFull()) {\n                                return false;\n                            }\n                            _p[type + \"Endpoint\"] = newEndpoint;\n                            if (!_p.scope && tep.def.scope) {\n                                _p.scope = tep.def.scope;\n                            } // provide scope if not already provided and endpoint def has one.\n                            if (tep.uniqueEndpoint) {\n                                if (!tep.endpoint) {\n                                    tep.endpoint = newEndpoint;\n                                    newEndpoint.setDeleteOnEmpty(false);\n                                }\n                                else {\n                                    newEndpoint.finalEndpoint = tep.endpoint;\n                                }\n                            } else {\n                                newEndpoint.setDeleteOnEmpty(true);\n                            }\n\n                            //\n                            // copy in connector overlays if present on the source definition.\n                            //\n                            if (idx === 0 && tep.def.connectorOverlays) {\n                                _p.overlays = _p.overlays || [];\n                                Array.prototype.push.apply(_p.overlays, tep.def.connectorOverlays);\n                            }\n                        }\n                    }\n                };\n\n                if (_oneElementDef(\"source\", 0, this.sourceEndpointDefinitions, _p.type || \"default\") === false) {\n                    return;\n                }\n                if (_oneElementDef(\"target\", 1, this.targetEndpointDefinitions, _p.type || \"default\") === false) {\n                    return;\n                }\n\n                // last, ensure scopes match\n                if (_p.sourceEndpoint && _p.targetEndpoint) {\n                    if (!_scopeMatch(_p.sourceEndpoint, _p.targetEndpoint)) {\n                        _p = null;\n                    }\n                }\n\n                return _p;\n            }.bind(_currentInstance),\n\n            _newConnection = function (params) {\n                var connectionFunc = _currentInstance.Defaults.ConnectionType || _currentInstance.getDefaultConnectionType();\n\n                params._jsPlumb = _currentInstance;\n                params.newConnection = _newConnection;\n                params.newEndpoint = _newEndpoint;\n                params.endpointsByUUID = endpointsByUUID;\n                params.endpointsByElement = endpointsByElement;\n                params.finaliseConnection = _finaliseConnection;\n                params.id = \"con_\" + _idstamp();\n                var con = new connectionFunc(params);\n\n                // if the connection is draggable, then maybe we need to tell the target endpoint to init the\n                // dragging code. it won't run again if it already configured to be draggable.\n                if (con.isDetachable()) {\n                    con.endpoints[0].initDraggable(\"_jsPlumbSource\");\n                    con.endpoints[1].initDraggable(\"_jsPlumbTarget\");\n                }\n\n                return con;\n            },\n\n        //\n        // adds the connection to the backing model, fires an event if necessary and then redraws\n        //\n            _finaliseConnection = _currentInstance.finaliseConnection = function (jpc, params, originalEvent, doInformAnchorManager) {\n                params = params || {};\n                // add to list of connections (by scope).\n                if (!jpc.suspendedEndpoint) {\n                    connections.push(jpc);\n                }\n\n                jpc.pending = null;\n\n                // turn off isTemporarySource on the source endpoint (only viable on first draw)\n                jpc.endpoints[0].isTemporarySource = false;\n\n                // always inform the anchor manager\n                // except that if jpc has a suspended endpoint it's not true to say the\n                // connection is new; it has just (possibly) moved. the question is whether\n                // to make that call here or in the anchor manager.  i think perhaps here.\n                if (doInformAnchorManager !== false) {\n                    _currentInstance.anchorManager.newConnection(jpc);\n                }\n\n                // force a paint\n                _draw(jpc.source);\n\n                // fire an event\n                if (!params.doNotFireConnectionEvent && params.fireEvent !== false) {\n\n                    var eventArgs = {\n                        connection: jpc,\n                        source: jpc.source, target: jpc.target,\n                        sourceId: jpc.sourceId, targetId: jpc.targetId,\n                        sourceEndpoint: jpc.endpoints[0], targetEndpoint: jpc.endpoints[1]\n                    };\n\n                    _currentInstance.fire(\"connection\", eventArgs, originalEvent);\n                }\n            },\n\n        /*\n         factory method to prepare a new endpoint.  this should always be used instead of creating Endpoints\n         manually, since this method attaches event listeners and an id.\n         */\n            _newEndpoint = function (params, id) {\n                var endpointFunc = _currentInstance.Defaults.EndpointType || jsPlumb.Endpoint;\n                var _p = jsPlumb.extend({}, params);\n                _p._jsPlumb = _currentInstance;\n                _p.newConnection = _newConnection;\n                _p.newEndpoint = _newEndpoint;\n                _p.endpointsByUUID = endpointsByUUID;\n                _p.endpointsByElement = endpointsByElement;\n                _p.fireDetachEvent = fireDetachEvent;\n                _p.elementId = id || _getId(_p.source);\n                var ep = new endpointFunc(_p);\n                ep.id = \"ep_\" + _idstamp();\n                _manage(_p.elementId, _p.source);\n\n                if (!jsPlumb.headless) {\n                    _currentInstance.getDragManager().endpointAdded(_p.source, id);\n                }\n\n                return ep;\n            },\n\n        /*\n         * performs the given function operation on all the connections found\n         * for the given element id; this means we find all the endpoints for\n         * the given element, and then for each endpoint find the connectors\n         * connected to it. then we pass each connection in to the given\n         * function.\n         */\n            _operation = function (elId, func, endpointFunc) {\n                var endpoints = endpointsByElement[elId];\n                if (endpoints && endpoints.length) {\n                    for (var i = 0, ii = endpoints.length; i < ii; i++) {\n                        for (var j = 0, jj = endpoints[i].connections.length; j < jj; j++) {\n                            var retVal = func(endpoints[i].connections[j]);\n                            // if the function passed in returns true, we exit.\n                            // most functions return false.\n                            if (retVal) {\n                                return;\n                            }\n                        }\n                        if (endpointFunc) {\n                            endpointFunc(endpoints[i]);\n                        }\n                    }\n                }\n            },\n\n            _setDraggable = function (element, draggable) {\n                return jsPlumb.each(element, function (el) {\n                    if (_currentInstance.isDragSupported(el)) {\n                        draggableStates[_currentInstance.getAttribute(el, \"id\")] = draggable;\n                        _currentInstance.setElementDraggable(el, draggable);\n                    }\n                });\n            },\n        /*\n         * private method to do the business of hiding/showing.\n         *\n         * @param el\n         *            either Id of the element in question or a library specific\n         *            object for the element.\n         * @param state\n         *            String specifying a value for the css 'display' property\n         *            ('block' or 'none').\n         */\n            _setVisible = function (el, state, alsoChangeEndpoints) {\n                state = state === \"block\";\n                var endpointFunc = null;\n                if (alsoChangeEndpoints) {\n                    endpointFunc = function (ep) {\n                        ep.setVisible(state, true, true);\n                    };\n                }\n                var info = _info(el);\n                _operation(info.id, function (jpc) {\n                    if (state && alsoChangeEndpoints) {\n                        // this test is necessary because this functionality is new, and i wanted to maintain backwards compatibility.\n                        // this block will only set a connection to be visible if the other endpoint in the connection is also visible.\n                        var oidx = jpc.sourceId === info.id ? 1 : 0;\n                        if (jpc.endpoints[oidx].isVisible()) {\n                            jpc.setVisible(true);\n                        }\n                    }\n                    else { // the default behaviour for show, and what always happens for hide, is to just set the visibility without getting clever.\n                        jpc.setVisible(state);\n                    }\n                }, endpointFunc);\n            },\n        /*\n         * toggles the draggable state of the given element(s).\n         * el is either an id, or an element object, or a list of ids/element objects.\n         */\n            _toggleDraggable = function (el) {\n                var state;\n                jsPlumb.each(el, function (el) {\n                    var elId = _currentInstance.getAttribute(el, \"id\");\n                    state = draggableStates[elId] == null ? false : draggableStates[elId];\n                    state = !state;\n                    draggableStates[elId] = state;\n                    _currentInstance.setDraggable(el, state);\n                    return state;\n                }.bind(this));\n                return state;\n            },\n            /**\n             * private method to do the business of toggling hiding/showing.\n             */\n            _toggleVisible = function (elId, changeEndpoints) {\n                var endpointFunc = null;\n                if (changeEndpoints) {\n                    endpointFunc = function (ep) {\n                        var state = ep.isVisible();\n                        ep.setVisible(!state);\n                    };\n                }\n                _operation(elId, function (jpc) {\n                    var state = jpc.isVisible();\n                    jpc.setVisible(!state);\n                }, endpointFunc);\n            },\n\n        // TODO comparison performance\n            _getCachedData = function (elId) {\n                var o = offsets[elId];\n                if (!o) {\n                    return _updateOffset({elId: elId});\n                }\n                else {\n                    return {o: o, s: sizes[elId]};\n                }\n            },\n\n            /**\n             * gets an id for the given element, creating and setting one if\n             * necessary.  the id is of the form\n             *\n             *    jsPlumb_<instance index>_<index in instance>\n             *\n             * where \"index in instance\" is a monotonically increasing integer that starts at 0,\n             * for each instance.  this method is used not only to assign ids to elements that do not\n             * have them but also to connections and endpoints.\n             */\n            _getId = function (element, uuid, doNotCreateIfNotFound) {\n                if (_ju.isString(element)) {\n                    return element;\n                }\n                if (element == null) {\n                    return null;\n                }\n                var id = _currentInstance.getAttribute(element, \"id\");\n                if (!id || id === \"undefined\") {\n                    // check if fixed uuid parameter is given\n                    if (arguments.length === 2 && arguments[1] !== undefined) {\n                        id = uuid;\n                    }\n                    else if (arguments.length === 1 || (arguments.length === 3 && !arguments[2])) {\n                        id = \"jsPlumb_\" + _instanceIndex + \"_\" + _idstamp();\n                    }\n\n                    if (!doNotCreateIfNotFound) {\n                        _currentInstance.setAttribute(element, \"id\", id);\n                    }\n                }\n                return id;\n            };\n\n        this.setConnectionBeingDragged = function (v) {\n            connectionBeingDragged = v;\n        };\n        this.isConnectionBeingDragged = function () {\n            return connectionBeingDragged;\n        };\n\n        /**\n         * Returns a map of all the elements this jsPlumbInstance is currently managing.\n         * @returns {Object} Map of [id-> {el, endpoint[], connection, position}] information.\n         */\n        this.getManagedElements = function() {\n            return managedElements;\n        };\n\n        this.connectorClass = \"jtk-connector\";\n        this.connectorOutlineClass = \"jtk-connector-outline\";\n        this.connectedClass = \"jtk-connected\";\n        this.hoverClass = \"jtk-hover\";\n        this.endpointClass = \"jtk-endpoint\";\n        this.endpointConnectedClass = \"jtk-endpoint-connected\";\n        this.endpointFullClass = \"jtk-endpoint-full\";\n        this.endpointDropAllowedClass = \"jtk-endpoint-drop-allowed\";\n        this.endpointDropForbiddenClass = \"jtk-endpoint-drop-forbidden\";\n        this.overlayClass = \"jtk-overlay\";\n        this.draggingClass = \"jtk-dragging\";// CONVERTED\n        this.elementDraggingClass = \"jtk-element-dragging\";// CONVERTED\n        this.sourceElementDraggingClass = \"jtk-source-element-dragging\"; // CONVERTED\n        this.targetElementDraggingClass = \"jtk-target-element-dragging\";// CONVERTED\n        this.endpointAnchorClassPrefix = \"jtk-endpoint-anchor\";\n        this.hoverSourceClass = \"jtk-source-hover\";\n        this.hoverTargetClass = \"jtk-target-hover\";\n        this.dragSelectClass = \"jtk-drag-select\";\n\n        this.Anchors = {};\n        this.Connectors = {  \"svg\": {} };\n        this.Endpoints = { \"svg\": {} };\n        this.Overlays = { \"svg\": {} } ;\n        this.ConnectorRenderers = {};\n        this.SVG = \"svg\";\n\n// --------------------------- jsPlumbInstance public API ---------------------------------------------------------\n\n\n        this.addEndpoint = function (el, params, referenceParams) {\n            referenceParams = referenceParams || {};\n            var p = jsPlumb.extend({}, referenceParams);\n            jsPlumb.extend(p, params);\n            p.endpoint = p.endpoint || _currentInstance.Defaults.Endpoint;\n            p.paintStyle = p.paintStyle || _currentInstance.Defaults.EndpointStyle;\n\n            var results = [],\n                inputs = (_ju.isArray(el) || (el.length != null && !_ju.isString(el))) ? el : [ el ];\n\n            for (var i = 0, j = inputs.length; i < j; i++) {\n                p.source = _currentInstance.getElement(inputs[i]);\n                _ensureContainer(p.source);\n\n                var id = _getId(p.source), e = _newEndpoint(p, id);\n\n                // ensure element is managed.\n                var myOffset = _manage(id, p.source).info.o;\n                _ju.addToList(endpointsByElement, id, e);\n\n                if (!_suspendDrawing) {\n                    e.paint({\n                        anchorLoc: e.anchor.compute({ xy: [ myOffset.left, myOffset.top ], wh: sizes[id], element: e, timestamp: _suspendedAt }),\n                        timestamp: _suspendedAt\n                    });\n                }\n\n                results.push(e);\n            }\n\n            return results.length === 1 ? results[0] : results;\n        };\n\n        this.addEndpoints = function (el, endpoints, referenceParams) {\n            var results = [];\n            for (var i = 0, j = endpoints.length; i < j; i++) {\n                var e = _currentInstance.addEndpoint(el, endpoints[i], referenceParams);\n                if (_ju.isArray(e)) {\n                    Array.prototype.push.apply(results, e);\n                }\n                else {\n                    results.push(e);\n                }\n            }\n            return results;\n        };\n\n        this.animate = function (el, properties, options) {\n            if (!this.animationSupported) {\n                return false;\n            }\n\n            options = options || {};\n            var del = _currentInstance.getElement(el),\n                id = _getId(del),\n                stepFunction = jsPlumb.animEvents.step,\n                completeFunction = jsPlumb.animEvents.complete;\n\n            options[stepFunction] = _ju.wrap(options[stepFunction], function () {\n                _currentInstance.revalidate(id);\n            });\n\n            // onComplete repaints, just to make sure everything looks good at the end of the animation.\n            options[completeFunction] = _ju.wrap(options[completeFunction], function () {\n                _currentInstance.revalidate(id);\n            });\n\n            _currentInstance.doAnimate(del, properties, options);\n        };\n\n        /**\n         * checks for a listener for the given condition, executing it if found, passing in the given value.\n         * condition listeners would have been attached using \"bind\" (which is, you could argue, now overloaded, since\n         * firing click events etc is a bit different to what this does).  i thought about adding a \"bindCondition\"\n         * or something, but decided against it, for the sake of simplicity. jsPlumb will never fire one of these\n         * condition events anyway.\n         */\n        this.checkCondition = function (conditionName, args) {\n            var l = _currentInstance.getListener(conditionName),\n                r = true;\n\n            if (l && l.length > 0) {\n                var values = Array.prototype.slice.call(arguments, 1);\n                try {\n                    for (var i = 0, j = l.length; i < j; i++) {\n                        r = r && l[i].apply(l[i], values);\n                    }\n                }\n                catch (e) {\n                    _ju.log(_currentInstance, \"cannot check condition [\" + conditionName + \"]\" + e);\n                }\n            }\n            return r;\n        };\n\n        this.connect = function (params, referenceParams) {\n            // prepare a final set of parameters to create connection with\n            var _p = _prepareConnectionParams(params, referenceParams), jpc;\n            // TODO probably a nicer return value if the connection was not made.  _prepareConnectionParams\n            // will return null (and log something) if either endpoint was full.  what would be nicer is to\n            // create a dedicated 'error' object.\n            if (_p) {\n                if (_p.source == null && _p.sourceEndpoint == null) {\n                    _ju.log(\"Cannot establish connection - source does not exist\");\n                    return;\n                }\n                if (_p.target == null && _p.targetEndpoint == null) {\n                    _ju.log(\"Cannot establish connection - target does not exist\");\n                    return;\n                }\n                _ensureContainer(_p.source);\n                // create the connection.  it is not yet registered\n                jpc = _newConnection(_p);\n                // now add it the model, fire an event, and redraw\n                _finaliseConnection(jpc, _p);\n            }\n            return jpc;\n        };\n\n        var stTypes = [\n            { el: \"source\", elId: \"sourceId\", epDefs: \"sourceEndpointDefinitions\" },\n            { el: \"target\", elId: \"targetId\", epDefs: \"targetEndpointDefinitions\" }\n        ];\n\n        var _set = function (c, el, idx, doNotRepaint) {\n            var ep, _st = stTypes[idx], cId = c[_st.elId], cEl = c[_st.el], sid, sep,\n                oldEndpoint = c.endpoints[idx];\n\n            var evtParams = {\n                index: idx,\n                originalSourceId: idx === 0 ? cId : c.sourceId,\n                newSourceId: c.sourceId,\n                originalTargetId: idx === 1 ? cId : c.targetId,\n                newTargetId: c.targetId,\n                connection: c\n            };\n\n            if (el.constructor === jsPlumb.Endpoint) {\n                ep = el;\n                ep.addConnection(c);\n                el = ep.element;\n            }\n            else {\n                sid = _getId(el);\n                sep = this[_st.epDefs][sid];\n\n                if (sid === c[_st.elId]) {\n                    ep = null; // dont change source/target if the element is already the one given.\n                }\n                else if (sep) {\n                    for (var t in sep) {\n                        if (!sep[t].enabled) {\n                            return;\n                        }\n                        ep = sep[t].endpoint != null && sep[t].endpoint._jsPlumb ? sep[t].endpoint : this.addEndpoint(el, sep[t].def);\n                        if (sep[t].uniqueEndpoint) {\n                            sep[t].endpoint = ep;\n                        }\n                        ep.addConnection(c);\n                    }\n                }\n                else {\n                    ep = c.makeEndpoint(idx === 0, el, sid);\n                }\n            }\n\n            if (ep != null) {\n                oldEndpoint.detachFromConnection(c);\n                c.endpoints[idx] = ep;\n                c[_st.el] = ep.element;\n                c[_st.elId] = ep.elementId;\n                evtParams[idx === 0 ? \"newSourceId\" : \"newTargetId\"] = ep.elementId;\n\n                fireMoveEvent(evtParams);\n\n                if (!doNotRepaint) {\n                    c.repaint();\n                }\n            }\n\n            evtParams.element = el;\n            return evtParams;\n\n        }.bind(this);\n\n        this.setSource = function (connection, el, doNotRepaint) {\n            var p = _set(connection, el, 0, doNotRepaint);\n            this.anchorManager.sourceChanged(p.originalSourceId, p.newSourceId, connection, p.el);\n        };\n        this.setTarget = function (connection, el, doNotRepaint) {\n            var p = _set(connection, el, 1, doNotRepaint);\n            this.anchorManager.updateOtherEndpoint(p.originalSourceId, p.originalTargetId, p.newTargetId, connection);\n        };\n\n        this.deleteEndpoint = function (object, dontUpdateHover, deleteAttachedObjects) {\n            var endpoint = (typeof object === \"string\") ? endpointsByUUID[object] : object;\n            if (endpoint) {\n                _currentInstance.deleteObject({ endpoint: endpoint, dontUpdateHover: dontUpdateHover, deleteAttachedObjects:deleteAttachedObjects });\n            }\n            return _currentInstance;\n        };\n\n        this.deleteEveryEndpoint = function () {\n            var _is = _currentInstance.setSuspendDrawing(true);\n            for (var id in endpointsByElement) {\n                var endpoints = endpointsByElement[id];\n                if (endpoints && endpoints.length) {\n                    for (var i = 0, j = endpoints.length; i < j; i++) {\n                        _currentInstance.deleteEndpoint(endpoints[i], true);\n                    }\n                }\n            }\n            endpointsByElement = {};\n            managedElements = {};\n            endpointsByUUID = {};\n            offsets = {};\n            offsetTimestamps = {};\n            _currentInstance.anchorManager.reset();\n            var dm = _currentInstance.getDragManager();\n            if (dm) {\n                dm.reset();\n            }\n            if (!_is) {\n                _currentInstance.setSuspendDrawing(false);\n            }\n            return _currentInstance;\n        };\n\n        var fireDetachEvent = function (jpc, doFireEvent, originalEvent) {\n            // may have been given a connection, or in special cases, an object\n            var connType = _currentInstance.Defaults.ConnectionType || _currentInstance.getDefaultConnectionType(),\n                argIsConnection = jpc.constructor === connType,\n                params = argIsConnection ? {\n                    connection: jpc,\n                    source: jpc.source, target: jpc.target,\n                    sourceId: jpc.sourceId, targetId: jpc.targetId,\n                    sourceEndpoint: jpc.endpoints[0], targetEndpoint: jpc.endpoints[1]\n                } : jpc;\n\n            if (doFireEvent) {\n                _currentInstance.fire(\"connectionDetached\", params, originalEvent);\n            }\n\n            // always fire this. used by internal jsplumb stuff.\n            _currentInstance.fire(\"internal.connectionDetached\", params, originalEvent);\n\n            _currentInstance.anchorManager.connectionDetached(params);\n        };\n\n        var fireMoveEvent = _currentInstance.fireMoveEvent = function (params, evt) {\n            _currentInstance.fire(\"connectionMoved\", params, evt);\n        };\n\n        this.unregisterEndpoint = function (endpoint) {\n            if (endpoint._jsPlumb.uuid) {\n                endpointsByUUID[endpoint._jsPlumb.uuid] = null;\n            }\n            _currentInstance.anchorManager.deleteEndpoint(endpoint);\n            // TODO at least replace this with a removeWithFunction call.\n            for (var e in endpointsByElement) {\n                var endpoints = endpointsByElement[e];\n                if (endpoints) {\n                    var newEndpoints = [];\n                    for (var i = 0, j = endpoints.length; i < j; i++) {\n                        if (endpoints[i] !== endpoint) {\n                            newEndpoints.push(endpoints[i]);\n                        }\n                    }\n\n                    endpointsByElement[e] = newEndpoints;\n                }\n                if (endpointsByElement[e].length < 1) {\n                    delete endpointsByElement[e];\n                }\n            }\n        };\n\n        var IS_DETACH_ALLOWED = \"isDetachAllowed\";\n        var BEFORE_DETACH = \"beforeDetach\";\n        var CHECK_CONDITION = \"checkCondition\";\n\n        /**\n         * Deletes a Connection.\n         * @method deleteConnection\n         * @param connection Connection to delete\n         * @param {Object} [params] Optional delete parameters\n         * @param {Boolean} [params.doNotFireEvent=false] If true, a connection detached event will not be fired. Otherwise one will.\n         * @param {Boolean} [params.force=false] If true, the connection will be deleted even if a beforeDetach interceptor tries to stop the deletion.\n         * @returns {Boolean} True if the connection was deleted, false otherwise.\n         */\n        this.deleteConnection = function(connection, params) {\n\n            if (connection != null) {\n                params = params || {};\n\n                if (params.force || _ju.functionChain(true, false, [\n                    [ connection.endpoints[0], IS_DETACH_ALLOWED, [ connection ] ],\n                    [ connection.endpoints[1], IS_DETACH_ALLOWED, [ connection ] ],\n                    [ connection, IS_DETACH_ALLOWED, [ connection ] ],\n                    [ _currentInstance, CHECK_CONDITION, [ BEFORE_DETACH, connection ] ]\n                ])) {\n\n                    connection.setHover(false);\n                    fireDetachEvent(connection, !connection.pending && params.fireEvent !== false, params.originalEvent);\n\n                    connection.endpoints[0].detachFromConnection(connection);\n                    connection.endpoints[1].detachFromConnection(connection);\n                    _ju.removeWithFunction(connections, function (_c) {\n                        return connection.id === _c.id;\n                    });\n\n                    connection.cleanup();\n                    connection.destroy();\n                    return true;\n                }\n            }\n            return false;\n        };\n\n        /**\n         * Remove all Connections from all elements, but leaves Endpoints in place ((unless a connection is set to auto delete its Endpoints).\n         * @method deleteEveryConnection\n         * @param {Object} [params] optional params object for the call\n         * @param {Boolean} [params.fireEvent=true] Whether or not to fire detach events\n         * @param {Boolean} [params.forceDetach=false] If true, this call will ignore any `beforeDetach` interceptors.\n         * @returns {Number} The number of connections that were deleted.\n         */\n        this.deleteEveryConnection = function (params) {\n            params = params || {};\n            var count = connections.length, deletedCount = 0;\n            _currentInstance.batch(function () {\n                for (var i = 0; i < count; i++) {\n                    deletedCount += _currentInstance.deleteConnection(connections[0], params) ? 1 : 0;\n                }\n            });\n            return deletedCount;\n        };\n\n        /**\n         * Removes all an element's Connections.\n         * @method deleteConnectionsForElement\n         * @param {Object} el Either the id of the element, or a selector for the element.\n         * @param {Object} [params] Optional parameters.\n         * @param {Boolean} [params.fireEvent=true] Whether or not to fire the detach event.\n         * @param {Boolean} [params.forceDetach=false] If true, this call will ignore any `beforeDetach` interceptors.\n         * @return {jsPlumbInstance} The current jsPlumb instance.\n         */\n        this.deleteConnectionsForElement = function (el, params) {\n            params = params || {};\n            el = _currentInstance.getElement(el);\n            var id = _getId(el), endpoints = endpointsByElement[id];\n            if (endpoints && endpoints.length) {\n                for (var i = 0, j = endpoints.length; i < j; i++) {\n                    endpoints[i].deleteEveryConnection(params);\n                }\n            }\n            return _currentInstance;\n        };\n\n        /// not public.  but of course its exposed. how to change this.\n        this.deleteObject = function (params) {\n            var result = {\n                    endpoints: {},\n                    connections: {},\n                    endpointCount: 0,\n                    connectionCount: 0\n                },\n                deleteAttachedObjects = params.deleteAttachedObjects !== false;\n\n            var unravelConnection = function (connection) {\n                if (connection != null && result.connections[connection.id] == null) {\n                    if (!params.dontUpdateHover && connection._jsPlumb != null) {\n                        connection.setHover(false);\n                    }\n                    result.connections[connection.id] = connection;\n                    result.connectionCount++;\n                }\n            };\n            var unravelEndpoint = function (endpoint) {\n                if (endpoint != null && result.endpoints[endpoint.id] == null) {\n                    if (!params.dontUpdateHover && endpoint._jsPlumb != null) {\n                        endpoint.setHover(false);\n                    }\n                    result.endpoints[endpoint.id] = endpoint;\n                    result.endpointCount++;\n\n                    if (deleteAttachedObjects) {\n                        for (var i = 0; i < endpoint.connections.length; i++) {\n                            var c = endpoint.connections[i];\n                            unravelConnection(c);\n                        }\n                    }\n                }\n            };\n\n            if (params.connection) {\n                unravelConnection(params.connection);\n            }\n            else {\n                unravelEndpoint(params.endpoint);\n            }\n\n            // loop through connections\n            for (var i in result.connections) {\n                var c = result.connections[i];\n                if (c._jsPlumb) {\n                    _ju.removeWithFunction(connections, function (_c) {\n                        return c.id === _c.id;\n                    });\n\n                    fireDetachEvent(c, params.fireEvent === false ? false : !c.pending, params.originalEvent);\n                    var doNotCleanup = params.deleteAttachedObjects == null ? null : !params.deleteAttachedObjects;\n\n                    c.endpoints[0].detachFromConnection(c, null, doNotCleanup);\n                    c.endpoints[1].detachFromConnection(c, null, doNotCleanup);\n\n                    c.cleanup(true);\n                    c.destroy(true);\n                }\n            }\n\n            // loop through endpoints\n            for (var j in result.endpoints) {\n                var e = result.endpoints[j];\n                if (e._jsPlumb) {\n                    _currentInstance.unregisterEndpoint(e);\n                    // FIRE some endpoint deleted event?\n                    e.cleanup(true);\n                    e.destroy(true);\n                }\n            }\n\n            return result;\n        };\n\n        this.draggable = function (el, options) {\n            var info;\n            _each(function(_el) {\n                 info = _info(_el);\n                if (info.el) {\n                    _initDraggableIfNecessary(info.el, true, options, info.id, true);\n                }\n            }, el);\n            return _currentInstance;\n        };\n\n        this.droppable = function(el, options) {\n            var info;\n            options = options || {};\n            options.allowLoopback = false;\n            _each(function(_el) {\n                info = _info(_el);\n                if (info.el) {\n                    _currentInstance.initDroppable(info.el, options);\n                }\n            }, el);\n            return _currentInstance;\n        };\n\n        // helpers for select/selectEndpoints\n        var _setOperation = function (list, func, args, selector) {\n                for (var i = 0, j = list.length; i < j; i++) {\n                    list[i][func].apply(list[i], args);\n                }\n                return selector(list);\n            },\n            _getOperation = function (list, func, args) {\n                var out = [];\n                for (var i = 0, j = list.length; i < j; i++) {\n                    out.push([ list[i][func].apply(list[i], args), list[i] ]);\n                }\n                return out;\n            },\n            setter = function (list, func, selector) {\n                return function () {\n                    return _setOperation(list, func, arguments, selector);\n                };\n            },\n            getter = function (list, func) {\n                return function () {\n                    return _getOperation(list, func, arguments);\n                };\n            },\n            prepareList = function (input, doNotGetIds) {\n                var r = [];\n                if (input) {\n                    if (typeof input === 'string') {\n                        if (input === \"*\") {\n                            return input;\n                        }\n                        r.push(input);\n                    }\n                    else {\n                        if (doNotGetIds) {\n                            r = input;\n                        }\n                        else {\n                            if (input.length) {\n                                for (var i = 0, j = input.length; i < j; i++) {\n                                    r.push(_info(input[i]).id);\n                                }\n                            }\n                            else {\n                                r.push(_info(input).id);\n                            }\n                        }\n                    }\n                }\n                return r;\n            },\n            filterList = function (list, value, missingIsFalse) {\n                if (list === \"*\") {\n                    return true;\n                }\n                return list.length > 0 ? list.indexOf(value) !== -1 : !missingIsFalse;\n            };\n\n        // get some connections, specifying source/target/scope\n        this.getConnections = function (options, flat) {\n            if (!options) {\n                options = {};\n            } else if (options.constructor === String) {\n                options = { \"scope\": options };\n            }\n            var scope = options.scope || _currentInstance.getDefaultScope(),\n                scopes = prepareList(scope, true),\n                sources = prepareList(options.source),\n                targets = prepareList(options.target),\n                results = (!flat && scopes.length > 1) ? {} : [],\n                _addOne = function (scope, obj) {\n                    if (!flat && scopes.length > 1) {\n                        var ss = results[scope];\n                        if (ss == null) {\n                            ss = results[scope] = [];\n                        }\n                        ss.push(obj);\n                    } else {\n                        results.push(obj);\n                    }\n                };\n\n            for (var j = 0, jj = connections.length; j < jj; j++) {\n                var c = connections[j],\n                    sourceId = c.proxies && c.proxies[0] ? c.proxies[0].originalEp.elementId : c.sourceId,\n                    targetId = c.proxies && c.proxies[1] ? c.proxies[1].originalEp.elementId : c.targetId;\n\n                if (filterList(scopes, c.scope) && filterList(sources, sourceId) && filterList(targets, targetId)) {\n                    _addOne(c.scope, c);\n                }\n            }\n\n            return results;\n        };\n\n        var _curryEach = function (list, executor) {\n                return function (f) {\n                    for (var i = 0, ii = list.length; i < ii; i++) {\n                        f(list[i]);\n                    }\n                    return executor(list);\n                };\n            },\n            _curryGet = function (list) {\n                return function (idx) {\n                    return list[idx];\n                };\n            };\n\n        var _makeCommonSelectHandler = function (list, executor) {\n            var out = {\n                    length: list.length,\n                    each: _curryEach(list, executor),\n                    get: _curryGet(list)\n                },\n                setters = [\"setHover\", \"removeAllOverlays\", \"setLabel\", \"addClass\", \"addOverlay\", \"removeOverlay\",\n                    \"removeOverlays\", \"showOverlay\", \"hideOverlay\", \"showOverlays\", \"hideOverlays\", \"setPaintStyle\",\n                    \"setHoverPaintStyle\", \"setSuspendEvents\", \"setParameter\", \"setParameters\", \"setVisible\",\n                    \"repaint\", \"addType\", \"toggleType\", \"removeType\", \"removeClass\", \"setType\", \"bind\", \"unbind\" ],\n\n                getters = [\"getLabel\", \"getOverlay\", \"isHover\", \"getParameter\", \"getParameters\", \"getPaintStyle\",\n                    \"getHoverPaintStyle\", \"isVisible\", \"hasType\", \"getType\", \"isSuspendEvents\" ],\n                i, ii;\n\n            for (i = 0, ii = setters.length; i < ii; i++) {\n                out[setters[i]] = setter(list, setters[i], executor);\n            }\n\n            for (i = 0, ii = getters.length; i < ii; i++) {\n                out[getters[i]] = getter(list, getters[i]);\n            }\n\n            return out;\n        };\n\n        var _makeConnectionSelectHandler = function (list) {\n            var common = _makeCommonSelectHandler(list, _makeConnectionSelectHandler);\n            return jsPlumb.extend(common, {\n                // setters\n                setDetachable: setter(list, \"setDetachable\", _makeConnectionSelectHandler),\n                setReattach: setter(list, \"setReattach\", _makeConnectionSelectHandler),\n                setConnector: setter(list, \"setConnector\", _makeConnectionSelectHandler),\n                delete: function () {\n                    for (var i = 0, ii = list.length; i < ii; i++) {\n                        _currentInstance.deleteConnection(list[i]);\n                    }\n                },\n                // getters\n                isDetachable: getter(list, \"isDetachable\"),\n                isReattach: getter(list, \"isReattach\")\n            });\n        };\n\n        var _makeEndpointSelectHandler = function (list) {\n            var common = _makeCommonSelectHandler(list, _makeEndpointSelectHandler);\n            return jsPlumb.extend(common, {\n                setEnabled: setter(list, \"setEnabled\", _makeEndpointSelectHandler),\n                setAnchor: setter(list, \"setAnchor\", _makeEndpointSelectHandler),\n                isEnabled: getter(list, \"isEnabled\"),\n                deleteEveryConnection: function () {\n                    for (var i = 0, ii = list.length; i < ii; i++) {\n                        list[i].deleteEveryConnection();\n                    }\n                },\n                \"delete\": function () {\n                    for (var i = 0, ii = list.length; i < ii; i++) {\n                        _currentInstance.deleteEndpoint(list[i]);\n                    }\n                }\n            });\n        };\n\n        this.select = function (params) {\n            params = params || {};\n            params.scope = params.scope || \"*\";\n            return _makeConnectionSelectHandler(params.connections || _currentInstance.getConnections(params, true));\n        };\n\n        this.selectEndpoints = function (params) {\n            params = params || {};\n            params.scope = params.scope || \"*\";\n            var noElementFilters = !params.element && !params.source && !params.target,\n                elements = noElementFilters ? \"*\" : prepareList(params.element),\n                sources = noElementFilters ? \"*\" : prepareList(params.source),\n                targets = noElementFilters ? \"*\" : prepareList(params.target),\n                scopes = prepareList(params.scope, true);\n\n            var ep = [];\n\n            for (var el in endpointsByElement) {\n                var either = filterList(elements, el, true),\n                    source = filterList(sources, el, true),\n                    sourceMatchExact = sources !== \"*\",\n                    target = filterList(targets, el, true),\n                    targetMatchExact = targets !== \"*\";\n\n                // if they requested 'either' then just match scope. otherwise if they requested 'source' (not as a wildcard) then we have to match only endpoints that have isSource set to to true, and the same thing with isTarget.\n                if (either || source || target) {\n                    inner:\n                        for (var i = 0, ii = endpointsByElement[el].length; i < ii; i++) {\n                            var _ep = endpointsByElement[el][i];\n                            if (filterList(scopes, _ep.scope, true)) {\n\n                                var noMatchSource = (sourceMatchExact && sources.length > 0 && !_ep.isSource),\n                                    noMatchTarget = (targetMatchExact && targets.length > 0 && !_ep.isTarget);\n\n                                if (noMatchSource || noMatchTarget) {\n                                    continue inner;\n                                }\n\n                                ep.push(_ep);\n                            }\n                        }\n                }\n            }\n\n            return _makeEndpointSelectHandler(ep);\n        };\n\n        // get all connections managed by the instance of jsplumb.\n        this.getAllConnections = function () {\n            return connections;\n        };\n        this.getDefaultScope = function () {\n            return DEFAULT_SCOPE;\n        };\n        // get an endpoint by uuid.\n        this.getEndpoint = _getEndpoint;\n        /**\n         * Gets the list of Endpoints for a given element.\n         * @method getEndpoints\n         * @param {String|Element|Selector} el The element to get endpoints for.\n         * @return {Endpoint[]} An array of Endpoints for the specified element.\n         */\n        this.getEndpoints = function (el) {\n            return endpointsByElement[_info(el).id] || [];\n        };\n        // gets the default endpoint type. used when subclassing. see wiki.\n        this.getDefaultEndpointType = function () {\n            return jsPlumb.Endpoint;\n        };\n        // gets the default connection type. used when subclassing.  see wiki.\n        this.getDefaultConnectionType = function () {\n            return jsPlumb.Connection;\n        };\n        /*\n         * Gets an element's id, creating one if necessary. really only exposed\n         * for the lib-specific functionality to access; would be better to pass\n         * the current instance into the lib-specific code (even though this is\n         * a static call. i just don't want to expose it to the public API).\n         */\n        this.getId = _getId;\n\n        this.appendElement = _appendElement;\n\n        var _hoverSuspended = false;\n        this.isHoverSuspended = function () {\n            return _hoverSuspended;\n        };\n        this.setHoverSuspended = function (s) {\n            _hoverSuspended = s;\n        };\n\n        // set an element's connections to be hidden\n        this.hide = function (el, changeEndpoints) {\n            _setVisible(el, \"none\", changeEndpoints);\n            return _currentInstance;\n        };\n\n        // exposed for other objects to use to get a unique id.\n        this.idstamp = _idstamp;\n\n        // this.connectorsInitialized = false;\n        // this.registerConnectorType = function (connector, name) {\n        //     connectorTypes.push([connector, name]);\n        // };\n\n        // ensure that, if the current container exists, it is a DOM element and not a selector.\n        // if it does not exist and `candidate` is supplied, the offset parent of that element will be set as the Container.\n        // this is used to do a better default behaviour for the case that the user has not set a container:\n        // addEndpoint, makeSource, makeTarget and connect all call this method with the offsetParent of the\n        // element in question (for connect it is the source element). So if no container is set, it is inferred\n        // to be the offsetParent of the first element the user tries to connect.\n        var _ensureContainer = function (candidate) {\n            if (!_container && candidate) {\n                var can = _currentInstance.getElement(candidate);\n                if (can.offsetParent) {\n                    _currentInstance.setContainer(can.offsetParent);\n                }\n            }\n        };\n\n        var _getContainerFromDefaults = function () {\n            if (_currentInstance.Defaults.Container) {\n                _currentInstance.setContainer(_currentInstance.Defaults.Container);\n            }\n        };\n\n        // check if a given element is managed or not. if not, add to our map. if drawing is not suspended then\n        // we'll also stash its dimensions; otherwise we'll do this in a lazy way through updateOffset.\n        var _manage = _currentInstance.manage = function (id, element, _transient) {\n            if (!managedElements[id]) {\n                managedElements[id] = {\n                    el: element,\n                    endpoints: [],\n                    connections: []\n                };\n\n                managedElements[id].info = _updateOffset({ elId: id, timestamp: _suspendedAt });\n                if (!_transient) {\n                    _currentInstance.fire(\"manageElement\", { id:id, info:managedElements[id].info, el:element });\n                }\n            }\n\n            return managedElements[id];\n        };\n\n        var _unmanage = function(id) {\n            if (managedElements[id]) {\n                delete managedElements[id];\n                _currentInstance.fire(\"unmanageElement\", id);\n            }\n        };\n\n        /**\n         * updates the offset and size for a given element, and stores the\n         * values. if 'offset' is not null we use that (it would have been\n         * passed in from a drag call) because it's faster; but if it is null,\n         * or if 'recalc' is true in order to force a recalculation, we get the current values.\n         */\n        var _updateOffset = this.updateOffset = function (params) {\n\n            var timestamp = params.timestamp, recalc = params.recalc, offset = params.offset, elId = params.elId, s;\n            if (_suspendDrawing && !timestamp) {\n                timestamp = _suspendedAt;\n            }\n            if (!recalc) {\n                if (timestamp && timestamp === offsetTimestamps[elId]) {\n                    return {o: params.offset || offsets[elId], s: sizes[elId]};\n                }\n            }\n            if (recalc || (!offset && offsets[elId] == null)) { // if forced repaint or no offset available, we recalculate.\n\n                // get the current size and offset, and store them\n                s = managedElements[elId] ? managedElements[elId].el : null;\n                if (s != null) {\n                    sizes[elId] = _currentInstance.getSize(s);\n                    offsets[elId] = _currentInstance.getOffset(s);\n                    offsetTimestamps[elId] = timestamp;\n                }\n            } else {\n                offsets[elId] = offset || offsets[elId];\n                if (sizes[elId] == null) {\n                    s = managedElements[elId].el;\n                    if (s != null) {\n                        sizes[elId] = _currentInstance.getSize(s);\n                    }\n                }\n                offsetTimestamps[elId] = timestamp;\n            }\n\n            if (offsets[elId] && !offsets[elId].right) {\n                offsets[elId].right = offsets[elId].left + sizes[elId][0];\n                offsets[elId].bottom = offsets[elId].top + sizes[elId][1];\n                offsets[elId].width = sizes[elId][0];\n                offsets[elId].height = sizes[elId][1];\n                offsets[elId].centerx = offsets[elId].left + (offsets[elId].width / 2);\n                offsets[elId].centery = offsets[elId].top + (offsets[elId].height / 2);\n            }\n\n            return {o: offsets[elId], s: sizes[elId]};\n        };\n\n        /**\n         * callback from the current library to tell us to prepare ourselves (attach\n         * mouse listeners etc; can't do that until the library has provided a bind method)\n         */\n        this.init = function () {\n            if (!initialized) {\n                _getContainerFromDefaults();\n                _currentInstance.anchorManager = new root.jsPlumb.AnchorManager({jsPlumbInstance: _currentInstance});\n                initialized = true;\n                _currentInstance.fire(\"ready\", _currentInstance);\n            }\n        }.bind(this);\n\n        this.log = log;\n        this.jsPlumbUIComponent = jsPlumbUIComponent;\n\n        /*\n         * Creates an anchor with the given params.\n         *\n         *\n         * Returns: The newly created Anchor.\n         * Throws: an error if a named anchor was not found.\n         */\n        this.makeAnchor = function () {\n            var pp, _a = function (t, p) {\n                if (root.jsPlumb.Anchors[t]) {\n                    return new root.jsPlumb.Anchors[t](p);\n                }\n                if (!_currentInstance.Defaults.DoNotThrowErrors) {\n                    throw { msg: \"jsPlumb: unknown anchor type '\" + t + \"'\" };\n                }\n            };\n            if (arguments.length === 0) {\n                return null;\n            }\n            var specimen = arguments[0], elementId = arguments[1], jsPlumbInstance = arguments[2], newAnchor = null;\n            // if it appears to be an anchor already...\n            if (specimen.compute && specimen.getOrientation) {\n                return specimen;\n            }  //TODO hazy here about whether it should be added or is already added somehow.\n            // is it the name of an anchor type?\n            else if (typeof specimen === \"string\") {\n                newAnchor = _a(arguments[0], {elementId: elementId, jsPlumbInstance: _currentInstance});\n            }\n            // is it an array? it will be one of:\n            // an array of [spec, params] - this defines a single anchor, which may be dynamic, but has parameters.\n            // an array of arrays - this defines some dynamic anchors\n            // an array of numbers - this defines a single anchor.\n            else if (_ju.isArray(specimen)) {\n                if (_ju.isArray(specimen[0]) || _ju.isString(specimen[0])) {\n                    // if [spec, params] format\n                    if (specimen.length === 2 && _ju.isObject(specimen[1])) {\n                        // if first arg is a string, its a named anchor with params\n                        if (_ju.isString(specimen[0])) {\n                            pp = root.jsPlumb.extend({elementId: elementId, jsPlumbInstance: _currentInstance}, specimen[1]);\n                            newAnchor = _a(specimen[0], pp);\n                        }\n                        // otherwise first arg is array, second is params. we treat as a dynamic anchor, which is fine\n                        // even if the first arg has only one entry. you could argue all anchors should be implicitly dynamic in fact.\n                        else {\n                            pp = root.jsPlumb.extend({elementId: elementId, jsPlumbInstance: _currentInstance, anchors: specimen[0]}, specimen[1]);\n                            newAnchor = new root.jsPlumb.DynamicAnchor(pp);\n                        }\n                    }\n                    else {\n                        newAnchor = new jsPlumb.DynamicAnchor({anchors: specimen, selector: null, elementId: elementId, jsPlumbInstance: _currentInstance});\n                    }\n\n                }\n                else {\n                    var anchorParams = {\n                        x: specimen[0], y: specimen[1],\n                        orientation: (specimen.length >= 4) ? [ specimen[2], specimen[3] ] : [0, 0],\n                        offsets: (specimen.length >= 6) ? [ specimen[4], specimen[5] ] : [ 0, 0 ],\n                        elementId: elementId,\n                        jsPlumbInstance: _currentInstance,\n                        cssClass: specimen.length === 7 ? specimen[6] : null\n                    };\n                    newAnchor = new root.jsPlumb.Anchor(anchorParams);\n                    newAnchor.clone = function () {\n                        return new root.jsPlumb.Anchor(anchorParams);\n                    };\n                }\n            }\n\n            if (!newAnchor.id) {\n                newAnchor.id = \"anchor_\" + _idstamp();\n            }\n            return newAnchor;\n        };\n\n        /**\n         * makes a list of anchors from the given list of types or coords, eg\n         * [\"TopCenter\", \"RightMiddle\", \"BottomCenter\", [0, 1, -1, -1] ]\n         */\n        this.makeAnchors = function (types, elementId, jsPlumbInstance) {\n            var r = [];\n            for (var i = 0, ii = types.length; i < ii; i++) {\n                if (typeof types[i] === \"string\") {\n                    r.push(root.jsPlumb.Anchors[types[i]]({elementId: elementId, jsPlumbInstance: jsPlumbInstance}));\n                }\n                else if (_ju.isArray(types[i])) {\n                    r.push(_currentInstance.makeAnchor(types[i], elementId, jsPlumbInstance));\n                }\n            }\n            return r;\n        };\n\n        /**\n         * Makes a dynamic anchor from the given list of anchors (which may be in shorthand notation as strings or dimension arrays, or Anchor\n         * objects themselves) and the given, optional, anchorSelector function (jsPlumb uses a default if this is not provided; most people will\n         * not need to provide this - i think).\n         */\n        this.makeDynamicAnchor = function (anchors, anchorSelector) {\n            return new root.jsPlumb.DynamicAnchor({anchors: anchors, selector: anchorSelector, elementId: null, jsPlumbInstance: _currentInstance});\n        };\n\n// --------------------- makeSource/makeTarget ---------------------------------------------- \n\n        this.targetEndpointDefinitions = {};\n        this.sourceEndpointDefinitions = {};\n\n        var selectorFilter = function (evt, _el, selector, _instance, negate) {\n            var t = evt.target || evt.srcElement, ok = false,\n                sel = _instance.getSelector(_el, selector);\n            for (var j = 0; j < sel.length; j++) {\n                if (sel[j] === t) {\n                    ok = true;\n                    break;\n                }\n            }\n            return negate ? !ok : ok;\n        };\n\n        var _makeElementDropHandler = function (elInfo, p, dropOptions, isSource, isTarget) {\n            var proxyComponent = new jsPlumbUIComponent(p);\n            var _drop = p._jsPlumb.EndpointDropHandler({\n                jsPlumb: _currentInstance,\n                enabled: function () {\n                    return elInfo.def.enabled;\n                },\n                isFull: function () {\n                    var targetCount = _currentInstance.select({target: elInfo.id}).length;\n                    return elInfo.def.maxConnections > 0 && targetCount >= elInfo.def.maxConnections;\n                },\n                element: elInfo.el,\n                elementId: elInfo.id,\n                isSource: isSource,\n                isTarget: isTarget,\n                addClass: function (clazz) {\n                    _currentInstance.addClass(elInfo.el, clazz);\n                },\n                removeClass: function (clazz) {\n                    _currentInstance.removeClass(elInfo.el, clazz);\n                },\n                onDrop: function (jpc) {\n                    var source = jpc.endpoints[0];\n                    source.anchor.unlock();\n                },\n                isDropAllowed: function () {\n                    return proxyComponent.isDropAllowed.apply(proxyComponent, arguments);\n                },\n                isRedrop:function(jpc) {\n                    return (jpc.suspendedElement != null && jpc.suspendedEndpoint != null && jpc.suspendedEndpoint.element === elInfo.el);\n                },\n                getEndpoint: function (jpc) {\n\n                    // make a new Endpoint for the target, or get it from the cache if uniqueEndpoint\n                    // is set. if its a redrop the new endpoint will be immediately cleaned up.\n\n                    var newEndpoint = elInfo.def.endpoint;\n\n                    // if no cached endpoint, or there was one but it has been cleaned up\n                    // (ie. detached), create a new one\n                    if (newEndpoint == null || newEndpoint._jsPlumb == null) {\n                        var eps = _currentInstance.deriveEndpointAndAnchorSpec(jpc.getType().join(\" \"), true);\n                        var pp = eps.endpoints ? root.jsPlumb.extend(p, {\n                            endpoint:elInfo.def.def.endpoint || eps.endpoints[1]\n                        }) :p;\n                        if (eps.anchors) {\n                            pp = root.jsPlumb.extend(pp, {\n                                anchor:elInfo.def.def.anchor || eps.anchors[1]\n                            });\n                        }\n                        newEndpoint = _currentInstance.addEndpoint(elInfo.el, pp);\n                        newEndpoint._mtNew = true;\n                    }\n\n                    if (p.uniqueEndpoint) {\n                        elInfo.def.endpoint = newEndpoint;\n                    }\n\n                    newEndpoint.setDeleteOnEmpty(true);\n\n                    // if connection is detachable, init the new endpoint to be draggable, to support that happening.\n                    if (jpc.isDetachable()) {\n                        newEndpoint.initDraggable();\n                    }\n\n                    // if the anchor has a 'positionFinder' set, then delegate to that function to find\n                    // out where to locate the anchor.\n                    if (newEndpoint.anchor.positionFinder != null) {\n                        var dropPosition = _currentInstance.getUIPosition(arguments, _currentInstance.getZoom()),\n                            elPosition = _currentInstance.getOffset(elInfo.el),\n                            elSize = _currentInstance.getSize(elInfo.el),\n                            ap = dropPosition == null ? [0,0] : newEndpoint.anchor.positionFinder(dropPosition, elPosition, elSize, newEndpoint.anchor.constructorParams);\n\n                        newEndpoint.anchor.x = ap[0];\n                        newEndpoint.anchor.y = ap[1];\n                        // now figure an orientation for it..kind of hard to know what to do actually. probably the best thing i can do is to\n                        // support specifying an orientation in the anchor's spec. if one is not supplied then i will make the orientation\n                        // be what will cause the most natural link to the source: it will be pointing at the source, but it needs to be\n                        // specified in one axis only, and so how to make that choice? i think i will use whichever axis is the one in which\n                        // the target is furthest away from the source.\n                    }\n\n                    return newEndpoint;\n                },\n                maybeCleanup: function (ep) {\n                    if (ep._mtNew && ep.connections.length === 0) {\n                        _currentInstance.deleteObject({endpoint: ep});\n                    }\n                    else {\n                        delete ep._mtNew;\n                    }\n                }\n            });\n\n            // wrap drop events as needed and initialise droppable\n            var dropEvent = root.jsPlumb.dragEvents.drop;\n            dropOptions.scope = dropOptions.scope || (p.scope || _currentInstance.Defaults.Scope);\n            dropOptions[dropEvent] = _ju.wrap(dropOptions[dropEvent], _drop, true);\n            dropOptions.rank = p.rank || 0;\n\n            // if target, return true from the over event. this will cause katavorio to stop setting drops to hover\n            // if multipleDrop is set to false.\n            if (isTarget) {\n                dropOptions[root.jsPlumb.dragEvents.over] = function () { return true; };\n            }\n\n            // vanilla jsplumb only\n            if (p.allowLoopback === false) {\n                dropOptions.canDrop = function (_drag) {\n                    var de = _drag.getDragElement()._jsPlumbRelatedElement;\n                    return de !== elInfo.el;\n                };\n            }\n            _currentInstance.initDroppable(elInfo.el, dropOptions, \"internal\");\n\n            return _drop;\n\n        };\n\n        // see API docs\n        this.makeTarget = function (el, params, referenceParams) {\n\n            // put jsplumb ref into params without altering the params passed in\n            var p = root.jsPlumb.extend({_jsPlumb: this}, referenceParams);\n            root.jsPlumb.extend(p, params);\n\n            var maxConnections = p.maxConnections || -1,\n\n                _doOne = function (el) {\n\n                    // get the element's id and store the endpoint definition for it.  jsPlumb.connect calls will look for one of these,\n                    // and use the endpoint definition if found.\n                    // decode the info for this element (id and element)\n                    var elInfo = _info(el),\n                        elid = elInfo.id,\n                        dropOptions = root.jsPlumb.extend({}, p.dropOptions || {}),\n                        type = p.connectionType || \"default\";\n\n                    this.targetEndpointDefinitions[elid] = this.targetEndpointDefinitions[elid] || {};\n\n                    _ensureContainer(elid);\n\n                    // if this is a group and the user has not mandated a rank, set to -1 so that Nodes takes\n                    // precedence.\n                    if (elInfo.el._isJsPlumbGroup && dropOptions.rank == null) {\n                        dropOptions.rank = -1;\n                    }\n\n                    // store the definition\n                    var _def = {\n                        def: root.jsPlumb.extend({}, p),\n                        uniqueEndpoint: p.uniqueEndpoint,\n                        maxConnections: maxConnections,\n                        enabled: true\n                    };\n\n                    if (p.createEndpoint) {\n                        _def.uniqueEndpoint = true;\n                        _def.endpoint = _currentInstance.addEndpoint(el, _def.def);\n                        _def.endpoint.setDeleteOnEmpty(false);\n                    }\n\n                    elInfo.def = _def;\n                    this.targetEndpointDefinitions[elid][type] = _def;\n                    _makeElementDropHandler(elInfo, p, dropOptions, p.isSource === true, true);\n                    // stash the definition on the drop\n                    elInfo.el._katavorioDrop[elInfo.el._katavorioDrop.length - 1].targetDef = _def;\n\n                }.bind(this);\n\n            // make an array if only given one element\n            var inputs = el.length && el.constructor !== String ? el : [ el ];\n\n            // register each one in the list.\n            for (var i = 0, ii = inputs.length; i < ii; i++) {\n                _doOne(inputs[i]);\n            }\n\n            return this;\n        };\n\n        // see api docs\n        this.unmakeTarget = function (el, doNotClearArrays) {\n            var info = _info(el);\n            _currentInstance.destroyDroppable(info.el, \"internal\");\n            if (!doNotClearArrays) {\n                delete this.targetEndpointDefinitions[info.id];\n            }\n\n            return this;\n        };\n\n        // see api docs\n        this.makeSource = function (el, params, referenceParams) {\n            var p = root.jsPlumb.extend({_jsPlumb: this}, referenceParams);\n            root.jsPlumb.extend(p, params);\n            var type = p.connectionType || \"default\";\n            var aae = _currentInstance.deriveEndpointAndAnchorSpec(type);\n            p.endpoint = p.endpoint || aae.endpoints[0];\n            p.anchor = p.anchor || aae.anchors[0];\n            var maxConnections = p.maxConnections || -1,\n                onMaxConnections = p.onMaxConnections,\n                _doOne = function (elInfo) {\n                    // get the element's id and store the endpoint definition for it.  jsPlumb.connect calls will look for one of these,\n                    // and use the endpoint definition if found.\n                    var elid = elInfo.id,\n                        _del = this.getElement(elInfo.el);\n\n                    this.sourceEndpointDefinitions[elid] = this.sourceEndpointDefinitions[elid] || {};\n                    _ensureContainer(elid);\n\n                    var _def = {\n                        def:root.jsPlumb.extend({}, p),\n                        uniqueEndpoint: p.uniqueEndpoint,\n                        maxConnections: maxConnections,\n                        enabled: true\n                    };\n\n                    if (p.createEndpoint) {\n                        _def.uniqueEndpoint = true;\n                        _def.endpoint = _currentInstance.addEndpoint(el, _def.def);\n                        _def.endpoint.setDeleteOnEmpty(false);\n                    }\n\n                    this.sourceEndpointDefinitions[elid][type] = _def;\n                    elInfo.def = _def;\n\n                    var stopEvent = root.jsPlumb.dragEvents.stop,\n                        dragEvent = root.jsPlumb.dragEvents.drag,\n                        dragOptions = root.jsPlumb.extend({ }, p.dragOptions || {}),\n                        existingDrag = dragOptions.drag,\n                        existingStop = dragOptions.stop,\n                        ep = null,\n                        endpointAddedButNoDragYet = false;\n\n                    // set scope if its not set in dragOptions but was passed in in params\n                    dragOptions.scope = dragOptions.scope || p.scope;\n\n                    dragOptions[dragEvent] = _ju.wrap(dragOptions[dragEvent], function () {\n                        if (existingDrag) {\n                            existingDrag.apply(this, arguments);\n                        }\n                        endpointAddedButNoDragYet = false;\n                    });\n\n                    dragOptions[stopEvent] = _ju.wrap(dragOptions[stopEvent], function () {\n\n                        if (existingStop) {\n                            existingStop.apply(this, arguments);\n                        }\n                        this.currentlyDragging = false;\n                        if (ep._jsPlumb != null) { // if not cleaned up...\n\n                            // reset the anchor to the anchor that was initially provided. the one we were using to drag\n                            // the connection was just a placeholder that was located at the place the user pressed the\n                            // mouse button to initiate the drag.\n                            var anchorDef = p.anchor || this.Defaults.Anchor,\n                                oldAnchor = ep.anchor,\n                                oldConnection = ep.connections[0];\n\n                            var    newAnchor = this.makeAnchor(anchorDef, elid, this),\n                                _el = ep.element;\n\n                            // if the anchor has a 'positionFinder' set, then delegate to that function to find\n                            // out where to locate the anchor. issue 117.\n                            if (newAnchor.positionFinder != null) {\n                                var elPosition = _currentInstance.getOffset(_el),\n                                    elSize = this.getSize(_el),\n                                    dropPosition = { left: elPosition.left + (oldAnchor.x * elSize[0]), top: elPosition.top + (oldAnchor.y * elSize[1]) },\n                                    ap = newAnchor.positionFinder(dropPosition, elPosition, elSize, newAnchor.constructorParams);\n\n                                newAnchor.x = ap[0];\n                                newAnchor.y = ap[1];\n                            }\n\n                            ep.setAnchor(newAnchor, true);\n                            ep.repaint();\n                            this.repaint(ep.elementId);\n                            if (oldConnection != null) {\n                                this.repaint(oldConnection.targetId);\n                            }\n                        }\n                    }.bind(this));\n\n                    // when the user presses the mouse, add an Endpoint, if we are enabled.\n                    var mouseDownListener = function (e) {\n                        // on right mouse button, abort.\n                        if (e.which === 3 || e.button === 2) {\n                            return;\n                        }\n\n                        // TODO store def on element.\n                        var def = this.sourceEndpointDefinitions[elid][type];\n\n                        // if disabled, return.\n                        if (!def.enabled) {\n                            return;\n                        }\n\n                        elid = this.getId(this.getElement(elInfo.el)); // elid might have changed since this method was called to configure the element.\n\n                        // if a filter was given, run it, and return if it says no.\n                        if (p.filter) {\n                            var r = _ju.isString(p.filter) ? selectorFilter(e, elInfo.el, p.filter, this, p.filterExclude) : p.filter(e, elInfo.el);\n                            if (r === false) {\n                                return;\n                            }\n                        }\n\n                        // if maxConnections reached\n                        var sourceCount = this.select({source: elid}).length;\n                        if (def.maxConnections >= 0 && (sourceCount >= def.maxConnections)) {\n                            if (onMaxConnections) {\n                                onMaxConnections({\n                                    element: elInfo.el,\n                                    maxConnections: maxConnections\n                                }, e);\n                            }\n                            return false;\n                        }\n\n                        // find the position on the element at which the mouse was pressed; this is where the endpoint\n                        // will be located.\n                        var elxy = root.jsPlumb.getPositionOnElement(e, _del, _zoom);\n\n                        // we need to override the anchor in here, and force 'isSource', but we don't want to mess with\n                        // the params passed in, because after a connection is established we're going to reset the endpoint\n                        // to have the anchor we were given.\n                        var tempEndpointParams = {};\n                        root.jsPlumb.extend(tempEndpointParams, p);\n                        tempEndpointParams.isTemporarySource = true;\n                        tempEndpointParams.anchor = [ elxy[0], elxy[1] , 0, 0];\n                        tempEndpointParams.dragOptions = dragOptions;\n\n                        if (def.def.scope) {\n                            tempEndpointParams.scope = def.def.scope;\n                        }\n\n                        ep = this.addEndpoint(elid, tempEndpointParams);\n                        endpointAddedButNoDragYet = true;\n                        ep.setDeleteOnEmpty(true);\n\n                        // if unique endpoint and it's already been created, push it onto the endpoint we create. at the end\n                        // of a successful connection we'll switch to that endpoint.\n                        // TODO this is the same code as the programmatic endpoints create on line 1050 ish\n                        if (def.uniqueEndpoint) {\n                            if (!def.endpoint) {\n                                def.endpoint = ep;\n                                ep.setDeleteOnEmpty(false);\n                            }\n                            else {\n                                ep.finalEndpoint = def.endpoint;\n                            }\n                        }\n\n                        var _delTempEndpoint = function () {\n                            // this mouseup event is fired only if no dragging occurred, by jquery and yui, but for mootools\n                            // it is fired even if dragging has occurred, in which case we would blow away a perfectly\n                            // legitimate endpoint, were it not for this check.  the flag is set after adding an\n                            // endpoint and cleared in a drag listener we set in the dragOptions above.\n                            _currentInstance.off(ep.canvas, \"mouseup\", _delTempEndpoint);\n                            _currentInstance.off(elInfo.el, \"mouseup\", _delTempEndpoint);\n                            if (endpointAddedButNoDragYet) {\n                                endpointAddedButNoDragYet = false;\n                                _currentInstance.deleteEndpoint(ep);\n                            }\n                        };\n\n                        _currentInstance.on(ep.canvas, \"mouseup\", _delTempEndpoint);\n                        _currentInstance.on(elInfo.el, \"mouseup\", _delTempEndpoint);\n\n                        // optionally check for attributes to extract from the source element\n                        var payload = {};\n                        if (def.def.extract) {\n                            for (var att in def.def.extract) {\n                                var v = (e.srcElement || e.target).getAttribute(att);\n                                if (v) {\n                                    payload[def.def.extract[att]] = v;\n                                }\n                            }\n                        }\n\n                        // and then trigger its mousedown event, which will kick off a drag, which will start dragging\n                        // a new connection from this endpoint.\n                        _currentInstance.trigger(ep.canvas, \"mousedown\", e, payload);\n\n                        _ju.consume(e);\n\n                    }.bind(this);\n\n                    this.on(elInfo.el, \"mousedown\", mouseDownListener);\n                    _def.trigger = mouseDownListener;\n\n                    // if a filter was provided, set it as a dragFilter on the element,\n                    // to prevent the element drag function from kicking in when we want to\n                    // drag a new connection\n                    if (p.filter && (_ju.isString(p.filter) || _ju.isFunction(p.filter))) {\n                        _currentInstance.setDragFilter(elInfo.el, p.filter);\n                    }\n\n                    var dropOptions = root.jsPlumb.extend({}, p.dropOptions || {});\n\n                    _makeElementDropHandler(elInfo, p, dropOptions, true, p.isTarget === true);\n\n                }.bind(this);\n\n            var inputs = el.length && el.constructor !== String ? el : [ el ];\n            for (var i = 0, ii = inputs.length; i < ii; i++) {\n                _doOne(_info(inputs[i]));\n            }\n\n            return this;\n        };\n\n        // see api docs\n        this.unmakeSource = function (el, connectionType, doNotClearArrays) {\n            var info = _info(el);\n            _currentInstance.destroyDroppable(info.el, \"internal\");\n            var eldefs = this.sourceEndpointDefinitions[info.id];\n            if (eldefs) {\n                for (var def in eldefs) {\n                    if (connectionType == null || connectionType === def) {\n                        var mouseDownListener = eldefs[def].trigger;\n                        if (mouseDownListener) {\n                            _currentInstance.off(info.el, \"mousedown\", mouseDownListener);\n                        }\n                        if (!doNotClearArrays) {\n                            delete this.sourceEndpointDefinitions[info.id][def];\n                        }\n                    }\n                }\n            }\n\n            return this;\n        };\n\n        // see api docs\n        this.unmakeEverySource = function () {\n            for (var i in this.sourceEndpointDefinitions) {\n                _currentInstance.unmakeSource(i, null, true);\n            }\n\n            this.sourceEndpointDefinitions = {};\n            return this;\n        };\n\n        var _getScope = function (el, types, connectionType) {\n            types = _ju.isArray(types) ? types : [ types ];\n            var id = _getId(el);\n            connectionType = connectionType || \"default\";\n            for (var i = 0; i < types.length; i++) {\n                var eldefs = this[types[i]][id];\n                if (eldefs && eldefs[connectionType]) {\n                    return eldefs[connectionType].def.scope || this.Defaults.Scope;\n                }\n            }\n        }.bind(this);\n\n        var _setScope = function (el, scope, types, connectionType) {\n            types = _ju.isArray(types) ? types : [ types ];\n            var id = _getId(el);\n            connectionType = connectionType || \"default\";\n            for (var i = 0; i < types.length; i++) {\n                var eldefs = this[types[i]][id];\n                if (eldefs && eldefs[connectionType]) {\n                    eldefs[connectionType].def.scope = scope;\n                }\n            }\n\n        }.bind(this);\n\n        this.getScope = function (el, scope) {\n            return _getScope(el, [ \"sourceEndpointDefinitions\", \"targetEndpointDefinitions\" ]);\n        };\n        this.getSourceScope = function (el) {\n            return _getScope(el, \"sourceEndpointDefinitions\");\n        };\n        this.getTargetScope = function (el) {\n            return _getScope(el, \"targetEndpointDefinitions\");\n        };\n        this.setScope = function (el, scope, connectionType) {\n            this.setSourceScope(el, scope, connectionType);\n            this.setTargetScope(el, scope, connectionType);\n        };\n        this.setSourceScope = function (el, scope, connectionType) {\n            _setScope(el, scope, \"sourceEndpointDefinitions\", connectionType);\n            // we get the source scope during the mousedown event, but we also want to set this.\n            this.setDragScope(el, scope);\n        };\n        this.setTargetScope = function (el, scope, connectionType) {\n            _setScope(el, scope, \"targetEndpointDefinitions\", connectionType);\n            this.setDropScope(el, scope);\n        };\n\n        // see api docs\n        this.unmakeEveryTarget = function () {\n            for (var i in this.targetEndpointDefinitions) {\n                _currentInstance.unmakeTarget(i, true);\n            }\n\n            this.targetEndpointDefinitions = {};\n            return this;\n        };\n\n        // does the work of setting a source enabled or disabled.\n        var _setEnabled = function (type, el, state, toggle, connectionType) {\n            var a = type === \"source\" ? this.sourceEndpointDefinitions : this.targetEndpointDefinitions,\n                originalState, info, newState;\n\n            connectionType = connectionType || \"default\";\n\n            // a selector or an array\n            if (el.length && !_ju.isString(el)) {\n                originalState = [];\n                for (var i = 0, ii = el.length; i < ii; i++) {\n                    info = _info(el[i]);\n                    if (a[info.id] && a[info.id][connectionType]) {\n                        originalState[i] = a[info.id][connectionType].enabled;\n                        newState = toggle ? !originalState[i] : state;\n                        a[info.id][connectionType].enabled = newState;\n                        _currentInstance[newState ? \"removeClass\" : \"addClass\"](info.el, \"jtk-\" + type + \"-disabled\");\n                    }\n                }\n            }\n            // otherwise a DOM element or a String ID.\n            else {\n                info = _info(el);\n                var id = info.id;\n                if (a[id] && a[id][connectionType]) {\n                    originalState = a[id][connectionType].enabled;\n                    newState = toggle ? !originalState : state;\n                    a[id][connectionType].enabled = newState;\n                    _currentInstance[newState ? \"removeClass\" : \"addClass\"](info.el, \"jtk-\" + type + \"-disabled\");\n                }\n            }\n            return originalState;\n        }.bind(this);\n\n        var _first = function (el, fn) {\n            if (_ju.isString(el) || !el.length) {\n                return fn.apply(this, [ el ]);\n            }\n            else if (el.length) {\n                return fn.apply(this, [ el[0] ]);\n            }\n\n        }.bind(this);\n\n        this.toggleSourceEnabled = function (el, connectionType) {\n            _setEnabled(\"source\", el, null, true, connectionType);\n            return this.isSourceEnabled(el, connectionType);\n        };\n\n        this.setSourceEnabled = function (el, state, connectionType) {\n            return _setEnabled(\"source\", el, state, null, connectionType);\n        };\n        this.isSource = function (el, connectionType) {\n            connectionType = connectionType || \"default\";\n            return _first(el, function (_el) {\n                var eldefs = this.sourceEndpointDefinitions[_info(_el).id];\n                return eldefs != null && eldefs[connectionType] != null;\n            }.bind(this));\n        };\n        this.isSourceEnabled = function (el, connectionType) {\n            connectionType = connectionType || \"default\";\n            return _first(el, function (_el) {\n                var sep = this.sourceEndpointDefinitions[_info(_el).id];\n                return sep && sep[connectionType] && sep[connectionType].enabled === true;\n            }.bind(this));\n        };\n\n        this.toggleTargetEnabled = function (el, connectionType) {\n            _setEnabled(\"target\", el, null, true, connectionType);\n            return this.isTargetEnabled(el, connectionType);\n        };\n\n        this.isTarget = function (el, connectionType) {\n            connectionType = connectionType || \"default\";\n            return _first(el, function (_el) {\n                var eldefs = this.targetEndpointDefinitions[_info(_el).id];\n                return eldefs != null && eldefs[connectionType] != null;\n            }.bind(this));\n        };\n        this.isTargetEnabled = function (el, connectionType) {\n            connectionType = connectionType || \"default\";\n            return _first(el, function (_el) {\n                var tep = this.targetEndpointDefinitions[_info(_el).id];\n                return tep && tep[connectionType] && tep[connectionType].enabled === true;\n            }.bind(this));\n        };\n        this.setTargetEnabled = function (el, state, connectionType) {\n            return _setEnabled(\"target\", el, state, null, connectionType);\n        };\n\n// --------------------- end makeSource/makeTarget ----------------------------------------------\n\n        this.ready = function (fn) {\n            _currentInstance.bind(\"ready\", fn);\n        };\n\n        var _elEach = function(el, fn) {\n            // support both lists...\n            if (typeof el === 'object' && el.length) {\n                for (var i = 0, ii = el.length; i < ii; i++) {\n                    fn(el[i]);\n                }\n            }\n            else {// ...and single strings or elements.\n                fn(el);\n            }\n\n            return _currentInstance;\n        };\n\n        // repaint some element's endpoints and connections\n        this.repaint = function (el, ui, timestamp) {\n            return _elEach(el, function(_el) {\n                _draw(_el, ui, timestamp);\n            });\n        };\n\n        this.revalidate = function (el, timestamp, isIdAlready) {\n            return _elEach(el, function(_el) {\n                var elId = isIdAlready ? _el : _currentInstance.getId(_el);\n                _currentInstance.updateOffset({ elId: elId, recalc: true, timestamp:timestamp });\n                var dm = _currentInstance.getDragManager();\n                if (dm) {\n                    dm.updateOffsets(elId);\n                }\n                _currentInstance.repaint(_el);\n            });\n        };\n\n        // repaint every endpoint and connection.\n        this.repaintEverything = function () {\n            // TODO this timestamp causes continuous anchors to not repaint properly.\n            // fix this. do not just take out the timestamp. it runs a lot faster with\n            // the timestamp included.\n            var timestamp = _timestamp(), elId;\n\n            for (elId in endpointsByElement) {\n                _currentInstance.updateOffset({ elId: elId, recalc: true, timestamp: timestamp });\n            }\n\n            for (elId in endpointsByElement) {\n                _draw(elId, null, timestamp);\n            }\n\n            return this;\n        };\n\n        this.removeAllEndpoints = function (el, recurse, affectedElements) {\n            affectedElements = affectedElements || [];\n            var _one = function (_el) {\n                var info = _info(_el),\n                    ebe = endpointsByElement[info.id],\n                    i, ii;\n\n                if (ebe) {\n                    affectedElements.push(info);\n                    for (i = 0, ii = ebe.length; i < ii; i++) {\n                        _currentInstance.deleteEndpoint(ebe[i], false);\n                    }\n                }\n                delete endpointsByElement[info.id];\n\n                if (recurse) {\n                    if (info.el && info.el.nodeType !== 3 && info.el.nodeType !== 8) {\n                        for (i = 0, ii = info.el.childNodes.length; i < ii; i++) {\n                            _one(info.el.childNodes[i]);\n                        }\n                    }\n                }\n\n            };\n            _one(el);\n            return this;\n        };\n\n        var _doRemove = function(info, affectedElements) {\n            _currentInstance.removeAllEndpoints(info.id, true, affectedElements);\n            var dm = _currentInstance.getDragManager();\n            var _one = function(_info) {\n\n                if (dm) {\n                    dm.elementRemoved(_info.id);\n                }\n                _currentInstance.anchorManager.clearFor(_info.id);\n                _currentInstance.anchorManager.removeFloatingConnection(_info.id);\n\n                if (_currentInstance.isSource(_info.el)) {\n                    _currentInstance.unmakeSource(_info.el);\n                }\n                if (_currentInstance.isTarget(_info.el)) {\n                    _currentInstance.unmakeTarget(_info.el);\n                }\n                _currentInstance.destroyDraggable(_info.el);\n                _currentInstance.destroyDroppable(_info.el);\n\n\n                delete _currentInstance.floatingConnections[_info.id];\n                delete managedElements[_info.id];\n                delete offsets[_info.id];\n                if (_info.el) {\n                    _currentInstance.removeElement(_info.el);\n                    _info.el._jsPlumb = null;\n                }\n            };\n\n            // remove all affected child elements\n            for (var ae = 1; ae < affectedElements.length; ae++) {\n                _one(affectedElements[ae]);\n            }\n            // and always remove the requested one from the dom.\n            _one(info);\n        };\n\n        /**\n         * Remove the given element, including cleaning up all endpoints registered for it.\n         * This is exposed in the public API but also used internally by jsPlumb when removing the\n         * element associated with a connection drag.\n         */\n        this.remove = function (el, doNotRepaint) {\n            var info = _info(el), affectedElements = [];\n            if (info.text) {\n                info.el.parentNode.removeChild(info.el);\n            }\n            else if (info.id) {\n                _currentInstance.batch(function () {\n                    _doRemove(info, affectedElements);\n                }, doNotRepaint === true);\n            }\n            return _currentInstance;\n        };\n\n        this.empty = function (el, doNotRepaint) {\n            var affectedElements = [];\n            var _one = function(el, dontRemoveFocus) {\n                var info = _info(el);\n                if (info.text) {\n                    info.el.parentNode.removeChild(info.el);\n                }\n                else if (info.el) {\n                    while(info.el.childNodes.length > 0) {\n                        _one(info.el.childNodes[0]);\n                    }\n                    if (!dontRemoveFocus) {\n                        _doRemove(info, affectedElements);\n                    }\n                }\n            };\n\n            _currentInstance.batch(function() {\n                _one(el, true);\n            }, doNotRepaint === false);\n\n            return _currentInstance;\n        };\n\n        this.reset = function (doNotUnbindInstanceEventListeners) {\n            _currentInstance.silently(function() {\n                _hoverSuspended = false;\n                _currentInstance.removeAllGroups();\n                _currentInstance.removeGroupManager();\n                _currentInstance.deleteEveryEndpoint();\n                if (!doNotUnbindInstanceEventListeners) {\n                    _currentInstance.unbind();\n                }\n                this.targetEndpointDefinitions = {};\n                this.sourceEndpointDefinitions = {};\n                connections.length = 0;\n                if (this.doReset) {\n                    this.doReset();\n                }\n            }.bind(this));\n        };\n\n        var _clearObject = function (obj) {\n            if (obj.canvas && obj.canvas.parentNode) {\n                obj.canvas.parentNode.removeChild(obj.canvas);\n            }\n            obj.cleanup();\n            obj.destroy();\n        };\n\n        this.clear = function () {\n            _currentInstance.select().each(_clearObject);\n            _currentInstance.selectEndpoints().each(_clearObject);\n\n            endpointsByElement = {};\n            endpointsByUUID = {};\n        };\n\n        this.setDefaultScope = function (scope) {\n            DEFAULT_SCOPE = scope;\n            return _currentInstance;\n        };\n\n        // sets whether or not some element should be currently draggable.\n        this.setDraggable = _setDraggable;\n\n        this.deriveEndpointAndAnchorSpec = function(type, dontPrependDefault) {\n            var bits = ((dontPrependDefault ? \"\" : \"default \") + type).split(/[\\s]/), eps = null, ep = null, a = null, as = null;\n            for (var i = 0; i < bits.length; i++) {\n                var _t = _currentInstance.getType(bits[i], \"connection\");\n                if (_t) {\n                    if (_t.endpoints) {\n                        eps = _t.endpoints;\n                    }\n                    if (_t.endpoint) {\n                        ep = _t.endpoint;\n                    }\n                    if (_t.anchors) {\n                        as = _t.anchors;\n                    }\n                    if (_t.anchor) {\n                        a = _t.anchor;\n                    }\n                }\n            }\n            return { endpoints: eps ? eps : [ ep, ep ], anchors: as ? as : [a, a ]};\n        };\n\n        // sets the id of some element, changing whatever we need to to keep track.\n        this.setId = function (el, newId, doNotSetAttribute) {\n            //\n            var id;\n\n            if (_ju.isString(el)) {\n                id = el;\n            }\n            else {\n                el = this.getElement(el);\n                id = this.getId(el);\n            }\n\n            var sConns = this.getConnections({source: id, scope: '*'}, true),\n                tConns = this.getConnections({target: id, scope: '*'}, true);\n\n            newId = \"\" + newId;\n\n            if (!doNotSetAttribute) {\n                el = this.getElement(id);\n                this.setAttribute(el, \"id\", newId);\n            }\n            else {\n                el = this.getElement(newId);\n            }\n\n            endpointsByElement[newId] = endpointsByElement[id] || [];\n            for (var i = 0, ii = endpointsByElement[newId].length; i < ii; i++) {\n                endpointsByElement[newId][i].setElementId(newId);\n                endpointsByElement[newId][i].setReferenceElement(el);\n            }\n            delete endpointsByElement[id];\n\n            this.sourceEndpointDefinitions[newId] = this.sourceEndpointDefinitions[id];\n            delete this.sourceEndpointDefinitions[id];\n            this.targetEndpointDefinitions[newId] = this.targetEndpointDefinitions[id];\n            delete this.targetEndpointDefinitions[id];\n\n            this.anchorManager.changeId(id, newId);\n            var dm = this.getDragManager();\n            if (dm) {\n                dm.changeId(id, newId);\n            }\n            managedElements[newId] = managedElements[id];\n            delete managedElements[id];\n\n            var _conns = function (list, epIdx, type) {\n                for (var i = 0, ii = list.length; i < ii; i++) {\n                    list[i].endpoints[epIdx].setElementId(newId);\n                    list[i].endpoints[epIdx].setReferenceElement(el);\n                    list[i][type + \"Id\"] = newId;\n                    list[i][type] = el;\n                }\n            };\n            _conns(sConns, 0, \"source\");\n            _conns(tConns, 1, \"target\");\n\n            this.repaint(newId);\n        };\n\n        this.setDebugLog = function (debugLog) {\n            log = debugLog;\n        };\n\n        this.setSuspendDrawing = function (val, repaintAfterwards) {\n            var curVal = _suspendDrawing;\n            _suspendDrawing = val;\n            if (val) {\n                _suspendedAt = new Date().getTime();\n            } else {\n                _suspendedAt = null;\n            }\n            if (repaintAfterwards) {\n                this.repaintEverything();\n            }\n            return curVal;\n        };\n\n        // returns whether or not drawing is currently suspended.\n        this.isSuspendDrawing = function () {\n            return _suspendDrawing;\n        };\n\n        // return timestamp for when drawing was suspended.\n        this.getSuspendedAt = function () {\n            return _suspendedAt;\n        };\n\n        this.batch = function (fn, doNotRepaintAfterwards) {\n            var _wasSuspended = this.isSuspendDrawing();\n            if (!_wasSuspended) {\n                this.setSuspendDrawing(true);\n            }\n            try {\n                fn();\n            }\n            catch (e) {\n                _ju.log(\"Function run while suspended failed\", e);\n            }\n            if (!_wasSuspended) {\n                this.setSuspendDrawing(false, !doNotRepaintAfterwards);\n            }\n        };\n\n        this.doWhileSuspended = this.batch;\n\n        this.getCachedData = _getCachedData;\n        this.timestamp = _timestamp;\n        this.show = function (el, changeEndpoints) {\n            _setVisible(el, \"block\", changeEndpoints);\n            return _currentInstance;\n        };\n\n        // TODO: update this method to return the current state.\n        this.toggleVisible = _toggleVisible;\n        this.toggleDraggable = _toggleDraggable;\n        this.addListener = this.bind;\n\n        var floatingConnections = [];\n        this.registerFloatingConnection = function(info, conn, ep) {\n            floatingConnections[info.id] = conn;\n            // only register for the target endpoint; we will not be dragging the source at any time\n            // before this connection is either discarded or made into a permanent connection.\n            _ju.addToList(endpointsByElement, info.id, ep);\n        };\n        this.getFloatingConnectionFor = function(id) {\n            return floatingConnections[id];\n        };\n    };\n\n    _ju.extend(root.jsPlumbInstance, _ju.EventGenerator, {\n        setAttribute: function (el, a, v) {\n            this.setAttribute(el, a, v);\n        },\n        getAttribute: function (el, a) {\n            return this.getAttribute(root.jsPlumb.getElement(el), a);\n        },\n        convertToFullOverlaySpec: function(spec) {\n            if (_ju.isString(spec)) {\n                spec = [ spec, { } ];\n            }\n            spec[1].id = spec[1].id || _ju.uuid();\n            return spec;\n        },\n        registerConnectionType: function (id, type) {\n            this._connectionTypes[id] = root.jsPlumb.extend({}, type);\n            if (type.overlays) {\n                var to = {};\n                for (var i = 0; i < type.overlays.length; i++) {\n                    // if a string, convert to object representation so that we can store the typeid on it.\n                    // also assign an id.\n                    var fo = this.convertToFullOverlaySpec(type.overlays[i]);\n                    to[fo[1].id] = fo;\n                }\n                this._connectionTypes[id].overlays = to;\n            }\n        },\n        registerConnectionTypes: function (types) {\n            for (var i in types) {\n                this.registerConnectionType(i, types[i]);\n            }\n        },\n        registerEndpointType: function (id, type) {\n            this._endpointTypes[id] = root.jsPlumb.extend({}, type);\n            if (type.overlays) {\n                var to = {};\n                for (var i = 0; i < type.overlays.length; i++) {\n                    // if a string, convert to object representation so that we can store the typeid on it.\n                    // also assign an id.\n                    var fo = this.convertToFullOverlaySpec(type.overlays[i]);\n                    to[fo[1].id] = fo;\n                }\n                this._endpointTypes[id].overlays = to;\n            }\n        },\n        registerEndpointTypes: function (types) {\n            for (var i in types) {\n                this.registerEndpointType(i, types[i]);\n            }\n        },\n        getType: function (id, typeDescriptor) {\n            return typeDescriptor === \"connection\" ? this._connectionTypes[id] : this._endpointTypes[id];\n        },\n        setIdChanged: function (oldId, newId) {\n            this.setId(oldId, newId, true);\n        },\n        // set parent: change the parent for some node and update all the registrations we need to.\n        setParent: function (el, newParent) {\n            var _dom = this.getElement(el),\n                _id = this.getId(_dom),\n                _pdom = this.getElement(newParent),\n                _pid = this.getId(_pdom),\n                dm = this.getDragManager();\n\n            _dom.parentNode.removeChild(_dom);\n            _pdom.appendChild(_dom);\n            if (dm) {\n                dm.setParent(_dom, _id, _pdom, _pid);\n            }\n        },\n        extend: function (o1, o2, names) {\n            var i;\n            if (names) {\n                for (i = 0; i < names.length; i++) {\n                    o1[names[i]] = o2[names[i]];\n                }\n            }\n            else {\n                for (i in o2) {\n                    o1[i] = o2[i];\n                }\n            }\n\n            return o1;\n        },\n        floatingConnections: {},\n        getFloatingAnchorIndex: function (jpc) {\n            return jpc.endpoints[0].isFloating() ? 0 : jpc.endpoints[1].isFloating() ? 1 : -1;\n        }\n    });\n\n// --------------------- static instance + module registration -------------------------------------------\n\n// create static instance and assign to window if window exists.\t\n    var jsPlumb = new jsPlumbInstance();\n    // register on 'root' (lets us run on server or browser)\n    root.jsPlumb = jsPlumb;\n    // add 'getInstance' method to static instance\n    jsPlumb.getInstance = function (_defaults, overrideFns) {\n        var j = new jsPlumbInstance(_defaults);\n        if (overrideFns) {\n            for (var ovf in overrideFns) {\n                j[ovf] = overrideFns[ovf];\n            }\n        }\n        j.init();\n        return j;\n    };\n    jsPlumb.each = function (spec, fn) {\n        if (spec == null) {\n            return;\n        }\n        if (typeof spec === \"string\") {\n            fn(jsPlumb.getElement(spec));\n        }\n        else if (spec.length != null) {\n            for (var i = 0; i < spec.length; i++) {\n                fn(jsPlumb.getElement(spec[i]));\n            }\n        }\n        else {\n            fn(spec);\n        } // assume it's an element.\n    };\n\n    // CommonJS\n    if (typeof exports !== 'undefined') {\n        exports.jsPlumb = jsPlumb;\n    }\n\n// --------------------- end static instance + AMD registration -------------------------------------------\t\t\n\n}).call(typeof window !== 'undefined' ? window : this);\n\n/*\n * This file contains the base functionality for DOM type adapters.\n *\n * Copyright (c) 2010 - 2018 jsPlumb (hello@jsplumbtoolkit.com)\n *\n * https://jsplumbtoolkit.com\n * https://github.com/jsplumb/jsplumb\n *\n * Dual licensed under the MIT and GPL2 licenses.\n */\n;\n(function () {\n\n    var root = this, _ju = root.jsPlumbUtil;\n\n    var _genLoc = function (prefix, e) {\n            if (e == null) {\n                return [ 0, 0 ];\n            }\n            var ts = _touches(e), t = _getTouch(ts, 0);\n            return [t[prefix + \"X\"], t[prefix + \"Y\"]];\n        },\n        _pageLocation = _genLoc.bind(this, \"page\"),\n        _screenLocation = _genLoc.bind(this, \"screen\"),\n        _clientLocation = _genLoc.bind(this, \"client\"),\n        _getTouch = function (touches, idx) {\n            return touches.item ? touches.item(idx) : touches[idx];\n        },\n        _touches = function (e) {\n            return e.touches && e.touches.length > 0 ? e.touches :\n                    e.changedTouches && e.changedTouches.length > 0 ? e.changedTouches :\n                    e.targetTouches && e.targetTouches.length > 0 ? e.targetTouches :\n                [ e ];\n        };\n\n    /**\n     Manages dragging for some instance of jsPlumb.\n\n     TODO instead of this being accessed directly, it should subscribe to events on the jsPlumb instance: every method\n     in here is called directly by jsPlumb. But what should happen is that we have unpublished events that this listens\n     to.  The only trick is getting one of these instantiated with every jsPlumb instance: it needs to have a hook somehow.\n     Basically the general idea is to pull ALL the drag code out (prototype method registrations plus this) into a\n     dedicated drag script), that does not necessarily need to be included.\n\n\n     */\n    var DragManager = function (_currentInstance) {\n        var _draggables = {}, _dlist = [], _delements = {}, _elementsWithEndpoints = {},\n        // elementids mapped to the draggable to which they belong.\n            _draggablesForElements = {};\n\n        /**\n         register some element as draggable.  right now the drag init stuff is done elsewhere, and it is\n         possible that will continue to be the case.\n         */\n        this.register = function (el) {\n            var id = _currentInstance.getId(el),\n                parentOffset = _currentInstance.getOffset(el);\n\n            if (!_draggables[id]) {\n                _draggables[id] = el;\n                _dlist.push(el);\n                _delements[id] = {};\n            }\n\n            // look for child elements that have endpoints and register them against this draggable.\n            var _oneLevel = function (p) {\n                if (p) {\n                    for (var i = 0; i < p.childNodes.length; i++) {\n                        if (p.childNodes[i].nodeType !== 3 && p.childNodes[i].nodeType !== 8) {\n                            var cEl = jsPlumb.getElement(p.childNodes[i]),\n                                cid = _currentInstance.getId(p.childNodes[i], null, true);\n                            if (cid && _elementsWithEndpoints[cid] && _elementsWithEndpoints[cid] > 0) {\n                                var cOff = _currentInstance.getOffset(cEl);\n                                _delements[id][cid] = {\n                                    id: cid,\n                                    offset: {\n                                        left: cOff.left - parentOffset.left,\n                                        top: cOff.top - parentOffset.top\n                                    }\n                                };\n                                _draggablesForElements[cid] = id;\n                            }\n                            _oneLevel(p.childNodes[i]);\n                        }\n                    }\n                }\n            };\n\n            _oneLevel(el);\n        };\n\n        // refresh the offsets for child elements of this element.\n        this.updateOffsets = function (elId, childOffsetOverrides) {\n            if (elId != null) {\n                childOffsetOverrides = childOffsetOverrides || {};\n                var domEl = jsPlumb.getElement(elId),\n                    id = _currentInstance.getId(domEl),\n                    children = _delements[id],\n                    parentOffset = _currentInstance.getOffset(domEl);\n\n                if (children) {\n                    for (var i in children) {\n                        if (children.hasOwnProperty(i)) {\n                            var cel = jsPlumb.getElement(i),\n                                cOff = childOffsetOverrides[i] || _currentInstance.getOffset(cel);\n\n                            // do not update if we have a value already and we'd just be writing 0,0\n                            if (cel.offsetParent == null && _delements[id][i] != null) {\n                                continue;\n                            }\n\n                            _delements[id][i] = {\n                                id: i,\n                                offset: {\n                                    left: cOff.left - parentOffset.left,\n                                    top: cOff.top - parentOffset.top\n                                }\n                            };\n                            _draggablesForElements[i] = id;\n                        }\n                    }\n                }\n            }\n        };\n\n        /**\n         notification that an endpoint was added to the given el.  we go up from that el's parent\n         node, looking for a parent that has been registered as a draggable. if we find one, we add this\n         el to that parent's list of elements to update on drag (if it is not there already)\n         */\n        this.endpointAdded = function (el, id) {\n\n            id = id || _currentInstance.getId(el);\n\n            var b = document.body,\n                p = el.parentNode;\n\n            _elementsWithEndpoints[id] = _elementsWithEndpoints[id] ? _elementsWithEndpoints[id] + 1 : 1;\n\n            while (p != null && p !== b) {\n                var pid = _currentInstance.getId(p, null, true);\n                if (pid && _draggables[pid]) {\n                    var pLoc = _currentInstance.getOffset(p);\n\n                    if (_delements[pid][id] == null) {\n                        var cLoc = _currentInstance.getOffset(el);\n                        _delements[pid][id] = {\n                            id: id,\n                            offset: {\n                                left: cLoc.left - pLoc.left,\n                                top: cLoc.top - pLoc.top\n                            }\n                        };\n                        _draggablesForElements[id] = pid;\n                    }\n                    break;\n                }\n                p = p.parentNode;\n            }\n        };\n\n        this.endpointDeleted = function (endpoint) {\n            if (_elementsWithEndpoints[endpoint.elementId]) {\n                _elementsWithEndpoints[endpoint.elementId]--;\n                if (_elementsWithEndpoints[endpoint.elementId] <= 0) {\n                    for (var i in _delements) {\n                        if (_delements.hasOwnProperty(i) && _delements[i]) {\n                            delete _delements[i][endpoint.elementId];\n                            delete _draggablesForElements[endpoint.elementId];\n                        }\n                    }\n                }\n            }\n        };\n\n        this.changeId = function (oldId, newId) {\n            _delements[newId] = _delements[oldId];\n            _delements[oldId] = {};\n            _draggablesForElements[newId] = _draggablesForElements[oldId];\n            _draggablesForElements[oldId] = null;\n        };\n\n        this.getElementsForDraggable = function (id) {\n            return _delements[id];\n        };\n\n        this.elementRemoved = function (elementId) {\n            var elId = _draggablesForElements[elementId];\n            if (elId) {\n                delete _delements[elId][elementId];\n                delete _draggablesForElements[elementId];\n            }\n        };\n\n        this.reset = function () {\n            _draggables = {};\n            _dlist = [];\n            _delements = {};\n            _elementsWithEndpoints = {};\n        };\n\n        //\n        // notification drag ended. We check automatically if need to update some\n        // ancestor's offsets.\n        //\n        this.dragEnded = function (el) {\n            if (el.offsetParent != null) {\n                var id = _currentInstance.getId(el),\n                    ancestor = _draggablesForElements[id];\n\n                if (ancestor) {\n                    this.updateOffsets(ancestor);\n                }\n            }\n        };\n\n        this.setParent = function (el, elId, p, pId, currentChildLocation) {\n            var current = _draggablesForElements[elId];\n            if (!_delements[pId]) {\n                _delements[pId] = {};\n            }\n            var pLoc = _currentInstance.getOffset(p),\n                cLoc = currentChildLocation || _currentInstance.getOffset(el);\n\n            if (current && _delements[current]) {\n                delete _delements[current][elId];\n            }\n\n            _delements[pId][elId] = {\n                id:elId,\n                offset : {\n                    left: cLoc.left - pLoc.left,\n                    top: cLoc.top - pLoc.top\n                }\n            };\n            _draggablesForElements[elId] = pId;\n        };\n\n        this.clearParent = function(el, elId) {\n            var current = _draggablesForElements[elId];\n            if (current) {\n                delete _delements[current][elId];\n                delete _draggablesForElements[elId];\n            }\n        };\n\n        this.revalidateParent = function(el, elId, childOffset) {\n            var current = _draggablesForElements[elId];\n            if (current) {\n                var co = {};\n                co[elId] = childOffset;\n                this.updateOffsets(current, co);\n                _currentInstance.revalidate(current);\n            }\n        };\n\n        this.getDragAncestor = function (el) {\n            var de = jsPlumb.getElement(el),\n                id = _currentInstance.getId(de),\n                aid = _draggablesForElements[id];\n\n            if (aid) {\n                return jsPlumb.getElement(aid);\n            }\n            else {\n                return null;\n            }\n        };\n\n    };\n\n    var trim = function (str) {\n            return str == null ? null : (str.replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, ''));\n        },\n        _setClassName = function (el, cn, classList) {\n            cn = trim(cn);\n            if (typeof el.className.baseVal !== \"undefined\") {\n                el.className.baseVal = cn;\n            }\n            else {\n                el.className = cn;\n            }\n\n            // recent (i currently have  61.0.3163.100) version of chrome do not update classList when you set the base val\n            // of an svg element's className. in the long run we'd like to move to just using classList anyway\n            try {\n                var cl = el.classList;\n                while (cl.length > 0) {\n                    cl.remove(cl.item(0));\n                }\n                for (var i = 0; i < classList.length; i++) {\n                    if (classList[i]) {\n                        cl.add(classList[i]);\n                    }\n                }\n            }\n            catch(e) {\n                // not fatal\n                console.log(\"JSPLUMB: cannot set class list\", e);\n            }\n        },\n        _getClassName = function (el) {\n            return (typeof el.className.baseVal === \"undefined\") ? el.className : el.className.baseVal;\n        },\n        _classManip = function (el, classesToAdd, classesToRemove) {\n            classesToAdd = classesToAdd == null ? [] : _ju.isArray(classesToAdd) ? classesToAdd : classesToAdd.split(/\\s+/);\n            classesToRemove = classesToRemove == null ? [] : _ju.isArray(classesToRemove) ? classesToRemove : classesToRemove.split(/\\s+/);\n\n            var className = _getClassName(el),\n                curClasses = className.split(/\\s+/);\n\n            var _oneSet = function (add, classes) {\n                for (var i = 0; i < classes.length; i++) {\n                    if (add) {\n                        if (curClasses.indexOf(classes[i]) === -1) {\n                            curClasses.push(classes[i]);\n                        }\n                    }\n                    else {\n                        var idx = curClasses.indexOf(classes[i]);\n                        if (idx !== -1) {\n                            curClasses.splice(idx, 1);\n                        }\n                    }\n                }\n            };\n\n            _oneSet(true, classesToAdd);\n            _oneSet(false, classesToRemove);\n\n            _setClassName(el, curClasses.join(\" \"), curClasses);\n        };\n\n    root.jsPlumb.extend(root.jsPlumbInstance.prototype, {\n\n        headless: false,\n\n        pageLocation: _pageLocation,\n        screenLocation: _screenLocation,\n        clientLocation: _clientLocation,\n\n        getDragManager:function() {\n            if (this.dragManager == null) {\n                this.dragManager = new DragManager(this);\n            }\n\n            return this.dragManager;\n        },\n\n        // NEVER CALLED IN THE CURRENT JS\n        recalculateOffsets:function(elId) {\n            this.getDragManager().updateOffsets(elId);\n        },\n\n        // CONVERTED\n        createElement:function(tag, style, clazz, atts) {\n            return this.createElementNS(null, tag, style, clazz, atts);\n        },\n\n        // CONVERTED\n        createElementNS:function(ns, tag, style, clazz, atts) {\n            var e = ns == null ? document.createElement(tag) : document.createElementNS(ns, tag);\n            var i;\n            style = style || {};\n            for (i in style) {\n                e.style[i] = style[i];\n            }\n\n            if (clazz) {\n                e.className = clazz;\n            }\n\n            atts = atts || {};\n            for (i in atts) {\n                e.setAttribute(i, \"\" + atts[i]);\n            }\n\n            return e;\n        },\n\n        // CONVERTED\n        getAttribute: function (el, attName) {\n            return el.getAttribute != null ? el.getAttribute(attName) : null;\n        },\n\n        // CONVERTED\n        setAttribute: function (el, a, v) {\n            if (el.setAttribute != null) {\n                el.setAttribute(a, v);\n            }\n        },\n\n        // CONVERTED\n        setAttributes: function (el, atts) {\n            for (var i in atts) {\n                if (atts.hasOwnProperty(i)) {\n                    el.setAttribute(i, atts[i]);\n                }\n            }\n        },\n        appendToRoot: function (node) {\n            document.body.appendChild(node);\n        },\n        getRenderModes: function () {\n            return [ \"svg\"  ];\n        },\n        getClass:_getClassName,\n        addClass: function (el, clazz) {\n            jsPlumb.each(el, function (e) {\n                _classManip(e, clazz);\n            });\n        },\n        hasClass: function (el, clazz) {\n            el = jsPlumb.getElement(el);\n            if (el.classList) {\n                return el.classList.contains(clazz);\n            }\n            else {\n                return _getClassName(el).indexOf(clazz) !== -1;\n            }\n        },\n        removeClass: function (el, clazz) {\n            jsPlumb.each(el, function (e) {\n                _classManip(e, null, clazz);\n            });\n        },\n        toggleClass:function(el, clazz) {\n            if (jsPlumb.hasClass(el, clazz)) {\n                jsPlumb.removeClass(el, clazz);\n            } else {\n                jsPlumb.addClass(el, clazz);\n            }\n        },\n        updateClasses: function (el, toAdd, toRemove) {\n            jsPlumb.each(el, function (e) {\n                _classManip(e, toAdd, toRemove);\n            });\n        },\n        setClass: function (el, clazz) {\n            if (clazz != null) {\n                jsPlumb.each(el, function (e) {\n                    _setClassName(e, clazz, clazz.split(/\\s+/));\n                });\n            }\n        },\n        setPosition: function (el, p) {\n            el.style.left = p.left + \"px\";\n            el.style.top = p.top + \"px\";\n        },\n        getPosition: function (el) {\n            var _one = function (prop) {\n                var v = el.style[prop];\n                return v ? v.substring(0, v.length - 2) : 0;\n            };\n            return {\n                left: _one(\"left\"),\n                top: _one(\"top\")\n            };\n        },\n        getStyle:function(el, prop) {\n            if (typeof window.getComputedStyle !== 'undefined') {\n                return getComputedStyle(el, null).getPropertyValue(prop);\n            } else {\n                return el.currentStyle[prop];\n            }\n        },\n        getSelector: function (ctx, spec) {\n            var sel = null;\n            if (arguments.length === 1) {\n                sel = ctx.nodeType != null ? ctx : document.querySelectorAll(ctx);\n            }\n            else {\n                sel = ctx.querySelectorAll(spec);\n            }\n\n            return sel;\n        },\n        getOffset:function(el, relativeToRoot, container) {\n            el = jsPlumb.getElement(el);\n            container = container || this.getContainer();\n            var out = {\n                    left: el.offsetLeft,\n                    top: el.offsetTop\n                },\n                op = (relativeToRoot  || (container != null && (el !== container && el.offsetParent !== container))) ?  el.offsetParent : null,\n                _maybeAdjustScroll = function(offsetParent) {\n                    if (offsetParent != null && offsetParent !== document.body && (offsetParent.scrollTop > 0 || offsetParent.scrollLeft > 0)) {\n                        out.left -= offsetParent.scrollLeft;\n                        out.top -= offsetParent.scrollTop;\n                    }\n                }.bind(this);\n\n            while (op != null) {\n                out.left += op.offsetLeft;\n                out.top += op.offsetTop;\n                _maybeAdjustScroll(op);\n                op = relativeToRoot ? op.offsetParent :\n                        op.offsetParent === container ? null : op.offsetParent;\n            }\n\n            // if container is scrolled and the element (or its offset parent) is not absolute or fixed, adjust accordingly.\n            if (container != null && !relativeToRoot && (container.scrollTop > 0 || container.scrollLeft > 0)) {\n                var pp = el.offsetParent != null ? this.getStyle(el.offsetParent, \"position\") : \"static\",\n                    p = this.getStyle(el, \"position\");\n                if (p !== \"absolute\" && p !== \"fixed\" && pp !== \"absolute\" && pp !== \"fixed\") {\n                    out.left -= container.scrollLeft;\n                    out.top -= container.scrollTop;\n                }\n            }\n            return out;\n        },\n        //\n        // return x+y proportion of the given element's size corresponding to the location of the given event.\n        //\n        getPositionOnElement: function (evt, el, zoom) {\n            var box = typeof el.getBoundingClientRect !== \"undefined\" ? el.getBoundingClientRect() : { left: 0, top: 0, width: 0, height: 0 },\n                body = document.body,\n                docElem = document.documentElement,\n                scrollTop = window.pageYOffset || docElem.scrollTop || body.scrollTop,\n                scrollLeft = window.pageXOffset || docElem.scrollLeft || body.scrollLeft,\n                clientTop = docElem.clientTop || body.clientTop || 0,\n                clientLeft = docElem.clientLeft || body.clientLeft || 0,\n                pst = 0,\n                psl = 0,\n                top = box.top + scrollTop - clientTop + (pst * zoom),\n                left = box.left + scrollLeft - clientLeft + (psl * zoom),\n                cl = jsPlumb.pageLocation(evt),\n                w = box.width || (el.offsetWidth * zoom),\n                h = box.height || (el.offsetHeight * zoom),\n                x = (cl[0] - left) / w,\n                y = (cl[1] - top) / h;\n\n            return [ x, y ];\n        },\n\n        /**\n         * Gets the absolute position of some element as read from the left/top properties in its style.\n         * @method getAbsolutePosition\n         * @param {Element} el The element to retrieve the absolute coordinates from. **Note** this is a DOM element, not a selector from the underlying library.\n         * @return {Number[]} [left, top] pixel values.\n         */\n        getAbsolutePosition: function (el) {\n            var _one = function (s) {\n                var ss = el.style[s];\n                if (ss) {\n                    return parseFloat(ss.substring(0, ss.length - 2));\n                }\n            };\n            return [ _one(\"left\"), _one(\"top\") ];\n        },\n\n        /**\n         * Sets the absolute position of some element by setting the left/top properties in its style.\n         * @method setAbsolutePosition\n         * @param {Element} el The element to set the absolute coordinates on. **Note** this is a DOM element, not a selector from the underlying library.\n         * @param {Number[]} xy x and y coordinates\n         * @param {Number[]} [animateFrom] Optional previous xy to animate from.\n         * @param {Object} [animateOptions] Options for the animation.\n         */\n        setAbsolutePosition: function (el, xy, animateFrom, animateOptions) {\n            if (animateFrom) {\n                this.animate(el, {\n                    left: \"+=\" + (xy[0] - animateFrom[0]),\n                    top: \"+=\" + (xy[1] - animateFrom[1])\n                }, animateOptions);\n            }\n            else {\n                el.style.left = xy[0] + \"px\";\n                el.style.top = xy[1] + \"px\";\n            }\n        },\n        /**\n         * gets the size for the element, in an array : [ width, height ].\n         */\n        getSize: function (el) {\n            return [ el.offsetWidth, el.offsetHeight ];\n        },\n        getWidth: function (el) {\n            return el.offsetWidth;\n        },\n        getHeight: function (el) {\n            return el.offsetHeight;\n        },\n        getRenderMode : function() { return \"svg\"; }\n\n    });\n}).call(typeof window !== 'undefined' ? window : this);\n\n/*\n * 2010 - 2018 jsPlumb (hello@jsplumbtoolkit.com)\n *\n * https://jsplumbtoolkit.com\n * https://github.com/jsplumb/jsplumb\n *\n * Dual licensed under the MIT and GPL2 licenses.\n */\n;(function() {\n\n    \"use strict\";\n    var root = this, _jp = root.jsPlumb, _ju = root.jsPlumbUtil;\n\n    // ------------------------------ BEGIN OverlayCapablejsPlumbUIComponent --------------------------------------------\n\n    var _internalLabelOverlayId = \"__label\",\n    // this is a shortcut helper method to let people add a label as\n    // overlay.\n        _makeLabelOverlay = function (component, params) {\n\n            var _params = {\n                    cssClass: params.cssClass,\n                    labelStyle: component.labelStyle,\n                    id: _internalLabelOverlayId,\n                    component: component,\n                    _jsPlumb: component._jsPlumb.instance  // TODO not necessary, since the instance can be accessed through the component.\n                },\n                mergedParams = _jp.extend(_params, params);\n\n            return new _jp.Overlays[component._jsPlumb.instance.getRenderMode()].Label(mergedParams);\n        },\n        _processOverlay = function (component, o) {\n            var _newOverlay = null;\n            if (_ju.isArray(o)) {\t// this is for the shorthand [\"Arrow\", { width:50 }] syntax\n                // there's also a three arg version:\n                // [\"Arrow\", { width:50 }, {location:0.7}]\n                // which merges the 3rd arg into the 2nd.\n                var type = o[0],\n                // make a copy of the object so as not to mess up anyone else's reference...\n                    p = _jp.extend({component: component, _jsPlumb: component._jsPlumb.instance}, o[1]);\n                if (o.length === 3) {\n                    _jp.extend(p, o[2]);\n                }\n                _newOverlay = new _jp.Overlays[component._jsPlumb.instance.getRenderMode()][type](p);\n            } else if (o.constructor === String) {\n                _newOverlay = new _jp.Overlays[component._jsPlumb.instance.getRenderMode()][o]({component: component, _jsPlumb: component._jsPlumb.instance});\n            } else {\n                _newOverlay = o;\n            }\n\n            _newOverlay.id = _newOverlay.id || _ju.uuid();\n            component.cacheTypeItem(\"overlay\", _newOverlay, _newOverlay.id);\n            component._jsPlumb.overlays[_newOverlay.id] = _newOverlay;\n\n            return _newOverlay;\n        };\n\n    _jp.OverlayCapableJsPlumbUIComponent = function (params) {\n\n        root.jsPlumbUIComponent.apply(this, arguments);\n        this._jsPlumb.overlays = {};\n        this._jsPlumb.overlayPositions = {};\n\n        if (params.label) {\n            this.getDefaultType().overlays[_internalLabelOverlayId] = [\"Label\", {\n                label: params.label,\n                location: params.labelLocation || this.defaultLabelLocation || 0.5,\n                labelStyle: params.labelStyle || this._jsPlumb.instance.Defaults.LabelStyle,\n                id:_internalLabelOverlayId\n            }];\n        }\n\n        this.setListenerComponent = function (c) {\n            if (this._jsPlumb) {\n                for (var i in this._jsPlumb.overlays) {\n                    this._jsPlumb.overlays[i].setListenerComponent(c);\n                }\n            }\n        };\n    };\n\n    _jp.OverlayCapableJsPlumbUIComponent.applyType = function (component, t) {\n        if (t.overlays) {\n            // loop through the ones in the type. if already present on the component,\n            // dont remove or re-add.\n            var keep = {}, i;\n\n            for (i in t.overlays) {\n\n                var existing = component._jsPlumb.overlays[t.overlays[i][1].id];\n                if (existing) {\n                    // maybe update from data, if there were parameterised values for instance.\n                    existing.updateFrom(t.overlays[i][1]);\n                    keep[t.overlays[i][1].id] = true;\n                }\n                else {\n                    var c = component.getCachedTypeItem(\"overlay\", t.overlays[i][1].id);\n                    if (c != null) {\n                        c.reattach(component._jsPlumb.instance, component);\n                        c.setVisible(true);\n                        // maybe update from data, if there were parameterised values for instance.\n                        c.updateFrom(t.overlays[i][1]);\n                        component._jsPlumb.overlays[c.id] = c;\n                    }\n                    else {\n                        c = component.addOverlay(t.overlays[i], true);\n                    }\n                    keep[c.id] = true;\n                }\n            }\n\n            // now loop through the full overlays and remove those that we dont want to keep\n            for (i in component._jsPlumb.overlays) {\n                if (keep[component._jsPlumb.overlays[i].id] == null) {\n                    component.removeOverlay(component._jsPlumb.overlays[i].id, true); // remove overlay but dont clean it up.\n                    // that would remove event listeners etc; overlays are never discarded by the types stuff, they are\n                    // just detached/reattached.\n                }\n            }\n        }\n    };\n\n    _ju.extend(_jp.OverlayCapableJsPlumbUIComponent, root.jsPlumbUIComponent, {\n\n        setHover: function (hover, ignoreAttachedElements) {\n            if (this._jsPlumb && !this._jsPlumb.instance.isConnectionBeingDragged()) {\n                for (var i in this._jsPlumb.overlays) {\n                    this._jsPlumb.overlays[i][hover ? \"addClass\" : \"removeClass\"](this._jsPlumb.instance.hoverClass);\n                }\n            }\n        },\n        addOverlay: function (overlay, doNotRepaint) {\n            var o = _processOverlay(this, overlay);\n            if (!doNotRepaint) {\n                this.repaint();\n            }\n            return o;\n        },\n        getOverlay: function (id) {\n            return this._jsPlumb.overlays[id];\n        },\n        getOverlays: function () {\n            return this._jsPlumb.overlays;\n        },\n        hideOverlay: function (id) {\n            var o = this.getOverlay(id);\n            if (o) {\n                o.hide();\n            }\n        },\n        hideOverlays: function () {\n            for (var i in this._jsPlumb.overlays) {\n                this._jsPlumb.overlays[i].hide();\n            }\n        },\n        showOverlay: function (id) {\n            var o = this.getOverlay(id);\n            if (o) {\n                o.show();\n            }\n        },\n        showOverlays: function () {\n            for (var i in this._jsPlumb.overlays) {\n                this._jsPlumb.overlays[i].show();\n            }\n        },\n        removeAllOverlays: function (doNotRepaint) {\n            for (var i in this._jsPlumb.overlays) {\n                if (this._jsPlumb.overlays[i].cleanup) {\n                    this._jsPlumb.overlays[i].cleanup();\n                }\n            }\n\n            this._jsPlumb.overlays = {};\n            this._jsPlumb.overlayPositions = null;\n            if (!doNotRepaint) {\n                this.repaint();\n            }\n        },\n        removeOverlay: function (overlayId, dontCleanup) {\n            var o = this._jsPlumb.overlays[overlayId];\n            if (o) {\n                o.setVisible(false);\n                if (!dontCleanup && o.cleanup) {\n                    o.cleanup();\n                }\n                delete this._jsPlumb.overlays[overlayId];\n                if (this._jsPlumb.overlayPositions) {\n                    delete this._jsPlumb.overlayPositions[overlayId];\n                }\n            }\n        },\n        removeOverlays: function () {\n            for (var i = 0, j = arguments.length; i < j; i++) {\n                this.removeOverlay(arguments[i]);\n            }\n        },\n        moveParent: function (newParent) {\n            if (this.bgCanvas) {\n                this.bgCanvas.parentNode.removeChild(this.bgCanvas);\n                newParent.appendChild(this.bgCanvas);\n            }\n\n            if (this.canvas && this.canvas.parentNode) {\n                this.canvas.parentNode.removeChild(this.canvas);\n                newParent.appendChild(this.canvas);\n\n                for (var i in this._jsPlumb.overlays) {\n                    if (this._jsPlumb.overlays[i].isAppendedAtTopLevel) {\n                        var el = this._jsPlumb.overlays[i].getElement();\n                        el.parentNode.removeChild(el);\n                        newParent.appendChild(el);\n                    }\n                }\n            }\n        },\n        getLabel: function () {\n            var lo = this.getOverlay(_internalLabelOverlayId);\n            return lo != null ? lo.getLabel() : null;\n        },\n        getLabelOverlay: function () {\n            return this.getOverlay(_internalLabelOverlayId);\n        },\n        setLabel: function (l) {\n            var lo = this.getOverlay(_internalLabelOverlayId);\n            if (!lo) {\n                var params = l.constructor === String || l.constructor === Function ? { label: l } : l;\n                lo = _makeLabelOverlay(this, params);\n                this._jsPlumb.overlays[_internalLabelOverlayId] = lo;\n            }\n            else {\n                if (l.constructor === String || l.constructor === Function) {\n                    lo.setLabel(l);\n                }\n                else {\n                    if (l.label) {\n                        lo.setLabel(l.label);\n                    }\n                    if (l.location) {\n                        lo.setLocation(l.location);\n                    }\n                }\n            }\n\n            if (!this._jsPlumb.instance.isSuspendDrawing()) {\n                this.repaint();\n            }\n        },\n        cleanup: function (force) {\n            for (var i in this._jsPlumb.overlays) {\n                this._jsPlumb.overlays[i].cleanup(force);\n                this._jsPlumb.overlays[i].destroy(force);\n            }\n            if (force) {\n                this._jsPlumb.overlays = {};\n                this._jsPlumb.overlayPositions = null;\n            }\n        },\n        setVisible: function (v) {\n            this[v ? \"showOverlays\" : \"hideOverlays\"]();\n        },\n        setAbsoluteOverlayPosition: function (overlay, xy) {\n            this._jsPlumb.overlayPositions[overlay.id] = xy;\n        },\n        getAbsoluteOverlayPosition: function (overlay) {\n            return this._jsPlumb.overlayPositions ? this._jsPlumb.overlayPositions[overlay.id] : null;\n        },\n        _clazzManip:function(action, clazz, dontUpdateOverlays) {\n            if (!dontUpdateOverlays) {\n                for (var i in this._jsPlumb.overlays) {\n                    this._jsPlumb.overlays[i][action + \"Class\"](clazz);\n                }\n            }\n        },\n        addClass:function(clazz, dontUpdateOverlays) {\n            this._clazzManip(\"add\", clazz, dontUpdateOverlays);\n        },\n        removeClass:function(clazz, dontUpdateOverlays) {\n            this._clazzManip(\"remove\", clazz, dontUpdateOverlays);\n        }\n    });\n\n// ------------------------------ END OverlayCapablejsPlumbUIComponent --------------------------------------------\n\n}).call(typeof window !== 'undefined' ? window : this);\n\n/*\n * This file contains the code for Endpoints.\n *\n * Copyright (c) 2010 - 2018 jsPlumb (hello@jsplumbtoolkit.com)\n * \n * https://jsplumbtoolkit.com\n * https://github.com/jsplumb/jsplumb\n * \n * Dual licensed under the MIT and GPL2 licenses.\n */\n;(function () {\n\n    \"use strict\";\n    var root = this, _jp = root.jsPlumb, _ju = root.jsPlumbUtil;\n\n    // create the drag handler for a connection\n    var _makeConnectionDragHandler = function (endpoint, placeholder, _jsPlumb) {\n        var stopped = false;\n        return {\n            drag: function () {\n                if (stopped) {\n                    stopped = false;\n                    return true;\n                }\n\n                if (placeholder.element) {\n                    var _ui = _jsPlumb.getUIPosition(arguments, _jsPlumb.getZoom());\n                    if (_ui != null) {\n                        _jsPlumb.setPosition(placeholder.element, _ui);\n                    }\n                    _jsPlumb.repaint(placeholder.element, _ui);\n                    // always repaint the source endpoint, because only continuous/dynamic anchors cause the endpoint\n                    // to be repainted, so static anchors need to be told (or the endpoint gets dragged around)\n                    endpoint.paint({anchorPoint:endpoint.anchor.getCurrentLocation({element:endpoint})});\n                }\n            },\n            stopDrag: function () {\n                stopped = true;\n            }\n        };\n    };\n\n    // creates a placeholder div for dragging purposes, adds it, and pre-computes its offset.\n    var _makeDraggablePlaceholder = function (placeholder, _jsPlumb, ipco, ips) {\n        var n = _jsPlumb.createElement(\"div\", { position : \"absolute\" });\n        _jsPlumb.appendElement(n);\n        var id = _jsPlumb.getId(n);\n        _jsPlumb.setPosition(n, ipco);\n        n.style.width = ips[0] + \"px\";\n        n.style.height = ips[1] + \"px\";\n        _jsPlumb.manage(id, n, true); // TRANSIENT MANAGE\n        // create and assign an id, and initialize the offset.\n        placeholder.id = id;\n        placeholder.element = n;\n    };\n\n    // create a floating endpoint (for drag connections)\n    var _makeFloatingEndpoint = function (paintStyle, referenceAnchor, endpoint, referenceCanvas, sourceElement, _jsPlumb, _newEndpoint, scope) {\n        var floatingAnchor = new _jp.FloatingAnchor({ reference: referenceAnchor, referenceCanvas: referenceCanvas, jsPlumbInstance: _jsPlumb });\n        //setting the scope here should not be the way to fix that mootools issue.  it should be fixed by not\n        // adding the floating endpoint as a droppable.  that makes more sense anyway!\n        // TRANSIENT MANAGE\n        return _newEndpoint({\n            paintStyle: paintStyle,\n            endpoint: endpoint,\n            anchor: floatingAnchor,\n            source: sourceElement,\n            scope: scope\n        });\n    };\n\n    var typeParameters = [ \"connectorStyle\", \"connectorHoverStyle\", \"connectorOverlays\",\n        \"connector\", \"connectionType\", \"connectorClass\", \"connectorHoverClass\" ];\n\n    // a helper function that tries to find a connection to the given element, and returns it if so. if elementWithPrecedence is null,\n    // or no connection to it is found, we return the first connection in our list.\n    var findConnectionToUseForDynamicAnchor = function (ep, elementWithPrecedence) {\n        var idx = 0;\n        if (elementWithPrecedence != null) {\n            for (var i = 0; i < ep.connections.length; i++) {\n                if (ep.connections[i].sourceId === elementWithPrecedence || ep.connections[i].targetId === elementWithPrecedence) {\n                    idx = i;\n                    break;\n                }\n            }\n        }\n\n        return ep.connections[idx];\n    };\n\n    _jp.Endpoint = function (params) {\n        var _jsPlumb = params._jsPlumb,\n            _newConnection = params.newConnection,\n            _newEndpoint = params.newEndpoint;\n\n        this.idPrefix = \"_jsplumb_e_\";\n        this.defaultLabelLocation = [ 0.5, 0.5 ];\n        this.defaultOverlayKeys = [\"Overlays\", \"EndpointOverlays\"];\n        _jp.OverlayCapableJsPlumbUIComponent.apply(this, arguments);\n\n// TYPE\n\n        this.appendToDefaultType({\n            connectionType:params.connectionType,\n            maxConnections: params.maxConnections == null ? this._jsPlumb.instance.Defaults.MaxConnections : params.maxConnections, // maximum number of connections this endpoint can be the source of.,\n            paintStyle: params.endpointStyle || params.paintStyle || params.style || this._jsPlumb.instance.Defaults.EndpointStyle || _jp.Defaults.EndpointStyle,\n            hoverPaintStyle: params.endpointHoverStyle || params.hoverPaintStyle || this._jsPlumb.instance.Defaults.EndpointHoverStyle || _jp.Defaults.EndpointHoverStyle,\n            connectorStyle: params.connectorStyle,\n            connectorHoverStyle: params.connectorHoverStyle,\n            connectorClass: params.connectorClass,\n            connectorHoverClass: params.connectorHoverClass,\n            connectorOverlays: params.connectorOverlays,\n            connector: params.connector,\n            connectorTooltip: params.connectorTooltip\n        });\n\n// END TYPE\n\n        this._jsPlumb.enabled = !(params.enabled === false);\n        this._jsPlumb.visible = true;\n        this.element = _jp.getElement(params.source);\n        this._jsPlumb.uuid = params.uuid;\n        this._jsPlumb.floatingEndpoint = null;\n        var inPlaceCopy = null;\n        if (this._jsPlumb.uuid) {\n            params.endpointsByUUID[this._jsPlumb.uuid] = this;\n        }\n        this.elementId = params.elementId;\n        this.dragProxy = params.dragProxy;\n\n        this._jsPlumb.connectionCost = params.connectionCost;\n        this._jsPlumb.connectionsDirected = params.connectionsDirected;\n        this._jsPlumb.currentAnchorClass = \"\";\n        this._jsPlumb.events = {};\n\n        var deleteOnEmpty = params.deleteOnEmpty === true;\n        this.setDeleteOnEmpty = function(d) {\n            deleteOnEmpty = d;\n        };\n\n        var _updateAnchorClass = function () {\n            // stash old, get new\n            var oldAnchorClass = _jsPlumb.endpointAnchorClassPrefix + \"-\" + this._jsPlumb.currentAnchorClass;\n            this._jsPlumb.currentAnchorClass = this.anchor.getCssClass();\n            var anchorClass = _jsPlumb.endpointAnchorClassPrefix + (this._jsPlumb.currentAnchorClass ? \"-\" + this._jsPlumb.currentAnchorClass : \"\");\n\n            this.removeClass(oldAnchorClass);\n            this.addClass(anchorClass);\n            // add and remove at the same time to reduce the number of reflows.\n            _jp.updateClasses(this.element, anchorClass, oldAnchorClass);\n        }.bind(this);\n\n        this.prepareAnchor = function(anchorParams) {\n            var a = this._jsPlumb.instance.makeAnchor(anchorParams, this.elementId, _jsPlumb);\n            a.bind(\"anchorChanged\", function (currentAnchor) {\n                this.fire(\"anchorChanged\", {endpoint: this, anchor: currentAnchor});\n                _updateAnchorClass();\n            }.bind(this));\n            return a;\n        };\n\n        this.setPreparedAnchor = function(anchor, doNotRepaint) {\n            this._jsPlumb.instance.continuousAnchorFactory.clear(this.elementId);\n            this.anchor = anchor;\n            _updateAnchorClass();\n\n            if (!doNotRepaint) {\n                this._jsPlumb.instance.repaint(this.elementId);\n            }\n\n            return this;\n        };\n\n        this.setAnchor = function (anchorParams, doNotRepaint) {\n            var a = this.prepareAnchor(anchorParams);\n            this.setPreparedAnchor(a, doNotRepaint);\n            return this;\n        };\n\n        var internalHover = function (state) {\n            if (this.connections.length > 0) {\n                for (var i = 0; i < this.connections.length; i++) {\n                    this.connections[i].setHover(state, false);\n                }\n            }\n            else {\n                this.setHover(state);\n            }\n        }.bind(this);\n\n        this.bind(\"mouseover\", function () {\n            internalHover(true);\n        });\n        this.bind(\"mouseout\", function () {\n            internalHover(false);\n        });\n\n        // ANCHOR MANAGER\n        if (!params._transient) { // in place copies, for example, are transient.  they will never need to be retrieved during a paint cycle, because they dont move, and then they are deleted.\n            this._jsPlumb.instance.anchorManager.add(this, this.elementId);\n        }\n\n        this.prepareEndpoint = function(ep, typeId) {\n            var _e = function (t, p) {\n                var rm = _jsPlumb.getRenderMode();\n                if (_jp.Endpoints[rm][t]) {\n                    return new _jp.Endpoints[rm][t](p);\n                }\n                if (!_jsPlumb.Defaults.DoNotThrowErrors) {\n                    throw { msg: \"jsPlumb: unknown endpoint type '\" + t + \"'\" };\n                }\n            };\n\n            var endpointArgs = {\n                _jsPlumb: this._jsPlumb.instance,\n                cssClass: params.cssClass,\n                container: params.container,\n                tooltip: params.tooltip,\n                connectorTooltip: params.connectorTooltip,\n                endpoint: this\n            };\n\n            var endpoint;\n\n            if (_ju.isString(ep)) {\n                endpoint = _e(ep, endpointArgs);\n            }\n            else if (_ju.isArray(ep)) {\n                endpointArgs = _ju.merge(ep[1], endpointArgs);\n                endpoint = _e(ep[0], endpointArgs);\n            }\n            else {\n                endpoint = ep.clone();\n            }\n\n            // assign a clone function using a copy of endpointArgs. this is used when a drag starts: the endpoint that was dragged is cloned,\n            // and the clone is left in its place while the original one goes off on a magical journey.\n            // the copy is to get around a closure problem, in which endpointArgs ends up getting shared by\n            // the whole world.\n            //var argsForClone = jsPlumb.extend({}, endpointArgs);\n            endpoint.clone = function () {\n                // TODO this, and the code above, can be refactored to be more dry.\n                if (_ju.isString(ep)) {\n                    return _e(ep, endpointArgs);\n                }\n                else if (_ju.isArray(ep)) {\n                    endpointArgs = _ju.merge(ep[1], endpointArgs);\n                    return _e(ep[0], endpointArgs);\n                }\n            }.bind(this);\n\n            endpoint.typeId = typeId;\n            return endpoint;\n        };\n\n        this.setEndpoint = function(ep, doNotRepaint) {\n            var _ep = this.prepareEndpoint(ep);\n            this.setPreparedEndpoint(_ep, true);\n        };\n\n        this.setPreparedEndpoint = function (ep, doNotRepaint) {\n            if (this.endpoint != null) {\n                this.endpoint.cleanup();\n                this.endpoint.destroy();\n            }\n            this.endpoint = ep;\n            this.type = this.endpoint.type;\n            this.canvas = this.endpoint.canvas;\n        };\n\n        _jp.extend(this, params, typeParameters);\n\n        this.isSource = params.isSource || false;\n        this.isTemporarySource = params.isTemporarySource || false;\n        this.isTarget = params.isTarget || false;\n\n        this.connections = params.connections || [];\n        this.connectorPointerEvents = params[\"connector-pointer-events\"];\n\n        this.scope = params.scope || _jsPlumb.getDefaultScope();\n        this.timestamp = null;\n        this.reattachConnections = params.reattach || _jsPlumb.Defaults.ReattachConnections;\n        this.connectionsDetachable = _jsPlumb.Defaults.ConnectionsDetachable;\n        if (params.connectionsDetachable === false || params.detachable === false) {\n            this.connectionsDetachable = false;\n        }\n        this.dragAllowedWhenFull = params.dragAllowedWhenFull !== false;\n\n        if (params.onMaxConnections) {\n            this.bind(\"maxConnections\", params.onMaxConnections);\n        }\n\n        //\n        // add a connection. not part of public API.\n        //\n        this.addConnection = function (connection) {\n            this.connections.push(connection);\n            this[(this.connections.length > 0 ? \"add\" : \"remove\") + \"Class\"](_jsPlumb.endpointConnectedClass);\n            this[(this.isFull() ? \"add\" : \"remove\") + \"Class\"](_jsPlumb.endpointFullClass);\n        };\n\n        this.detachFromConnection = function (connection, idx, doNotCleanup) {\n            idx = idx == null ? this.connections.indexOf(connection) : idx;\n            if (idx >= 0) {\n                this.connections.splice(idx, 1);\n                this[(this.connections.length > 0 ? \"add\" : \"remove\") + \"Class\"](_jsPlumb.endpointConnectedClass);\n                this[(this.isFull() ? \"add\" : \"remove\") + \"Class\"](_jsPlumb.endpointFullClass);\n            }\n\n            if (!doNotCleanup && deleteOnEmpty && this.connections.length === 0) {\n                _jsPlumb.deleteObject({\n                    endpoint: this,\n                    fireEvent: false,\n                    deleteAttachedObjects: doNotCleanup !== true\n                });\n            }\n        };\n\n        this.deleteEveryConnection = function(params) {\n            var c = this.connections.length;\n            for (var i = 0; i < c; i++) {\n                _jsPlumb.deleteConnection(this.connections[0], params);\n            }\n        };\n\n        this.detachFrom = function (targetEndpoint, fireEvent, originalEvent) {\n            var c = [];\n            for (var i = 0; i < this.connections.length; i++) {\n                if (this.connections[i].endpoints[1] === targetEndpoint || this.connections[i].endpoints[0] === targetEndpoint) {\n                    c.push(this.connections[i]);\n                }\n            }\n            for (var j = 0, count = c.length; j < count; j++) {\n                _jsPlumb.deleteConnection(c[0]);\n            }\n            return this;\n        };\n\n        this.getElement = function () {\n            return this.element;\n        };\n\n        this.setElement = function (el) {\n            var parentId = this._jsPlumb.instance.getId(el),\n                curId = this.elementId;\n            // remove the endpoint from the list for the current endpoint's element\n            _ju.removeWithFunction(params.endpointsByElement[this.elementId], function (e) {\n                return e.id === this.id;\n            }.bind(this));\n            this.element = _jp.getElement(el);\n            this.elementId = _jsPlumb.getId(this.element);\n            _jsPlumb.anchorManager.rehomeEndpoint(this, curId, this.element);\n            _jsPlumb.dragManager.endpointAdded(this.element);\n            _ju.addToList(params.endpointsByElement, parentId, this);\n            return this;\n        };\n\n        /**\n         * private but must be exposed.\n         */\n        this.makeInPlaceCopy = function () {\n            var loc = this.anchor.getCurrentLocation({element: this}),\n                o = this.anchor.getOrientation(this),\n                acc = this.anchor.getCssClass(),\n                inPlaceAnchor = {\n                    bind: function () {\n                    },\n                    compute: function () {\n                        return [ loc[0], loc[1] ];\n                    },\n                    getCurrentLocation: function () {\n                        return [ loc[0], loc[1] ];\n                    },\n                    getOrientation: function () {\n                        return o;\n                    },\n                    getCssClass: function () {\n                        return acc;\n                    }\n                };\n\n            return _newEndpoint({\n                dropOptions: params.dropOptions,\n                anchor: inPlaceAnchor,\n                source: this.element,\n                paintStyle: this.getPaintStyle(),\n                endpoint: params.hideOnDrag ? \"Blank\" : this.endpoint,\n                _transient: true,\n                scope: this.scope,\n                reference:this\n            });\n        };\n\n        /**\n         * returns a connection from the pool; used when dragging starts.  just gets the head of the array if it can.\n         */\n        this.connectorSelector = function () {\n            return this.connections[0];\n        };\n\n        this.setStyle = this.setPaintStyle;\n\n        this.paint = function (params) {\n            params = params || {};\n            var timestamp = params.timestamp, recalc = !(params.recalc === false);\n            if (!timestamp || this.timestamp !== timestamp) {\n\n                var info = _jsPlumb.updateOffset({ elId: this.elementId, timestamp: timestamp });\n\n                var xy = params.offset ? params.offset.o : info.o;\n                if (xy != null) {\n                    var ap = params.anchorPoint, connectorPaintStyle = params.connectorPaintStyle;\n                    if (ap == null) {\n                        var wh = params.dimensions || info.s,\n                            anchorParams = { xy: [ xy.left, xy.top ], wh: wh, element: this, timestamp: timestamp };\n                        if (recalc && this.anchor.isDynamic && this.connections.length > 0) {\n                            var c = findConnectionToUseForDynamicAnchor(this, params.elementWithPrecedence),\n                                oIdx = c.endpoints[0] === this ? 1 : 0,\n                                oId = oIdx === 0 ? c.sourceId : c.targetId,\n                                oInfo = _jsPlumb.getCachedData(oId),\n                                oOffset = oInfo.o, oWH = oInfo.s;\n\n                            anchorParams.index = oIdx === 0 ? 1 : 0;\n                            anchorParams.connection = c;\n                            anchorParams.txy = [ oOffset.left, oOffset.top ];\n                            anchorParams.twh = oWH;\n                            anchorParams.tElement = c.endpoints[oIdx];\n                        } else if (this.connections.length > 0) {\n                            anchorParams.connection = this.connections[0];\n                        }\n                        ap = this.anchor.compute(anchorParams);\n                    }\n\n                    this.endpoint.compute(ap, this.anchor.getOrientation(this), this._jsPlumb.paintStyleInUse, connectorPaintStyle || this.paintStyleInUse);\n                    this.endpoint.paint(this._jsPlumb.paintStyleInUse, this.anchor);\n                    this.timestamp = timestamp;\n\n                    // paint overlays\n                    for (var i in this._jsPlumb.overlays) {\n                        if (this._jsPlumb.overlays.hasOwnProperty(i)) {\n                            var o = this._jsPlumb.overlays[i];\n                            if (o.isVisible()) {\n                                this._jsPlumb.overlayPlacements[i] = o.draw(this.endpoint, this._jsPlumb.paintStyleInUse);\n                                o.paint(this._jsPlumb.overlayPlacements[i]);\n                            }\n                        }\n                    }\n                }\n            }\n        };\n\n        this.getTypeDescriptor = function () {\n            return \"endpoint\";\n        };\n        this.isVisible = function () {\n            return this._jsPlumb.visible;\n        };\n\n        this.repaint = this.paint;\n\n        var draggingInitialised = false;\n        this.initDraggable = function () {\n\n            // is this a connection source? we make it draggable and have the\n            // drag listener maintain a connection with a floating endpoint.\n            if (!draggingInitialised && _jp.isDragSupported(this.element)) {\n                var placeholderInfo = { id: null, element: null },\n                    jpc = null,\n                    existingJpc = false,\n                    existingJpcParams = null,\n                    _dragHandler = _makeConnectionDragHandler(this, placeholderInfo, _jsPlumb),\n                    dragOptions = params.dragOptions || {},\n                    defaultOpts = {},\n                    startEvent = _jp.dragEvents.start,\n                    stopEvent = _jp.dragEvents.stop,\n                    dragEvent = _jp.dragEvents.drag,\n                    beforeStartEvent = _jp.dragEvents.beforeStart,\n                    payload;\n\n                // respond to beforeStart from katavorio; this will have, optionally, a payload of attribute values\n                // that were placed there by the makeSource mousedown listener.\n                var beforeStart = function(beforeStartParams) {\n                    payload = beforeStartParams.e.payload || {};\n                };\n\n                var start = function (startParams) {\n\n// -------------   first, get a connection to drag. this may be null, in which case we are dragging a new one.\n\n                    jpc = this.connectorSelector();\n\n// -------------------------------- now a bunch of tests about whether or not to proceed -------------------------\n\n                    var _continue = true;\n                    // if not enabled, return\n                    if (!this.isEnabled()) {\n                        _continue = false;\n                    }\n                    // if no connection and we're not a source - or temporarily a source, as is the case with makeSource - return.\n                    if (jpc == null && !this.isSource && !this.isTemporarySource) {\n                        _continue = false;\n                    }\n                    // otherwise if we're full and not allowed to drag, also return false.\n                    if (this.isSource && this.isFull() && !(jpc != null && this.dragAllowedWhenFull)) {\n                        _continue = false;\n                    }\n                    // if the connection was setup as not detachable or one of its endpoints\n                    // was setup as connectionsDetachable = false, or Defaults.ConnectionsDetachable\n                    // is set to false...\n                    if (jpc != null && !jpc.isDetachable(this)) {\n                        _continue = false;\n                    }\n\n                    var beforeDrag = _jsPlumb.checkCondition(jpc == null ? \"beforeDrag\" : \"beforeStartDetach\", {\n                        endpoint:this,\n                        source:this.element,\n                        sourceId:this.elementId,\n                        connection:jpc\n                    });\n                    if (beforeDrag === false) {\n                        _continue = false;\n                    }\n                    // else we might have been given some data. we'll pass it in to a new connection as 'data'.\n                    // here we also merge in the optional payload we were given on mousedown.\n                    else if (typeof beforeDrag === \"object\") {\n                        _jp.extend(beforeDrag, payload || {});\n                    }\n                    else {\n                        // or if no beforeDrag data, maybe use the payload on its own.\n                        beforeDrag = payload || {};\n                    }\n\n                    if (_continue === false) {\n                        // this is for mootools and yui. returning false from this causes jquery to stop drag.\n                        // the events are wrapped in both mootools and yui anyway, but i don't think returning\n                        // false from the start callback would stop a drag.\n                        if (_jsPlumb.stopDrag) {\n                            _jsPlumb.stopDrag(this.canvas);\n                        }\n                        _dragHandler.stopDrag();\n                        return false;\n                    }\n\n// ---------------------------------------------------------------------------------------------------------------------\n\n                    // ok to proceed.\n\n                    // clear hover for all connections for this endpoint before continuing.\n                    for (var i = 0; i < this.connections.length; i++) {\n                        this.connections[i].setHover(false);\n                    }\n\n                    this.addClass(\"endpointDrag\");\n                    _jsPlumb.setConnectionBeingDragged(true);\n\n                    // if we're not full but there was a connection, make it null. we'll create a new one.\n                    if (jpc && !this.isFull() && this.isSource) {\n                        jpc = null;\n                    }\n\n                    _jsPlumb.updateOffset({ elId: this.elementId });\n\n// ----------------    make the element we will drag around, and position it -----------------------------\n\n                    var ipco = this._jsPlumb.instance.getOffset(this.canvas),\n                        canvasElement = this.canvas,\n                        ips = this._jsPlumb.instance.getSize(this.canvas);\n\n                    _makeDraggablePlaceholder(placeholderInfo, _jsPlumb, ipco, ips);\n\n                    // store the id of the dragging div and the source element. the drop function will pick these up.                   \n                    _jsPlumb.setAttributes(this.canvas, {\n                        \"dragId\": placeholderInfo.id,\n                        \"elId\": this.elementId\n                    });\n\n// ------------------- create an endpoint that will be our floating endpoint ------------------------------------\n\n                    var endpointToFloat = this.dragProxy || this.endpoint;\n                    if (this.dragProxy == null && this.connectionType != null) {\n                        var aae = this._jsPlumb.instance.deriveEndpointAndAnchorSpec(this.connectionType);\n                        if (aae.endpoints[1]) {\n                            endpointToFloat = aae.endpoints[1];\n                        }\n                    }\n                    var centerAnchor = this._jsPlumb.instance.makeAnchor(\"Center\");\n                    centerAnchor.isFloating = true;\n                    this._jsPlumb.floatingEndpoint = _makeFloatingEndpoint(this.getPaintStyle(), centerAnchor, endpointToFloat, this.canvas, placeholderInfo.element, _jsPlumb, _newEndpoint, this.scope);\n                    var _savedAnchor = this._jsPlumb.floatingEndpoint.anchor;\n\n\n                    if (jpc == null) {\n\n                        this.setHover(false, false);\n                        // create a connection. one end is this endpoint, the other is a floating endpoint.                    \n                        jpc = _newConnection({\n                            sourceEndpoint: this,\n                            targetEndpoint: this._jsPlumb.floatingEndpoint,\n                            source: this.element,  // for makeSource with parent option.  ensure source element is represented correctly.\n                            target: placeholderInfo.element,\n                            anchors: [ this.anchor, this._jsPlumb.floatingEndpoint.anchor ],\n                            paintStyle: params.connectorStyle, // this can be null. Connection will use the default.\n                            hoverPaintStyle: params.connectorHoverStyle,\n                            connector: params.connector, // this can also be null. Connection will use the default.\n                            overlays: params.connectorOverlays,\n                            type: this.connectionType,\n                            cssClass: this.connectorClass,\n                            hoverClass: this.connectorHoverClass,\n                            scope:params.scope,\n                            data:beforeDrag\n                        });\n                        jpc.pending = true;\n                        jpc.addClass(_jsPlumb.draggingClass);\n                        this._jsPlumb.floatingEndpoint.addClass(_jsPlumb.draggingClass);\n                        this._jsPlumb.floatingEndpoint.anchor = _savedAnchor;\n                        // fire an event that informs that a connection is being dragged\n                        _jsPlumb.fire(\"connectionDrag\", jpc);\n\n                        // register the new connection on the drag manager. This connection, at this point, is 'pending',\n                        // and has as its target a temporary element (the 'placeholder'). If the connection subsequently\n                        // becomes established, the anchor manager is informed that the target of the connection has\n                        // changed.\n\n                        _jsPlumb.anchorManager.newConnection(jpc);\n\n                    } else {\n                        existingJpc = true;\n                        jpc.setHover(false);\n                        // new anchor idx\n                        var anchorIdx = jpc.endpoints[0].id === this.id ? 0 : 1;\n                        this.detachFromConnection(jpc, null, true);                         // detach from the connection while dragging is occurring. but dont cleanup automatically.\n\n                        // store the original scope (issue 57)\n                        var dragScope = _jsPlumb.getDragScope(canvasElement);\n                        _jsPlumb.setAttribute(this.canvas, \"originalScope\", dragScope);\n\n                        // fire an event that informs that a connection is being dragged. we do this before\n                        // replacing the original target with the floating element info.\n                        _jsPlumb.fire(\"connectionDrag\", jpc);\n\n                        // now we replace ourselves with the temporary div we created above:\n                        if (anchorIdx === 0) {\n                            existingJpcParams = [ jpc.source, jpc.sourceId, canvasElement, dragScope ];\n                            _jsPlumb.anchorManager.sourceChanged(jpc.endpoints[anchorIdx].elementId, placeholderInfo.id, jpc, placeholderInfo.element);\n\n                        } else {\n                            existingJpcParams = [ jpc.target, jpc.targetId, canvasElement, dragScope ];\n                            jpc.target = placeholderInfo.element;\n                            jpc.targetId = placeholderInfo.id;\n\n                            _jsPlumb.anchorManager.updateOtherEndpoint(jpc.sourceId, jpc.endpoints[anchorIdx].elementId, jpc.targetId, jpc);\n                        }\n\n                        // store the original endpoint and assign the new floating endpoint for the drag.\n                        jpc.suspendedEndpoint = jpc.endpoints[anchorIdx];\n\n                        // PROVIDE THE SUSPENDED ELEMENT, BE IT A SOURCE OR TARGET (ISSUE 39)\n                        jpc.suspendedElement = jpc.endpoints[anchorIdx].getElement();\n                        jpc.suspendedElementId = jpc.endpoints[anchorIdx].elementId;\n                        jpc.suspendedElementType = anchorIdx === 0 ? \"source\" : \"target\";\n\n                        jpc.suspendedEndpoint.setHover(false);\n                        this._jsPlumb.floatingEndpoint.referenceEndpoint = jpc.suspendedEndpoint;\n                        jpc.endpoints[anchorIdx] = this._jsPlumb.floatingEndpoint;\n\n                        jpc.addClass(_jsPlumb.draggingClass);\n                        this._jsPlumb.floatingEndpoint.addClass(_jsPlumb.draggingClass);\n                    }\n\n                    _jsPlumb.registerFloatingConnection(placeholderInfo, jpc, this._jsPlumb.floatingEndpoint);\n\n                    // // register it and register connection on it.\n                    // _jsPlumb.floatingConnections[placeholderInfo.id] = jpc;\n                    //\n                    // // only register for the target endpoint; we will not be dragging the source at any time\n                    // // before this connection is either discarded or made into a permanent connection.\n                    // _ju.addToList(params.endpointsByElement, placeholderInfo.id, this._jsPlumb.floatingEndpoint);\n\n\n                    // tell jsplumb about it\n                    _jsPlumb.currentlyDragging = true;\n                }.bind(this);\n\n                var stop = function () {\n                    _jsPlumb.setConnectionBeingDragged(false);\n\n                    if (jpc && jpc.endpoints != null) {\n                        // get the actual drop event (decode from library args to stop function)\n                        var originalEvent = _jsPlumb.getDropEvent(arguments);\n                        // unlock the other endpoint (if it is dynamic, it would have been locked at drag start)\n                        var idx = _jsPlumb.getFloatingAnchorIndex(jpc);\n                        jpc.endpoints[idx === 0 ? 1 : 0].anchor.unlock();\n                        // TODO: Dont want to know about css classes inside jsplumb, ideally.\n                        jpc.removeClass(_jsPlumb.draggingClass);\n\n                        // if we have the floating endpoint then the connection has not been dropped\n                        // on another endpoint.  If it is a new connection we throw it away. If it is an\n                        // existing connection we check to see if we should reattach it, throwing it away\n                        // if not.\n                        if (this._jsPlumb && (jpc.deleteConnectionNow || jpc.endpoints[idx] === this._jsPlumb.floatingEndpoint)) {\n                            // 6a. if the connection was an existing one...\n                            if (existingJpc && jpc.suspendedEndpoint) {\n                                // fix for issue35, thanks Sylvain Gizard: when firing the detach event make sure the\n                                // floating endpoint has been replaced.\n                                if (idx === 0) {\n                                    jpc.floatingElement = jpc.source;\n                                    jpc.floatingId = jpc.sourceId;\n                                    jpc.floatingEndpoint = jpc.endpoints[0];\n                                    jpc.floatingIndex = 0;\n                                    jpc.source = existingJpcParams[0];\n                                    jpc.sourceId = existingJpcParams[1];\n                                } else {\n                                    // keep a copy of the floating element; the anchor manager will want to clean up.\n                                    jpc.floatingElement = jpc.target;\n                                    jpc.floatingId = jpc.targetId;\n                                    jpc.floatingEndpoint = jpc.endpoints[1];\n                                    jpc.floatingIndex = 1;\n                                    jpc.target = existingJpcParams[0];\n                                    jpc.targetId = existingJpcParams[1];\n                                }\n\n                                var fe = this._jsPlumb.floatingEndpoint; // store for later removal.\n                                // restore the original scope (issue 57)\n                                _jsPlumb.setDragScope(existingJpcParams[2], existingJpcParams[3]);\n                                jpc.endpoints[idx] = jpc.suspendedEndpoint;\n                                // if the connection should be reattached, or the other endpoint refuses detach, then\n                                // reset the connection to its original state\n                                if (jpc.isReattach() || jpc._forceReattach || jpc._forceDetach || !_jsPlumb.deleteConnection(jpc, {originalEvent: originalEvent})) {\n\n                                    jpc.setHover(false);\n                                    jpc._forceDetach = null;\n                                    jpc._forceReattach = null;\n                                    this._jsPlumb.floatingEndpoint.detachFromConnection(jpc);\n                                    jpc.suspendedEndpoint.addConnection(jpc);\n\n                                    // TODO this code is duplicated in lots of places...and there is nothing external\n                                    // in the code; it all refers to the connection itself. we could add a\n                                    // `checkSanity(connection)` method to anchorManager that did this.\n                                    if (idx === 1) {\n                                        _jsPlumb.anchorManager.updateOtherEndpoint(jpc.sourceId, jpc.floatingId, jpc.targetId, jpc);\n                                    }\n                                    else {\n                                        _jsPlumb.anchorManager.sourceChanged(jpc.floatingId, jpc.sourceId, jpc, jpc.source);\n                                    }\n\n                                    _jsPlumb.repaint(existingJpcParams[1]);\n                                }\n                                else {\n                                    _jsPlumb.deleteObject({endpoint: fe});\n                                }\n                            }\n                        }\n\n                        // makeTargets sets this flag, to tell us we have been replaced and should delete this object.\n                        if (this.deleteAfterDragStop) {\n                            _jsPlumb.deleteObject({endpoint: this});\n                        }\n                        else {\n                            if (this._jsPlumb) {\n                                 this.paint({recalc: false});\n                            }\n                        }\n\n                        // although the connection is no longer valid, there are use cases where this is useful.\n                        _jsPlumb.fire(\"connectionDragStop\", jpc, originalEvent);\n                        // fire this event to give people more fine-grained control (connectionDragStop fires a lot)\n                        if (jpc.pending) {\n                            _jsPlumb.fire(\"connectionAborted\", jpc, originalEvent);\n                        }\n                        // tell jsplumb that dragging is finished.\n                        _jsPlumb.currentlyDragging = false;\n                        jpc.suspendedElement = null;\n                        jpc.suspendedEndpoint = null;\n                        jpc = null;\n                    }\n\n                    // if no endpoints, jpc already cleaned up. but still we want to ensure we're reset properly.\n                    // remove the element associated with the floating endpoint\n                    // (and its associated floating endpoint and visual artefacts)\n                    if (placeholderInfo && placeholderInfo.element) {\n                        _jsPlumb.remove(placeholderInfo.element, false, false);\n                    }\n                    // remove the inplace copy\n                    if (inPlaceCopy) {\n                        _jsPlumb.deleteObject({endpoint: inPlaceCopy});\n                    }\n\n                    if (this._jsPlumb) {\n                        // make our canvas visible (TODO: hand off to library; we should not know about DOM)\n                        this.canvas.style.visibility = \"visible\";\n                        // unlock our anchor\n                        this.anchor.unlock();\n                        // clear floating anchor.\n                        this._jsPlumb.floatingEndpoint = null;\n                    }\n\n                }.bind(this);\n\n                dragOptions = _jp.extend(defaultOpts, dragOptions);\n                dragOptions.scope = this.scope || dragOptions.scope;\n                dragOptions[beforeStartEvent] = _ju.wrap(dragOptions[beforeStartEvent], beforeStart, false);\n                dragOptions[startEvent] = _ju.wrap(dragOptions[startEvent], start, false);\n                // extracted drag handler function so can be used by makeSource\n                dragOptions[dragEvent] = _ju.wrap(dragOptions[dragEvent], _dragHandler.drag);\n                dragOptions[stopEvent] = _ju.wrap(dragOptions[stopEvent], stop);\n                dragOptions.multipleDrop = false;\n\n                dragOptions.canDrag = function () {\n                    return this.isSource || this.isTemporarySource || /*(this.isTarget && */this.connections.length > 0/*)*/;\n                }.bind(this);\n\n                _jsPlumb.initDraggable(this.canvas, dragOptions, \"internal\");\n\n                this.canvas._jsPlumbRelatedElement = this.element;\n\n                draggingInitialised = true;\n            }\n        };\n\n        var ep = params.endpoint || this._jsPlumb.instance.Defaults.Endpoint || _jp.Defaults.Endpoint;\n        this.setEndpoint(ep, true);\n        var anchorParamsToUse = params.anchor ? params.anchor : params.anchors ? params.anchors : (_jsPlumb.Defaults.Anchor || \"Top\");\n        this.setAnchor(anchorParamsToUse, true);\n\n        // finally, set type if it was provided\n        var type = [ \"default\", (params.type || \"\")].join(\" \");\n        this.addType(type, params.data, true);\n        this.canvas = this.endpoint.canvas;\n        this.canvas._jsPlumb = this;\n\n        this.initDraggable();\n\n        // pulled this out into a function so we can reuse it for the inPlaceCopy canvas; you can now drop detached connections\n        // back onto the endpoint you detached it from.\n        var _initDropTarget = function (canvas, isTransient, endpoint, referenceEndpoint) {\n\n            if (_jp.isDropSupported(this.element)) {\n                var dropOptions = params.dropOptions || _jsPlumb.Defaults.DropOptions || _jp.Defaults.DropOptions;\n                dropOptions = _jp.extend({}, dropOptions);\n                dropOptions.scope = dropOptions.scope || this.scope;\n                var dropEvent = _jp.dragEvents.drop,\n                    overEvent = _jp.dragEvents.over,\n                    outEvent = _jp.dragEvents.out,\n                    _ep = this,\n                    drop = _jsPlumb.EndpointDropHandler({\n                        getEndpoint: function () {\n                            return _ep;\n                        },\n                        jsPlumb: _jsPlumb,\n                        enabled: function () {\n                            return endpoint != null ? endpoint.isEnabled() : true;\n                        },\n                        isFull: function () {\n                            return endpoint.isFull();\n                        },\n                        element: this.element,\n                        elementId: this.elementId,\n                        isSource: this.isSource,\n                        isTarget: this.isTarget,\n                        addClass: function (clazz) {\n                            _ep.addClass(clazz);\n                        },\n                        removeClass: function (clazz) {\n                            _ep.removeClass(clazz);\n                        },\n                        isDropAllowed: function () {\n                            return _ep.isDropAllowed.apply(_ep, arguments);\n                        },\n                        reference:referenceEndpoint,\n                        isRedrop:function(jpc, dhParams) {\n                            return jpc.suspendedEndpoint && dhParams.reference && (jpc.suspendedEndpoint.id === dhParams.reference.id);\n                        }\n                    });\n\n                dropOptions[dropEvent] = _ju.wrap(dropOptions[dropEvent], drop, true);\n                dropOptions[overEvent] = _ju.wrap(dropOptions[overEvent], function () {\n                    var draggable = _jp.getDragObject(arguments),\n                        id = _jsPlumb.getAttribute(_jp.getElement(draggable), \"dragId\"),\n                        _jpc = _jsPlumb.getFloatingConnectionFor(id);//_jsPlumb.floatingConnections[id];\n\n                    if (_jpc != null) {\n                        var idx = _jsPlumb.getFloatingAnchorIndex(_jpc);\n                        // here we should fire the 'over' event if we are a target and this is a new connection,\n                        // or we are the same as the floating endpoint.\n                        var _cont = (this.isTarget && idx !== 0) || (_jpc.suspendedEndpoint && this.referenceEndpoint && this.referenceEndpoint.id === _jpc.suspendedEndpoint.id);\n                        if (_cont) {\n                            var bb = _jsPlumb.checkCondition(\"checkDropAllowed\", {\n                                sourceEndpoint: _jpc.endpoints[idx],\n                                targetEndpoint: this,\n                                connection: _jpc\n                            });\n                            this[(bb ? \"add\" : \"remove\") + \"Class\"](_jsPlumb.endpointDropAllowedClass);\n                            this[(bb ? \"remove\" : \"add\") + \"Class\"](_jsPlumb.endpointDropForbiddenClass);\n                            _jpc.endpoints[idx].anchor.over(this.anchor, this);\n                        }\n                    }\n                }.bind(this));\n\n                dropOptions[outEvent] = _ju.wrap(dropOptions[outEvent], function () {\n                    var draggable = _jp.getDragObject(arguments),\n                        id = draggable == null ? null : _jsPlumb.getAttribute(_jp.getElement(draggable), \"dragId\"),\n                        _jpc = id ? _jsPlumb.getFloatingConnectionFor(id) : null;\n\n                    if (_jpc != null) {\n                        var idx = _jsPlumb.getFloatingAnchorIndex(_jpc);\n                        var _cont = (this.isTarget && idx !== 0) || (_jpc.suspendedEndpoint && this.referenceEndpoint && this.referenceEndpoint.id === _jpc.suspendedEndpoint.id);\n                        if (_cont) {\n                            this.removeClass(_jsPlumb.endpointDropAllowedClass);\n                            this.removeClass(_jsPlumb.endpointDropForbiddenClass);\n                            _jpc.endpoints[idx].anchor.out();\n                        }\n                    }\n                }.bind(this));\n\n                _jsPlumb.initDroppable(canvas, dropOptions, \"internal\", isTransient);\n            }\n        }.bind(this);\n\n        // Initialise the endpoint's canvas as a drop target. The drop handler will take care of the logic of whether\n        // something can actually be dropped.\n        if (!this.anchor.isFloating) {\n            _initDropTarget(this.canvas, !(params._transient || this.anchor.isFloating), this, params.reference);\n        }\n\n        return this;\n    };\n\n    _ju.extend(_jp.Endpoint, _jp.OverlayCapableJsPlumbUIComponent, {\n\n        setVisible: function (v, doNotChangeConnections, doNotNotifyOtherEndpoint) {\n            this._jsPlumb.visible = v;\n            if (this.canvas) {\n                this.canvas.style.display = v ? \"block\" : \"none\";\n            }\n            this[v ? \"showOverlays\" : \"hideOverlays\"]();\n            if (!doNotChangeConnections) {\n                for (var i = 0; i < this.connections.length; i++) {\n                    this.connections[i].setVisible(v);\n                    if (!doNotNotifyOtherEndpoint) {\n                        var oIdx = this === this.connections[i].endpoints[0] ? 1 : 0;\n                        // only change the other endpoint if this is its only connection.\n                        if (this.connections[i].endpoints[oIdx].connections.length === 1) {\n                            this.connections[i].endpoints[oIdx].setVisible(v, true, true);\n                        }\n                    }\n                }\n            }\n        },\n        getAttachedElements: function () {\n            return this.connections;\n        },\n        applyType: function (t, doNotRepaint) {\n            this.setPaintStyle(t.endpointStyle || t.paintStyle, doNotRepaint);\n            this.setHoverPaintStyle(t.endpointHoverStyle || t.hoverPaintStyle, doNotRepaint);\n            if (t.maxConnections != null) {\n                this._jsPlumb.maxConnections = t.maxConnections;\n            }\n            if (t.scope) {\n                this.scope = t.scope;\n            }\n            _jp.extend(this, t, typeParameters);\n            if (t.cssClass != null && this.canvas) {\n                this._jsPlumb.instance.addClass(this.canvas, t.cssClass);\n            }\n            _jp.OverlayCapableJsPlumbUIComponent.applyType(this, t);\n        },\n        isEnabled: function () {\n            return this._jsPlumb.enabled;\n        },\n        setEnabled: function (e) {\n            this._jsPlumb.enabled = e;\n        },\n        cleanup: function () {\n            var anchorClass = this._jsPlumb.instance.endpointAnchorClassPrefix + (this._jsPlumb.currentAnchorClass ? \"-\" + this._jsPlumb.currentAnchorClass : \"\");\n            _jp.removeClass(this.element, anchorClass);\n            this.anchor = null;\n            this.endpoint.cleanup(true);\n            this.endpoint.destroy();\n            this.endpoint = null;\n            // drag/drop\n            this._jsPlumb.instance.destroyDraggable(this.canvas, \"internal\");\n            this._jsPlumb.instance.destroyDroppable(this.canvas, \"internal\");\n        },\n        setHover: function (h) {\n            if (this.endpoint && this._jsPlumb && !this._jsPlumb.instance.isConnectionBeingDragged()) {\n                this.endpoint.setHover(h);\n            }\n        },\n        isFull: function () {\n            return this._jsPlumb.maxConnections === 0 ? true : !(this.isFloating() || this._jsPlumb.maxConnections < 0 || this.connections.length < this._jsPlumb.maxConnections);\n        },\n        /**\n         * private but needs to be exposed.\n         */\n        isFloating: function () {\n            return this.anchor != null && this.anchor.isFloating;\n        },\n        isConnectedTo: function (endpoint) {\n            var found = false;\n            if (endpoint) {\n                for (var i = 0; i < this.connections.length; i++) {\n                    if (this.connections[i].endpoints[1] === endpoint || this.connections[i].endpoints[0] === endpoint) {\n                        found = true;\n                        break;\n                    }\n                }\n            }\n            return found;\n        },\n        getConnectionCost: function () {\n            return this._jsPlumb.connectionCost;\n        },\n        setConnectionCost: function (c) {\n            this._jsPlumb.connectionCost = c;\n        },\n        areConnectionsDirected: function () {\n            return this._jsPlumb.connectionsDirected;\n        },\n        setConnectionsDirected: function (b) {\n            this._jsPlumb.connectionsDirected = b;\n        },\n        setElementId: function (_elId) {\n            this.elementId = _elId;\n            this.anchor.elementId = _elId;\n        },\n        setReferenceElement: function (_el) {\n            this.element = _jp.getElement(_el);\n        },\n        setDragAllowedWhenFull: function (allowed) {\n            this.dragAllowedWhenFull = allowed;\n        },\n        equals: function (endpoint) {\n            return this.anchor.equals(endpoint.anchor);\n        },\n        getUuid: function () {\n            return this._jsPlumb.uuid;\n        },\n        computeAnchor: function (params) {\n            return this.anchor.compute(params);\n        }\n    });\n\n    root.jsPlumbInstance.prototype.EndpointDropHandler = function (dhParams) {\n        return function (e) {\n\n            var _jsPlumb = dhParams.jsPlumb;\n\n            // remove the classes that are added dynamically. drop is neither forbidden nor allowed now that\n            // the drop is finishing.\n            dhParams.removeClass(_jsPlumb.endpointDropAllowedClass);\n            dhParams.removeClass(_jsPlumb.endpointDropForbiddenClass);\n\n            var originalEvent = _jsPlumb.getDropEvent(arguments),\n                draggable = _jsPlumb.getDragObject(arguments),\n                id = _jsPlumb.getAttribute(draggable, \"dragId\"),\n                elId = _jsPlumb.getAttribute(draggable, \"elId\"),\n                scope = _jsPlumb.getAttribute(draggable, \"originalScope\"),\n                jpc = _jsPlumb.getFloatingConnectionFor(id);\n\n            // if no active connection, bail.\n            if (jpc == null) {\n                return;\n            }\n\n            // calculate if this is an existing connection.\n            var existingConnection = jpc.suspendedEndpoint != null;\n\n            // if suspended endpoint exists but has been cleaned up, bail. This means it's an existing connection\n            // that has been detached and will shortly be discarded.\n            if (existingConnection && jpc.suspendedEndpoint._jsPlumb == null) {\n                return;\n            }\n\n            // get the drop endpoint. for a normal connection this is just the one that would replace the currently\n            // floating endpoint. for a makeTarget this is a new endpoint that is created on drop. But we leave that to\n            // the handler to figure out.\n            var _ep = dhParams.getEndpoint(jpc);\n\n            // If we're not given an endpoint to use, bail.\n            if (_ep == null) {\n                return;\n            }\n\n            // if this is a drop back where the connection came from, mark it force reattach and\n            // return; the stop handler will reattach. without firing an event.\n            if (dhParams.isRedrop(jpc, dhParams)) {\n                jpc._forceReattach = true;\n                jpc.setHover(false);\n                if (dhParams.maybeCleanup) {\n                    dhParams.maybeCleanup(_ep);\n                }\n                return;\n            }\n\n            // ensure we dont bother trying to drop sources on non-source eps, and same for target.\n            var idx = _jsPlumb.getFloatingAnchorIndex(jpc);\n            if ((idx === 0 && !dhParams.isSource)|| (idx === 1 && !dhParams.isTarget)){\n                if (dhParams.maybeCleanup) {\n                    dhParams.maybeCleanup(_ep);\n                }\n                return;\n            }\n\n            if (dhParams.onDrop) {\n                dhParams.onDrop(jpc);\n            }\n\n            // restore the original scope if necessary (issue 57)\n            if (scope) {\n                _jsPlumb.setDragScope(draggable, scope);\n            }\n\n            // if the target of the drop is full, fire an event (we abort below)\n            // makeTarget: keep.\n            var isFull = dhParams.isFull(e);\n            if (isFull) {\n                _ep.fire(\"maxConnections\", {\n                    endpoint: this,\n                    connection: jpc,\n                    maxConnections: _ep._jsPlumb.maxConnections\n                }, originalEvent);\n            }\n            //\n            // if endpoint enabled, not full, and matches the index of the floating endpoint...\n            if (!isFull &&  dhParams.enabled()) {\n                var _doContinue = true;\n\n                // before testing for beforeDrop, reset the connection's source/target to be the actual DOM elements\n                // involved (that is, stash any temporary stuff used for dragging. but we need to keep it around in\n                // order that the anchor manager can clean things up properly).\n                if (idx === 0) {\n                    jpc.floatingElement = jpc.source;\n                    jpc.floatingId = jpc.sourceId;\n                    jpc.floatingEndpoint = jpc.endpoints[0];\n                    jpc.floatingIndex = 0;\n                    jpc.source = dhParams.element;\n                    jpc.sourceId = dhParams.elementId;\n                } else {\n                    jpc.floatingElement = jpc.target;\n                    jpc.floatingId = jpc.targetId;\n                    jpc.floatingEndpoint = jpc.endpoints[1];\n                    jpc.floatingIndex = 1;\n                    jpc.target = dhParams.element;\n                    jpc.targetId = dhParams.elementId;\n                }\n\n                // if this is an existing connection and detach is not allowed we won't continue. The connection's\n                // endpoints have been reinstated; everything is back to how it was.\n                if (existingConnection && jpc.suspendedEndpoint.id !== _ep.id) {\n                    if (!jpc.isDetachAllowed(jpc) || !jpc.endpoints[idx].isDetachAllowed(jpc) || !jpc.suspendedEndpoint.isDetachAllowed(jpc) || !_jsPlumb.checkCondition(\"beforeDetach\", jpc)) {\n                        _doContinue = false;\n                    }\n                }\n\n// ------------ wrap the execution path in a function so we can support asynchronous beforeDrop\n\n                var continueFunction = function (optionalData) {\n                    // remove this jpc from the current endpoint, which is a floating endpoint that we will\n                    // subsequently discard.\n                    jpc.endpoints[idx].detachFromConnection(jpc);\n\n                    // if there's a suspended endpoint, detach it from the connection.\n                    if (jpc.suspendedEndpoint) {\n                        jpc.suspendedEndpoint.detachFromConnection(jpc);\n                    }\n\n                    jpc.endpoints[idx] = _ep;\n                    _ep.addConnection(jpc);\n\n                    // copy our parameters in to the connection:\n                    var params = _ep.getParameters();\n                    for (var aParam in params) {\n                        jpc.setParameter(aParam, params[aParam]);\n                    }\n\n                    if (!existingConnection) {\n                        // if not an existing connection and\n                        if (params.draggable) {\n                            _jsPlumb.initDraggable(this.element, dhParams.dragOptions, \"internal\", _jsPlumb);\n                        }\n                    }\n                    else {\n                        var suspendedElementId = jpc.suspendedEndpoint.elementId;\n                        _jsPlumb.fireMoveEvent({\n                            index: idx,\n                            originalSourceId: idx === 0 ? suspendedElementId : jpc.sourceId,\n                            newSourceId: idx === 0 ? _ep.elementId : jpc.sourceId,\n                            originalTargetId: idx === 1 ? suspendedElementId : jpc.targetId,\n                            newTargetId: idx === 1 ? _ep.elementId : jpc.targetId,\n                            originalSourceEndpoint: idx === 0 ? jpc.suspendedEndpoint : jpc.endpoints[0],\n                            newSourceEndpoint: idx === 0 ? _ep : jpc.endpoints[0],\n                            originalTargetEndpoint: idx === 1 ? jpc.suspendedEndpoint : jpc.endpoints[1],\n                            newTargetEndpoint: idx === 1 ? _ep : jpc.endpoints[1],\n                            connection: jpc\n                        }, originalEvent);\n                    }\n\n                    if (idx === 1) {\n                        _jsPlumb.anchorManager.updateOtherEndpoint(jpc.sourceId, jpc.floatingId, jpc.targetId, jpc);\n                    }\n                    else {\n                        _jsPlumb.anchorManager.sourceChanged(jpc.floatingId, jpc.sourceId, jpc, jpc.source);\n                    }\n\n                    // when makeSource has uniqueEndpoint:true, we want to create connections with new endpoints\n                    // that are subsequently deleted. So makeSource sets `finalEndpoint`, which is the Endpoint to\n                    // which the connection should be attached. The `detachFromConnection` call below results in the\n                    // temporary endpoint being cleaned up.\n                    if (jpc.endpoints[0].finalEndpoint) {\n                        var _toDelete = jpc.endpoints[0];\n                        _toDelete.detachFromConnection(jpc);\n                        jpc.endpoints[0] = jpc.endpoints[0].finalEndpoint;\n                        jpc.endpoints[0].addConnection(jpc);\n                    }\n\n                    // if optionalData was given, merge it onto the connection's data.\n                    if (_ju.isObject(optionalData)) {\n                        jpc.mergeData(optionalData);\n                    }\n                    // finalise will inform the anchor manager and also add to\n                    // connectionsByScope if necessary.\n                    _jsPlumb.finaliseConnection(jpc, null, originalEvent, false);\n                    jpc.setHover(false);\n\n                }.bind(this);\n\n                var dontContinueFunction = function () {\n                    // otherwise just put it back on the endpoint it was on before the drag.\n                    if (jpc.suspendedEndpoint) {\n                        jpc.endpoints[idx] = jpc.suspendedEndpoint;\n                        jpc.setHover(false);\n                        jpc._forceDetach = true;\n                        if (idx === 0) {\n                            jpc.source = jpc.suspendedEndpoint.element;\n                            jpc.sourceId = jpc.suspendedEndpoint.elementId;\n                        } else {\n                            jpc.target = jpc.suspendedEndpoint.element;\n                            jpc.targetId = jpc.suspendedEndpoint.elementId;\n                        }\n                        jpc.suspendedEndpoint.addConnection(jpc);\n\n                        // TODO checkSanity\n                        if (idx === 1) {\n                            _jsPlumb.anchorManager.updateOtherEndpoint(jpc.sourceId, jpc.floatingId, jpc.targetId, jpc);\n                        }\n                        else {\n                            _jsPlumb.anchorManager.sourceChanged(jpc.floatingId, jpc.sourceId, jpc, jpc.source);\n                        }\n\n                        _jsPlumb.repaint(jpc.sourceId);\n                        jpc._forceDetach = false;\n                    }\n                };\n\n// --------------------------------------\n                // now check beforeDrop.  this will be available only on Endpoints that are setup to\n                // have a beforeDrop condition (although, secretly, under the hood all Endpoints and\n                // the Connection have them, because they are on jsPlumbUIComponent.  shhh!), because\n                // it only makes sense to have it on a target endpoint.\n                _doContinue = _doContinue && dhParams.isDropAllowed(jpc.sourceId, jpc.targetId, jpc.scope, jpc, _ep);// && jpc.pending;\n\n                if (_doContinue) {\n                    continueFunction(_doContinue);\n                    return true;\n                }\n                else {\n                    dontContinueFunction();\n                }\n            }\n\n            if (dhParams.maybeCleanup) {\n                dhParams.maybeCleanup(_ep);\n            }\n\n            _jsPlumb.currentlyDragging = false;\n        };\n    };\n}).call(typeof window !== 'undefined' ? window : this);\n\n/*\n * This file contains the code for Connections.\n *\n * Copyright (c) 2010 - 2018 jsPlumb (hello@jsplumbtoolkit.com)\n *\n * https://jsplumbtoolkit.com\n * https://github.com/jsplumb/jsplumb\n *\n * Dual licensed under the MIT and GPL2 licenses.\n */\n;\n(function () {\n\n    \"use strict\";\n    var root = this,\n        _jp = root.jsPlumb,\n        _ju = root.jsPlumbUtil;\n\n    var makeConnector = function (_jsPlumb, renderMode, connectorName, connectorArgs, forComponent) {\n            // first make sure we have a cache for the specified renderer\n            _jp.Connectors[renderMode] = _jp.Connectors[renderMode] || {};\n\n            // now see if the one we want exists; if not we will try to make it\n            if (_jp.Connectors[renderMode][connectorName] == null) {\n\n                if (_jp.Connectors[connectorName] == null) {\n                    if (!_jsPlumb.Defaults.DoNotThrowErrors) {\n                        throw new TypeError(\"jsPlumb: unknown connector type '\" + connectorName + \"'\");\n                    } else {\n                        return null;\n                    }\n                }\n\n                _jp.Connectors[renderMode][connectorName] = function() {\n                    _jp.Connectors[connectorName].apply(this, arguments);\n                    _jp.ConnectorRenderers[renderMode].apply(this, arguments);\n                };\n\n                _ju.extend(_jp.Connectors[renderMode][connectorName], [ _jp.Connectors[connectorName], _jp.ConnectorRenderers[renderMode]]);\n\n            }\n\n            return new _jp.Connectors[renderMode][connectorName](connectorArgs, forComponent);\n        },\n        _makeAnchor = function (anchorParams, elementId, _jsPlumb) {\n            return (anchorParams) ? _jsPlumb.makeAnchor(anchorParams, elementId, _jsPlumb) : null;\n        },\n        _updateConnectedClass = function (conn, element, _jsPlumb, remove) {\n            if (element != null) {\n                element._jsPlumbConnections = element._jsPlumbConnections || {};\n                if (remove) {\n                    delete element._jsPlumbConnections[conn.id];\n                }\n                else {\n                    element._jsPlumbConnections[conn.id] = true;\n                }\n\n                if (_ju.isEmpty(element._jsPlumbConnections)) {\n                    _jsPlumb.removeClass(element, _jsPlumb.connectedClass);\n                }\n                else {\n                    _jsPlumb.addClass(element, _jsPlumb.connectedClass);\n                }\n            }\n        };\n\n    _jp.Connection = function (params) {\n        var _newEndpoint = params.newEndpoint;\n\n        this.id = params.id;\n        this.connector = null;\n        this.idPrefix = \"_jsplumb_c_\";\n        this.defaultLabelLocation = 0.5;\n        this.defaultOverlayKeys = [\"Overlays\", \"ConnectionOverlays\"];\n        // if a new connection is the result of moving some existing connection, params.previousConnection\n        // will have that Connection in it. listeners for the jsPlumbConnection event can look for that\n        // member and take action if they need to.\n        this.previousConnection = params.previousConnection;\n        this.source = _jp.getElement(params.source);\n        this.target = _jp.getElement(params.target);\n\n\n        _jp.OverlayCapableJsPlumbUIComponent.apply(this, arguments);\n\n        // sourceEndpoint and targetEndpoint override source/target, if they are present. but \n        // source is not overridden if the Endpoint has declared it is not the final target of a connection;\n        // instead we use the source that the Endpoint declares will be the final source element.\n        if (params.sourceEndpoint) {\n            this.source = params.sourceEndpoint.getElement();\n            this.sourceId = params.sourceEndpoint.elementId;\n        } else {\n            this.sourceId = this._jsPlumb.instance.getId(this.source);\n        }\n\n        if (params.targetEndpoint) {\n            this.target = params.targetEndpoint.getElement();\n            this.targetId = params.targetEndpoint.elementId;\n        } else {\n            this.targetId = this._jsPlumb.instance.getId(this.target);\n        }\n\n\n        this.scope = params.scope; // scope may have been passed in to the connect call. if it wasn't, we will pull it from the source endpoint, after having initialised the endpoints.            \n        this.endpoints = [];\n        this.endpointStyles = [];\n\n        var _jsPlumb = this._jsPlumb.instance;\n\n        _jsPlumb.manage(this.sourceId, this.source);\n        _jsPlumb.manage(this.targetId, this.target);\n\n        this._jsPlumb.visible = true;\n\n        this._jsPlumb.params = {\n            cssClass: params.cssClass,\n            container: params.container,\n            \"pointer-events\": params[\"pointer-events\"],\n            editorParams: params.editorParams,\n            overlays: params.overlays\n        };\n        this._jsPlumb.lastPaintedAt = null;\n\n        // listen to mouseover and mouseout events passed from the container delegate.\n        this.bind(\"mouseover\", function () {\n            this.setHover(true);\n        }.bind(this));\n        this.bind(\"mouseout\", function () {\n            this.setHover(false);\n        }.bind(this));\n\n\n// INITIALISATION CODE\n\n        this.makeEndpoint = function (isSource, el, elId, ep) {\n            elId = elId || this._jsPlumb.instance.getId(el);\n            return this.prepareEndpoint(_jsPlumb, _newEndpoint, this, ep, isSource ? 0 : 1, params, el, elId);\n        };\n\n        // if type given, get the endpoint definitions mapping to that type from the jsplumb instance, and use those.\n        // we apply types at the end of this constructor but endpoints are only honoured in a type definition at\n        // create time.\n        if (params.type) {\n            params.endpoints = params.endpoints || this._jsPlumb.instance.deriveEndpointAndAnchorSpec(params.type).endpoints;\n        }\n\n        var eS = this.makeEndpoint(true, this.source, this.sourceId, params.sourceEndpoint),\n            eT = this.makeEndpoint(false, this.target, this.targetId, params.targetEndpoint);\n\n        if (eS) {\n            _ju.addToList(params.endpointsByElement, this.sourceId, eS);\n        }\n        if (eT) {\n            _ju.addToList(params.endpointsByElement, this.targetId, eT);\n        }\n        // if scope not set, set it to be the scope for the source endpoint.\n        if (!this.scope) {\n            this.scope = this.endpoints[0].scope;\n        }\n\n        // if explicitly told to (or not to) delete endpoints when empty, override endpoint's preferences\n        if (params.deleteEndpointsOnEmpty != null) {\n            this.endpoints[0].setDeleteOnEmpty(params.deleteEndpointsOnEmpty);\n            this.endpoints[1].setDeleteOnEmpty(params.deleteEndpointsOnEmpty);\n        }\n\n// -------------------------- DEFAULT TYPE ---------------------------------------------\n\n        // DETACHABLE\n        var _detachable = _jsPlumb.Defaults.ConnectionsDetachable;\n        if (params.detachable === false) {\n            _detachable = false;\n        }\n        if (this.endpoints[0].connectionsDetachable === false) {\n            _detachable = false;\n        }\n        if (this.endpoints[1].connectionsDetachable === false) {\n            _detachable = false;\n        }\n        // REATTACH\n        var _reattach = params.reattach || this.endpoints[0].reattachConnections || this.endpoints[1].reattachConnections || _jsPlumb.Defaults.ReattachConnections;\n\n        this.appendToDefaultType({\n            detachable: _detachable,\n            reattach: _reattach,\n            paintStyle:this.endpoints[0].connectorStyle || this.endpoints[1].connectorStyle || params.paintStyle || _jsPlumb.Defaults.PaintStyle || _jp.Defaults.PaintStyle,\n            hoverPaintStyle:this.endpoints[0].connectorHoverStyle || this.endpoints[1].connectorHoverStyle || params.hoverPaintStyle || _jsPlumb.Defaults.HoverPaintStyle || _jp.Defaults.HoverPaintStyle\n        });\n\n        var _suspendedAt = _jsPlumb.getSuspendedAt();\n        if (!_jsPlumb.isSuspendDrawing()) {\n            // paint the endpoints\n            var myInfo = _jsPlumb.getCachedData(this.sourceId),\n                myOffset = myInfo.o, myWH = myInfo.s,\n                otherInfo = _jsPlumb.getCachedData(this.targetId),\n                otherOffset = otherInfo.o,\n                otherWH = otherInfo.s,\n                initialTimestamp = _suspendedAt || _jsPlumb.timestamp(),\n                anchorLoc = this.endpoints[0].anchor.compute({\n                    xy: [ myOffset.left, myOffset.top ], wh: myWH, element: this.endpoints[0],\n                    elementId: this.endpoints[0].elementId,\n                    txy: [ otherOffset.left, otherOffset.top ], twh: otherWH, tElement: this.endpoints[1],\n                    timestamp: initialTimestamp\n                });\n\n            this.endpoints[0].paint({ anchorLoc: anchorLoc, timestamp: initialTimestamp });\n\n            anchorLoc = this.endpoints[1].anchor.compute({\n                xy: [ otherOffset.left, otherOffset.top ], wh: otherWH, element: this.endpoints[1],\n                elementId: this.endpoints[1].elementId,\n                txy: [ myOffset.left, myOffset.top ], twh: myWH, tElement: this.endpoints[0],\n                timestamp: initialTimestamp\n            });\n            this.endpoints[1].paint({ anchorLoc: anchorLoc, timestamp: initialTimestamp });\n        }\n\n        this.getTypeDescriptor = function () {\n            return \"connection\";\n        };\n        this.getAttachedElements = function () {\n            return this.endpoints;\n        };\n\n        this.isDetachable = function () {\n            return this._jsPlumb.detachable === true;\n        };\n        this.setDetachable = function (detachable) {\n            this._jsPlumb.detachable = detachable === true;\n        };\n        this.isReattach = function () {\n            return this._jsPlumb.reattach === true || this.endpoints[0].reattachConnections === true || this.endpoints[1].reattachConnections === true;\n        };\n        this.setReattach = function (reattach) {\n            this._jsPlumb.reattach = reattach === true;\n        };\n\n// END INITIALISATION CODE\n\n\n// COST + DIRECTIONALITY\n        // if cost not supplied, try to inherit from source endpoint\n        this._jsPlumb.cost = params.cost || this.endpoints[0].getConnectionCost();\n        this._jsPlumb.directed = params.directed;\n        // inherit directed flag if set no source endpoint\n        if (params.directed == null) {\n            this._jsPlumb.directed = this.endpoints[0].areConnectionsDirected();\n        }\n// END COST + DIRECTIONALITY\n\n// PARAMETERS\n        // merge all the parameters objects into the connection.  parameters set\n        // on the connection take precedence; then source endpoint params, then\n        // finally target endpoint params.\n        var _p = _jp.extend({}, this.endpoints[1].getParameters());\n        _jp.extend(_p, this.endpoints[0].getParameters());\n        _jp.extend(_p, this.getParameters());\n        this.setParameters(_p);\n// END PARAMETERS\n\n// PAINTING\n\n        this.setConnector(this.endpoints[0].connector || this.endpoints[1].connector || params.connector || _jsPlumb.Defaults.Connector || _jp.Defaults.Connector, true);\n        var data = params.data == null || !_ju.isObject(params.data) ? {} : params.data;\n        this.getData = function() { return data; };\n        this.setData = function(d) { data = d || {}; };\n        this.mergeData = function(d) { data = _jp.extend(data, d); };\n\n        // the very last thing we do is apply types, if there are any.\n        var _types = [ \"default\", this.endpoints[0].connectionType, this.endpoints[1].connectionType,  params.type ].join(\" \");\n        if (/[^\\s]/.test(_types)) {\n            this.addType(_types, params.data, true);\n        }\n\n        this.updateConnectedClass();\n\n// END PAINTING    \n    };\n\n    _ju.extend(_jp.Connection, _jp.OverlayCapableJsPlumbUIComponent, {\n        applyType: function (t, doNotRepaint, typeMap) {\n\n            var _connector = null;\n            if (t.connector != null) {\n                _connector = this.getCachedTypeItem(\"connector\", typeMap.connector);\n                if (_connector == null) {\n                    _connector = this.prepareConnector(t.connector, typeMap.connector);\n                    this.cacheTypeItem(\"connector\", _connector, typeMap.connector);\n                }\n                this.setPreparedConnector(_connector);\n            }\n\n            // none of these things result in the creation of objects so can be ignored.\n            if (t.detachable != null) {\n                this.setDetachable(t.detachable);\n            }\n            if (t.reattach != null) {\n                this.setReattach(t.reattach);\n            }\n            if (t.scope) {\n                this.scope = t.scope;\n            }\n\n            if (t.cssClass != null && this.canvas) {\n                this._jsPlumb.instance.addClass(this.canvas, t.cssClass);\n            }\n\n            var _anchors = null;\n            // this also results in the creation of objects.\n            if (t.anchor) {\n                // note that even if the param was anchor, we store `anchors`.\n                _anchors = this.getCachedTypeItem(\"anchors\", typeMap.anchor);\n                if (_anchors == null) {\n                    _anchors = [ this._jsPlumb.instance.makeAnchor(t.anchor), this._jsPlumb.instance.makeAnchor(t.anchor) ];\n                    this.cacheTypeItem(\"anchors\", _anchors, typeMap.anchor);\n                }\n            }\n            else if (t.anchors) {\n                _anchors = this.getCachedTypeItem(\"anchors\", typeMap.anchors);\n                if (_anchors == null) {\n                    _anchors = [\n                        this._jsPlumb.instance.makeAnchor(t.anchors[0]),\n                        this._jsPlumb.instance.makeAnchor(t.anchors[1])\n                    ];\n                    this.cacheTypeItem(\"anchors\", _anchors, typeMap.anchors);\n                }\n            }\n            if (_anchors != null) {\n                this.endpoints[0].anchor = _anchors[0];\n                this.endpoints[1].anchor = _anchors[1];\n                if (this.endpoints[1].anchor.isDynamic) {\n                    this._jsPlumb.instance.repaint(this.endpoints[1].elementId);\n                }\n            }\n\n            _jp.OverlayCapableJsPlumbUIComponent.applyType(this, t);\n        },\n        addClass: function (c, informEndpoints) {\n            if (informEndpoints) {\n                this.endpoints[0].addClass(c);\n                this.endpoints[1].addClass(c);\n                if (this.suspendedEndpoint) {\n                    this.suspendedEndpoint.addClass(c);\n                }\n            }\n            if (this.connector) {\n                this.connector.addClass(c);\n            }\n        },\n        removeClass: function (c, informEndpoints) {\n            if (informEndpoints) {\n                this.endpoints[0].removeClass(c);\n                this.endpoints[1].removeClass(c);\n                if (this.suspendedEndpoint) {\n                    this.suspendedEndpoint.removeClass(c);\n                }\n            }\n            if (this.connector) {\n                this.connector.removeClass(c);\n            }\n        },\n        isVisible: function () {\n            return this._jsPlumb.visible;\n        },\n        setVisible: function (v) {\n            this._jsPlumb.visible = v;\n            if (this.connector) {\n                this.connector.setVisible(v);\n            }\n            this.repaint();\n        },\n        cleanup: function () {\n            this.updateConnectedClass(true);\n            this.endpoints = null;\n            this.source = null;\n            this.target = null;\n            if (this.connector != null) {\n                this.connector.cleanup(true);\n                this.connector.destroy(true);\n            }\n            this.connector = null;\n        },\n        updateConnectedClass:function(remove) {\n            if (this._jsPlumb) {\n                _updateConnectedClass(this, this.source, this._jsPlumb.instance, remove);\n                _updateConnectedClass(this, this.target, this._jsPlumb.instance, remove);\n            }\n        },\n        setHover: function (state) {\n            if (this.connector && this._jsPlumb && !this._jsPlumb.instance.isConnectionBeingDragged()) {\n                this.connector.setHover(state);\n                root.jsPlumb[state ? \"addClass\" : \"removeClass\"](this.source, this._jsPlumb.instance.hoverSourceClass);\n                root.jsPlumb[state ? \"addClass\" : \"removeClass\"](this.target, this._jsPlumb.instance.hoverTargetClass);\n            }\n        },\n        getUuids:function() {\n            return [ this.endpoints[0].getUuid(), this.endpoints[1].getUuid() ];\n        },\n        getCost: function () {\n            return this._jsPlumb ? this._jsPlumb.cost : -Infinity;\n        },\n        setCost: function (c) {\n            this._jsPlumb.cost = c;\n        },\n        isDirected: function () {\n            return this._jsPlumb.directed;\n        },\n        getConnector: function () {\n            return this.connector;\n        },\n        prepareConnector:function(connectorSpec, typeId) {\n            var connectorArgs = {\n                    _jsPlumb: this._jsPlumb.instance,\n                    cssClass: this._jsPlumb.params.cssClass,\n                    container: this._jsPlumb.params.container,\n                    \"pointer-events\": this._jsPlumb.params[\"pointer-events\"]\n                },\n                renderMode = this._jsPlumb.instance.getRenderMode(),\n                connector;\n\n            if (_ju.isString(connectorSpec)) {\n                connector = makeConnector(this._jsPlumb.instance, renderMode, connectorSpec, connectorArgs, this);\n            } // lets you use a string as shorthand.\n            else if (_ju.isArray(connectorSpec)) {\n                if (connectorSpec.length === 1) {\n                    connector = makeConnector(this._jsPlumb.instance, renderMode, connectorSpec[0], connectorArgs, this);\n                }\n                else {\n                    connector = makeConnector(this._jsPlumb.instance, renderMode, connectorSpec[0], _ju.merge(connectorSpec[1], connectorArgs), this);\n                }\n            }\n            if (typeId != null) {\n                connector.typeId = typeId;\n            }\n            return connector;\n        },\n        setPreparedConnector: function(connector, doNotRepaint, doNotChangeListenerComponent, typeId) {\n\n            if (this.connector !== connector) {\n\n                var previous, previousClasses = \"\";\n                // the connector will not be cleaned up if it was set as part of a type, because `typeId` will be set on it\n                // and we havent passed in `true` for \"force\" here.\n                if (this.connector != null) {\n                    previous = this.connector;\n                    previousClasses = previous.getClass();\n                    this.connector.cleanup();\n                    this.connector.destroy();\n                }\n\n                this.connector = connector;\n                if (typeId) {\n                    this.cacheTypeItem(\"connector\", connector, typeId);\n                }\n\n                this.canvas = this.connector.canvas;\n                this.bgCanvas = this.connector.bgCanvas;\n\n                // put classes from prior connector onto the canvas\n                this.addClass(previousClasses);\n\n                // new: instead of binding listeners per connector, we now just have one delegate on the container.\n                // so for that handler we set the connection as the '_jsPlumb' member of the canvas element, and\n                // bgCanvas, if it exists, which it does right now in the VML renderer, so it won't from v 2.0.0 onwards.\n                if (this.canvas) {\n                    this.canvas._jsPlumb = this;\n                }\n                if (this.bgCanvas) {\n                    this.bgCanvas._jsPlumb = this;\n                }\n\n                if (previous != null) {\n                    var o = this.getOverlays();\n                    for (var i = 0; i < o.length; i++) {\n                        if (o[i].transfer) {\n                            o[i].transfer(this.connector);\n                        }\n                    }\n                }\n\n                if (!doNotChangeListenerComponent) {\n                    this.setListenerComponent(this.connector);\n                }\n                if (!doNotRepaint) {\n                    this.repaint();\n                }\n            }\n        },\n        setConnector: function (connectorSpec, doNotRepaint, doNotChangeListenerComponent, typeId) {\n            var connector = this.prepareConnector(connectorSpec, typeId);\n            this.setPreparedConnector(connector, doNotRepaint, doNotChangeListenerComponent, typeId);\n        },\n        paint: function (params) {\n\n            if (!this._jsPlumb.instance.isSuspendDrawing() && this._jsPlumb.visible) {\n                params = params || {};\n                var timestamp = params.timestamp,\n                // if the moving object is not the source we must transpose the two references.\n                    swap = false,\n                    tId = swap ? this.sourceId : this.targetId, sId = swap ? this.targetId : this.sourceId,\n                    tIdx = swap ? 0 : 1, sIdx = swap ? 1 : 0;\n\n                if (timestamp == null || timestamp !== this._jsPlumb.lastPaintedAt) {\n                    var sourceInfo = this._jsPlumb.instance.updateOffset({elId:sId}).o,\n                        targetInfo = this._jsPlumb.instance.updateOffset({elId:tId}).o,\n                        sE = this.endpoints[sIdx], tE = this.endpoints[tIdx];\n\n                    var sAnchorP = sE.anchor.getCurrentLocation({xy: [sourceInfo.left, sourceInfo.top], wh: [sourceInfo.width, sourceInfo.height], element: sE, timestamp: timestamp}),\n                        tAnchorP = tE.anchor.getCurrentLocation({xy: [targetInfo.left, targetInfo.top], wh: [targetInfo.width, targetInfo.height], element: tE, timestamp: timestamp});\n\n                    this.connector.resetBounds();\n\n                    this.connector.compute({\n                        sourcePos: sAnchorP,\n                        targetPos: tAnchorP,\n                        sourceOrientation:sE.anchor.getOrientation(sE),\n                        targetOrientation:tE.anchor.getOrientation(tE),\n                        sourceEndpoint: this.endpoints[sIdx],\n                        targetEndpoint: this.endpoints[tIdx],\n                        \"stroke-width\": this._jsPlumb.paintStyleInUse.strokeWidth,\n                        sourceInfo: sourceInfo,\n                        targetInfo: targetInfo\n                    });\n\n                    var overlayExtents = { minX: Infinity, minY: Infinity, maxX: -Infinity, maxY: -Infinity };\n\n                    // compute overlays. we do this first so we can get their placements, and adjust the\n                    // container if needs be (if an overlay would be clipped)\n                    for (var i in this._jsPlumb.overlays) {\n                        if (this._jsPlumb.overlays.hasOwnProperty(i)) {\n                            var o = this._jsPlumb.overlays[i];\n                            if (o.isVisible()) {\n                                this._jsPlumb.overlayPlacements[i] = o.draw(this.connector, this._jsPlumb.paintStyleInUse, this.getAbsoluteOverlayPosition(o));\n                                overlayExtents.minX = Math.min(overlayExtents.minX, this._jsPlumb.overlayPlacements[i].minX);\n                                overlayExtents.maxX = Math.max(overlayExtents.maxX, this._jsPlumb.overlayPlacements[i].maxX);\n                                overlayExtents.minY = Math.min(overlayExtents.minY, this._jsPlumb.overlayPlacements[i].minY);\n                                overlayExtents.maxY = Math.max(overlayExtents.maxY, this._jsPlumb.overlayPlacements[i].maxY);\n                            }\n                        }\n                    }\n\n                    var lineWidth = parseFloat(this._jsPlumb.paintStyleInUse.strokeWidth || 1) / 2,\n                        outlineWidth = parseFloat(this._jsPlumb.paintStyleInUse.strokeWidth || 0),\n                        extents = {\n                            xmin: Math.min(this.connector.bounds.minX - (lineWidth + outlineWidth), overlayExtents.minX),\n                            ymin: Math.min(this.connector.bounds.minY - (lineWidth + outlineWidth), overlayExtents.minY),\n                            xmax: Math.max(this.connector.bounds.maxX + (lineWidth + outlineWidth), overlayExtents.maxX),\n                            ymax: Math.max(this.connector.bounds.maxY + (lineWidth + outlineWidth), overlayExtents.maxY)\n                        };\n                    // paint the connector.\n                    this.connector.paint(this._jsPlumb.paintStyleInUse, null, extents);\n                    // and then the overlays\n                    for (var j in this._jsPlumb.overlays) {\n                        if (this._jsPlumb.overlays.hasOwnProperty(j)) {\n                            var p = this._jsPlumb.overlays[j];\n                            if (p.isVisible()) {\n                                p.paint(this._jsPlumb.overlayPlacements[j], extents);\n                            }\n                        }\n                    }\n                }\n                this._jsPlumb.lastPaintedAt = timestamp;\n            }\n        },\n        repaint: function (params) {\n            var p = jsPlumb.extend(params || {}, {});\n            p.elId = this.sourceId;\n            this.paint(p);\n        },\n        prepareEndpoint: function (_jsPlumb, _newEndpoint, conn, existing, index, params, element, elementId) {\n            var e;\n            if (existing) {\n                conn.endpoints[index] = existing;\n                existing.addConnection(conn);\n            } else {\n                if (!params.endpoints) {\n                    params.endpoints = [ null, null ];\n                }\n                var ep = params.endpoints[index] || params.endpoint || _jsPlumb.Defaults.Endpoints[index] || _jp.Defaults.Endpoints[index] || _jsPlumb.Defaults.Endpoint || _jp.Defaults.Endpoint;\n                if (!params.endpointStyles) {\n                    params.endpointStyles = [ null, null ];\n                }\n                if (!params.endpointHoverStyles) {\n                    params.endpointHoverStyles = [ null, null ];\n                }\n                var es = params.endpointStyles[index] || params.endpointStyle || _jsPlumb.Defaults.EndpointStyles[index] || _jp.Defaults.EndpointStyles[index] || _jsPlumb.Defaults.EndpointStyle || _jp.Defaults.EndpointStyle;\n                // Endpoints derive their fill from the connector's stroke, if no fill was specified.\n                if (es.fill == null && params.paintStyle != null) {\n                    es.fill = params.paintStyle.stroke;\n                }\n\n                if (es.outlineStroke == null && params.paintStyle != null) {\n                    es.outlineStroke = params.paintStyle.outlineStroke;\n                }\n                if (es.outlineWidth == null && params.paintStyle != null) {\n                    es.outlineWidth = params.paintStyle.outlineWidth;\n                }\n\n                var ehs = params.endpointHoverStyles[index] || params.endpointHoverStyle || _jsPlumb.Defaults.EndpointHoverStyles[index] || _jp.Defaults.EndpointHoverStyles[index] || _jsPlumb.Defaults.EndpointHoverStyle || _jp.Defaults.EndpointHoverStyle;\n                // endpoint hover fill style is derived from connector's hover stroke style\n                if (params.hoverPaintStyle != null) {\n                    if (ehs == null) {\n                        ehs = {};\n                    }\n                    if (ehs.fill == null) {\n                        ehs.fill = params.hoverPaintStyle.stroke;\n                    }\n                }\n                var a = params.anchors ? params.anchors[index] :\n                        params.anchor ? params.anchor :\n                            _makeAnchor(_jsPlumb.Defaults.Anchors[index], elementId, _jsPlumb) ||\n                            _makeAnchor(_jp.Defaults.Anchors[index], elementId, _jsPlumb) ||\n                            _makeAnchor(_jsPlumb.Defaults.Anchor, elementId, _jsPlumb) ||\n                            _makeAnchor(_jp.Defaults.Anchor, elementId, _jsPlumb),\n                    u = params.uuids ? params.uuids[index] : null;\n\n                e = _newEndpoint({\n                    paintStyle: es, hoverPaintStyle: ehs, endpoint: ep, connections: [ conn ],\n                    uuid: u, anchor: a, source: element, scope: params.scope,\n                    reattach: params.reattach || _jsPlumb.Defaults.ReattachConnections,\n                    detachable: params.detachable || _jsPlumb.Defaults.ConnectionsDetachable\n                });\n                if (existing == null) {\n                    e.setDeleteOnEmpty(true);\n                }\n                conn.endpoints[index] = e;\n\n                if (params.drawEndpoints === false) {\n                    e.setVisible(false, true, true);\n                }\n\n            }\n            return e;\n        }\n\n    }); // END Connection class            \n}).call(typeof window !== 'undefined' ? window : this);\n\n/*\n * This file contains the code for creating and manipulating anchors.\n *\n * Copyright (c) 2010 - 2018 jsPlumb (hello@jsplumbtoolkit.com)\n *\n * https://jsplumbtoolkit.com\n * https://github.com/jsplumb/jsplumb\n *\n * Dual licensed under the MIT and GPL2 licenses.\n */\n;\n(function () {\n\n    \"use strict\";\n\n    var root = this,\n        _ju = root.jsPlumbUtil,\n        _jp = root.jsPlumb;\n\n    //\n    // manages anchors for all elements.\n    //\n    _jp.AnchorManager = function (params) {\n        var _amEndpoints = {},\n            continuousAnchorLocations = {},\n            userDefinedContinuousAnchorLocations = {},\n            continuousAnchorOrientations = {},\n            connectionsByElementId = {},\n            self = this,\n            anchorLists = {},\n            jsPlumbInstance = params.jsPlumbInstance,\n            floatingConnections = {},\n            // used by placeAnchors function\n            placeAnchorsOnLine = function (desc, elementDimensions, elementPosition, connections, horizontal, otherMultiplier, reverse) {\n                var a = [], step = elementDimensions[horizontal ? 0 : 1] / (connections.length + 1);\n\n                for (var i = 0; i < connections.length; i++) {\n                    var val = (i + 1) * step, other = otherMultiplier * elementDimensions[horizontal ? 1 : 0];\n                    if (reverse) {\n                        val = elementDimensions[horizontal ? 0 : 1] - val;\n                    }\n\n                    var dx = (horizontal ? val : other), x = elementPosition[0] + dx, xp = dx / elementDimensions[0],\n                        dy = (horizontal ? other : val), y = elementPosition[1] + dy, yp = dy / elementDimensions[1];\n\n                    a.push([ x, y, xp, yp, connections[i][1], connections[i][2] ]);\n                }\n\n                return a;\n            },\n            // used by edgeSortFunctions\n            currySort = function (reverseAngles) {\n                return function (a, b) {\n                    var r = true;\n                    if (reverseAngles) {\n                        r = a[0][0] < b[0][0];\n                    }\n                    else {\n                        r = a[0][0] > b[0][0];\n                    }\n                    return r === false ? -1 : 1;\n                };\n            },\n            // used by edgeSortFunctions\n            leftSort = function (a, b) {\n                // first get adjusted values\n                var p1 = a[0][0] < 0 ? -Math.PI - a[0][0] : Math.PI - a[0][0],\n                    p2 = b[0][0] < 0 ? -Math.PI - b[0][0] : Math.PI - b[0][0];\n                if (p1 > p2) {\n                    return 1;\n                }\n                else {\n                    return -1;\n                }\n            },\n            // used by placeAnchors\n            edgeSortFunctions = {\n                \"top\": function (a, b) {\n                    return a[0] > b[0] ? 1 : -1;\n                },\n                \"right\": currySort(true),\n                \"bottom\": currySort(true),\n                \"left\": leftSort\n            },\n            // used by placeAnchors\n            _sortHelper = function (_array, _fn) {\n                return _array.sort(_fn);\n            },\n            // used by AnchorManager.redraw\n            placeAnchors = function (elementId, _anchorLists) {\n                var cd = jsPlumbInstance.getCachedData(elementId), sS = cd.s, sO = cd.o,\n                    placeSomeAnchors = function (desc, elementDimensions, elementPosition, unsortedConnections, isHorizontal, otherMultiplier, orientation) {\n                        if (unsortedConnections.length > 0) {\n                            var sc = _sortHelper(unsortedConnections, edgeSortFunctions[desc]), // puts them in order based on the target element's pos on screen\n                                reverse = desc === \"right\" || desc === \"top\",\n                                anchors = placeAnchorsOnLine(desc, elementDimensions,\n                                    elementPosition, sc,\n                                    isHorizontal, otherMultiplier, reverse);\n\n                            // takes a computed anchor position and adjusts it for parent offset and scroll, then stores it.\n                            var _setAnchorLocation = function (endpoint, anchorPos) {\n                                continuousAnchorLocations[endpoint.id] = [ anchorPos[0], anchorPos[1], anchorPos[2], anchorPos[3] ];\n                                continuousAnchorOrientations[endpoint.id] = orientation;\n                            };\n\n                            for (var i = 0; i < anchors.length; i++) {\n                                var c = anchors[i][4], weAreSource = c.endpoints[0].elementId === elementId, weAreTarget = c.endpoints[1].elementId === elementId;\n                                if (weAreSource) {\n                                    _setAnchorLocation(c.endpoints[0], anchors[i]);\n                                }\n                                if (weAreTarget) {\n                                    _setAnchorLocation(c.endpoints[1], anchors[i]);\n                                }\n                            }\n                        }\n                    };\n\n                placeSomeAnchors(\"bottom\", sS, [sO.left, sO.top], _anchorLists.bottom, true, 1, [0, 1]);\n                placeSomeAnchors(\"top\", sS, [sO.left, sO.top], _anchorLists.top, true, 0, [0, -1]);\n                placeSomeAnchors(\"left\", sS, [sO.left, sO.top], _anchorLists.left, false, 0, [-1, 0]);\n                placeSomeAnchors(\"right\", sS, [sO.left, sO.top], _anchorLists.right, false, 1, [1, 0]);\n            };\n\n        this.reset = function () {\n            _amEndpoints = {};\n            connectionsByElementId = {};\n            anchorLists = {};\n        };\n        this.addFloatingConnection = function (key, conn) {\n            floatingConnections[key] = conn;\n        };\n        this.removeFloatingConnection = function (key) {\n            delete floatingConnections[key];\n        };\n        this.newConnection = function (conn) {\n            var sourceId = conn.sourceId, targetId = conn.targetId,\n                ep = conn.endpoints,\n                doRegisterTarget = true,\n                registerConnection = function (otherIndex, otherEndpoint, otherAnchor, elId, c) {\n                    if ((sourceId === targetId) && otherAnchor.isContinuous) {\n                        // remove the target endpoint's canvas.  we dont need it.\n                        conn._jsPlumb.instance.removeElement(ep[1].canvas);\n                        doRegisterTarget = false;\n                    }\n                    _ju.addToList(connectionsByElementId, elId, [c, otherEndpoint, otherAnchor.constructor === _jp.DynamicAnchor]);\n                };\n\n            registerConnection(0, ep[0], ep[0].anchor, targetId, conn);\n            if (doRegisterTarget) {\n                registerConnection(1, ep[1], ep[1].anchor, sourceId, conn);\n            }\n        };\n        var removeEndpointFromAnchorLists = function (endpoint) {\n            (function (list, eId) {\n                if (list) {  // transient anchors dont get entries in this list.\n                    var f = function (e) {\n                        return e[4] === eId;\n                    };\n                    _ju.removeWithFunction(list.top, f);\n                    _ju.removeWithFunction(list.left, f);\n                    _ju.removeWithFunction(list.bottom, f);\n                    _ju.removeWithFunction(list.right, f);\n                }\n            })(anchorLists[endpoint.elementId], endpoint.id);\n        };\n        this.connectionDetached = function (connInfo, doNotRedraw) {\n            var connection = connInfo.connection || connInfo,\n                sourceId = connInfo.sourceId,\n                targetId = connInfo.targetId,\n                ep = connection.endpoints,\n                removeConnection = function (otherIndex, otherEndpoint, otherAnchor, elId, c) {\n                    _ju.removeWithFunction(connectionsByElementId[elId], function (_c) {\n                        return _c[0].id === c.id;\n                    });\n                };\n\n            removeConnection(1, ep[1], ep[1].anchor, sourceId, connection);\n            removeConnection(0, ep[0], ep[0].anchor, targetId, connection);\n            if (connection.floatingId) {\n                removeConnection(connection.floatingIndex, connection.floatingEndpoint, connection.floatingEndpoint.anchor, connection.floatingId, connection);\n                removeEndpointFromAnchorLists(connection.floatingEndpoint);\n            }\n\n            // remove from anchorLists\n            removeEndpointFromAnchorLists(connection.endpoints[0]);\n            removeEndpointFromAnchorLists(connection.endpoints[1]);\n\n            if (!doNotRedraw) {\n                self.redraw(connection.sourceId);\n                if (connection.targetId !== connection.sourceId) {\n                    self.redraw(connection.targetId);\n                }\n            }\n        };\n        this.add = function (endpoint, elementId) {\n            _ju.addToList(_amEndpoints, elementId, endpoint);\n        };\n        this.changeId = function (oldId, newId) {\n            connectionsByElementId[newId] = connectionsByElementId[oldId];\n            _amEndpoints[newId] = _amEndpoints[oldId];\n            delete connectionsByElementId[oldId];\n            delete _amEndpoints[oldId];\n        };\n        this.getConnectionsFor = function (elementId) {\n            return connectionsByElementId[elementId] || [];\n        };\n        this.getEndpointsFor = function (elementId) {\n            return _amEndpoints[elementId] || [];\n        };\n        this.deleteEndpoint = function (endpoint) {\n            _ju.removeWithFunction(_amEndpoints[endpoint.elementId], function (e) {\n                return e.id === endpoint.id;\n            });\n            removeEndpointFromAnchorLists(endpoint);\n        };\n        this.clearFor = function (elementId) {\n            delete _amEndpoints[elementId];\n            _amEndpoints[elementId] = [];\n        };\n        // updates the given anchor list by either updating an existing anchor's info, or adding it. this function\n        // also removes the anchor from its previous list, if the edge it is on has changed.\n        // all connections found along the way (those that are connected to one of the faces this function\n        // operates on) are added to the connsToPaint list, as are their endpoints. in this way we know to repaint\n        // them wthout having to calculate anything else about them.\n        var _updateAnchorList = function (lists, theta, order, conn, aBoolean, otherElId, idx, reverse, edgeId, elId, connsToPaint, endpointsToPaint) {\n            // first try to find the exact match, but keep track of the first index of a matching element id along the way.s\n            var exactIdx = -1,\n                firstMatchingElIdx = -1,\n                endpoint = conn.endpoints[idx],\n                endpointId = endpoint.id,\n                oIdx = [1, 0][idx],\n                values = [\n                    [ theta, order ],\n                    conn,\n                    aBoolean,\n                    otherElId,\n                    endpointId\n                ],\n                listToAddTo = lists[edgeId],\n                listToRemoveFrom = endpoint._continuousAnchorEdge ? lists[endpoint._continuousAnchorEdge] : null,\n                i,\n                candidate;\n\n            if (listToRemoveFrom) {\n                var rIdx = _ju.findWithFunction(listToRemoveFrom, function (e) {\n                    return e[4] === endpointId;\n                });\n                if (rIdx !== -1) {\n                    listToRemoveFrom.splice(rIdx, 1);\n                    // get all connections from this list\n                    for (i = 0; i < listToRemoveFrom.length; i++) {\n                        candidate = listToRemoveFrom[i][1];\n                        _ju.addWithFunction(connsToPaint, candidate, function (c) {\n                            return c.id === candidate.id;\n                        });\n                        _ju.addWithFunction(endpointsToPaint, listToRemoveFrom[i][1].endpoints[idx], function (e) {\n                            return e.id === candidate.endpoints[idx].id;\n                        });\n                        _ju.addWithFunction(endpointsToPaint, listToRemoveFrom[i][1].endpoints[oIdx], function (e) {\n                            return e.id === candidate.endpoints[oIdx].id;\n                        });\n                    }\n                }\n            }\n\n            for (i = 0; i < listToAddTo.length; i++) {\n                candidate = listToAddTo[i][1];\n                if (params.idx === 1 && listToAddTo[i][3] === otherElId && firstMatchingElIdx === -1) {\n                    firstMatchingElIdx = i;\n                }\n                _ju.addWithFunction(connsToPaint, candidate, function (c) {\n                    return c.id === candidate.id;\n                });\n                _ju.addWithFunction(endpointsToPaint, listToAddTo[i][1].endpoints[idx], function (e) {\n                    return e.id === candidate.endpoints[idx].id;\n                });\n                _ju.addWithFunction(endpointsToPaint, listToAddTo[i][1].endpoints[oIdx], function (e) {\n                    return e.id === candidate.endpoints[oIdx].id;\n                });\n            }\n            if (exactIdx !== -1) {\n                listToAddTo[exactIdx] = values;\n            }\n            else {\n                var insertIdx = reverse ? firstMatchingElIdx !== -1 ? firstMatchingElIdx : 0 : listToAddTo.length; // of course we will get this from having looked through the array shortly.\n                listToAddTo.splice(insertIdx, 0, values);\n            }\n\n            // store this for next time.\n            endpoint._continuousAnchorEdge = edgeId;\n        };\n\n        //\n        // find the entry in an endpoint's list for this connection and update its target endpoint\n        // with the current target in the connection.\n        // This method and sourceChanged need to be folder into one.\n        //\n        this.updateOtherEndpoint = function (sourceElId, oldTargetId, newTargetId, connection) {\n            var sIndex = _ju.findWithFunction(connectionsByElementId[sourceElId], function (i) {\n                    return i[0].id === connection.id;\n                }),\n                tIndex = _ju.findWithFunction(connectionsByElementId[oldTargetId], function (i) {\n                    return i[0].id === connection.id;\n                });\n\n            // update or add data for source\n            if (sIndex !== -1) {\n                connectionsByElementId[sourceElId][sIndex][0] = connection;\n                connectionsByElementId[sourceElId][sIndex][1] = connection.endpoints[1];\n                connectionsByElementId[sourceElId][sIndex][2] = connection.endpoints[1].anchor.constructor === _jp.DynamicAnchor;\n            }\n\n            // remove entry for previous target (if there)\n            if (tIndex > -1) {\n                connectionsByElementId[oldTargetId].splice(tIndex, 1);\n                // add entry for new target\n                _ju.addToList(connectionsByElementId, newTargetId, [connection, connection.endpoints[0], connection.endpoints[0].anchor.constructor === _jp.DynamicAnchor]);\n            }\n\n            connection.updateConnectedClass();\n        };\n\n        //\n        // notification that the connection given has changed source from the originalId to the newId.\n        // This involves:\n        // 1. removing the connection from the list of connections stored for the originalId\n        // 2. updating the source information for the target of the connection\n        // 3. re-registering the connection in connectionsByElementId with the newId\n        //\n        this.sourceChanged = function (originalId, newId, connection, newElement) {\n            if (originalId !== newId) {\n\n                connection.sourceId = newId;\n                connection.source = newElement;\n\n                // remove the entry that points from the old source to the target\n                _ju.removeWithFunction(connectionsByElementId[originalId], function (info) {\n                    return info[0].id === connection.id;\n                });\n                // find entry for target and update it\n                var tIdx = _ju.findWithFunction(connectionsByElementId[connection.targetId], function (i) {\n                    return i[0].id === connection.id;\n                });\n                if (tIdx > -1) {\n                    connectionsByElementId[connection.targetId][tIdx][0] = connection;\n                    connectionsByElementId[connection.targetId][tIdx][1] = connection.endpoints[0];\n                    connectionsByElementId[connection.targetId][tIdx][2] = connection.endpoints[0].anchor.constructor === _jp.DynamicAnchor;\n                }\n                // add entry for new source\n                _ju.addToList(connectionsByElementId, newId, [connection, connection.endpoints[1], connection.endpoints[1].anchor.constructor === _jp.DynamicAnchor]);\n\n                // TODO SP not final on this yet. when a user drags an existing connection and it turns into a self\n                // loop, then this code hides the target endpoint (by removing it from the DOM) But I think this should\n                // occur only if the anchor is Continuous\n                if (connection.endpoints[1].anchor.isContinuous) {\n                    if (connection.source === connection.target) {\n                        connection._jsPlumb.instance.removeElement(connection.endpoints[1].canvas);\n                    }\n                    else {\n                        if (connection.endpoints[1].canvas.parentNode == null) {\n                            connection._jsPlumb.instance.appendElement(connection.endpoints[1].canvas);\n                        }\n                    }\n                }\n\n                connection.updateConnectedClass();\n            }\n        };\n\n        //\n        // moves the given endpoint from `currentId` to `element`.\n        // This involves:\n        //\n        // 1. changing the key in _amEndpoints under which the endpoint is stored\n        // 2. changing the source or target values in all of the endpoint's connections\n        // 3. changing the array in connectionsByElementId in which the endpoint's connections\n        //    are stored (done by either sourceChanged or updateOtherEndpoint)\n        //\n        this.rehomeEndpoint = function (ep, currentId, element) {\n            var eps = _amEndpoints[currentId] || [],\n                elementId = jsPlumbInstance.getId(element);\n\n            if (elementId !== currentId) {\n                var idx = eps.indexOf(ep);\n                if (idx > -1) {\n                    var _ep = eps.splice(idx, 1)[0];\n                    self.add(_ep, elementId);\n                }\n            }\n\n            for (var i = 0; i < ep.connections.length; i++) {\n                if (ep.connections[i].sourceId === currentId) {\n                    self.sourceChanged(currentId, ep.elementId, ep.connections[i], ep.element);\n                }\n                else if (ep.connections[i].targetId === currentId) {\n                    ep.connections[i].targetId = ep.elementId;\n                    ep.connections[i].target = ep.element;\n                    self.updateOtherEndpoint(ep.connections[i].sourceId, currentId, ep.elementId, ep.connections[i]);\n                }\n            }\n        };\n\n        this.redraw = function (elementId, ui, timestamp, offsetToUI, clearEdits, doNotRecalcEndpoint) {\n\n            if (!jsPlumbInstance.isSuspendDrawing()) {\n                // get all the endpoints for this element\n                var ep = _amEndpoints[elementId] || [],\n                    endpointConnections = connectionsByElementId[elementId] || [],\n                    connectionsToPaint = [],\n                    endpointsToPaint = [],\n                    anchorsToUpdate = [];\n\n                timestamp = timestamp || jsPlumbInstance.timestamp();\n                // offsetToUI are values that would have been calculated in the dragManager when registering\n                // an endpoint for an element that had a parent (somewhere in the hierarchy) that had been\n                // registered as draggable.\n                offsetToUI = offsetToUI || {left: 0, top: 0};\n                if (ui) {\n                    ui = {\n                        left: ui.left + offsetToUI.left,\n                        top: ui.top + offsetToUI.top\n                    };\n                }\n\n                // valid for one paint cycle.\n                var myOffset = jsPlumbInstance.updateOffset({ elId: elementId, offset: ui, recalc: false, timestamp: timestamp }),\n                    orientationCache = {};\n\n                // actually, first we should compute the orientation of this element to all other elements to which\n                // this element is connected with a continuous anchor (whether both ends of the connection have\n                // a continuous anchor or just one)\n\n                for (var i = 0; i < endpointConnections.length; i++) {\n                    var conn = endpointConnections[i][0],\n                        sourceId = conn.sourceId,\n                        targetId = conn.targetId,\n                        sourceContinuous = conn.endpoints[0].anchor.isContinuous,\n                        targetContinuous = conn.endpoints[1].anchor.isContinuous;\n\n                    if (sourceContinuous || targetContinuous) {\n                        var oKey = sourceId + \"_\" + targetId,\n                            o = orientationCache[oKey],\n                            oIdx = conn.sourceId === elementId ? 1 : 0;\n\n                        if (sourceContinuous && !anchorLists[sourceId]) {\n                            anchorLists[sourceId] = { top: [], right: [], bottom: [], left: [] };\n                        }\n                        if (targetContinuous && !anchorLists[targetId]) {\n                            anchorLists[targetId] = { top: [], right: [], bottom: [], left: [] };\n                        }\n\n                        if (elementId !== targetId) {\n                            jsPlumbInstance.updateOffset({ elId: targetId, timestamp: timestamp });\n                        }\n                        if (elementId !== sourceId) {\n                            jsPlumbInstance.updateOffset({ elId: sourceId, timestamp: timestamp });\n                        }\n\n                        var td = jsPlumbInstance.getCachedData(targetId),\n                            sd = jsPlumbInstance.getCachedData(sourceId);\n\n                        if (targetId === sourceId && (sourceContinuous || targetContinuous)) {\n                            // here we may want to improve this by somehow determining the face we'd like\n                            // to put the connector on.  ideally, when drawing, the face should be calculated\n                            // by determining which face is closest to the point at which the mouse button\n                            // was released.  for now, we're putting it on the top face.\n                            _updateAnchorList( anchorLists[sourceId], -Math.PI / 2, 0, conn, false, targetId, 0, false, \"top\", sourceId, connectionsToPaint, endpointsToPaint);\n                            _updateAnchorList( anchorLists[targetId], -Math.PI / 2, 0, conn, false, sourceId, 1, false, \"top\", targetId, connectionsToPaint, endpointsToPaint);\n                        }\n                        else {\n                            if (!o) {\n                                o = this.calculateOrientation(sourceId, targetId, sd.o, td.o, conn.endpoints[0].anchor, conn.endpoints[1].anchor, conn);\n                                orientationCache[oKey] = o;\n                                // this would be a performance enhancement, but the computed angles need to be clamped to\n                                //the (-PI/2 -> PI/2) range in order for the sorting to work properly.\n                                /*  orientationCache[oKey2] = {\n                                 orientation:o.orientation,\n                                 a:[o.a[1], o.a[0]],\n                                 theta:o.theta + Math.PI,\n                                 theta2:o.theta2 + Math.PI\n                                 };*/\n                            }\n                            if (sourceContinuous) {\n                                _updateAnchorList(anchorLists[sourceId], o.theta, 0, conn, false, targetId, 0, false, o.a[0], sourceId, connectionsToPaint, endpointsToPaint);\n                            }\n                            if (targetContinuous) {\n                                _updateAnchorList(anchorLists[targetId], o.theta2, -1, conn, true, sourceId, 1, true, o.a[1], targetId, connectionsToPaint, endpointsToPaint);\n                            }\n                        }\n\n                        if (sourceContinuous) {\n                            _ju.addWithFunction(anchorsToUpdate, sourceId, function (a) {\n                                return a === sourceId;\n                            });\n                        }\n                        if (targetContinuous) {\n                            _ju.addWithFunction(anchorsToUpdate, targetId, function (a) {\n                                return a === targetId;\n                            });\n                        }\n                        _ju.addWithFunction(connectionsToPaint, conn, function (c) {\n                            return c.id === conn.id;\n                        });\n                        if ((sourceContinuous && oIdx === 0) || (targetContinuous && oIdx === 1)) {\n                            _ju.addWithFunction(endpointsToPaint, conn.endpoints[oIdx], function (e) {\n                                return e.id === conn.endpoints[oIdx].id;\n                            });\n                        }\n                    }\n                }\n\n                // place Endpoints whose anchors are continuous but have no Connections\n                for (i = 0; i < ep.length; i++) {\n                    if (ep[i].connections.length === 0 && ep[i].anchor.isContinuous) {\n                        if (!anchorLists[elementId]) {\n                            anchorLists[elementId] = { top: [], right: [], bottom: [], left: [] };\n                        }\n                        _updateAnchorList(anchorLists[elementId], -Math.PI / 2, 0, {endpoints: [ep[i], ep[i]], paint: function () {\n                        }}, false, elementId, 0, false, ep[i].anchor.getDefaultFace(), elementId, connectionsToPaint, endpointsToPaint);\n                        _ju.addWithFunction(anchorsToUpdate, elementId, function (a) {\n                            return a === elementId;\n                        });\n                    }\n                }\n\n                // now place all the continuous anchors we need to;\n                for (i = 0; i < anchorsToUpdate.length; i++) {\n                    placeAnchors(anchorsToUpdate[i], anchorLists[anchorsToUpdate[i]]);\n                }\n\n                // now that continuous anchors have been placed, paint all the endpoints for this element\n                // TODO performance: add the endpoint ids to a temp array, and then when iterating in the next\n                // loop, check that we didn't just paint that endpoint. we can probably shave off a few more milliseconds this way.\n                for (i = 0; i < ep.length; i++) {\n                    ep[i].paint({ timestamp: timestamp, offset: myOffset, dimensions: myOffset.s, recalc: doNotRecalcEndpoint !== true });\n                }\n\n                // ... and any other endpoints we came across as a result of the continuous anchors.\n                for (i = 0; i < endpointsToPaint.length; i++) {\n                    var cd = jsPlumbInstance.getCachedData(endpointsToPaint[i].elementId);\n                    endpointsToPaint[i].paint({ timestamp: timestamp, offset: cd, dimensions: cd.s });\n                }\n\n                // paint all the standard and \"dynamic connections\", which are connections whose other anchor is\n                // static and therefore does need to be recomputed; we make sure that happens only one time.\n\n                // TODO we could have compiled a list of these in the first pass through connections; might save some time.\n                for (i = 0; i < endpointConnections.length; i++) {\n                    var otherEndpoint = endpointConnections[i][1];\n                    if (otherEndpoint.anchor.constructor === _jp.DynamicAnchor) {\n                        otherEndpoint.paint({ elementWithPrecedence: elementId, timestamp: timestamp });\n                        _ju.addWithFunction(connectionsToPaint, endpointConnections[i][0], function (c) {\n                            return c.id === endpointConnections[i][0].id;\n                        });\n                        // all the connections for the other endpoint now need to be repainted\n                        for (var k = 0; k < otherEndpoint.connections.length; k++) {\n                            if (otherEndpoint.connections[k] !== endpointConnections[i][0]) {\n                                _ju.addWithFunction(connectionsToPaint, otherEndpoint.connections[k], function (c) {\n                                    return c.id === otherEndpoint.connections[k].id;\n                                });\n                            }\n                        }\n                    } else {\n                        _ju.addWithFunction(connectionsToPaint, endpointConnections[i][0], function (c) {\n                            return c.id === endpointConnections[i][0].id;\n                        });\n                    }\n                }\n\n                // paint current floating connection for this element, if there is one.\n                var fc = floatingConnections[elementId];\n                if (fc) {\n                    fc.paint({timestamp: timestamp, recalc: false, elId: elementId});\n                }\n\n                // paint all the connections\n                for (i = 0; i < connectionsToPaint.length; i++) {\n                    connectionsToPaint[i].paint({elId: elementId, timestamp: timestamp, recalc: false, clearEdits: clearEdits});\n                }\n            }\n        };\n\n        var ContinuousAnchor = function (anchorParams) {\n            _ju.EventGenerator.apply(this);\n            this.type = \"Continuous\";\n            this.isDynamic = true;\n            this.isContinuous = true;\n            var faces = anchorParams.faces || [\"top\", \"right\", \"bottom\", \"left\"],\n                clockwise = !(anchorParams.clockwise === false),\n                availableFaces = { },\n                opposites = { \"top\": \"bottom\", \"right\": \"left\", \"left\": \"right\", \"bottom\": \"top\" },\n                clockwiseOptions = { \"top\": \"right\", \"right\": \"bottom\", \"left\": \"top\", \"bottom\": \"left\" },\n                antiClockwiseOptions = { \"top\": \"left\", \"right\": \"top\", \"left\": \"bottom\", \"bottom\": \"right\" },\n                secondBest = clockwise ? clockwiseOptions : antiClockwiseOptions,\n                lastChoice = clockwise ? antiClockwiseOptions : clockwiseOptions,\n                cssClass = anchorParams.cssClass || \"\",\n                _currentFace = null, _lockedFace = null, X_AXIS_FACES = [\"left\", \"right\"], Y_AXIS_FACES = [\"top\", \"bottom\"],\n                _lockedAxis = null;\n\n            for (var i = 0; i < faces.length; i++) {\n                availableFaces[faces[i]] = true;\n            }\n\n            this.getDefaultFace = function () {\n                return faces.length === 0 ? \"top\" : faces[0];\n            };\n\n            this.isRelocatable = function() { return true; };\n            this.isSnapOnRelocate = function() { return true; };\n\n            // if the given edge is supported, returns it. otherwise looks for a substitute that _is_\n            // supported. if none supported we also return the request edge.\n            this.verifyEdge = function (edge) {\n                if (availableFaces[edge]) {\n                    return edge;\n                }\n                else if (availableFaces[opposites[edge]]) {\n                    return opposites[edge];\n                }\n                else if (availableFaces[secondBest[edge]]) {\n                    return secondBest[edge];\n                }\n                else if (availableFaces[lastChoice[edge]]) {\n                    return lastChoice[edge];\n                }\n                return edge; // we have to give them something.\n            };\n\n            this.isEdgeSupported = function (edge) {\n                return  _lockedAxis == null ?\n\n                    (_lockedFace == null ? availableFaces[edge] === true : _lockedFace === edge)\n\n                    : _lockedAxis.indexOf(edge) !== -1;\n            };\n\n            this.setCurrentFace = function(face, overrideLock) {\n                _currentFace = face;\n                // if currently locked, and the user wants to override, do that.\n                if (overrideLock && _lockedFace != null) {\n                    _lockedFace = _currentFace;\n                }\n            };\n\n            this.getCurrentFace = function() { return _currentFace; };\n            this.getSupportedFaces = function() {\n                var af = [];\n                for (var k in availableFaces) {\n                    if (availableFaces[k]) {\n                        af.push(k);\n                    }\n                }\n                return af;\n            };\n\n            this.lock = function() {\n                _lockedFace = _currentFace;\n            };\n            this.unlock = function() {\n                _lockedFace = null;\n            };\n            this.isLocked = function() {\n                return _lockedFace != null;\n            };\n\n            this.lockCurrentAxis = function() {\n                if (_currentFace != null) {\n                    _lockedAxis = (_currentFace === \"left\" || _currentFace === \"right\") ? X_AXIS_FACES : Y_AXIS_FACES;\n                }\n            };\n\n            this.unlockCurrentAxis = function() {\n                _lockedAxis = null;\n            };\n\n            this.compute = function (params) {\n                return userDefinedContinuousAnchorLocations[params.element.id] || continuousAnchorLocations[params.element.id] || [0, 0];\n            };\n            this.getCurrentLocation = function (params) {\n                return userDefinedContinuousAnchorLocations[params.element.id] || continuousAnchorLocations[params.element.id] || [0, 0];\n            };\n            this.getOrientation = function (endpoint) {\n                return continuousAnchorOrientations[endpoint.id] || [0, 0];\n            };\n            this.clearUserDefinedLocation = function () {\n                delete userDefinedContinuousAnchorLocations[anchorParams.elementId];\n            };\n            this.setUserDefinedLocation = function (loc) {\n                userDefinedContinuousAnchorLocations[anchorParams.elementId] = loc;\n            };\n            this.getCssClass = function () {\n                return cssClass;\n            };\n        };\n\n        // continuous anchors\n        jsPlumbInstance.continuousAnchorFactory = {\n            get: function (params) {\n                return new ContinuousAnchor(params);\n            },\n            clear: function (elementId) {\n                delete userDefinedContinuousAnchorLocations[elementId];\n                delete continuousAnchorLocations[elementId];\n            }\n        };\n    };\n\n    _jp.AnchorManager.prototype.calculateOrientation = function (sourceId, targetId, sd, td, sourceAnchor, targetAnchor) {\n\n        var Orientation = { HORIZONTAL: \"horizontal\", VERTICAL: \"vertical\", DIAGONAL: \"diagonal\", IDENTITY: \"identity\" },\n            axes = [\"left\", \"top\", \"right\", \"bottom\"];\n\n        if (sourceId === targetId) {\n            return {\n                orientation: Orientation.IDENTITY,\n                a: [\"top\", \"top\"]\n            };\n        }\n\n        var theta = Math.atan2((td.centery - sd.centery), (td.centerx - sd.centerx)),\n            theta2 = Math.atan2((sd.centery - td.centery), (sd.centerx - td.centerx));\n\n// --------------------------------------------------------------------------------------\n\n        // improved face calculation. get midpoints of each face for source and target, then put in an array with all combinations of\n        // source/target faces. sort this array by distance between midpoints. the entry at index 0 is our preferred option. we can\n        // go through the array one by one until we find an entry in which each requested face is supported.\n        var candidates = [], midpoints = { };\n        (function (types, dim) {\n            for (var i = 0; i < types.length; i++) {\n                midpoints[types[i]] = {\n                    \"left\": [ dim[i].left, dim[i].centery ],\n                    \"right\": [ dim[i].right, dim[i].centery ],\n                    \"top\": [ dim[i].centerx, dim[i].top ],\n                    \"bottom\": [ dim[i].centerx , dim[i].bottom]\n                };\n            }\n        })([ \"source\", \"target\" ], [ sd, td ]);\n\n        for (var sf = 0; sf < axes.length; sf++) {\n            for (var tf = 0; tf < axes.length; tf++) {\n                candidates.push({\n                    source: axes[sf],\n                    target: axes[tf],\n                    dist: Biltong.lineLength(midpoints.source[axes[sf]], midpoints.target[axes[tf]])\n                });\n            }\n        }\n\n        candidates.sort(function (a, b) {\n            return a.dist < b.dist ? -1 : a.dist > b.dist ? 1 : 0;\n        });\n\n        // now go through this list and try to get an entry that satisfies both (there will be one, unless one of the anchors\n        // declares no available faces)\n        var sourceEdge = candidates[0].source, targetEdge = candidates[0].target;\n        for (var i = 0; i < candidates.length; i++) {\n\n            if (!sourceAnchor.isContinuous || sourceAnchor.isEdgeSupported(candidates[i].source)) {\n                sourceEdge = candidates[i].source;\n            }\n            else {\n                sourceEdge = null;\n            }\n\n            if (!targetAnchor.isContinuous || targetAnchor.isEdgeSupported(candidates[i].target)) {\n                targetEdge = candidates[i].target;\n            }\n            else {\n                targetEdge = null;\n            }\n\n            if (sourceEdge != null && targetEdge != null) {\n                break;\n            }\n        }\n\n        if (sourceAnchor.isContinuous) {\n            sourceAnchor.setCurrentFace(sourceEdge);\n        }\n\n        if (targetAnchor.isContinuous) {\n            targetAnchor.setCurrentFace(targetEdge);\n        }\n\n// --------------------------------------------------------------------------------------\n\n        return {\n            a: [ sourceEdge, targetEdge ],\n            theta: theta,\n            theta2: theta2\n        };\n    };\n\n    /**\n     * Anchors model a position on some element at which an Endpoint may be located.  They began as a first class citizen of jsPlumb, ie. a user\n     * was required to create these themselves, but over time this has been replaced by the concept of referring to them either by name (eg. \"TopMiddle\"),\n     * or by an array describing their coordinates (eg. [ 0, 0.5, 0, -1 ], which is the same as \"TopMiddle\").  jsPlumb now handles all of the\n     * creation of Anchors without user intervention.\n     */\n    _jp.Anchor = function (params) {\n        this.x = params.x || 0;\n        this.y = params.y || 0;\n        this.elementId = params.elementId;\n        this.cssClass = params.cssClass || \"\";\n        this.userDefinedLocation = null;\n        this.orientation = params.orientation || [ 0, 0 ];\n        this.lastReturnValue = null;\n        this.offsets = params.offsets || [ 0, 0 ];\n        this.timestamp = null;\n\n        var relocatable = params.relocatable !== false;\n        this.isRelocatable = function() { return relocatable; };\n        this.setRelocatable = function(_relocatable) { relocatable = _relocatable; };\n        var snapOnRelocate = params.snapOnRelocate !== false;\n        this.isSnapOnRelocate = function() { return snapOnRelocate; };\n\n        var locked = false;\n        this.lock = function() { locked = true; };\n        this.unlock = function() { locked = false; };\n        this.isLocked = function() { return locked; };\n\n        _ju.EventGenerator.apply(this);\n\n        this.compute = function (params) {\n\n            var xy = params.xy, wh = params.wh, timestamp = params.timestamp;\n\n            if (params.clearUserDefinedLocation) {\n                this.userDefinedLocation = null;\n            }\n\n            if (timestamp && timestamp === this.timestamp) {\n                return this.lastReturnValue;\n            }\n\n            if (this.userDefinedLocation != null) {\n                this.lastReturnValue = this.userDefinedLocation;\n            }\n            else {\n                this.lastReturnValue = [ xy[0] + (this.x * wh[0]) + this.offsets[0], xy[1] + (this.y * wh[1]) + this.offsets[1], this.x, this.y ];\n            }\n\n            this.timestamp = timestamp;\n            return this.lastReturnValue;\n        };\n\n        this.getCurrentLocation = function (params) {\n            params = params || {};\n            return (this.lastReturnValue == null || (params.timestamp != null && this.timestamp !== params.timestamp)) ? this.compute(params) : this.lastReturnValue;\n        };\n\n        this.setPosition = function(x, y, ox, oy, overrideLock) {\n            if (!locked || overrideLock) {\n                this.x = x;\n                this.y = y;\n                this.orientation = [ ox, oy ];\n                this.lastReturnValue = null;\n            }\n        };\n    };\n    _ju.extend(_jp.Anchor, _ju.EventGenerator, {\n        equals: function (anchor) {\n            if (!anchor) {\n                return false;\n            }\n            var ao = anchor.getOrientation(),\n                o = this.getOrientation();\n            return this.x === anchor.x && this.y === anchor.y && this.offsets[0] === anchor.offsets[0] && this.offsets[1] === anchor.offsets[1] && o[0] === ao[0] && o[1] === ao[1];\n        },\n        getUserDefinedLocation: function () {\n            return this.userDefinedLocation;\n        },\n        setUserDefinedLocation: function (l) {\n            this.userDefinedLocation = l;\n        },\n        clearUserDefinedLocation: function () {\n            this.userDefinedLocation = null;\n        },\n        getOrientation: function () {\n            return this.orientation;\n        },\n        getCssClass: function () {\n            return this.cssClass;\n        }\n    });\n\n    /**\n     * An Anchor that floats. its orientation is computed dynamically from\n     * its position relative to the anchor it is floating relative to.  It is used when creating\n     * a connection through drag and drop.\n     *\n     * TODO FloatingAnchor could totally be refactored to extend Anchor just slightly.\n     */\n    _jp.FloatingAnchor = function (params) {\n\n        _jp.Anchor.apply(this, arguments);\n\n        // this is the anchor that this floating anchor is referenced to for\n        // purposes of calculating the orientation.\n        var ref = params.reference,\n            // the canvas this refers to.\n            refCanvas = params.referenceCanvas,\n            size = _jp.getSize(refCanvas),\n            // these are used to store the current relative position of our\n            // anchor wrt the reference anchor. they only indicate\n            // direction, so have a value of 1 or -1 (or, very rarely, 0). these\n            // values are written by the compute method, and read\n            // by the getOrientation method.\n            xDir = 0, yDir = 0,\n            // temporary member used to store an orientation when the floating\n            // anchor is hovering over another anchor.\n            orientation = null,\n            _lastResult = null;\n\n        // clear from parent. we want floating anchor orientation to always be computed.\n        this.orientation = null;\n\n        // set these to 0 each; they are used by certain types of connectors in the loopback case,\n        // when the connector is trying to clear the element it is on. but for floating anchor it's not\n        // very important.\n        this.x = 0;\n        this.y = 0;\n\n        this.isFloating = true;\n\n        this.compute = function (params) {\n            var xy = params.xy,\n                result = [ xy[0] + (size[0] / 2), xy[1] + (size[1] / 2) ]; // return origin of the element. we may wish to improve this so that any object can be the drag proxy.\n            _lastResult = result;\n            return result;\n        };\n\n        this.getOrientation = function (_endpoint) {\n            if (orientation) {\n                return orientation;\n            }\n            else {\n                var o = ref.getOrientation(_endpoint);\n                // here we take into account the orientation of the other\n                // anchor: if it declares zero for some direction, we declare zero too. this might not be the most awesome. perhaps we can come\n                // up with a better way. it's just so that the line we draw looks like it makes sense. maybe this wont make sense.\n                return [ Math.abs(o[0]) * xDir * -1,\n                    Math.abs(o[1]) * yDir * -1 ];\n            }\n        };\n\n        /**\n         * notification the endpoint associated with this anchor is hovering\n         * over another anchor; we want to assume that anchor's orientation\n         * for the duration of the hover.\n         */\n        this.over = function (anchor, endpoint) {\n            orientation = anchor.getOrientation(endpoint);\n        };\n\n        /**\n         * notification the endpoint associated with this anchor is no\n         * longer hovering over another anchor; we should resume calculating\n         * orientation as we normally do.\n         */\n        this.out = function () {\n            orientation = null;\n        };\n\n        this.getCurrentLocation = function (params) {\n            return _lastResult == null ? this.compute(params) : _lastResult;\n        };\n    };\n    _ju.extend(_jp.FloatingAnchor, _jp.Anchor);\n\n    var _convertAnchor = function (anchor, jsPlumbInstance, elementId) {\n        return anchor.constructor === _jp.Anchor ? anchor : jsPlumbInstance.makeAnchor(anchor, elementId, jsPlumbInstance);\n    };\n\n    /* \n     * A DynamicAnchor is an Anchor that contains a list of other Anchors, which it cycles\n     * through at compute time to find the one that is located closest to\n     * the center of the target element, and returns that Anchor's compute\n     * method result. this causes endpoints to follow each other with\n     * respect to the orientation of their target elements, which is a useful\n     * feature for some applications.\n     * \n     */\n    _jp.DynamicAnchor = function (params) {\n        _jp.Anchor.apply(this, arguments);\n\n        this.isDynamic = true;\n        this.anchors = [];\n        this.elementId = params.elementId;\n        this.jsPlumbInstance = params.jsPlumbInstance;\n\n        for (var i = 0; i < params.anchors.length; i++) {\n            this.anchors[i] = _convertAnchor(params.anchors[i], this.jsPlumbInstance, this.elementId);\n        }\n\n        this.getAnchors = function () {\n            return this.anchors;\n        };\n\n        var _curAnchor = this.anchors.length > 0 ? this.anchors[0] : null,\n            _lastAnchor = _curAnchor,\n            self = this,\n\n            // helper method to calculate the distance between the centers of the two elements.\n            _distance = function (anchor, cx, cy, xy, wh) {\n                var ax = xy[0] + (anchor.x * wh[0]), ay = xy[1] + (anchor.y * wh[1]),\n                    acx = xy[0] + (wh[0] / 2), acy = xy[1] + (wh[1] / 2);\n                return (Math.sqrt(Math.pow(cx - ax, 2) + Math.pow(cy - ay, 2)) +\n                Math.sqrt(Math.pow(acx - ax, 2) + Math.pow(acy - ay, 2)));\n            },\n            // default method uses distance between element centers.  you can provide your own method in the dynamic anchor\n            // constructor (and also to jsPlumb.makeDynamicAnchor). the arguments to it are four arrays:\n            // xy - xy loc of the anchor's element\n            // wh - anchor's element's dimensions\n            // txy - xy loc of the element of the other anchor in the connection\n            // twh - dimensions of the element of the other anchor in the connection.\n            // anchors - the list of selectable anchors\n            _anchorSelector = params.selector || function (xy, wh, txy, twh, anchors) {\n                    var cx = txy[0] + (twh[0] / 2), cy = txy[1] + (twh[1] / 2);\n                    var minIdx = -1, minDist = Infinity;\n                    for (var i = 0; i < anchors.length; i++) {\n                        var d = _distance(anchors[i], cx, cy, xy, wh);\n                        if (d < minDist) {\n                            minIdx = i + 0;\n                            minDist = d;\n                        }\n                    }\n                    return anchors[minIdx];\n                };\n\n        this.compute = function (params) {\n            var xy = params.xy, wh = params.wh, txy = params.txy, twh = params.twh;\n\n            this.timestamp = params.timestamp;\n\n            var udl = self.getUserDefinedLocation();\n            if (udl != null) {\n                return udl;\n            }\n\n            // if anchor is locked or an opposite element was not given, we\n            // maintain our state. anchor will be locked\n            // if it is the source of a drag and drop.\n            if (this.isLocked() || txy == null || twh == null) {\n                return _curAnchor.compute(params);\n            }\n            else {\n                params.timestamp = null; // otherwise clear this, i think. we want the anchor to compute.\n            }\n\n            _curAnchor = _anchorSelector(xy, wh, txy, twh, this.anchors);\n            this.x = _curAnchor.x;\n            this.y = _curAnchor.y;\n\n            if (_curAnchor !== _lastAnchor) {\n                this.fire(\"anchorChanged\", _curAnchor);\n            }\n\n            _lastAnchor = _curAnchor;\n\n            return _curAnchor.compute(params);\n        };\n\n        this.getCurrentLocation = function (params) {\n            return this.getUserDefinedLocation() || (_curAnchor != null ? _curAnchor.getCurrentLocation(params) : null);\n        };\n\n        this.getOrientation = function (_endpoint) {\n            return _curAnchor != null ? _curAnchor.getOrientation(_endpoint) : [ 0, 0 ];\n        };\n        this.over = function (anchor, endpoint) {\n            if (_curAnchor != null) {\n                _curAnchor.over(anchor, endpoint);\n            }\n        };\n        this.out = function () {\n            if (_curAnchor != null) {\n                _curAnchor.out();\n            }\n        };\n\n        this.setAnchor = function(a) {\n            _curAnchor = a;\n        };\n\n        this.getCssClass = function () {\n            return (_curAnchor && _curAnchor.getCssClass()) || \"\";\n        };\n\n        /**\n         * Attempt to match an anchor with the given coordinates and then set it.\n         * @param coords\n         * @returns true if matching anchor found, false otherwise.\n         */\n        this.setAnchorCoordinates = function(coords) {\n            var idx = jsPlumbUtil.findWithFunction(this.anchors, function(a) {\n                return a.x === coords[0] && a.y === coords[1];\n            });\n            if (idx !== -1) {\n                this.setAnchor(this.anchors[idx]);\n                return true;\n            } else {\n                return false;\n            }\n        };\n    };\n    _ju.extend(_jp.DynamicAnchor, _jp.Anchor);\n\n// -------- basic anchors ------------------    \n    var _curryAnchor = function (x, y, ox, oy, type, fnInit) {\n        _jp.Anchors[type] = function (params) {\n            var a = params.jsPlumbInstance.makeAnchor([ x, y, ox, oy, 0, 0 ], params.elementId, params.jsPlumbInstance);\n            a.type = type;\n            if (fnInit) {\n                fnInit(a, params);\n            }\n            return a;\n        };\n    };\n\n    _curryAnchor(0.5, 0, 0, -1, \"TopCenter\");\n    _curryAnchor(0.5, 1, 0, 1, \"BottomCenter\");\n    _curryAnchor(0, 0.5, -1, 0, \"LeftMiddle\");\n    _curryAnchor(1, 0.5, 1, 0, \"RightMiddle\");\n\n    _curryAnchor(0.5, 0, 0, -1, \"Top\");\n    _curryAnchor(0.5, 1, 0, 1, \"Bottom\");\n    _curryAnchor(0, 0.5, -1, 0, \"Left\");\n    _curryAnchor(1, 0.5, 1, 0, \"Right\");\n    _curryAnchor(0.5, 0.5, 0, 0, \"Center\");\n    _curryAnchor(1, 0, 0, -1, \"TopRight\");\n    _curryAnchor(1, 1, 0, 1, \"BottomRight\");\n    _curryAnchor(0, 0, 0, -1, \"TopLeft\");\n    _curryAnchor(0, 1, 0, 1, \"BottomLeft\");\n\n// ------- dynamic anchors -------------------    \n\n    // default dynamic anchors chooses from Top, Right, Bottom, Left\n    _jp.Defaults.DynamicAnchors = function (params) {\n        return params.jsPlumbInstance.makeAnchors([\"TopCenter\", \"RightMiddle\", \"BottomCenter\", \"LeftMiddle\"], params.elementId, params.jsPlumbInstance);\n    };\n\n    // default dynamic anchors bound to name 'AutoDefault'\n    _jp.Anchors.AutoDefault = function (params) {\n        var a = params.jsPlumbInstance.makeDynamicAnchor(_jp.Defaults.DynamicAnchors(params));\n        a.type = \"AutoDefault\";\n        return a;\n    };\n\n// ------- continuous anchors -------------------    \n\n    var _curryContinuousAnchor = function (type, faces) {\n        _jp.Anchors[type] = function (params) {\n            var a = params.jsPlumbInstance.makeAnchor([\"Continuous\", { faces: faces }], params.elementId, params.jsPlumbInstance);\n            a.type = type;\n            return a;\n        };\n    };\n\n    _jp.Anchors.Continuous = function (params) {\n        return params.jsPlumbInstance.continuousAnchorFactory.get(params);\n    };\n\n    _curryContinuousAnchor(\"ContinuousLeft\", [\"left\"]);\n    _curryContinuousAnchor(\"ContinuousTop\", [\"top\"]);\n    _curryContinuousAnchor(\"ContinuousBottom\", [\"bottom\"]);\n    _curryContinuousAnchor(\"ContinuousRight\", [\"right\"]);\n\n// ------- position assign anchors -------------------    \n\n    // this anchor type lets you assign the position at connection time.\n    _curryAnchor(0, 0, 0, 0, \"Assign\", function (anchor, params) {\n        // find what to use as the \"position finder\". the user may have supplied a String which represents\n        // the id of a position finder in jsPlumb.AnchorPositionFinders, or the user may have supplied the\n        // position finder as a function.  we find out what to use and then set it on the anchor.\n        var pf = params.position || \"Fixed\";\n        anchor.positionFinder = pf.constructor === String ? params.jsPlumbInstance.AnchorPositionFinders[pf] : pf;\n        // always set the constructor params; the position finder might need them later (the Grid one does,\n        // for example)\n        anchor.constructorParams = params;\n    });\n\n    // these are the default anchor positions finders, which are used by the makeTarget function.  supplying\n    // a position finder argument to that function allows you to specify where the resulting anchor will\n    // be located\n    root.jsPlumbInstance.prototype.AnchorPositionFinders = {\n        \"Fixed\": function (dp, ep, es) {\n            return [ (dp.left - ep.left) / es[0], (dp.top - ep.top) / es[1] ];\n        },\n        \"Grid\": function (dp, ep, es, params) {\n            var dx = dp.left - ep.left, dy = dp.top - ep.top,\n                gx = es[0] / (params.grid[0]), gy = es[1] / (params.grid[1]),\n                mx = Math.floor(dx / gx), my = Math.floor(dy / gy);\n            return [ ((mx * gx) + (gx / 2)) / es[0], ((my * gy) + (gy / 2)) / es[1] ];\n        }\n    };\n\n// ------- perimeter anchors -------------------    \n\n    _jp.Anchors.Perimeter = function (params) {\n        params = params || {};\n        var anchorCount = params.anchorCount || 60,\n            shape = params.shape;\n\n        if (!shape) {\n            throw new Error(\"no shape supplied to Perimeter Anchor type\");\n        }\n\n        var _circle = function () {\n                var r = 0.5, step = Math.PI * 2 / anchorCount, current = 0, a = [];\n                for (var i = 0; i < anchorCount; i++) {\n                    var x = r + (r * Math.sin(current)),\n                        y = r + (r * Math.cos(current));\n                    a.push([ x, y, 0, 0 ]);\n                    current += step;\n                }\n                return a;\n            },\n            _path = function (segments) {\n                var anchorsPerFace = anchorCount / segments.length, a = [],\n                    _computeFace = function (x1, y1, x2, y2, fractionalLength) {\n                        anchorsPerFace = anchorCount * fractionalLength;\n                        var dx = (x2 - x1) / anchorsPerFace, dy = (y2 - y1) / anchorsPerFace;\n                        for (var i = 0; i < anchorsPerFace; i++) {\n                            a.push([\n                                x1 + (dx * i),\n                                y1 + (dy * i),\n                                0,\n                                0\n                            ]);\n                        }\n                    };\n\n                for (var i = 0; i < segments.length; i++) {\n                    _computeFace.apply(null, segments[i]);\n                }\n\n                return a;\n            },\n            _shape = function (faces) {\n                var s = [];\n                for (var i = 0; i < faces.length; i++) {\n                    s.push([faces[i][0], faces[i][1], faces[i][2], faces[i][3], 1 / faces.length]);\n                }\n                return _path(s);\n            },\n            _rectangle = function () {\n                return _shape([\n                    [ 0, 0, 1, 0 ],\n                    [ 1, 0, 1, 1 ],\n                    [ 1, 1, 0, 1 ],\n                    [ 0, 1, 0, 0 ]\n                ]);\n            };\n\n        var _shapes = {\n                \"Circle\": _circle,\n                \"Ellipse\": _circle,\n                \"Diamond\": function () {\n                    return _shape([\n                        [ 0.5, 0, 1, 0.5 ],\n                        [ 1, 0.5, 0.5, 1 ],\n                        [ 0.5, 1, 0, 0.5 ],\n                        [ 0, 0.5, 0.5, 0 ]\n                    ]);\n                },\n                \"Rectangle\": _rectangle,\n                \"Square\": _rectangle,\n                \"Triangle\": function () {\n                    return _shape([\n                        [ 0.5, 0, 1, 1 ],\n                        [ 1, 1, 0, 1 ],\n                        [ 0, 1, 0.5, 0]\n                    ]);\n                },\n                \"Path\": function (params) {\n                    var points = params.points, p = [], tl = 0;\n                    for (var i = 0; i < points.length - 1; i++) {\n                        var l = Math.sqrt(Math.pow(points[i][2] - points[i][0]) + Math.pow(points[i][3] - points[i][1]));\n                        tl += l;\n                        p.push([points[i][0], points[i][1], points[i + 1][0], points[i + 1][1], l]);\n                    }\n                    for (var j = 0; j < p.length; j++) {\n                        p[j][4] = p[j][4] / tl;\n                    }\n                    return _path(p);\n                }\n            },\n            _rotate = function (points, amountInDegrees) {\n                var o = [], theta = amountInDegrees / 180 * Math.PI;\n                for (var i = 0; i < points.length; i++) {\n                    var _x = points[i][0] - 0.5,\n                        _y = points[i][1] - 0.5;\n\n                    o.push([\n                        0.5 + ((_x * Math.cos(theta)) - (_y * Math.sin(theta))),\n                        0.5 + ((_x * Math.sin(theta)) + (_y * Math.cos(theta))),\n                        points[i][2],\n                        points[i][3]\n                    ]);\n                }\n                return o;\n            };\n\n        if (!_shapes[shape]) {\n            throw new Error(\"Shape [\" + shape + \"] is unknown by Perimeter Anchor type\");\n        }\n\n        var da = _shapes[shape](params);\n        if (params.rotation) {\n            da = _rotate(da, params.rotation);\n        }\n        var a = params.jsPlumbInstance.makeDynamicAnchor(da);\n        a.type = \"Perimeter\";\n        return a;\n    };\n}).call(typeof window !== 'undefined' ? window : this);\n/*\n * This file contains the default Connectors, Endpoint and Overlay definitions.\n *\n * Copyright (c) 2010 - 2018 jsPlumb (hello@jsplumbtoolkit.com)\n * \n * https://jsplumbtoolkit.com\n * https://github.com/jsplumb/jsplumb\n * \n * Dual licensed under the MIT and GPL2 licenses.\n */\n;\n(function () {\n\n    \"use strict\";\n    var root = this, _jp = root.jsPlumb, _ju = root.jsPlumbUtil, _jg = root.Biltong;\n\n    _jp.Segments = {\n\n        /*\n         * Class: AbstractSegment\n         * A Connector is made up of 1..N Segments, each of which has a Type, such as 'Straight', 'Arc',\n         * 'Bezier'. This is new from 1.4.2, and gives us a lot more flexibility when drawing connections: things such\n         * as rounded corners for flowchart connectors, for example, or a straight line stub for Bezier connections, are\n         * much easier to do now.\n         *\n         * A Segment is responsible for providing coordinates for painting it, and also must be able to report its length.\n         * \n         */\n        AbstractSegment: function (params) {\n            this.params = params;\n\n            /**\n             * Function: findClosestPointOnPath\n             * Finds the closest point on this segment to the given [x, y],\n             * returning both the x and y of the point plus its distance from\n             * the supplied point, and its location along the length of the\n             * path inscribed by the segment.  This implementation returns\n             * Infinity for distance and null values for everything else;\n             * subclasses are expected to override.\n             */\n            this.findClosestPointOnPath = function (x, y) {\n                return {\n                    d: Infinity,\n                    x: null,\n                    y: null,\n                    l: null\n                };\n            };\n\n            this.getBounds = function () {\n                return {\n                    minX: Math.min(params.x1, params.x2),\n                    minY: Math.min(params.y1, params.y2),\n                    maxX: Math.max(params.x1, params.x2),\n                    maxY: Math.max(params.y1, params.y2)\n                };\n            };\n        },\n        Straight: function (params) {\n            var _super = _jp.Segments.AbstractSegment.apply(this, arguments),\n                length, m, m2, x1, x2, y1, y2,\n                _recalc = function () {\n                    length = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n                    m = _jg.gradient({x: x1, y: y1}, {x: x2, y: y2});\n                    m2 = -1 / m;\n                };\n\n            this.type = \"Straight\";\n\n            this.getLength = function () {\n                return length;\n            };\n            this.getGradient = function () {\n                return m;\n            };\n\n            this.getCoordinates = function () {\n                return { x1: x1, y1: y1, x2: x2, y2: y2 };\n            };\n            this.setCoordinates = function (coords) {\n                x1 = coords.x1;\n                y1 = coords.y1;\n                x2 = coords.x2;\n                y2 = coords.y2;\n                _recalc();\n            };\n            this.setCoordinates({x1: params.x1, y1: params.y1, x2: params.x2, y2: params.y2});\n\n            this.getBounds = function () {\n                return {\n                    minX: Math.min(x1, x2),\n                    minY: Math.min(y1, y2),\n                    maxX: Math.max(x1, x2),\n                    maxY: Math.max(y1, y2)\n                };\n            };\n\n            /**\n             * returns the point on the segment's path that is 'location' along the length of the path, where 'location' is a decimal from\n             * 0 to 1 inclusive. for the straight line segment this is simple maths.\n             */\n            this.pointOnPath = function (location, absolute) {\n                if (location === 0 && !absolute) {\n                    return { x: x1, y: y1 };\n                }\n                else if (location === 1 && !absolute) {\n                    return { x: x2, y: y2 };\n                }\n                else {\n                    var l = absolute ? location > 0 ? location : length + location : location * length;\n                    return _jg.pointOnLine({x: x1, y: y1}, {x: x2, y: y2}, l);\n                }\n            };\n\n            /**\n             * returns the gradient of the segment at the given point - which for us is constant.\n             */\n            this.gradientAtPoint = function (_) {\n                return m;\n            };\n\n            /**\n             * returns the point on the segment's path that is 'distance' along the length of the path from 'location', where\n             * 'location' is a decimal from 0 to 1 inclusive, and 'distance' is a number of pixels.\n             * this hands off to jsPlumbUtil to do the maths, supplying two points and the distance.\n             */\n            this.pointAlongPathFrom = function (location, distance, absolute) {\n                var p = this.pointOnPath(location, absolute),\n                    farAwayPoint = distance <= 0 ? {x: x1, y: y1} : {x: x2, y: y2 };\n\n                /*\n                 location == 1 ? {\n                 x:x1 + ((x2 - x1) * 10),\n                 y:y1 + ((y1 - y2) * 10)\n                 } :\n                 */\n\n                if (distance <= 0 && Math.abs(distance) > 1) {\n                    distance *= -1;\n                }\n\n                return _jg.pointOnLine(p, farAwayPoint, distance);\n            };\n\n            // is c between a and b?\n            var within = function (a, b, c) {\n                return c >= Math.min(a, b) && c <= Math.max(a, b);\n            };\n            // find which of a and b is closest to c\n            var closest = function (a, b, c) {\n                return Math.abs(c - a) < Math.abs(c - b) ? a : b;\n            };\n\n            /**\n             Function: findClosestPointOnPath\n             Finds the closest point on this segment to [x,y]. See\n             notes on this method in AbstractSegment.\n             */\n            this.findClosestPointOnPath = function (x, y) {\n                var out = {\n                    d: Infinity,\n                    x: null,\n                    y: null,\n                    l: null,\n                    x1: x1,\n                    x2: x2,\n                    y1: y1,\n                    y2: y2\n                };\n\n                if (m === 0) {\n                    out.y = y1;\n                    out.x = within(x1, x2, x) ? x : closest(x1, x2, x);\n                }\n                else if (m === Infinity || m === -Infinity) {\n                    out.x = x1;\n                    out.y = within(y1, y2, y) ? y : closest(y1, y2, y);\n                }\n                else {\n                    // closest point lies on normal from given point to this line.  \n                    var b = y1 - (m * x1),\n                        b2 = y - (m2 * x),\n                    // y1 = m.x1 + b and y1 = m2.x1 + b2\n                    // so m.x1 + b = m2.x1 + b2\n                    // x1(m - m2) = b2 - b\n                    // x1 = (b2 - b) / (m - m2)\n                        _x1 = (b2 - b) / (m - m2),\n                        _y1 = (m * _x1) + b;\n\n                    out.x = within(x1, x2, _x1) ? _x1 : closest(x1, x2, _x1);//_x1;\n                    out.y = within(y1, y2, _y1) ? _y1 : closest(y1, y2, _y1);//_y1;\n                }\n\n                var fractionInSegment = _jg.lineLength([ out.x, out.y ], [ x1, y1 ]);\n                out.d = _jg.lineLength([x, y], [out.x, out.y]);\n                out.l = fractionInSegment / length;\n                return out;\n            };\n        },\n\n        /*\n         Arc Segment. You need to supply:\n\n         r   -   radius\n         cx  -   center x for the arc\n         cy  -   center y for the arc\n         ac  -   whether the arc is anticlockwise or not. default is clockwise.\n\n         and then either:\n\n         startAngle  -   startAngle for the arc.\n         endAngle    -   endAngle for the arc.\n\n         or:\n\n         x1          -   x for start point\n         y1          -   y for start point\n         x2          -   x for end point\n         y2          -   y for end point\n\n         */\n        Arc: function (params) {\n            var _super = _jp.Segments.AbstractSegment.apply(this, arguments),\n                _calcAngle = function (_x, _y) {\n                    return _jg.theta([params.cx, params.cy], [_x, _y]);\n                },\n                _calcAngleForLocation = function (segment, location) {\n                    if (segment.anticlockwise) {\n                        var sa = segment.startAngle < segment.endAngle ? segment.startAngle + TWO_PI : segment.startAngle,\n                            s = Math.abs(sa - segment.endAngle);\n                        return sa - (s * location);\n                    }\n                    else {\n                        var ea = segment.endAngle < segment.startAngle ? segment.endAngle + TWO_PI : segment.endAngle,\n                            ss = Math.abs(ea - segment.startAngle);\n\n                        return segment.startAngle + (ss * location);\n                    }\n                },\n                TWO_PI = 2 * Math.PI;\n\n            this.radius = params.r;\n            this.anticlockwise = params.ac;\n            this.type = \"Arc\";\n\n            if (params.startAngle && params.endAngle) {\n                this.startAngle = params.startAngle;\n                this.endAngle = params.endAngle;\n                this.x1 = params.cx + (this.radius * Math.cos(params.startAngle));\n                this.y1 = params.cy + (this.radius * Math.sin(params.startAngle));\n                this.x2 = params.cx + (this.radius * Math.cos(params.endAngle));\n                this.y2 = params.cy + (this.radius * Math.sin(params.endAngle));\n            }\n            else {\n                this.startAngle = _calcAngle(params.x1, params.y1);\n                this.endAngle = _calcAngle(params.x2, params.y2);\n                this.x1 = params.x1;\n                this.y1 = params.y1;\n                this.x2 = params.x2;\n                this.y2 = params.y2;\n            }\n\n            if (this.endAngle < 0) {\n                this.endAngle += TWO_PI;\n            }\n            if (this.startAngle < 0) {\n                this.startAngle += TWO_PI;\n            }\n\n            // segment is used by vml     \n            //this.segment = _jg.quadrant([this.x1, this.y1], [this.x2, this.y2]);\n\n            // we now have startAngle and endAngle as positive numbers, meaning the\n            // absolute difference (|d|) between them is the sweep (s) of this arc, unless the\n            // arc is 'anticlockwise' in which case 's' is given by 2PI - |d|.\n\n            var ea = this.endAngle < this.startAngle ? this.endAngle + TWO_PI : this.endAngle;\n            this.sweep = Math.abs(ea - this.startAngle);\n            if (this.anticlockwise) {\n                this.sweep = TWO_PI - this.sweep;\n            }\n            var circumference = 2 * Math.PI * this.radius,\n                frac = this.sweep / TWO_PI,\n                length = circumference * frac;\n\n            this.getLength = function () {\n                return length;\n            };\n\n            this.getBounds = function () {\n                return {\n                    minX: params.cx - params.r,\n                    maxX: params.cx + params.r,\n                    minY: params.cy - params.r,\n                    maxY: params.cy + params.r\n                };\n            };\n\n            var VERY_SMALL_VALUE = 0.0000000001,\n                gentleRound = function (n) {\n                    var f = Math.floor(n), r = Math.ceil(n);\n                    if (n - f < VERY_SMALL_VALUE) {\n                        return f;\n                    }\n                    else if (r - n < VERY_SMALL_VALUE) {\n                        return r;\n                    }\n                    return n;\n                };\n\n            /**\n             * returns the point on the segment's path that is 'location' along the length of the path, where 'location' is a decimal from\n             * 0 to 1 inclusive.\n             */\n            this.pointOnPath = function (location, absolute) {\n\n                if (location === 0) {\n                    return { x: this.x1, y: this.y1, theta: this.startAngle };\n                }\n                else if (location === 1) {\n                    return { x: this.x2, y: this.y2, theta: this.endAngle };\n                }\n\n                if (absolute) {\n                    location = location / length;\n                }\n\n                var angle = _calcAngleForLocation(this, location),\n                    _x = params.cx + (params.r * Math.cos(angle)),\n                    _y = params.cy + (params.r * Math.sin(angle));\n\n                return { x: gentleRound(_x), y: gentleRound(_y), theta: angle };\n            };\n\n            /**\n             * returns the gradient of the segment at the given point.\n             */\n            this.gradientAtPoint = function (location, absolute) {\n                var p = this.pointOnPath(location, absolute);\n                var m = _jg.normal([ params.cx, params.cy ], [p.x, p.y ]);\n                if (!this.anticlockwise && (m === Infinity || m === -Infinity)) {\n                    m *= -1;\n                }\n                return m;\n            };\n\n            this.pointAlongPathFrom = function (location, distance, absolute) {\n                var p = this.pointOnPath(location, absolute),\n                    arcSpan = distance / circumference * 2 * Math.PI,\n                    dir = this.anticlockwise ? -1 : 1,\n                    startAngle = p.theta + (dir * arcSpan),\n                    startX = params.cx + (this.radius * Math.cos(startAngle)),\n                    startY = params.cy + (this.radius * Math.sin(startAngle));\n\n                return {x: startX, y: startY};\n            };\n        },\n\n        Bezier: function (params) {\n            this.curve = [\n                { x: params.x1, y: params.y1},\n                { x: params.cp1x, y: params.cp1y },\n                { x: params.cp2x, y: params.cp2y },\n                { x: params.x2, y: params.y2 }\n            ];\n\n            var _super = _jp.Segments.AbstractSegment.apply(this, arguments);\n            // although this is not a strictly rigorous determination of bounds\n            // of a bezier curve, it works for the types of curves that this segment\n            // type produces.\n            this.bounds = {\n                minX: Math.min(params.x1, params.x2, params.cp1x, params.cp2x),\n                minY: Math.min(params.y1, params.y2, params.cp1y, params.cp2y),\n                maxX: Math.max(params.x1, params.x2, params.cp1x, params.cp2x),\n                maxY: Math.max(params.y1, params.y2, params.cp1y, params.cp2y)\n            };\n\n            this.type = \"Bezier\";\n\n            var _translateLocation = function (_curve, location, absolute) {\n                if (absolute) {\n                    location = root.jsBezier.locationAlongCurveFrom(_curve, location > 0 ? 0 : 1, location);\n                }\n\n                return location;\n            };\n\n            /**\n             * returns the point on the segment's path that is 'location' along the length of the path, where 'location' is a decimal from\n             * 0 to 1 inclusive.\n             */\n            this.pointOnPath = function (location, absolute) {\n                location = _translateLocation(this.curve, location, absolute);\n                return root.jsBezier.pointOnCurve(this.curve, location);\n            };\n\n            /**\n             * returns the gradient of the segment at the given point.\n             */\n            this.gradientAtPoint = function (location, absolute) {\n                location = _translateLocation(this.curve, location, absolute);\n                return root.jsBezier.gradientAtPoint(this.curve, location);\n            };\n\n            this.pointAlongPathFrom = function (location, distance, absolute) {\n                location = _translateLocation(this.curve, location, absolute);\n                return root.jsBezier.pointAlongCurveFrom(this.curve, location, distance);\n            };\n\n            this.getLength = function () {\n                return root.jsBezier.getLength(this.curve);\n            };\n\n            this.getBounds = function () {\n                return this.bounds;\n            };\n        }\n    };\n\n    _jp.SegmentRenderer = {\n        getPath: function (segment) {\n            return ({\n                \"Straight\": function () {\n                    var d = segment.getCoordinates();\n                    return \"M \" + d.x1 + \" \" + d.y1 + \" L \" + d.x2 + \" \" + d.y2;\n                },\n                \"Bezier\": function () {\n                    var d = segment.params;\n                    return \"M \" + d.x1 + \" \" + d.y1 +\n                        \" C \" + d.cp1x + \" \" + d.cp1y + \" \" + d.cp2x + \" \" + d.cp2y + \" \" + d.x2 + \" \" + d.y2;\n                },\n                \"Arc\": function () {\n                    var d = segment.params,\n                        laf = segment.sweep > Math.PI ? 1 : 0,\n                        sf = segment.anticlockwise ? 0 : 1;\n\n                    return \"M\" + segment.x1 + \" \" + segment.y1 + \" A \" + segment.radius + \" \" + d.r + \" 0 \" + laf + \",\" + sf + \" \" + segment.x2 + \" \" + segment.y2;\n                }\n            })[segment.type]();\n        }\n    };\n\n    /*\n     Class: UIComponent\n     Superclass for Connector and AbstractEndpoint.\n     */\n    var AbstractComponent = function () {\n        this.resetBounds = function () {\n            this.bounds = { minX: Infinity, minY: Infinity, maxX: -Infinity, maxY: -Infinity };\n        };\n        this.resetBounds();\n    };\n\n    /*\n     * Class: Connector\n     * Superclass for all Connectors; here is where Segments are managed.  This is exposed on jsPlumb just so it\n     * can be accessed from other files. You should not try to instantiate one of these directly.\n     *\n     * When this class is asked for a pointOnPath, or gradient etc, it must first figure out which segment to dispatch\n     * that request to. This is done by keeping track of the total connector length as segments are added, and also\n     * their cumulative ratios to the total length.  Then when the right segment is found it is a simple case of dispatching\n     * the request to it (and adjusting 'location' so that it is relative to the beginning of that segment.)\n     */\n    _jp.Connectors.AbstractConnector = function (params) {\n\n        AbstractComponent.apply(this, arguments);\n\n        var segments = [],\n            totalLength = 0,\n            segmentProportions = [],\n            segmentProportionalLengths = [],\n            stub = params.stub || 0,\n            sourceStub = _ju.isArray(stub) ? stub[0] : stub,\n            targetStub = _ju.isArray(stub) ? stub[1] : stub,\n            gap = params.gap || 0,\n            sourceGap = _ju.isArray(gap) ? gap[0] : gap,\n            targetGap = _ju.isArray(gap) ? gap[1] : gap,\n            userProvidedSegments = null,\n            paintInfo = null;\n\n        this.getPathData = function() {\n            var p = \"\";\n            for (var i = 0; i < segments.length; i++) {\n                p += _jp.SegmentRenderer.getPath(segments[i]);\n                p += \" \";\n            }\n            return p;\n        };\n\n        /**\n         * Function: findSegmentForPoint\n         * Returns the segment that is closest to the given [x,y],\n         * null if nothing found.  This function returns a JS\n         * object with:\n         *\n         *   d   -   distance from segment\n         *   l   -   proportional location in segment\n         *   x   -   x point on the segment\n         *   y   -   y point on the segment\n         *   s   -   the segment itself.\n         */\n        this.findSegmentForPoint = function (x, y) {\n            var out = { d: Infinity, s: null, x: null, y: null, l: null };\n            for (var i = 0; i < segments.length; i++) {\n                var _s = segments[i].findClosestPointOnPath(x, y);\n                if (_s.d < out.d) {\n                    out.d = _s.d;\n                    out.l = _s.l;\n                    out.x = _s.x;\n                    out.y = _s.y;\n                    out.s = segments[i];\n                    out.x1 = _s.x1;\n                    out.x2 = _s.x2;\n                    out.y1 = _s.y1;\n                    out.y2 = _s.y2;\n                    out.index = i;\n                }\n            }\n\n            return out;\n        };\n\n        var _updateSegmentProportions = function () {\n                var curLoc = 0;\n                for (var i = 0; i < segments.length; i++) {\n                    var sl = segments[i].getLength();\n                    segmentProportionalLengths[i] = sl / totalLength;\n                    segmentProportions[i] = [curLoc, (curLoc += (sl / totalLength)) ];\n                }\n            },\n\n            /**\n             * returns [segment, proportion of travel in segment, segment index] for the segment\n             * that contains the point which is 'location' distance along the entire path, where\n             * 'location' is a decimal between 0 and 1 inclusive. in this connector type, paths\n             * are made up of a list of segments, each of which contributes some fraction to\n             * the total length.\n             * From 1.3.10 this also supports the 'absolute' property, which lets us specify a location\n             * as the absolute distance in pixels, rather than a proportion of the total path.\n             */\n            _findSegmentForLocation = function (location, absolute) {\n                if (absolute) {\n                    location = location > 0 ? location / totalLength : (totalLength + location) / totalLength;\n                }\n                var idx = segmentProportions.length - 1, inSegmentProportion = 1;\n                for (var i = 0; i < segmentProportions.length; i++) {\n                    if (segmentProportions[i][1] >= location) {\n                        idx = i;\n                        // todo is this correct for all connector path types?\n                        inSegmentProportion = location === 1 ? 1 : location === 0 ? 0 : (location - segmentProportions[i][0]) / segmentProportionalLengths[i];\n                        break;\n                    }\n                }\n                return { segment: segments[idx], proportion: inSegmentProportion, index: idx };\n            },\n            _addSegment = function (conn, type, params) {\n                if (params.x1 === params.x2 && params.y1 === params.y2) {\n                    return;\n                }\n                var s = new _jp.Segments[type](params);\n                segments.push(s);\n                totalLength += s.getLength();\n                conn.updateBounds(s);\n            },\n            _clearSegments = function () {\n                totalLength = segments.length = segmentProportions.length = segmentProportionalLengths.length = 0;\n            };\n\n        this.setSegments = function (_segs) {\n            userProvidedSegments = [];\n            totalLength = 0;\n            for (var i = 0; i < _segs.length; i++) {\n                userProvidedSegments.push(_segs[i]);\n                totalLength += _segs[i].getLength();\n            }\n        };\n\n        this.getLength = function() {\n            return totalLength;\n        };\n\n        var _prepareCompute = function (params) {\n            this.strokeWidth = params.strokeWidth;\n            var segment = _jg.quadrant(params.sourcePos, params.targetPos),\n                swapX = params.targetPos[0] < params.sourcePos[0],\n                swapY = params.targetPos[1] < params.sourcePos[1],\n                lw = params.strokeWidth || 1,\n                so = params.sourceEndpoint.anchor.getOrientation(params.sourceEndpoint),\n                to = params.targetEndpoint.anchor.getOrientation(params.targetEndpoint),\n                x = swapX ? params.targetPos[0] : params.sourcePos[0],\n                y = swapY ? params.targetPos[1] : params.sourcePos[1],\n                w = Math.abs(params.targetPos[0] - params.sourcePos[0]),\n                h = Math.abs(params.targetPos[1] - params.sourcePos[1]);\n\n            // if either anchor does not have an orientation set, we derive one from their relative\n            // positions.  we fix the axis to be the one in which the two elements are further apart, and\n            // point each anchor at the other element.  this is also used when dragging a new connection.\n            if (so[0] === 0 && so[1] === 0 || to[0] === 0 && to[1] === 0) {\n                var index = w > h ? 0 : 1, oIndex = [1, 0][index];\n                so = [];\n                to = [];\n                so[index] = params.sourcePos[index] > params.targetPos[index] ? -1 : 1;\n                to[index] = params.sourcePos[index] > params.targetPos[index] ? 1 : -1;\n                so[oIndex] = 0;\n                to[oIndex] = 0;\n            }\n\n            var sx = swapX ? w + (sourceGap * so[0]) : sourceGap * so[0],\n                sy = swapY ? h + (sourceGap * so[1]) : sourceGap * so[1],\n                tx = swapX ? targetGap * to[0] : w + (targetGap * to[0]),\n                ty = swapY ? targetGap * to[1] : h + (targetGap * to[1]),\n                oProduct = ((so[0] * to[0]) + (so[1] * to[1]));\n\n            var result = {\n                sx: sx, sy: sy, tx: tx, ty: ty, lw: lw,\n                xSpan: Math.abs(tx - sx),\n                ySpan: Math.abs(ty - sy),\n                mx: (sx + tx) / 2,\n                my: (sy + ty) / 2,\n                so: so, to: to, x: x, y: y, w: w, h: h,\n                segment: segment,\n                startStubX: sx + (so[0] * sourceStub),\n                startStubY: sy + (so[1] * sourceStub),\n                endStubX: tx + (to[0] * targetStub),\n                endStubY: ty + (to[1] * targetStub),\n                isXGreaterThanStubTimes2: Math.abs(sx - tx) > (sourceStub + targetStub),\n                isYGreaterThanStubTimes2: Math.abs(sy - ty) > (sourceStub + targetStub),\n                opposite: oProduct === -1,\n                perpendicular: oProduct === 0,\n                orthogonal: oProduct === 1,\n                sourceAxis: so[0] === 0 ? \"y\" : \"x\",\n                points: [x, y, w, h, sx, sy, tx, ty ],\n                stubs:[sourceStub, targetStub]\n            };\n            result.anchorOrientation = result.opposite ? \"opposite\" : result.orthogonal ? \"orthogonal\" : \"perpendicular\";\n            return result;\n        };\n\n        this.getSegments = function () {\n            return segments;\n        };\n\n        this.updateBounds = function (segment) {\n            var segBounds = segment.getBounds();\n            this.bounds.minX = Math.min(this.bounds.minX, segBounds.minX);\n            this.bounds.maxX = Math.max(this.bounds.maxX, segBounds.maxX);\n            this.bounds.minY = Math.min(this.bounds.minY, segBounds.minY);\n            this.bounds.maxY = Math.max(this.bounds.maxY, segBounds.maxY);\n        };\n\n        var dumpSegmentsToConsole = function () {\n            console.log(\"SEGMENTS:\");\n            for (var i = 0; i < segments.length; i++) {\n                console.log(segments[i].type, segments[i].getLength(), segmentProportions[i]);\n            }\n        };\n\n        this.pointOnPath = function (location, absolute) {\n            var seg = _findSegmentForLocation(location, absolute);\n            return seg.segment && seg.segment.pointOnPath(seg.proportion, false) || [0, 0];\n        };\n\n        this.gradientAtPoint = function (location, absolute) {\n            var seg = _findSegmentForLocation(location, absolute);\n            return seg.segment && seg.segment.gradientAtPoint(seg.proportion, false) || 0;\n        };\n\n        this.pointAlongPathFrom = function (location, distance, absolute) {\n            var seg = _findSegmentForLocation(location, absolute);\n            // TODO what happens if this crosses to the next segment?\n            return seg.segment && seg.segment.pointAlongPathFrom(seg.proportion, distance, false) || [0, 0];\n        };\n\n        this.compute = function (params) {\n            paintInfo = _prepareCompute.call(this, params);\n\n            _clearSegments();\n            this._compute(paintInfo, params);\n            this.x = paintInfo.points[0];\n            this.y = paintInfo.points[1];\n            this.w = paintInfo.points[2];\n            this.h = paintInfo.points[3];\n            this.segment = paintInfo.segment;\n            _updateSegmentProportions();\n        };\n\n        return {\n            addSegment: _addSegment,\n            prepareCompute: _prepareCompute,\n            sourceStub: sourceStub,\n            targetStub: targetStub,\n            maxStub: Math.max(sourceStub, targetStub),\n            sourceGap: sourceGap,\n            targetGap: targetGap,\n            maxGap: Math.max(sourceGap, targetGap)\n        };\n    };\n    _ju.extend(_jp.Connectors.AbstractConnector, AbstractComponent);\n\n\n    // ********************************* END OF CONNECTOR TYPES *******************************************************************\n\n    // ********************************* ENDPOINT TYPES *******************************************************************\n\n    _jp.Endpoints.AbstractEndpoint = function (params) {\n        AbstractComponent.apply(this, arguments);\n        var compute = this.compute = function (anchorPoint, orientation, endpointStyle, connectorPaintStyle) {\n            var out = this._compute.apply(this, arguments);\n            this.x = out[0];\n            this.y = out[1];\n            this.w = out[2];\n            this.h = out[3];\n            this.bounds.minX = this.x;\n            this.bounds.minY = this.y;\n            this.bounds.maxX = this.x + this.w;\n            this.bounds.maxY = this.y + this.h;\n            return out;\n        };\n        return {\n            compute: compute,\n            cssClass: params.cssClass\n        };\n    };\n    _ju.extend(_jp.Endpoints.AbstractEndpoint, AbstractComponent);\n\n    /**\n     * Class: Endpoints.Dot\n     * A round endpoint, with default radius 10 pixels.\n     */\n\n    /**\n     * Function: Constructor\n     *\n     * Parameters:\n     *\n     *    radius    -    radius of the endpoint.  defaults to 10 pixels.\n     */\n    _jp.Endpoints.Dot = function (params) {\n        this.type = \"Dot\";\n        var _super = _jp.Endpoints.AbstractEndpoint.apply(this, arguments);\n        params = params || {};\n        this.radius = params.radius || 10;\n        this.defaultOffset = 0.5 * this.radius;\n        this.defaultInnerRadius = this.radius / 3;\n\n        this._compute = function (anchorPoint, orientation, endpointStyle, connectorPaintStyle) {\n            this.radius = endpointStyle.radius || this.radius;\n            var x = anchorPoint[0] - this.radius,\n                y = anchorPoint[1] - this.radius,\n                w = this.radius * 2,\n                h = this.radius * 2;\n\n            if (endpointStyle.stroke) {\n                var lw = endpointStyle.strokeWidth || 1;\n                x -= lw;\n                y -= lw;\n                w += (lw * 2);\n                h += (lw * 2);\n            }\n            return [ x, y, w, h, this.radius ];\n        };\n    };\n    _ju.extend(_jp.Endpoints.Dot, _jp.Endpoints.AbstractEndpoint);\n\n    _jp.Endpoints.Rectangle = function (params) {\n        this.type = \"Rectangle\";\n        var _super = _jp.Endpoints.AbstractEndpoint.apply(this, arguments);\n        params = params || {};\n        this.width = params.width || 20;\n        this.height = params.height || 20;\n\n        this._compute = function (anchorPoint, orientation, endpointStyle, connectorPaintStyle) {\n            var width = endpointStyle.width || this.width,\n                height = endpointStyle.height || this.height,\n                x = anchorPoint[0] - (width / 2),\n                y = anchorPoint[1] - (height / 2);\n\n            return [ x, y, width, height];\n        };\n    };\n    _ju.extend(_jp.Endpoints.Rectangle, _jp.Endpoints.AbstractEndpoint);\n\n    var DOMElementEndpoint = function (params) {\n        _jp.jsPlumbUIComponent.apply(this, arguments);\n        this._jsPlumb.displayElements = [];\n    };\n    _ju.extend(DOMElementEndpoint, _jp.jsPlumbUIComponent, {\n        getDisplayElements: function () {\n            return this._jsPlumb.displayElements;\n        },\n        appendDisplayElement: function (el) {\n            this._jsPlumb.displayElements.push(el);\n        }\n    });\n\n    /**\n     * Class: Endpoints.Image\n     * Draws an image as the Endpoint.\n     */\n    /**\n     * Function: Constructor\n     *\n     * Parameters:\n     *\n     *    src    -    location of the image to use.\n\n     TODO: multiple references to self. not sure quite how to get rid of them entirely. perhaps self = null in the cleanup\n     function will suffice\n\n     TODO this class still might leak memory.\n\n     */\n    _jp.Endpoints.Image = function (params) {\n\n        this.type = \"Image\";\n        DOMElementEndpoint.apply(this, arguments);\n        _jp.Endpoints.AbstractEndpoint.apply(this, arguments);\n\n        var _onload = params.onload,\n            src = params.src || params.url,\n            clazz = params.cssClass ? \" \" + params.cssClass : \"\";\n\n        this._jsPlumb.img = new Image();\n        this._jsPlumb.ready = false;\n        this._jsPlumb.initialized = false;\n        this._jsPlumb.deleted = false;\n        this._jsPlumb.widthToUse = params.width;\n        this._jsPlumb.heightToUse = params.height;\n        this._jsPlumb.endpoint = params.endpoint;\n\n        this._jsPlumb.img.onload = function () {\n            if (this._jsPlumb != null) {\n                this._jsPlumb.ready = true;\n                this._jsPlumb.widthToUse = this._jsPlumb.widthToUse || this._jsPlumb.img.width;\n                this._jsPlumb.heightToUse = this._jsPlumb.heightToUse || this._jsPlumb.img.height;\n                if (_onload) {\n                    _onload(this);\n                }\n            }\n        }.bind(this);\n\n        /*\n         Function: setImage\n         Sets the Image to use in this Endpoint.\n\n         Parameters:\n         img         -   may be a URL or an Image object\n         onload      -   optional; a callback to execute once the image has loaded.\n         */\n        this._jsPlumb.endpoint.setImage = function (_img, onload) {\n            var s = _img.constructor === String ? _img : _img.src;\n            _onload = onload;\n            this._jsPlumb.img.src = s;\n\n            if (this.canvas != null) {\n                this.canvas.setAttribute(\"src\", this._jsPlumb.img.src);\n            }\n        }.bind(this);\n\n        this._jsPlumb.endpoint.setImage(src, _onload);\n        this._compute = function (anchorPoint, orientation, endpointStyle, connectorPaintStyle) {\n            this.anchorPoint = anchorPoint;\n            if (this._jsPlumb.ready) {\n                return [anchorPoint[0] - this._jsPlumb.widthToUse / 2, anchorPoint[1] - this._jsPlumb.heightToUse / 2,\n                    this._jsPlumb.widthToUse, this._jsPlumb.heightToUse];\n            }\n            else {\n                return [0, 0, 0, 0];\n            }\n        };\n\n        this.canvas = _jp.createElement(\"img\", {\n            position:\"absolute\",\n            margin:0,\n            padding:0,\n            outline:0\n        }, this._jsPlumb.instance.endpointClass + clazz);\n\n        if (this._jsPlumb.widthToUse) {\n            this.canvas.setAttribute(\"width\", this._jsPlumb.widthToUse);\n        }\n        if (this._jsPlumb.heightToUse) {\n            this.canvas.setAttribute(\"height\", this._jsPlumb.heightToUse);\n        }\n        this._jsPlumb.instance.appendElement(this.canvas);\n\n        this.actuallyPaint = function (d, style, anchor) {\n            if (!this._jsPlumb.deleted) {\n                if (!this._jsPlumb.initialized) {\n                    this.canvas.setAttribute(\"src\", this._jsPlumb.img.src);\n                    this.appendDisplayElement(this.canvas);\n                    this._jsPlumb.initialized = true;\n                }\n                var x = this.anchorPoint[0] - (this._jsPlumb.widthToUse / 2),\n                    y = this.anchorPoint[1] - (this._jsPlumb.heightToUse / 2);\n                _ju.sizeElement(this.canvas, x, y, this._jsPlumb.widthToUse, this._jsPlumb.heightToUse);\n            }\n        };\n\n        this.paint = function (style, anchor) {\n            if (this._jsPlumb != null) {  // may have been deleted\n                if (this._jsPlumb.ready) {\n                    this.actuallyPaint(style, anchor);\n                }\n                else {\n                    root.setTimeout(function () {\n                        this.paint(style, anchor);\n                    }.bind(this), 200);\n                }\n            }\n        };\n    };\n    _ju.extend(_jp.Endpoints.Image, [ DOMElementEndpoint, _jp.Endpoints.AbstractEndpoint ], {\n        cleanup: function (force) {\n            if (force) {\n                this._jsPlumb.deleted = true;\n                if (this.canvas) {\n                    this.canvas.parentNode.removeChild(this.canvas);\n                }\n                this.canvas = null;\n            }\n        }\n    });\n\n    /*\n     * Class: Endpoints.Blank\n     * An Endpoint that paints nothing (visible) on the screen.  Supports cssClass and hoverClass parameters like all Endpoints.\n     */\n    _jp.Endpoints.Blank = function (params) {\n        var _super = _jp.Endpoints.AbstractEndpoint.apply(this, arguments);\n        this.type = \"Blank\";\n        DOMElementEndpoint.apply(this, arguments);\n        this._compute = function (anchorPoint, orientation, endpointStyle, connectorPaintStyle) {\n            return [anchorPoint[0], anchorPoint[1], 10, 0];\n        };\n\n        var clazz = params.cssClass ? \" \" + params.cssClass : \"\";\n\n        this.canvas = _jp.createElement(\"div\", {\n            display: \"block\",\n            width: \"1px\",\n            height: \"1px\",\n            background: \"transparent\",\n            position: \"absolute\"\n        }, this._jsPlumb.instance.endpointClass + clazz);\n\n        this._jsPlumb.instance.appendElement(this.canvas);\n\n        this.paint = function (style, anchor) {\n            _ju.sizeElement(this.canvas, this.x, this.y, this.w, this.h);\n        };\n    };\n    _ju.extend(_jp.Endpoints.Blank, [_jp.Endpoints.AbstractEndpoint, DOMElementEndpoint], {\n        cleanup: function () {\n            if (this.canvas && this.canvas.parentNode) {\n                this.canvas.parentNode.removeChild(this.canvas);\n            }\n        }\n    });\n\n    /*\n     * Class: Endpoints.Triangle\n     * A triangular Endpoint.\n     */\n    /*\n     * Function: Constructor\n     *\n     * Parameters:\n     *\n     * width   width of the triangle's base.  defaults to 55 pixels.\n     * height  height of the triangle from base to apex.  defaults to 55 pixels.\n     */\n    _jp.Endpoints.Triangle = function (params) {\n        this.type = \"Triangle\";\n        _jp.Endpoints.AbstractEndpoint.apply(this, arguments);\n        var self = this;\n        params = params || {  };\n        params.width = params.width || 55;\n        params.height = params.height || 55;\n        this.width = params.width;\n        this.height = params.height;\n        this._compute = function (anchorPoint, orientation, endpointStyle, connectorPaintStyle) {\n            var width = endpointStyle.width || self.width,\n                height = endpointStyle.height || self.height,\n                x = anchorPoint[0] - (width / 2),\n                y = anchorPoint[1] - (height / 2);\n            return [ x, y, width, height ];\n        };\n    };\n// ********************************* END OF ENDPOINT TYPES *******************************************************************\n\n\n// ********************************* OVERLAY DEFINITIONS ***********************************************************************    \n\n    var AbstractOverlay = _jp.Overlays.AbstractOverlay = function (params) {\n        this.visible = true;\n        this.isAppendedAtTopLevel = true;\n        this.component = params.component;\n        this.loc = params.location == null ? 0.5 : params.location;\n        this.endpointLoc = params.endpointLocation == null ? [ 0.5, 0.5] : params.endpointLocation;\n        this.visible = params.visible !== false;\n    };\n    AbstractOverlay.prototype = {\n        cleanup: function (force) {\n            if (force) {\n                this.component = null;\n                this.canvas = null;\n                this.endpointLoc = null;\n            }\n        },\n        reattach:function(instance, component) { },\n        setVisible: function (val) {\n            this.visible = val;\n            this.component.repaint();\n        },\n        isVisible: function () {\n            return this.visible;\n        },\n        hide: function () {\n            this.setVisible(false);\n        },\n        show: function () {\n            this.setVisible(true);\n        },\n        incrementLocation: function (amount) {\n            this.loc += amount;\n            this.component.repaint();\n        },\n        setLocation: function (l) {\n            this.loc = l;\n            this.component.repaint();\n        },\n        getLocation: function () {\n            return this.loc;\n        },\n        updateFrom:function() { }\n    };\n\n\n    /*\n     * Class: Overlays.Arrow\n     *\n     * An arrow overlay, defined by four points: the head, the two sides of the tail, and a 'foldback' point at some distance along the length\n     * of the arrow that lines from each tail point converge into.  The foldback point is defined using a decimal that indicates some fraction\n     * of the length of the arrow and has a default value of 0.623.  A foldback point value of 1 would mean that the arrow had a straight line\n     * across the tail.\n     */\n    /*\n     * @constructor\n     *\n     * @param {Object} params Constructor params.\n     * @param {Number} [params.length] Distance in pixels from head to tail baseline. default 20.\n     * @param {Number} [params.width] Width in pixels of the tail baseline. default 20.\n     * @param {String} [params.fill] Style to use when filling the arrow.  defaults to \"black\".\n     * @param {String} [params.stroke] Style to use when stroking the arrow. defaults to null, which means the arrow is not stroked.\n     * @param {Number} [params.stroke-width] Line width to use when stroking the arrow. defaults to 1, but only used if stroke is not null.\n     * @param {Number} [params.foldback] Distance (as a decimal from 0 to 1 inclusive) along the length of the arrow marking the point the tail points should fold back to.  defaults to 0.623.\n     * @param {Number} [params.location] Distance (as a decimal from 0 to 1 inclusive) marking where the arrow should sit on the connector. defaults to 0.5.\n     * @param {NUmber} [params.direction] Indicates the direction the arrow points in. valid values are -1 and 1; 1 is default.\n     */\n    _jp.Overlays.Arrow = function (params) {\n        this.type = \"Arrow\";\n        AbstractOverlay.apply(this, arguments);\n        this.isAppendedAtTopLevel = false;\n        params = params || {};\n        var self = this;\n\n        this.length = params.length || 20;\n        this.width = params.width || 20;\n        this.id = params.id;\n        var direction = (params.direction || 1) < 0 ? -1 : 1,\n            paintStyle = params.paintStyle || { \"stroke-width\": 1 },\n        // how far along the arrow the lines folding back in come to. default is 62.3%.\n            foldback = params.foldback || 0.623;\n\n        this.computeMaxSize = function () {\n            return self.width * 1.5;\n        };\n\n        this.elementCreated = function(p, component) {\n            this.path = p;\n            if (params.events) {\n                for (var i in params.events) {\n                    _jp.on(p, i, params.events[i]);\n                }\n            }\n        };\n\n        this.draw = function (component, currentConnectionPaintStyle) {\n\n            var hxy, mid, txy, tail, cxy;\n            if (component.pointAlongPathFrom) {\n\n                if (_ju.isString(this.loc) || this.loc > 1 || this.loc < 0) {\n                    var l = parseInt(this.loc, 10),\n                        fromLoc = this.loc < 0 ? 1 : 0;\n                    hxy = component.pointAlongPathFrom(fromLoc, l, false);\n                    mid = component.pointAlongPathFrom(fromLoc, l - (direction * this.length / 2), false);\n                    txy = _jg.pointOnLine(hxy, mid, this.length);\n                }\n                else if (this.loc === 1) {\n                    hxy = component.pointOnPath(this.loc);\n                    mid = component.pointAlongPathFrom(this.loc, -(this.length));\n                    txy = _jg.pointOnLine(hxy, mid, this.length);\n\n                    if (direction === -1) {\n                        var _ = txy;\n                        txy = hxy;\n                        hxy = _;\n                    }\n                }\n                else if (this.loc === 0) {\n                    txy = component.pointOnPath(this.loc);\n                    mid = component.pointAlongPathFrom(this.loc, this.length);\n                    hxy = _jg.pointOnLine(txy, mid, this.length);\n                    if (direction === -1) {\n                        var __ = txy;\n                        txy = hxy;\n                        hxy = __;\n                    }\n                }\n                else {\n                    hxy = component.pointAlongPathFrom(this.loc, direction * this.length / 2);\n                    mid = component.pointOnPath(this.loc);\n                    txy = _jg.pointOnLine(hxy, mid, this.length);\n                }\n\n                tail = _jg.perpendicularLineTo(hxy, txy, this.width);\n                cxy = _jg.pointOnLine(hxy, txy, foldback * this.length);\n\n                var d = { hxy: hxy, tail: tail, cxy: cxy },\n                    stroke = paintStyle.stroke || currentConnectionPaintStyle.stroke,\n                    fill = paintStyle.fill || currentConnectionPaintStyle.stroke,\n                    lineWidth = paintStyle.strokeWidth || currentConnectionPaintStyle.strokeWidth;\n\n                return {\n                    component: component,\n                    d: d,\n                    \"stroke-width\": lineWidth,\n                    stroke: stroke,\n                    fill: fill,\n                    minX: Math.min(hxy.x, tail[0].x, tail[1].x),\n                    maxX: Math.max(hxy.x, tail[0].x, tail[1].x),\n                    minY: Math.min(hxy.y, tail[0].y, tail[1].y),\n                    maxY: Math.max(hxy.y, tail[0].y, tail[1].y)\n                };\n            }\n            else {\n                return {component: component, minX: 0, maxX: 0, minY: 0, maxY: 0};\n            }\n        };\n    };\n    _ju.extend(_jp.Overlays.Arrow, AbstractOverlay, {\n        updateFrom:function(d) {\n            this.length = d.length || this.length;\n            this.width = d.width|| this.width;\n            this.direction = d.direction != null ? d.direction : this.direction;\n            this.foldback = d.foldback|| this.foldback;\n        }\n    });\n\n    /*\n     * Class: Overlays.PlainArrow\n     *\n     * A basic arrow.  This is in fact just one instance of the more generic case in which the tail folds back on itself to some\n     * point along the length of the arrow: in this case, that foldback point is the full length of the arrow.  so it just does\n     * a 'call' to Arrow with foldback set appropriately.\n     */\n    /*\n     * Function: Constructor\n     * See <Overlays.Arrow> for allowed parameters for this overlay.\n     */\n    _jp.Overlays.PlainArrow = function (params) {\n        params = params || {};\n        var p = _jp.extend(params, {foldback: 1});\n        _jp.Overlays.Arrow.call(this, p);\n        this.type = \"PlainArrow\";\n    };\n    _ju.extend(_jp.Overlays.PlainArrow, _jp.Overlays.Arrow);\n\n    /*\n     * Class: Overlays.Diamond\n     * \n     * A diamond. Like PlainArrow, this is a concrete case of the more generic case of the tail points converging on some point...it just\n     * happens that in this case, that point is greater than the length of the the arrow.\n     *\n     *      this could probably do with some help with positioning...due to the way it reuses the Arrow paint code, what Arrow thinks is the\n     *      center is actually 1/4 of the way along for this guy.  but we don't have any knowledge of pixels at this point, so we're kind of\n     *      stuck when it comes to helping out the Arrow class. possibly we could pass in a 'transpose' parameter or something. the value\n     *      would be -l/4 in this case - move along one quarter of the total length.\n     */\n    /*\n     * Function: Constructor\n     * See <Overlays.Arrow> for allowed parameters for this overlay.\n     */\n    _jp.Overlays.Diamond = function (params) {\n        params = params || {};\n        var l = params.length || 40,\n            p = _jp.extend(params, {length: l / 2, foldback: 2});\n        _jp.Overlays.Arrow.call(this, p);\n        this.type = \"Diamond\";\n    };\n    _ju.extend(_jp.Overlays.Diamond, _jp.Overlays.Arrow);\n\n    var _getDimensions = function (component, forceRefresh) {\n        if (component._jsPlumb.cachedDimensions == null || forceRefresh) {\n            component._jsPlumb.cachedDimensions = component.getDimensions();\n        }\n        return component._jsPlumb.cachedDimensions;\n    };\n\n    // abstract superclass for overlays that add an element to the DOM.\n    var AbstractDOMOverlay = function (params) {\n        _jp.jsPlumbUIComponent.apply(this, arguments);\n        AbstractOverlay.apply(this, arguments);\n\n        // hand off fired events to associated component.\n        var _f = this.fire;\n        this.fire = function () {\n            _f.apply(this, arguments);\n            if (this.component) {\n                this.component.fire.apply(this.component, arguments);\n            }\n        };\n\n        this.detached=false;\n        this.id = params.id;\n        this._jsPlumb.div = null;\n        this._jsPlumb.initialised = false;\n        this._jsPlumb.component = params.component;\n        this._jsPlumb.cachedDimensions = null;\n        this._jsPlumb.create = params.create;\n        this._jsPlumb.initiallyInvisible = params.visible === false;\n\n        this.getElement = function () {\n            if (this._jsPlumb.div == null) {\n                var div = this._jsPlumb.div = _jp.getElement(this._jsPlumb.create(this._jsPlumb.component));\n                div.style.position = \"absolute\";\n                div.className = this._jsPlumb.instance.overlayClass + \" \" +\n                    (this.cssClass ? this.cssClass :\n                        params.cssClass ? params.cssClass : \"\");\n                this._jsPlumb.instance.appendElement(div);\n                this._jsPlumb.instance.getId(div);\n                this.canvas = div;\n\n                // in IE the top left corner is what it placed at the desired location.  This will not\n                // be fixed. IE8 is not going to be supported for much longer.\n                var ts = \"translate(-50%, -50%)\";\n                div.style.webkitTransform = ts;\n                div.style.mozTransform = ts;\n                div.style.msTransform = ts;\n                div.style.oTransform = ts;\n                div.style.transform = ts;\n\n                // write the related component into the created element\n                div._jsPlumb = this;\n\n                if (params.visible === false) {\n                    div.style.display = \"none\";\n                }\n            }\n            return this._jsPlumb.div;\n        };\n\n        this.draw = function (component, currentConnectionPaintStyle, absolutePosition) {\n            var td = _getDimensions(this);\n            if (td != null && td.length === 2) {\n                var cxy = { x: 0, y: 0 };\n\n                // absolutePosition would have been set by a call to connection.setAbsoluteOverlayPosition.\n                if (absolutePosition) {\n                    cxy = { x: absolutePosition[0], y: absolutePosition[1] };\n                }\n                else if (component.pointOnPath) {\n                    var loc = this.loc, absolute = false;\n                    if (_ju.isString(this.loc) || this.loc < 0 || this.loc > 1) {\n                        loc = parseInt(this.loc, 10);\n                        absolute = true;\n                    }\n                    cxy = component.pointOnPath(loc, absolute);  // a connection\n                }\n                else {\n                    var locToUse = this.loc.constructor === Array ? this.loc : this.endpointLoc;\n                    cxy = { x: locToUse[0] * component.w,\n                        y: locToUse[1] * component.h };\n                }\n\n                var minx = cxy.x - (td[0] / 2),\n                    miny = cxy.y - (td[1] / 2);\n\n                return {\n                    component: component,\n                    d: { minx: minx, miny: miny, td: td, cxy: cxy },\n                    minX: minx,\n                    maxX: minx + td[0],\n                    minY: miny,\n                    maxY: miny + td[1]\n                };\n            }\n            else {\n                return {minX: 0, maxX: 0, minY: 0, maxY: 0};\n            }\n        };\n    };\n    _ju.extend(AbstractDOMOverlay, [_jp.jsPlumbUIComponent, AbstractOverlay], {\n        getDimensions: function () {\n            return [1,1];\n        },\n        setVisible: function (state) {\n            if (this._jsPlumb.div) {\n                this._jsPlumb.div.style.display = state ? \"block\" : \"none\";\n                // if initially invisible, dimensions are 0,0 and never get updated\n                if (state && this._jsPlumb.initiallyInvisible) {\n                    _getDimensions(this, true);\n                    this.component.repaint();\n                    this._jsPlumb.initiallyInvisible = false;\n                }\n            }\n        },\n        /*\n         * Function: clearCachedDimensions\n         * Clears the cached dimensions for the label. As a performance enhancement, label dimensions are\n         * cached from 1.3.12 onwards. The cache is cleared when you change the label text, of course, but\n         * there are other reasons why the text dimensions might change - if you make a change through CSS, for\n         * example, you might change the font size.  in that case you should explicitly call this method.\n         */\n        clearCachedDimensions: function () {\n            this._jsPlumb.cachedDimensions = null;\n        },\n        cleanup: function (force) {\n            if (force) {\n                if (this._jsPlumb.div != null) {\n                    this._jsPlumb.div._jsPlumb = null;\n                    this._jsPlumb.instance.removeElement(this._jsPlumb.div);\n                }\n            }\n            else {\n                // if not a forced cleanup, just detach child from parent for now.\n                if (this._jsPlumb && this._jsPlumb.div && this._jsPlumb.div.parentNode) {\n                    this._jsPlumb.div.parentNode.removeChild(this._jsPlumb.div);\n                }\n                this.detached = true;\n            }\n\n        },\n        reattach:function(instance, component) {\n            if (this._jsPlumb.div != null) {\n                instance.getContainer().appendChild(this._jsPlumb.div);\n            }\n            this.detached = false;\n        },\n        computeMaxSize: function () {\n            var td = _getDimensions(this);\n            return Math.max(td[0], td[1]);\n        },\n        paint: function (p, containerExtents) {\n            if (!this._jsPlumb.initialised) {\n                this.getElement();\n                p.component.appendDisplayElement(this._jsPlumb.div);\n                this._jsPlumb.initialised = true;\n                if (this.detached) {\n                    this._jsPlumb.div.parentNode.removeChild(this._jsPlumb.div);\n                }\n            }\n            this._jsPlumb.div.style.left = (p.component.x + p.d.minx) + \"px\";\n            this._jsPlumb.div.style.top = (p.component.y + p.d.miny) + \"px\";\n        }\n    });\n\n    /*\n     * Class: Overlays.Custom\n     * A Custom overlay. You supply a 'create' function which returns some DOM element, and jsPlumb positions it.\n     * The 'create' function is passed a Connection or Endpoint.\n     */\n    /*\n     * Function: Constructor\n     * \n     * Parameters:\n     * create - function for jsPlumb to call that returns a DOM element.\n     * location - distance (as a decimal from 0 to 1 inclusive) marking where the label should sit on the connector. defaults to 0.5.\n     * id - optional id to use for later retrieval of this overlay.\n     *\n     */\n    _jp.Overlays.Custom = function (params) {\n        this.type = \"Custom\";\n        AbstractDOMOverlay.apply(this, arguments);\n    };\n    _ju.extend(_jp.Overlays.Custom, AbstractDOMOverlay);\n\n    _jp.Overlays.GuideLines = function () {\n        var self = this;\n        self.length = 50;\n        self.strokeWidth = 5;\n        this.type = \"GuideLines\";\n        AbstractOverlay.apply(this, arguments);\n        _jp.jsPlumbUIComponent.apply(this, arguments);\n        this.draw = function (connector, currentConnectionPaintStyle) {\n\n            var head = connector.pointAlongPathFrom(self.loc, self.length / 2),\n                mid = connector.pointOnPath(self.loc),\n                tail = _jg.pointOnLine(head, mid, self.length),\n                tailLine = _jg.perpendicularLineTo(head, tail, 40),\n                headLine = _jg.perpendicularLineTo(tail, head, 20);\n\n            return {\n                connector: connector,\n                head: head,\n                tail: tail,\n                headLine: headLine,\n                tailLine: tailLine,\n                minX: Math.min(head.x, tail.x, headLine[0].x, headLine[1].x),\n                minY: Math.min(head.y, tail.y, headLine[0].y, headLine[1].y),\n                maxX: Math.max(head.x, tail.x, headLine[0].x, headLine[1].x),\n                maxY: Math.max(head.y, tail.y, headLine[0].y, headLine[1].y)\n            };\n        };\n\n        // this.cleanup = function() { };  // nothing to clean up for GuideLines\n    };\n\n    /*\n     * Class: Overlays.Label\n\n     */\n    /*\n     * Function: Constructor\n     * \n     * Parameters:\n     * cssClass - optional css class string to append to css class. This string is appended \"as-is\", so you can of course have multiple classes\n     *             defined.  This parameter is preferred to using labelStyle, borderWidth and borderStyle.\n     * label - the label to paint.  May be a string or a function that returns a string.  Nothing will be painted if your label is null or your\n     *         label function returns null.  empty strings _will_ be painted.\n     * location - distance (as a decimal from 0 to 1 inclusive) marking where the label should sit on the connector. defaults to 0.5.\n     * id - optional id to use for later retrieval of this overlay.\n     * \n     *\n     */\n    _jp.Overlays.Label = function (params) {\n        this.labelStyle = params.labelStyle;\n\n        var labelWidth = null, labelHeight = null, labelText = null, labelPadding = null;\n        this.cssClass = this.labelStyle != null ? this.labelStyle.cssClass : null;\n        var p = _jp.extend({\n            create: function () {\n                return _jp.createElement(\"div\");\n            }}, params);\n        _jp.Overlays.Custom.call(this, p);\n        this.type = \"Label\";\n        this.label = params.label || \"\";\n        this.labelText = null;\n        if (this.labelStyle) {\n            var el = this.getElement();\n            this.labelStyle.font = this.labelStyle.font || \"12px sans-serif\";\n            el.style.font = this.labelStyle.font;\n            el.style.color = this.labelStyle.color || \"black\";\n            if (this.labelStyle.fill) {\n                el.style.background = this.labelStyle.fill;\n            }\n            if (this.labelStyle.borderWidth > 0) {\n                var dStyle = this.labelStyle.borderStyle ? this.labelStyle.borderStyle : \"black\";\n                el.style.border = this.labelStyle.borderWidth + \"px solid \" + dStyle;\n            }\n            if (this.labelStyle.padding) {\n                el.style.padding = this.labelStyle.padding;\n            }\n        }\n\n    };\n    _ju.extend(_jp.Overlays.Label, _jp.Overlays.Custom, {\n        cleanup: function (force) {\n            if (force) {\n                this.div = null;\n                this.label = null;\n                this.labelText = null;\n                this.cssClass = null;\n                this.labelStyle = null;\n            }\n        },\n        getLabel: function () {\n            return this.label;\n        },\n        /*\n         * Function: setLabel\n         * sets the label's, um, label.  you would think i'd call this function\n         * 'setText', but you can pass either a Function or a String to this, so\n         * it makes more sense as 'setLabel'. This uses innerHTML on the label div, so keep\n         * that in mind if you need escaped HTML.\n         */\n        setLabel: function (l) {\n            this.label = l;\n            this.labelText = null;\n            this.clearCachedDimensions();\n            this.update();\n            this.component.repaint();\n        },\n        getDimensions: function () {\n            this.update();\n            return AbstractDOMOverlay.prototype.getDimensions.apply(this, arguments);\n        },\n        update: function () {\n            if (typeof this.label === \"function\") {\n                var lt = this.label(this);\n                this.getElement().innerHTML = lt.replace(/\\r\\n/g, \"<br/>\");\n            }\n            else {\n                if (this.labelText == null) {\n                    this.labelText = this.label;\n                    this.getElement().innerHTML = this.labelText.replace(/\\r\\n/g, \"<br/>\");\n                }\n            }\n        },\n        updateFrom:function(d) {\n            if(d.label != null){\n                this.setLabel(d.label);\n            }\n        }\n    });\n\n    // ********************************* END OF OVERLAY DEFINITIONS ***********************************************************************\n\n}).call(typeof window !== 'undefined' ? window : this);\n\n/*\n * This file contains the base class for library adapters.\n *\n * Copyright (c) 2010 - 2018 jsPlumb (hello@jsplumbtoolkit.com)\n *\n * https://jsplumbtoolkit.com\n * https://github.com/jsplumb/jsplumb\n *\n * Dual licensed under the MIT and GPL2 licenses.\n */\n;(function() {\n    \"use strict\";\n    var root = this,\n        _jp = root.jsPlumb;\n\n    var _getEventManager = function(instance) {\n        var e = instance._mottle;\n        if (!e) {\n            e = instance._mottle = new root.Mottle();\n        }\n        return e;\n    };\n\n    _jp.extend(root.jsPlumbInstance.prototype, {\n        getEventManager:function() {\n            return _getEventManager(this);\n        },\n        on : function(el, event, callback) {\n            // TODO: here we would like to map the tap event if we know its\n            // an internal bind to a click. we have to know its internal because only\n            // then can we be sure that the UP event wont be consumed (tap is a synthesized\n            // event from a mousedown followed by a mouseup).\n            //event = { \"click\":\"tap\", \"dblclick\":\"dbltap\"}[event] || event;\n            this.getEventManager().on.apply(this, arguments);\n            return this;\n        },\n        off : function(el, event, callback) {\n            this.getEventManager().off.apply(this, arguments);\n            return this;\n        }\n    });\n\n\n}).call(typeof window !== 'undefined' ? window : this);\n/*\n * Copyright (c) 2010 - 2018 jsPlumb (hello@jsplumbtoolkit.com)\n *\n * https://jsplumbtoolkit.com\n * https://github.com/jsplumb/jsplumb\n *\n * Dual licensed under the MIT and GPL2 licenses.\n */\n;(function() {\n    \"use strict\";\n\n    var root = this,\n        _ju = root.jsPlumbUtil,\n        _jpi = root.jsPlumbInstance;\n\n    var GROUP_COLLAPSED_CLASS = \"jtk-group-collapsed\";\n    var GROUP_EXPANDED_CLASS = \"jtk-group-expanded\";\n    var GROUP_CONTAINER_SELECTOR = \"[jtk-group-content]\";\n    var ELEMENT_DRAGGABLE_EVENT = \"elementDraggable\";\n    var STOP = \"stop\";\n    var REVERT = \"revert\";\n    var GROUP_MANAGER = \"_groupManager\";\n    var GROUP = \"_jsPlumbGroup\";\n    var GROUP_DRAG_SCOPE = \"_jsPlumbGroupDrag\";\n    var EVT_CHILD_ADDED = \"group:addMember\";\n    var EVT_CHILD_REMOVED = \"group:removeMember\";\n    var EVT_GROUP_ADDED = \"group:add\";\n    var EVT_GROUP_REMOVED = \"group:remove\";\n    var EVT_EXPAND = \"group:expand\";\n    var EVT_COLLAPSE = \"group:collapse\";\n    var EVT_GROUP_DRAG_STOP = \"groupDragStop\";\n    var EVT_CONNECTION_MOVED = \"connectionMoved\";\n    var EVT_INTERNAL_CONNECTION_DETACHED = \"internal.connectionDetached\";\n\n    var CMD_REMOVE_ALL = \"removeAll\";\n    var CMD_ORPHAN_ALL = \"orphanAll\";\n    var CMD_SHOW = \"show\";\n    var CMD_HIDE = \"hide\";\n\n    var GroupManager = function(_jsPlumb) {\n        var _managedGroups = {}, _connectionSourceMap = {}, _connectionTargetMap = {}, self = this;\n\n        _jsPlumb.bind(\"connection\", function(p) {\n            if (p.source[GROUP] != null && p.target[GROUP] != null && p.source[GROUP] === p.target[GROUP]) {\n                _connectionSourceMap[p.connection.id] = p.source[GROUP];\n                _connectionTargetMap[p.connection.id] = p.source[GROUP];\n            }\n            else {\n                if (p.source[GROUP] != null) {\n                    _ju.suggest(p.source[GROUP].connections.source, p.connection);\n                    _connectionSourceMap[p.connection.id] = p.source[GROUP];\n                }\n                if (p.target[GROUP] != null) {\n                    _ju.suggest(p.target[GROUP].connections.target, p.connection);\n                    _connectionTargetMap[p.connection.id] = p.target[GROUP];\n                }\n            }\n        });\n\n        function _cleanupDetachedConnection(conn) {\n            delete conn.proxies;\n            var group = _connectionSourceMap[conn.id], f;\n            if (group != null) {\n                f = function(c) { return c.id === conn.id; };\n                _ju.removeWithFunction(group.connections.source, f);\n                _ju.removeWithFunction(group.connections.target, f);\n                delete _connectionSourceMap[conn.id];\n            }\n\n            group = _connectionTargetMap[conn.id];\n            if (group != null) {\n                f = function(c) { return c.id === conn.id; };\n                _ju.removeWithFunction(group.connections.source, f);\n                _ju.removeWithFunction(group.connections.target, f);\n                delete _connectionTargetMap[conn.id];\n            }\n        }\n\n        _jsPlumb.bind(EVT_INTERNAL_CONNECTION_DETACHED, function(p) {\n            _cleanupDetachedConnection(p.connection);\n        });\n\n        _jsPlumb.bind(EVT_CONNECTION_MOVED, function(p) {\n            var connMap = p.index === 0 ? _connectionSourceMap : _connectionTargetMap;\n            var group = connMap[p.connection.id];\n            if (group) {\n                var list = group.connections[p.index === 0 ? \"source\" : \"target\"];\n                var idx = list.indexOf(p.connection);\n                if (idx !== -1) {\n                    list.splice(idx, 1);\n                }\n            }\n        });\n\n        this.addGroup = function(group) {\n            _jsPlumb.addClass(group.getEl(), GROUP_EXPANDED_CLASS);\n            _managedGroups[group.id] = group;\n            group.manager = this;\n            _updateConnectionsForGroup(group);\n            _jsPlumb.fire(EVT_GROUP_ADDED, { group:group });\n        };\n\n        this.addToGroup = function(group, el, doNotFireEvent) {\n            group = this.getGroup(group);\n            if (group) {\n                //group.add(el, doNotFireEvent);\n                var groupEl = group.getEl();\n\n                if (el._isJsPlumbGroup) {\n                    return;\n                }\n                var currentGroup = el._jsPlumbGroup;\n                // if already a member of this group, do nothing\n                if (currentGroup !== group) {\n                    var elpos = _jsPlumb.getOffset(el, true);\n                    var cpos = group.collapsed ? _jsPlumb.getOffset(groupEl, true) : _jsPlumb.getOffset(group.getDragArea(), true);\n\n                    // otherwise, transfer to this group.\n                    if (currentGroup != null) {\n                        currentGroup.remove(el, false, doNotFireEvent, false, group);\n                        self.updateConnectionsForGroup(currentGroup);\n                    }\n                    group.add(el, doNotFireEvent, currentGroup);\n\n                    var handleDroppedConnections = function (list, index) {\n                        var oidx = index === 0 ? 1 : 0;\n                        list.each(function (c) {\n                            c.setVisible(false);\n                            if (c.endpoints[oidx].element._jsPlumbGroup === group) {\n                                c.endpoints[oidx].setVisible(false);\n                                self.expandConnection(c, oidx, group);\n                            }\n                            else {\n                                c.endpoints[index].setVisible(false);\n                                self.collapseConnection(c, index, group);\n                            }\n                        });\n                    };\n\n                    if (group.collapsed) {\n                        handleDroppedConnections(_jsPlumb.select({source: el}), 0);\n                        handleDroppedConnections(_jsPlumb.select({target: el}), 1);\n                    }\n\n                    var elId = _jsPlumb.getId(el);\n                    _jsPlumb.dragManager.setParent(el, elId, groupEl, _jsPlumb.getId(groupEl), elpos);\n\n                    var newPosition = { left: elpos.left - cpos.left, top: elpos.top - cpos.top };\n\n                    _jsPlumb.setPosition(el, newPosition);\n\n                    _jsPlumb.dragManager.revalidateParent(el, elId, elpos);\n\n                    self.updateConnectionsForGroup(group);\n\n                    _jsPlumb.revalidate(elId);\n\n                    setTimeout(function () {\n                        _jsPlumb.fire(EVT_CHILD_ADDED, {group: group, el: el});\n                    }, 0);\n                }\n            }\n        };\n\n        this.removeFromGroup = function(group, el, doNotFireEvent) {\n            group = this.getGroup(group);\n            if (group) {\n                group.remove(el, null, doNotFireEvent);\n            }\n        };\n\n        this.getGroup = function(groupId) {\n            var group = groupId;\n            if (_ju.isString(groupId)) {\n                group = _managedGroups[groupId];\n                if (group == null) {\n                    throw new TypeError(\"No such group [\" + groupId + \"]\");\n                }\n            }\n            return group;\n        };\n\n        this.getGroups = function() {\n            var o = [];\n            for (var g in _managedGroups) {\n                o.push(_managedGroups[g]);\n            }\n            return o;\n        };\n\n        this.removeGroup = function(group, deleteMembers, manipulateDOM, doNotFireEvent) {\n            group = this.getGroup(group);\n            this.expandGroup(group, true); // this reinstates any original connections and removes all proxies, but does not fire an event.\n            group[deleteMembers ? CMD_REMOVE_ALL : CMD_ORPHAN_ALL](manipulateDOM, doNotFireEvent);\n            _jsPlumb.remove(group.getEl());\n            delete _managedGroups[group.id];\n            delete _jsPlumb._groups[group.id];\n            _jsPlumb.fire(EVT_GROUP_REMOVED, { group:group });\n        };\n\n        this.removeAllGroups = function(deleteMembers, manipulateDOM, doNotFireEvent) {\n            for (var g in _managedGroups) {\n                this.removeGroup(_managedGroups[g], deleteMembers, manipulateDOM, doNotFireEvent);\n            }\n        };\n\n        function _setVisible(group, state) {\n            var m = group.getMembers();\n            for (var i = 0; i < m.length; i++) {\n                _jsPlumb[state ? CMD_SHOW : CMD_HIDE](m[i], true);\n            }\n        }\n\n        var _collapseConnection = this.collapseConnection = function(c, index, group) {\n\n            var proxyEp, groupEl = group.getEl(), groupElId = _jsPlumb.getId(groupEl),\n                originalElementId = c.endpoints[index].elementId;\n\n            var otherEl = c.endpoints[index === 0 ? 1 : 0].element;\n            if (otherEl[GROUP] && (!otherEl[GROUP].shouldProxy() && otherEl[GROUP].collapsed)) {\n                return;\n            }\n\n            c.proxies = c.proxies || [];\n            if(c.proxies[index]) {\n                proxyEp = c.proxies[index].ep;\n            }else {\n                proxyEp = _jsPlumb.addEndpoint(groupEl, {\n                    endpoint:group.getEndpoint(c, index),\n                    anchor:group.getAnchor(c, index),\n                    parameters:{\n                        isProxyEndpoint:true\n                    }\n                });\n            }\n            proxyEp.setDeleteOnEmpty(true);\n\n            // for this index, stash proxy info: the new EP, the original EP.\n            c.proxies[index] = { ep:proxyEp, originalEp: c.endpoints[index] };\n\n            // and advise the anchor manager\n            if (index === 0) {\n                // TODO why are there two differently named methods? Why is there not one method that says \"some end of this\n                // connection changed (you give the index), and here's the new element and element id.\"\n                _jsPlumb.anchorManager.sourceChanged(originalElementId, groupElId, c, groupEl);\n            }\n            else {\n                _jsPlumb.anchorManager.updateOtherEndpoint(c.endpoints[0].elementId, originalElementId, groupElId, c);\n                c.target = groupEl;\n                c.targetId = groupElId;\n            }\n\n\n            // detach the original EP from the connection.\n            c.proxies[index].originalEp.detachFromConnection(c, null, true);\n\n            // set the proxy as the new ep\n            proxyEp.connections = [ c ];\n            c.endpoints[index] = proxyEp;\n\n            c.setVisible(true);\n        };\n\n        this.collapseGroup = function(group) {\n            group = this.getGroup(group);\n            if (group == null || group.collapsed) {\n                return;\n            }\n            var groupEl = group.getEl();\n\n            // todo remove old proxy endpoints first, just in case?\n            //group.proxies.length = 0;\n\n            // hide all connections\n            _setVisible(group, false);\n\n            if (group.shouldProxy()) {\n                // collapses all connections in a group.\n                var _collapseSet = function (conns, index) {\n                    for (var i = 0; i < conns.length; i++) {\n                        var c = conns[i];\n                        _collapseConnection(c, index, group);\n                    }\n                };\n\n                // setup proxies for sources and targets\n                _collapseSet(group.connections.source, 0);\n                _collapseSet(group.connections.target, 1);\n            }\n\n            group.collapsed = true;\n            _jsPlumb.removeClass(groupEl, GROUP_EXPANDED_CLASS);\n            _jsPlumb.addClass(groupEl, GROUP_COLLAPSED_CLASS);\n            _jsPlumb.revalidate(groupEl);\n            _jsPlumb.fire(EVT_COLLAPSE, { group:group  });\n        };\n\n        var _expandConnection = this.expandConnection = function(c, index, group) {\n\n            // if no proxies or none for this end of the connection, abort.\n            if (c.proxies == null || c.proxies[index] == null) {\n                return;\n            }\n\n            var groupElId = _jsPlumb.getId(group.getEl()),\n                originalElement = c.proxies[index].originalEp.element,\n                originalElementId = c.proxies[index].originalEp.elementId;\n\n            c.endpoints[index] = c.proxies[index].originalEp;\n            // and advise the anchor manager\n            if (index === 0) {\n                // TODO why are there two differently named methods? Why is there not one method that says \"some end of this\n                // connection changed (you give the index), and here's the new element and element id.\"\n                _jsPlumb.anchorManager.sourceChanged(groupElId, originalElementId, c, originalElement);\n            }\n            else {\n                _jsPlumb.anchorManager.updateOtherEndpoint(c.endpoints[0].elementId, groupElId, originalElementId, c);\n                c.target = originalElement;\n                c.targetId = originalElementId;\n            }\n\n            // detach the proxy EP from the connection (which will cause it to be removed as we no longer need it)\n            c.proxies[index].ep.detachFromConnection(c, null);\n\n            c.proxies[index].originalEp.addConnection(c);\n\n            // cleanup\n            delete c.proxies[index];\n        };\n\n        this.expandGroup = function(group, doNotFireEvent) {\n\n            group = this.getGroup(group);\n\n            if (group == null || !group.collapsed) {\n                return;\n            }\n            var groupEl = group.getEl();\n\n            _setVisible(group, true);\n\n            if (group.shouldProxy()) {\n                // collapses all connections in a group.\n                var _expandSet = function (conns, index) {\n                    for (var i = 0; i < conns.length; i++) {\n                        var c = conns[i];\n                        _expandConnection(c, index, group);\n                    }\n                };\n\n                // setup proxies for sources and targets\n                _expandSet(group.connections.source, 0);\n                _expandSet(group.connections.target, 1);\n            }\n\n            group.collapsed = false;\n            _jsPlumb.addClass(groupEl, GROUP_EXPANDED_CLASS);\n            _jsPlumb.removeClass(groupEl, GROUP_COLLAPSED_CLASS);\n            _jsPlumb.revalidate(groupEl);\n            this.repaintGroup(group);\n            if (!doNotFireEvent) {\n                _jsPlumb.fire(EVT_EXPAND, { group: group});\n            }\n        };\n\n        this.repaintGroup = function(group) {\n            group = this.getGroup(group);\n            var m = group.getMembers();\n            for (var i = 0; i < m.length; i++) {\n                _jsPlumb.revalidate(m[i]);\n            }\n        };\n\n        // TODO refactor this with the code that responds to `connection` events.\n        function _updateConnectionsForGroup(group) {\n            var members = group.getMembers();\n            var c1 = _jsPlumb.getConnections({source:members, scope:\"*\"}, true);\n            var c2 = _jsPlumb.getConnections({target:members, scope:\"*\"}, true);\n            var processed = {};\n            group.connections.source.length = 0;\n            group.connections.target.length = 0;\n            var oneSet = function(c) {\n                for (var i = 0; i < c.length; i++) {\n                    if (processed[c[i].id]) {\n                        continue;\n                    }\n                    processed[c[i].id] = true;\n                    if (c[i].source._jsPlumbGroup === group) {\n                        if (c[i].target._jsPlumbGroup !== group) {\n                            group.connections.source.push(c[i]);\n                        }\n                        _connectionSourceMap[c[i].id] = group;\n                    }\n                    else if (c[i].target._jsPlumbGroup === group) {\n                        group.connections.target.push(c[i]);\n                        _connectionTargetMap[c[i].id] = group;\n                    }\n                }\n            };\n            oneSet(c1); oneSet(c2);\n        }\n\n        this.updateConnectionsForGroup = _updateConnectionsForGroup;\n        this.refreshAllGroups = function() {\n            for (var g in _managedGroups) {\n                _updateConnectionsForGroup(_managedGroups[g]);\n                _jsPlumb.dragManager.updateOffsets(_jsPlumb.getId(_managedGroups[g].getEl()));\n            }\n        };\n    };\n\n    /**\n     *\n     * @param {jsPlumbInstance} _jsPlumb Associated jsPlumb instance.\n     * @param {Object} params\n     * @param {Element} params.el The DOM element representing the Group.\n     * @param {String} [params.id] Optional ID for the Group. A UUID will be assigned as the Group's ID if you do not provide one.\n     * @param {Boolean} [params.constrain=false] If true, child elements will not be able to be dragged outside of the Group container.\n     * @param {Boolean} [params.revert=true] By default, child elements revert to the container if dragged outside. You can change this by setting `revert:false`. This behaviour is also overridden if you set `orphan` or `prune`.\n     * @param {Boolean} [params.orphan=false] If true, child elements dropped outside of the Group container will be removed from the Group (but not from the DOM).\n     * @param {Boolean} [params.prune=false] If true, child elements dropped outside of the Group container will be removed from the Group and also from the DOM.\n     * @param {Boolean} [params.dropOverride=false] If true, a child element that has been dropped onto some other Group will not be subject to the controls imposed by `prune`, `revert` or `orphan`.\n     * @constructor\n     */\n    var Group = function(_jsPlumb, params) {\n        var self = this;\n        var el = params.el;\n        this.getEl = function() { return el; };\n        this.id = params.id || _ju.uuid();\n        el._isJsPlumbGroup = true;\n\n        var getDragArea = this.getDragArea = function() {\n            var da = _jsPlumb.getSelector(el, GROUP_CONTAINER_SELECTOR);\n            return da && da.length > 0 ? da[0] : el;\n        };\n\n        var ghost = params.ghost === true;\n        var constrain = ghost || (params.constrain === true);\n        var revert = params.revert !== false;\n        var orphan = params.orphan === true;\n        var prune = params.prune === true;\n        var dropOverride = params.dropOverride === true;\n        var proxied = params.proxied !== false;\n        var elements = [];\n        this.connections = { source:[], target:[], internal:[] };\n\n        // this function, and getEndpoint below, are stubs for a future setup in which we can choose endpoint\n        // and anchor based upon the connection and the index (source/target) of the endpoint to be proxied.\n        this.getAnchor = function(conn, endpointIndex) {\n            return params.anchor || \"Continuous\";\n        };\n\n        this.getEndpoint = function(conn, endpointIndex) {\n            return params.endpoint || [ \"Dot\", { radius:10 }];\n        };\n\n        this.collapsed = false;\n        if (params.draggable !== false) {\n            var opts = {\n                stop:function(params) {\n                    _jsPlumb.fire(EVT_GROUP_DRAG_STOP, jsPlumb.extend(params, {group:self}));\n                },\n                scope:GROUP_DRAG_SCOPE\n            };\n            if (params.dragOptions) {\n                root.jsPlumb.extend(opts, params.dragOptions);\n            }\n            _jsPlumb.draggable(params.el, opts);\n        }\n        if (params.droppable !== false) {\n            _jsPlumb.droppable(params.el, {\n                drop:function(p) {\n                    var el = p.drag.el;\n                    if (el._isJsPlumbGroup) {\n                        return;\n                    }\n                    var currentGroup = el._jsPlumbGroup;\n                    if (currentGroup !== self) {\n                        if (currentGroup != null) {\n                            if (currentGroup.overrideDrop(el, self)) {\n                                return;\n                            }\n                        }\n                        _jsPlumb.getGroupManager().addToGroup(self, el, false);\n                    }\n\n                }\n            });\n        }\n        var _each = function(_el, fn) {\n            var els = _el.nodeType == null ?  _el : [ _el ];\n            for (var i = 0; i < els.length; i++) {\n                fn(els[i]);\n            }\n        };\n\n        this.overrideDrop = function(_el, targetGroup) {\n            return dropOverride && (revert || prune || orphan);\n        };\n\n        this.add = function(_el, doNotFireEvent, sourceGroup) {\n            var dragArea = getDragArea();\n            _each(_el, function(__el) {\n\n                if (__el._jsPlumbGroup != null) {\n                    if (__el._jsPlumbGroup === self) {\n                        return;\n                    } else {\n                        __el._jsPlumbGroup.remove(__el, true, doNotFireEvent, false);\n                    }\n                }\n\n                __el._jsPlumbGroup = self;\n                elements.push(__el);\n                // test if draggable and add handlers if so.\n                if (_jsPlumb.isAlreadyDraggable(__el)) {\n                    _bindDragHandlers(__el);\n                }\n\n                if (__el.parentNode !== dragArea) {\n                    dragArea.appendChild(__el);\n                }\n\n                if (!doNotFireEvent) {\n                    var p = {group: self, el: __el};\n                    if (sourceGroup) {\n                        p.sourceGroup = sourceGroup;\n                    }\n                    _jsPlumb.fire(EVT_CHILD_ADDED, p);\n                }\n            });\n\n            _jsPlumb.getGroupManager().updateConnectionsForGroup(self);\n        };\n\n        this.remove = function(el, manipulateDOM, doNotFireEvent, doNotUpdateConnections, targetGroup) {\n\n            _each(el, function(__el) {\n                delete __el._jsPlumbGroup;\n                _ju.removeWithFunction(elements, function(e) {\n                    return e === __el;\n                });\n\n                if (manipulateDOM) {\n                    try { self.getDragArea().removeChild(__el); }\n                    catch (e) {\n                        jsPlumbUtil.log(\"Could not remove element from Group \" + e);\n                    }\n                }\n                _unbindDragHandlers(__el);\n                if (!doNotFireEvent) {\n                    var p = {group: self, el: __el};\n                    if (targetGroup) {\n                        p.targetGroup = targetGroup;\n                    }\n                    _jsPlumb.fire(EVT_CHILD_REMOVED, p);\n                }\n            });\n            if (!doNotUpdateConnections) {\n                _jsPlumb.getGroupManager().updateConnectionsForGroup(self);\n            }\n        };\n        this.removeAll = function(manipulateDOM, doNotFireEvent) {\n            for (var i = 0, l = elements.length; i < l; i++) {\n                self.remove(elements[0], manipulateDOM, doNotFireEvent, true);\n            }\n            elements.length = 0;\n            _jsPlumb.getGroupManager().updateConnectionsForGroup(self);\n        };\n        this.orphanAll = function() {\n            for (var i = 0; i < elements.length; i++) {\n                _orphan(elements[i]);\n            }\n            elements.length = 0;\n        };\n        this.getMembers = function() { return elements; };\n\n        el[GROUP] = this;\n\n        _jsPlumb.bind(ELEMENT_DRAGGABLE_EVENT, function(dragParams) {\n            // if its for the current group,\n            if (dragParams.el._jsPlumbGroup === this) {\n                _bindDragHandlers(dragParams.el);\n            }\n        }.bind(this));\n\n        function _findParent(_el) {\n            return _el.offsetParent;\n        }\n\n        function _isInsideParent(_el, pos) {\n            var p = _findParent(_el),\n                s = _jsPlumb.getSize(p),\n                ss = _jsPlumb.getSize(_el),\n                leftEdge = pos[0],\n                rightEdge = leftEdge + ss[0],\n                topEdge = pos[1],\n                bottomEdge = topEdge + ss[1];\n\n            return rightEdge > 0 && leftEdge < s[0] && bottomEdge > 0 && topEdge < s[1];\n        }\n\n        //\n        // orphaning an element means taking it out of the group and adding it to the main jsplumb container.\n        //\n        function _orphan(_el) {\n            var id = _jsPlumb.getId(_el);\n            var pos = _jsPlumb.getOffset(_el);\n            _el.parentNode.removeChild(_el);\n            _jsPlumb.getContainer().appendChild(_el);\n            _jsPlumb.setPosition(_el, pos);\n            delete _el._jsPlumbGroup;\n            _unbindDragHandlers(_el);\n            _jsPlumb.dragManager.clearParent(_el, id);\n        }\n\n        //\n        // remove an element from the group, then either prune it from the jsplumb instance, or just orphan it.\n        //\n        function _pruneOrOrphan(p) {\n            if (!_isInsideParent(p.el, p.pos)) {\n                var group = p.el._jsPlumbGroup;\n                if (prune) {\n                    _jsPlumb.remove(p.el);\n                } else {\n                    _orphan(p.el);\n                }\n\n                group.remove(p.el);\n            }\n        }\n\n        //\n        // redraws the element\n        //\n        function _revalidate(_el) {\n            var id = _jsPlumb.getId(_el);\n            _jsPlumb.revalidate(_el);\n            _jsPlumb.dragManager.revalidateParent(_el, id);\n        }\n\n        //\n        // unbind the group specific drag/revert handlers.\n        //\n        function _unbindDragHandlers(_el) {\n            if (!_el._katavorioDrag) {\n                return;\n            }\n            if (prune || orphan) {\n                _el._katavorioDrag.off(STOP, _pruneOrOrphan);\n            }\n            if (!prune && !orphan && revert) {\n                _el._katavorioDrag.off(REVERT, _revalidate);\n                _el._katavorioDrag.setRevert(null);\n            }\n        }\n\n        function _bindDragHandlers(_el) {\n            if (!_el._katavorioDrag) {\n                return;\n            }\n            if (prune || orphan) {\n                _el._katavorioDrag.on(STOP, _pruneOrOrphan);\n            }\n\n            if (constrain) {\n                _el._katavorioDrag.setConstrain(true);\n            }\n\n            if (ghost) {\n                _el._katavorioDrag.setUseGhostProxy(true);\n            }\n\n            if (!prune && !orphan && revert) {\n                _el._katavorioDrag.on(REVERT, _revalidate);\n                _el._katavorioDrag.setRevert(function(__el, pos) {\n                    return !_isInsideParent(__el, pos);\n                });\n            }\n        }\n\n        this.shouldProxy = function() {\n            return proxied;\n        };\n\n        _jsPlumb.getGroupManager().addGroup(this);\n    };\n\n    /**\n     * Adds a group to the jsPlumb instance.\n     * @method addGroup\n     * @param {Object} params\n     * @return {Group} The newly created Group.\n     */\n    _jpi.prototype.addGroup = function(params) {\n        var j = this;\n        j._groups = j._groups || {};\n        if (j._groups[params.id] != null) {\n            throw new TypeError(\"cannot create Group [\" + params.id + \"]; a Group with that ID exists\");\n        }\n        if (params.el[GROUP] != null) {\n            throw new TypeError(\"cannot create Group [\" + params.id + \"]; the given element is already a Group\");\n        }\n        var group = new Group(j, params);\n        j._groups[group.id] = group;\n        if (params.collapsed) {\n            this.collapseGroup(group);\n        }\n        return group;\n    };\n\n    /**\n     * Add an element to a group.\n     * @method addToGroup\n     * @param {String} group Group, or ID of the group, to add the element to.\n     * @param {Element} el Element to add to the group.\n     */\n    _jpi.prototype.addToGroup = function(group, el, doNotFireEvent) {\n\n        var _one = function(_el) {\n            var id = this.getId(_el);\n            this.manage(id, _el);\n            this.getGroupManager().addToGroup(group, _el, doNotFireEvent);\n        }.bind(this);\n\n        if (Array.isArray(el)) {\n            for (var i = 0; i < el.length; i++) {\n                _one(el[i]);\n            }\n        } else {\n            _one(el);\n        }\n    };\n\n    /**\n     * Remove an element from a group.\n     * @method removeFromGroup\n     * @param {String} group Group, or ID of the group, to remove the element from.\n     * @param {Element} el Element to add to the group.\n     */\n    _jpi.prototype.removeFromGroup = function(group, el, doNotFireEvent) {\n        this.getGroupManager().removeFromGroup(group, el, doNotFireEvent);\n    };\n\n    /**\n     * Remove a group, and optionally remove its members from the jsPlumb instance.\n     * @method removeGroup\n     * @param {String|Group} group Group to delete, or ID of Group to delete.\n     * @param {Boolean} [deleteMembers=false] If true, group members will be removed along with the group. Otherwise they will\n     * just be 'orphaned' (returned to the main container).\n     */\n    _jpi.prototype.removeGroup = function(group, deleteMembers, manipulateDOM, doNotFireEvent) {\n        this.getGroupManager().removeGroup(group, deleteMembers, manipulateDOM, doNotFireEvent);\n    };\n\n    /**\n     * Remove all groups, and optionally remove their members from the jsPlumb instance.\n     * @method removeAllGroup\n     * @param {Boolean} [deleteMembers=false] If true, group members will be removed along with the groups. Otherwise they will\n     * just be 'orphaned' (returned to the main container).\n     */\n    _jpi.prototype.removeAllGroups = function(deleteMembers, manipulateDOM, doNotFireEvent) {\n        this.getGroupManager().removeAllGroups(deleteMembers, manipulateDOM, doNotFireEvent);\n    };\n\n    /**\n     * Get a Group\n     * @method getGroup\n     * @param {String} groupId ID of the group to get\n     * @return {Group} Group with the given ID, null if not found.\n     */\n    _jpi.prototype.getGroup = function(groupId) {\n        return this.getGroupManager().getGroup(groupId);\n    };\n\n    /**\n     * Gets all the Groups managed by the jsPlumb instance.\n     * @returns {Group[]} List of Groups. Empty if none.\n     */\n    _jpi.prototype.getGroups = function() {\n        return this.getGroupManager().getGroups();\n    };\n\n    /**\n     * Expands a group element. jsPlumb doesn't do \"everything\" for you here, because what it means to expand a Group\n     * will vary from application to application. jsPlumb does these things:\n     *\n     * - Hides any connections that are internal to the group (connections between members, and connections from member of\n     * the group to the group itself)\n     * - Proxies all connections for which the source or target is a member of the group.\n     * - Hides the proxied connections.\n     * - Adds the jtk-group-expanded class to the group's element\n     * - Removes the jtk-group-collapsed class from the group's element.\n     *\n     * @method expandGroup\n     * @param {String|Group} group Group to expand, or ID of Group to expand.\n     */\n    _jpi.prototype.expandGroup = function(group) {\n        this.getGroupManager().expandGroup(group);\n    };\n\n    /**\n     * Collapses a group element. jsPlumb doesn't do \"everything\" for you here, because what it means to collapse a Group\n     * will vary from application to application. jsPlumb does these things:\n     *\n     * - Shows any connections that are internal to the group (connections between members, and connections from member of\n     * the group to the group itself)\n     * - Removes proxies for all connections for which the source or target is a member of the group.\n     * - Shows the previously proxied connections.\n     * - Adds the jtk-group-collapsed class to the group's element\n     * - Removes the jtk-group-expanded class from the group's element.\n     *\n     * @method expandGroup\n     * @param {String|Group} group Group to expand, or ID of Group to expand.\n     */\n    _jpi.prototype.collapseGroup = function(groupId) {\n        this.getGroupManager().collapseGroup(groupId);\n    };\n\n\n    _jpi.prototype.repaintGroup = function(group) {\n        this.getGroupManager().repaintGroup(group);\n    };\n\n    /**\n     * Collapses or expands a group element depending on its current state. See notes in the collapseGroup and expandGroup method.\n     *\n     * @method toggleGroup\n     * @param {String|Group} group Group to expand/collapse, or ID of Group to expand/collapse.\n     */\n    _jpi.prototype.toggleGroup = function(group) {\n        group = this.getGroupManager().getGroup(group);\n        if (group != null) {\n            this.getGroupManager()[group.collapsed ? \"expandGroup\" : \"collapseGroup\"](group);\n        }\n    };\n\n    //\n    // lazy init a group manager for the given jsplumb instance.\n    //\n    _jpi.prototype.getGroupManager = function() {\n        var mgr = this[GROUP_MANAGER];\n        if (mgr == null) {\n            mgr = this[GROUP_MANAGER] = new GroupManager(this);\n        }\n        return mgr;\n    };\n\n    _jpi.prototype.removeGroupManager = function() {\n        delete this[GROUP_MANAGER];\n    };\n\n    /**\n     * Gets the Group that the given element belongs to, null if none.\n     * @method getGroupFor\n     * @param {String|Element} el Element, or element ID.\n     * @returns {Group} A Group, if found, or null.\n     */\n    _jpi.prototype.getGroupFor = function(el) {\n        el = this.getElement(el);\n        if (el) {\n            return el[GROUP];\n        }\n    };\n\n}).call(typeof window !== 'undefined' ? window : this);\n\n\n/*\n * This file contains the 'flowchart' connectors, consisting of vertical and horizontal line segments.\n *\n * Copyright (c) 2010 - 2018 jsPlumb (hello@jsplumbtoolkit.com)\n *\n * https://jsplumbtoolkit.com\n * https://github.com/jsplumb/jsplumb\n *\n * Dual licensed under the MIT and GPL2 licenses.\n */\n;\n(function () {\n\n    \"use strict\";\n    var root = this, _jp = root.jsPlumb, _ju = root.jsPlumbUtil;\n    var STRAIGHT = \"Straight\";\n    var ARC = \"Arc\";\n\n    var Flowchart = function (params) {\n        this.type = \"Flowchart\";\n        params = params || {};\n        params.stub = params.stub == null ? 30 : params.stub;\n        var segments,\n            _super = _jp.Connectors.AbstractConnector.apply(this, arguments),\n            midpoint = params.midpoint == null ? 0.5 : params.midpoint,\n            alwaysRespectStubs = params.alwaysRespectStubs === true,\n            lastx = null, lasty = null, lastOrientation,\n            cornerRadius = params.cornerRadius != null ? params.cornerRadius : 0,\n\n            // TODO now common between this and AbstractBezierEditor; refactor into superclass?\n            loopbackRadius = params.loopbackRadius || 25,\n            isLoopbackCurrently = false,\n\n            sgn = function (n) {\n                return n < 0 ? -1 : n === 0 ? 0 : 1;\n            },\n            segmentDirections = function(segment) {\n            return [\n                    sgn( segment[2] - segment[0] ),\n                    sgn( segment[3] - segment[1] )\n                ];\n            },\n            /**\n             * helper method to add a segment.\n             */\n            addSegment = function (segments, x, y, paintInfo) {\n                if (lastx === x && lasty === y) {\n                    return;\n                }\n                var lx = lastx == null ? paintInfo.sx : lastx,\n                    ly = lasty == null ? paintInfo.sy : lasty,\n                    o = lx === x ? \"v\" : \"h\";\n\n                lastx = x;\n                lasty = y;\n                segments.push([ lx, ly, x, y, o ]);\n            },\n            segLength = function (s) {\n                return Math.sqrt(Math.pow(s[0] - s[2], 2) + Math.pow(s[1] - s[3], 2));\n            },\n            _cloneArray = function (a) {\n                var _a = [];\n                _a.push.apply(_a, a);\n                return _a;\n            },\n            writeSegments = function (conn, segments, paintInfo) {\n                var current = null, next, currentDirection, nextDirection;\n                for (var i = 0; i < segments.length - 1; i++) {\n\n                    current = current || _cloneArray(segments[i]);\n                    next = _cloneArray(segments[i + 1]);\n\n                    currentDirection = segmentDirections(current);\n                    nextDirection = segmentDirections(next);\n\n                    if (cornerRadius > 0 && current[4] !== next[4]) {\n\n                        var minSegLength = Math.min(segLength(current), segLength(next));\n                        var radiusToUse = Math.min(cornerRadius, minSegLength / 2);\n\n                        current[2] -= currentDirection[0] * radiusToUse;\n                        current[3] -= currentDirection[1] * radiusToUse;\n                        next[0] += nextDirection[0] * radiusToUse;\n                        next[1] += nextDirection[1] * radiusToUse;\n\n                        var ac = (currentDirection[1] === nextDirection[0] && nextDirection[0] === 1) ||\n                                ((currentDirection[1] === nextDirection[0] && nextDirection[0] === 0) && currentDirection[0] !== nextDirection[1]) ||\n                                (currentDirection[1] === nextDirection[0] && nextDirection[0] === -1),\n                                sgny = next[1] > current[3] ? 1 : -1,\n                                sgnx = next[0] > current[2] ? 1 : -1,\n                                sgnEqual = sgny === sgnx,\n                                cx = (sgnEqual && ac || (!sgnEqual && !ac)) ? next[0] : current[2],\n                                cy = (sgnEqual && ac || (!sgnEqual && !ac)) ? current[3] : next[1];\n\n                        _super.addSegment(conn, STRAIGHT, {\n                            x1: current[0], y1: current[1], x2: current[2], y2: current[3]\n                        });\n\n                        _super.addSegment(conn, ARC, {\n                            r: radiusToUse,\n                            x1: current[2],\n                            y1: current[3],\n                            x2: next[0],\n                            y2: next[1],\n                            cx: cx,\n                            cy: cy,\n                            ac: ac\n                        });\n                    }\n                    else {\n                        // dx + dy are used to adjust for line width.\n                        var dx = (current[2] === current[0]) ? 0 : (current[2] > current[0]) ? (paintInfo.lw / 2) : -(paintInfo.lw / 2),\n                            dy = (current[3] === current[1]) ? 0 : (current[3] > current[1]) ? (paintInfo.lw / 2) : -(paintInfo.lw / 2);\n\n                        _super.addSegment(conn, STRAIGHT, {\n                            x1: current[0] - dx, y1: current[1] - dy, x2: current[2] + dx, y2: current[3] + dy\n                        });\n                    }\n                    current = next;\n                }\n                if (next != null) {\n                    // last segment\n                    _super.addSegment(conn, STRAIGHT, {\n                        x1: next[0], y1: next[1], x2: next[2], y2: next[3]\n                    });\n                }\n            };\n\n        this._compute = function (paintInfo, params) {\n\n            segments = [];\n            lastx = null;\n            lasty = null;\n            lastOrientation = null;\n\n            var commonStubCalculator = function () {\n                    return [paintInfo.startStubX, paintInfo.startStubY, paintInfo.endStubX, paintInfo.endStubY];\n                },\n                stubCalculators = {\n                    perpendicular: commonStubCalculator,\n                    orthogonal: commonStubCalculator,\n                    opposite: function (axis) {\n                        var pi = paintInfo,\n                            idx = axis === \"x\" ? 0 : 1,\n                            areInProximity = {\n                                \"x\": function () {\n                                    return ( (pi.so[idx] === 1 && (\n                                        ( (pi.startStubX > pi.endStubX) && (pi.tx > pi.startStubX) ) ||\n                                        ( (pi.sx > pi.endStubX) && (pi.tx > pi.sx))))) ||\n\n                                        ( (pi.so[idx] === -1 && (\n                                        ( (pi.startStubX < pi.endStubX) && (pi.tx < pi.startStubX) ) ||\n                                        ( (pi.sx < pi.endStubX) && (pi.tx < pi.sx)))));\n                                },\n                                \"y\": function () {\n                                    return ( (pi.so[idx] === 1 && (\n                                        ( (pi.startStubY > pi.endStubY) && (pi.ty > pi.startStubY) ) ||\n                                        ( (pi.sy > pi.endStubY) && (pi.ty > pi.sy))))) ||\n\n                                        ( (pi.so[idx] === -1 && (\n                                        ( (pi.startStubY < pi.endStubY) && (pi.ty < pi.startStubY) ) ||\n                                        ( (pi.sy < pi.endStubY) && (pi.ty < pi.sy)))));\n                                }\n                            };\n\n                        if (!alwaysRespectStubs && areInProximity[axis]()) {\n                            return {\n                                \"x\": [(paintInfo.sx + paintInfo.tx) / 2, paintInfo.startStubY, (paintInfo.sx + paintInfo.tx) / 2, paintInfo.endStubY],\n                                \"y\": [paintInfo.startStubX, (paintInfo.sy + paintInfo.ty) / 2, paintInfo.endStubX, (paintInfo.sy + paintInfo.ty) / 2]\n                            }[axis];\n                        }\n                        else {\n                            return [paintInfo.startStubX, paintInfo.startStubY, paintInfo.endStubX, paintInfo.endStubY];\n                        }\n                    }\n                };\n\n            // calculate Stubs.\n            var stubs = stubCalculators[paintInfo.anchorOrientation](paintInfo.sourceAxis),\n                idx = paintInfo.sourceAxis === \"x\" ? 0 : 1,\n                oidx = paintInfo.sourceAxis === \"x\" ? 1 : 0,\n                ss = stubs[idx],\n                oss = stubs[oidx],\n                es = stubs[idx + 2],\n                oes = stubs[oidx + 2];\n\n            // add the start stub segment. use stubs for loopback as it will look better, with the loop spaced\n            // away from the element.\n            addSegment(segments, stubs[0], stubs[1], paintInfo);\n\n            // if its a loopback and we should treat it differently.\n            // if (false && params.sourcePos[0] === params.targetPos[0] && params.sourcePos[1] === params.targetPos[1]) {\n            //\n            //     // we use loopbackRadius here, as statemachine connectors do.\n            //     // so we go radius to the left from stubs[0], then upwards by 2*radius, to the right by 2*radius,\n            //     // down by 2*radius, left by radius.\n            //     addSegment(segments, stubs[0] - loopbackRadius, stubs[1], paintInfo);\n            //     addSegment(segments, stubs[0] - loopbackRadius, stubs[1] - (2 * loopbackRadius), paintInfo);\n            //     addSegment(segments, stubs[0] + loopbackRadius, stubs[1] - (2 * loopbackRadius), paintInfo);\n            //     addSegment(segments, stubs[0] + loopbackRadius, stubs[1], paintInfo);\n            //     addSegment(segments, stubs[0], stubs[1], paintInfo);\n            //\n            // }\n            // else {\n\n\n                var midx = paintInfo.startStubX + ((paintInfo.endStubX - paintInfo.startStubX) * midpoint),\n                    midy = paintInfo.startStubY + ((paintInfo.endStubY - paintInfo.startStubY) * midpoint);\n\n                var orientations = {x: [0, 1], y: [1, 0]},\n                    lineCalculators = {\n                        perpendicular: function (axis) {\n                            var pi = paintInfo,\n                                sis = {\n                                    x: [\n                                        [[1, 2, 3, 4], null, [2, 1, 4, 3]],\n                                        null,\n                                        [[4, 3, 2, 1], null, [3, 4, 1, 2]]\n                                    ],\n                                    y: [\n                                        [[3, 2, 1, 4], null, [2, 3, 4, 1]],\n                                        null,\n                                        [[4, 1, 2, 3], null, [1, 4, 3, 2]]\n                                    ]\n                                },\n                                stubs = {\n                                    x: [[pi.startStubX, pi.endStubX], null, [pi.endStubX, pi.startStubX]],\n                                    y: [[pi.startStubY, pi.endStubY], null, [pi.endStubY, pi.startStubY]]\n                                },\n                                midLines = {\n                                    x: [[midx, pi.startStubY], [midx, pi.endStubY]],\n                                    y: [[pi.startStubX, midy], [pi.endStubX, midy]]\n                                },\n                                linesToEnd = {\n                                    x: [[pi.endStubX, pi.startStubY]],\n                                    y: [[pi.startStubX, pi.endStubY]]\n                                },\n                                startToEnd = {\n                                    x: [[pi.startStubX, pi.endStubY], [pi.endStubX, pi.endStubY]],\n                                    y: [[pi.endStubX, pi.startStubY], [pi.endStubX, pi.endStubY]]\n                                },\n                                startToMidToEnd = {\n                                    x: [[pi.startStubX, midy], [pi.endStubX, midy], [pi.endStubX, pi.endStubY]],\n                                    y: [[midx, pi.startStubY], [midx, pi.endStubY], [pi.endStubX, pi.endStubY]]\n                                },\n                                otherStubs = {\n                                    x: [pi.startStubY, pi.endStubY],\n                                    y: [pi.startStubX, pi.endStubX]\n                                },\n                                soIdx = orientations[axis][0], toIdx = orientations[axis][1],\n                                _so = pi.so[soIdx] + 1,\n                                _to = pi.to[toIdx] + 1,\n                                otherFlipped = (pi.to[toIdx] === -1 && (otherStubs[axis][1] < otherStubs[axis][0])) || (pi.to[toIdx] === 1 && (otherStubs[axis][1] > otherStubs[axis][0])),\n                                stub1 = stubs[axis][_so][0],\n                                stub2 = stubs[axis][_so][1],\n                                segmentIndexes = sis[axis][_so][_to];\n\n                            if (pi.segment === segmentIndexes[3] || (pi.segment === segmentIndexes[2] && otherFlipped)) {\n                                return midLines[axis];\n                            }\n                            else if (pi.segment === segmentIndexes[2] && stub2 < stub1) {\n                                return linesToEnd[axis];\n                            }\n                            else if ((pi.segment === segmentIndexes[2] && stub2 >= stub1) || (pi.segment === segmentIndexes[1] && !otherFlipped)) {\n                                return startToMidToEnd[axis];\n                            }\n                            else if (pi.segment === segmentIndexes[0] || (pi.segment === segmentIndexes[1] && otherFlipped)) {\n                                return startToEnd[axis];\n                            }\n                        },\n                        orthogonal: function (axis, startStub, otherStartStub, endStub, otherEndStub) {\n                            var pi = paintInfo,\n                                extent = {\n                                    \"x\": pi.so[0] === -1 ? Math.min(startStub, endStub) : Math.max(startStub, endStub),\n                                    \"y\": pi.so[1] === -1 ? Math.min(startStub, endStub) : Math.max(startStub, endStub)\n                                }[axis];\n\n                            return {\n                                \"x\": [\n                                    [extent, otherStartStub],\n                                    [extent, otherEndStub],\n                                    [endStub, otherEndStub]\n                                ],\n                                \"y\": [\n                                    [otherStartStub, extent],\n                                    [otherEndStub, extent],\n                                    [otherEndStub, endStub]\n                                ]\n                            }[axis];\n                        },\n                        opposite: function (axis, ss, oss, es) {\n                            var pi = paintInfo,\n                                otherAxis = {\"x\": \"y\", \"y\": \"x\"}[axis],\n                                dim = {\"x\": \"height\", \"y\": \"width\"}[axis],\n                                comparator = pi[\"is\" + axis.toUpperCase() + \"GreaterThanStubTimes2\"];\n\n                            if (params.sourceEndpoint.elementId === params.targetEndpoint.elementId) {\n                                var _val = oss + ((1 - params.sourceEndpoint.anchor[otherAxis]) * params.sourceInfo[dim]) + _super.maxStub;\n                                return {\n                                    \"x\": [\n                                        [ss, _val],\n                                        [es, _val]\n                                    ],\n                                    \"y\": [\n                                        [_val, ss],\n                                        [_val, es]\n                                    ]\n                                }[axis];\n\n                            }\n                            else if (!comparator || (pi.so[idx] === 1 && ss > es) || (pi.so[idx] === -1 && ss < es)) {\n                                return {\n                                    \"x\": [\n                                        [ss, midy],\n                                        [es, midy]\n                                    ],\n                                    \"y\": [\n                                        [midx, ss],\n                                        [midx, es]\n                                    ]\n                                }[axis];\n                            }\n                            else if ((pi.so[idx] === 1 && ss < es) || (pi.so[idx] === -1 && ss > es)) {\n                                return {\n                                    \"x\": [\n                                        [midx, pi.sy],\n                                        [midx, pi.ty]\n                                    ],\n                                    \"y\": [\n                                        [pi.sx, midy],\n                                        [pi.tx, midy]\n                                    ]\n                                }[axis];\n                            }\n                        }\n                    };\n\n                // compute the rest of the line\n                var p = lineCalculators[paintInfo.anchorOrientation](paintInfo.sourceAxis, ss, oss, es, oes);\n                if (p) {\n                    for (var i = 0; i < p.length; i++) {\n                        addSegment(segments, p[i][0], p[i][1], paintInfo);\n                    }\n                }\n\n                // line to end stub\n                addSegment(segments, stubs[2], stubs[3], paintInfo);\n\n            //}\n\n            // end stub to end (common)\n            addSegment(segments, paintInfo.tx, paintInfo.ty, paintInfo);\n\n\n\n            // write out the segments.\n            writeSegments(this, segments, paintInfo);\n\n        };\n    };\n\n    _jp.Connectors.Flowchart = Flowchart;\n    _ju.extend(_jp.Connectors.Flowchart, _jp.Connectors.AbstractConnector);\n\n}).call(typeof window !== 'undefined' ? window : this);\n/*\n * This file contains the code for the Bezier connector type.\n *\n * Copyright (c) 2010 - 2018 jsPlumb (hello@jsplumbtoolkit.com)\n *\n * https://jsplumbtoolkit.com\n * https://github.com/jsplumb/jsplumb\n *\n * Dual licensed under the MIT and GPL2 licenses.\n */\n;\n(function () {\n\n    \"use strict\";\n    var root = this, _jp = root.jsPlumb, _ju = root.jsPlumbUtil;\n\n    _jp.Connectors.AbstractBezierConnector = function(params) {\n        params = params || {};\n        var showLoopback = params.showLoopback !== false,\n            curviness = params.curviness || 10,\n            margin = params.margin || 5,\n            proximityLimit = params.proximityLimit || 80,\n            clockwise = params.orientation && params.orientation === \"clockwise\",\n            loopbackRadius = params.loopbackRadius || 25,\n            isLoopbackCurrently = false,\n            _super;\n\n        this._compute = function (paintInfo, p) {\n\n            var sp = p.sourcePos,\n                tp = p.targetPos,\n                _w = Math.abs(sp[0] - tp[0]),\n                _h = Math.abs(sp[1] - tp[1]);\n\n            if (!showLoopback || (p.sourceEndpoint.elementId !== p.targetEndpoint.elementId)) {\n                isLoopbackCurrently = false;\n                this._computeBezier(paintInfo, p, sp, tp, _w, _h);\n            } else {\n                isLoopbackCurrently = true;\n                // a loopback connector.  draw an arc from one anchor to the other.\n                var x1 = p.sourcePos[0], y1 = p.sourcePos[1] - margin,\n                    cx = x1, cy = y1 - loopbackRadius,\n                // canvas sizing stuff, to ensure the whole painted area is visible.\n                    _x = cx - loopbackRadius,\n                    _y = cy - loopbackRadius;\n\n                _w = 2 * loopbackRadius;\n                _h = 2 * loopbackRadius;\n\n                paintInfo.points[0] = _x;\n                paintInfo.points[1] = _y;\n                paintInfo.points[2] = _w;\n                paintInfo.points[3] = _h;\n\n                // ADD AN ARC SEGMENT.\n                _super.addSegment(this, \"Arc\", {\n                    loopback: true,\n                    x1: (x1 - _x) + 4,\n                    y1: y1 - _y,\n                    startAngle: 0,\n                    endAngle: 2 * Math.PI,\n                    r: loopbackRadius,\n                    ac: !clockwise,\n                    x2: (x1 - _x) - 4,\n                    y2: y1 - _y,\n                    cx: cx - _x,\n                    cy: cy - _y\n                });\n            }\n        };\n\n        _super = _jp.Connectors.AbstractConnector.apply(this, arguments);\n        return _super;\n    };\n    _ju.extend(_jp.Connectors.AbstractBezierConnector, _jp.Connectors.AbstractConnector);\n\n    var Bezier = function (params) {\n        params = params || {};\n        this.type = \"Bezier\";\n\n        var _super = _jp.Connectors.AbstractBezierConnector.apply(this, arguments),\n            majorAnchor = params.curviness || 150,\n            minorAnchor = 10;\n\n        this.getCurviness = function () {\n            return majorAnchor;\n        };\n\n        this._findControlPoint = function (point, sourceAnchorPosition, targetAnchorPosition, sourceEndpoint, targetEndpoint, soo, too) {\n            // determine if the two anchors are perpendicular to each other in their orientation.  we swap the control\n            // points around if so (code could be tightened up)\n            var perpendicular = soo[0] !== too[0] || soo[1] === too[1],\n                p = [];\n\n            if (!perpendicular) {\n                if (soo[0] === 0) {\n                    p.push(sourceAnchorPosition[0] < targetAnchorPosition[0] ? point[0] + minorAnchor : point[0] - minorAnchor);\n                }\n                else {\n                    p.push(point[0] - (majorAnchor * soo[0]));\n                }\n\n                if (soo[1] === 0) {\n                    p.push(sourceAnchorPosition[1] < targetAnchorPosition[1] ? point[1] + minorAnchor : point[1] - minorAnchor);\n                }\n                else {\n                    p.push(point[1] + (majorAnchor * too[1]));\n                }\n            }\n            else {\n                if (too[0] === 0) {\n                    p.push(targetAnchorPosition[0] < sourceAnchorPosition[0] ? point[0] + minorAnchor : point[0] - minorAnchor);\n                }\n                else {\n                    p.push(point[0] + (majorAnchor * too[0]));\n                }\n\n                if (too[1] === 0) {\n                    p.push(targetAnchorPosition[1] < sourceAnchorPosition[1] ? point[1] + minorAnchor : point[1] - minorAnchor);\n                }\n                else {\n                    p.push(point[1] + (majorAnchor * soo[1]));\n                }\n            }\n\n            return p;\n        };\n\n        this._computeBezier = function (paintInfo, p, sp, tp, _w, _h) {\n\n            var _CP, _CP2,\n                _sx = sp[0] < tp[0] ? _w : 0,\n                _sy = sp[1] < tp[1] ? _h : 0,\n                _tx = sp[0] < tp[0] ? 0 : _w,\n                _ty = sp[1] < tp[1] ? 0 : _h;\n\n            _CP = this._findControlPoint([_sx, _sy], sp, tp, p.sourceEndpoint, p.targetEndpoint, paintInfo.so, paintInfo.to);\n            _CP2 = this._findControlPoint([_tx, _ty], tp, sp, p.targetEndpoint, p.sourceEndpoint, paintInfo.to, paintInfo.so);\n\n\n            _super.addSegment(this, \"Bezier\", {\n                x1: _sx, y1: _sy, x2: _tx, y2: _ty,\n                cp1x: _CP[0], cp1y: _CP[1], cp2x: _CP2[0], cp2y: _CP2[1]\n            });\n        };\n\n\n    };\n\n    _jp.Connectors.Bezier = Bezier;\n    _ju.extend(Bezier, _jp.Connectors.AbstractBezierConnector);\n\n}).call(typeof window !== 'undefined' ? window : this);\n/*\n * This file contains the state machine connectors, which extend AbstractBezierConnector.\n *\n * Copyright (c) 2010 - 2018 jsPlumb (hello@jsplumbtoolkit.com)\n *\n * https://jsplumbtoolkit.com\n * https://github.com/jsplumb/jsplumb\n * \n * Dual licensed under the MIT and GPL2 licenses.\n */\n;\n(function () {\n\n    \"use strict\";\n    var root = this, _jp = root.jsPlumb, _ju = root.jsPlumbUtil;\n\n    var _segment = function (x1, y1, x2, y2) {\n            if (x1 <= x2 && y2 <= y1) {\n                return 1;\n            }\n            else if (x1 <= x2 && y1 <= y2) {\n                return 2;\n            }\n            else if (x2 <= x1 && y2 >= y1) {\n                return 3;\n            }\n            return 4;\n        },\n\n    // the control point we will use depends on the faces to which each end of the connection is assigned, specifically whether or not the\n    // two faces are parallel or perpendicular.  if they are parallel then the control point lies on the midpoint of the axis in which they\n    // are parellel and varies only in the other axis; this variation is proportional to the distance that the anchor points lie from the\n    // center of that face.  if the two faces are perpendicular then the control point is at some distance from both the midpoints; the amount and\n    // direction are dependent on the orientation of the two elements. 'seg', passed in to this method, tells you which segment the target element\n    // lies in with respect to the source: 1 is top right, 2 is bottom right, 3 is bottom left, 4 is top left.\n    //\n    // sourcePos and targetPos are arrays of info about where on the source and target each anchor is located.  their contents are:\n    //\n    // 0 - absolute x\n    // 1 - absolute y\n    // 2 - proportional x in element (0 is left edge, 1 is right edge)\n    // 3 - proportional y in element (0 is top edge, 1 is bottom edge)\n    //\n        _findControlPoint = function (midx, midy, segment, sourceEdge, targetEdge, dx, dy, distance, proximityLimit) {\n            // TODO (maybe)\n            // - if anchor pos is 0.5, make the control point take into account the relative position of the elements.\n            if (distance <= proximityLimit) {\n                return [midx, midy];\n            }\n\n            if (segment === 1) {\n                if (sourceEdge[3] <= 0 && targetEdge[3] >= 1) {\n                    return [ midx + (sourceEdge[2] < 0.5 ? -1 * dx : dx), midy ];\n                }\n                else if (sourceEdge[2] >= 1 && targetEdge[2] <= 0) {\n                    return [ midx, midy + (sourceEdge[3] < 0.5 ? -1 * dy : dy) ];\n                }\n                else {\n                    return [ midx + (-1 * dx) , midy + (-1 * dy) ];\n                }\n            }\n            else if (segment === 2) {\n                if (sourceEdge[3] >= 1 && targetEdge[3] <= 0) {\n                    return [ midx + (sourceEdge[2] < 0.5 ? -1 * dx : dx), midy ];\n                }\n                else if (sourceEdge[2] >= 1 && targetEdge[2] <= 0) {\n                    return [ midx, midy + (sourceEdge[3] < 0.5 ? -1 * dy : dy) ];\n                }\n                else {\n                    return [ midx + dx, midy + (-1 * dy) ];\n                }\n            }\n            else if (segment === 3) {\n                if (sourceEdge[3] >= 1 && targetEdge[3] <= 0) {\n                    return [ midx + (sourceEdge[2] < 0.5 ? -1 * dx : dx), midy ];\n                }\n                else if (sourceEdge[2] <= 0 && targetEdge[2] >= 1) {\n                    return [ midx, midy + (sourceEdge[3] < 0.5 ? -1 * dy : dy) ];\n                }\n                else {\n                    return [ midx + (-1 * dx) , midy + (-1 * dy) ];\n                }\n            }\n            else if (segment === 4) {\n                if (sourceEdge[3] <= 0 && targetEdge[3] >= 1) {\n                    return [ midx + (sourceEdge[2] < 0.5 ? -1 * dx : dx), midy ];\n                }\n                else if (sourceEdge[2] <= 0 && targetEdge[2] >= 1) {\n                    return [ midx, midy + (sourceEdge[3] < 0.5 ? -1 * dy : dy) ];\n                }\n                else {\n                    return [ midx + dx , midy + (-1 * dy) ];\n                }\n            }\n\n        };\n\n    var StateMachine = function (params) {\n        params = params || {};\n        this.type = \"StateMachine\";\n\n        var _super = _jp.Connectors.AbstractBezierConnector.apply(this, arguments),\n            curviness = params.curviness || 10,\n            margin = params.margin || 5,\n            proximityLimit = params.proximityLimit || 80,\n            clockwise = params.orientation && params.orientation === \"clockwise\",\n            _controlPoint;\n\n        this._computeBezier = function(paintInfo, params, sp, tp, w, h) {\n            var _sx = params.sourcePos[0] < params.targetPos[0] ? 0 : w,\n                _sy = params.sourcePos[1] < params.targetPos[1] ? 0 : h,\n                _tx = params.sourcePos[0] < params.targetPos[0] ? w : 0,\n                _ty = params.sourcePos[1] < params.targetPos[1] ? h : 0;\n\n            // now adjust for the margin\n            if (params.sourcePos[2] === 0) {\n                _sx -= margin;\n            }\n            if (params.sourcePos[2] === 1) {\n                _sx += margin;\n            }\n            if (params.sourcePos[3] === 0) {\n                _sy -= margin;\n            }\n            if (params.sourcePos[3] === 1) {\n                _sy += margin;\n            }\n            if (params.targetPos[2] === 0) {\n                _tx -= margin;\n            }\n            if (params.targetPos[2] === 1) {\n                _tx += margin;\n            }\n            if (params.targetPos[3] === 0) {\n                _ty -= margin;\n            }\n            if (params.targetPos[3] === 1) {\n                _ty += margin;\n            }\n\n            //\n            // these connectors are quadratic bezier curves, having a single control point. if both anchors\n            // are located at 0.5 on their respective faces, the control point is set to the midpoint and you\n            // get a straight line.  this is also the case if the two anchors are within 'proximityLimit', since\n            // it seems to make good aesthetic sense to do that. outside of that, the control point is positioned\n            // at 'curviness' pixels away along the normal to the straight line connecting the two anchors.\n            //\n            // there may be two improvements to this.  firstly, we might actually support the notion of avoiding nodes\n            // in the UI, or at least making a good effort at doing so.  if a connection would pass underneath some node,\n            // for example, we might increase the distance the control point is away from the midpoint in a bid to\n            // steer it around that node.  this will work within limits, but i think those limits would also be the likely\n            // limits for, once again, aesthetic good sense in the layout of a chart using these connectors.\n            //\n            // the second possible change is actually two possible changes: firstly, it is possible we should gradually\n            // decrease the 'curviness' as the distance between the anchors decreases; start tailing it off to 0 at some\n            // point (which should be configurable).  secondly, we might slightly increase the 'curviness' for connectors\n            // with respect to how far their anchor is from the center of its respective face. this could either look cool,\n            // or stupid, and may indeed work only in a way that is so subtle as to have been a waste of time.\n            //\n\n            var _midx = (_sx + _tx) / 2,\n                _midy = (_sy + _ty) / 2,\n                segment = _segment(_sx, _sy, _tx, _ty),\n                distance = Math.sqrt(Math.pow(_tx - _sx, 2) + Math.pow(_ty - _sy, 2)),\n                cp1x, cp2x, cp1y, cp2y;\n\n\n            // calculate the control point.  this code will be where we'll put in a rudimentary element avoidance scheme; it\n            // will work by extending the control point to force the curve to be, um, curvier.\n            _controlPoint = _findControlPoint(_midx,\n                _midy,\n                segment,\n                params.sourcePos,\n                params.targetPos,\n                curviness, curviness,\n                distance,\n                proximityLimit);\n\n            cp1x = _controlPoint[0];\n            cp2x = _controlPoint[0];\n            cp1y = _controlPoint[1];\n            cp2y = _controlPoint[1];\n\n            _super.addSegment(this, \"Bezier\", {\n                x1: _tx, y1: _ty, x2: _sx, y2: _sy,\n                cp1x: cp1x, cp1y: cp1y,\n                cp2x: cp2x, cp2y: cp2y\n            });\n        };\n    };\n\n    _jp.Connectors.StateMachine = StateMachine;\n    _ju.extend(StateMachine, _jp.Connectors.AbstractBezierConnector);\n\n}).call(typeof window !== 'undefined' ? window : this);\n/*\n * This file contains the 'flowchart' connectors, consisting of vertical and horizontal line segments.\n *\n * Copyright (c) 2010 - 2018 jsPlumb (hello@jsplumbtoolkit.com)\n *\n * https://jsplumbtoolkit.com\n * https://github.com/jsplumb/jsplumb\n *\n * Dual licensed under the MIT and GPL2 licenses.\n */\n;\n(function () {\n\n    \"use strict\";\n    var root = this, _jp = root.jsPlumb, _ju = root.jsPlumbUtil;\n    var STRAIGHT = \"Straight\";\n\n    var Straight = function (params) {\n        this.type = STRAIGHT;\n        var _super = _jp.Connectors.AbstractConnector.apply(this, arguments);\n\n        this._compute = function (paintInfo, _) {\n            _super.addSegment(this, STRAIGHT, {x1: paintInfo.sx, y1: paintInfo.sy, x2: paintInfo.startStubX, y2: paintInfo.startStubY});\n            _super.addSegment(this, STRAIGHT, {x1: paintInfo.startStubX, y1: paintInfo.startStubY, x2: paintInfo.endStubX, y2: paintInfo.endStubY});\n            _super.addSegment(this, STRAIGHT, {x1: paintInfo.endStubX, y1: paintInfo.endStubY, x2: paintInfo.tx, y2: paintInfo.ty});\n        };\n    };\n\n    _jp.Connectors.Straight = Straight;\n    _ju.extend(Straight, _jp.Connectors.AbstractConnector);\n\n}).call(typeof window !== 'undefined' ? window : this);\n/*\n * This file contains the SVG renderers.\n *\n * Copyright (c) 2010 - 2018 jsPlumb (hello@jsplumbtoolkit.com)\n * \n * https://jsplumbtoolkit.com\n * https://github.com/jsplumb/jsplumb\n * \n * Dual licensed under the MIT and GPL2 licenses.\n */\n;\n(function () {\n\n// ************************** SVG utility methods ********************************************\t\n\n    \"use strict\";\n    var root = this, _jp = root.jsPlumb, _ju = root.jsPlumbUtil;\n\n    var svgAttributeMap = {\n            \"stroke-linejoin\": \"stroke-linejoin\",\n            \"stroke-dashoffset\": \"stroke-dashoffset\",\n            \"stroke-linecap\": \"stroke-linecap\"\n        },\n        STROKE_DASHARRAY = \"stroke-dasharray\",\n        DASHSTYLE = \"dashstyle\",\n        LINEAR_GRADIENT = \"linearGradient\",\n        RADIAL_GRADIENT = \"radialGradient\",\n        DEFS = \"defs\",\n        FILL = \"fill\",\n        STOP = \"stop\",\n        STROKE = \"stroke\",\n        STROKE_WIDTH = \"stroke-width\",\n        STYLE = \"style\",\n        NONE = \"none\",\n        JSPLUMB_GRADIENT = \"jsplumb_gradient_\",\n        LINE_WIDTH = \"strokeWidth\",\n        ns = {\n            svg: \"http://www.w3.org/2000/svg\"\n        },\n        _attr = function (node, attributes) {\n            for (var i in attributes) {\n                node.setAttribute(i, \"\" + attributes[i]);\n            }\n        },\n        _node = function (name, attributes) {\n            attributes = attributes || {};\n            attributes.version = \"1.1\";\n            attributes.xmlns = ns.svg;\n            return _jp.createElementNS(ns.svg, name, null, null, attributes);\n        },\n        _pos = function (d) {\n            return \"position:absolute;left:\" + d[0] + \"px;top:\" + d[1] + \"px\";\n        },\n        _clearGradient = function (parent) {\n            var els = parent.querySelectorAll(\" defs,linearGradient,radialGradient\");\n            for (var i = 0; i < els.length; i++) {\n                els[i].parentNode.removeChild(els[i]);\n            }\n        },\n        _updateGradient = function (parent, node, style, dimensions, uiComponent) {\n            var id = JSPLUMB_GRADIENT + uiComponent._jsPlumb.instance.idstamp();\n            // first clear out any existing gradient\n            _clearGradient(parent);\n            // this checks for an 'offset' property in the gradient, and in the absence of it, assumes\n            // we want a linear gradient. if it's there, we create a radial gradient.\n            // it is possible that a more explicit means of defining the gradient type would be\n            // better. relying on 'offset' means that we can never have a radial gradient that uses\n            // some default offset, for instance.\n            // issue 244 suggested the 'gradientUnits' attribute; without this, straight/flowchart connectors with gradients would\n            // not show gradients when the line was perfectly horizontal or vertical.\n            var g;\n            if (!style.gradient.offset) {\n                g = _node(LINEAR_GRADIENT, {id: id, gradientUnits: \"userSpaceOnUse\"});\n            }\n            else {\n                g = _node(RADIAL_GRADIENT, { id: id });\n            }\n\n            var defs = _node(DEFS);\n            parent.appendChild(defs);\n            defs.appendChild(g);\n\n            // the svg radial gradient seems to treat stops in the reverse\n            // order to how canvas does it.  so we want to keep all the maths the same, but\n            // iterate the actual style declarations in reverse order, if the x indexes are not in order.\n            for (var i = 0; i < style.gradient.stops.length; i++) {\n                var styleToUse = uiComponent.segment === 1 || uiComponent.segment === 2 ? i : style.gradient.stops.length - 1 - i,\n                    stopColor = style.gradient.stops[styleToUse][1],\n                    s = _node(STOP, {\"offset\": Math.floor(style.gradient.stops[i][0] * 100) + \"%\", \"stop-color\": stopColor});\n\n                g.appendChild(s);\n            }\n            var applyGradientTo = style.stroke ? STROKE : FILL;\n            node.setAttribute(applyGradientTo, \"url(#\" + id + \")\");\n        },\n        _applyStyles = function (parent, node, style, dimensions, uiComponent) {\n\n            node.setAttribute(FILL, style.fill ? style.fill : NONE);\n            node.setAttribute(STROKE, style.stroke ? style.stroke : NONE);\n\n            if (style.gradient) {\n                _updateGradient(parent, node, style, dimensions, uiComponent);\n            }\n            else {\n                // make sure we clear any existing gradient\n                _clearGradient(parent);\n                node.setAttribute(STYLE, \"\");\n            }\n\n            if (style.strokeWidth) {\n                node.setAttribute(STROKE_WIDTH, style.strokeWidth);\n            }\n\n            // in SVG there is a stroke-dasharray attribute we can set, and its syntax looks like\n            // the syntax in VML but is actually kind of nasty: values are given in the pixel\n            // coordinate space, whereas in VML they are multiples of the width of the stroked\n            // line, which makes a lot more sense.  for that reason, jsPlumb is supporting both\n            // the native svg 'stroke-dasharray' attribute, and also the 'dashstyle' concept from\n            // VML, which will be the preferred method.  the code below this converts a dashstyle\n            // attribute given in terms of stroke width into a pixel representation, by using the\n            // stroke's lineWidth.\n            if (style[DASHSTYLE] && style[LINE_WIDTH] && !style[STROKE_DASHARRAY]) {\n                var sep = style[DASHSTYLE].indexOf(\",\") === -1 ? \" \" : \",\",\n                    parts = style[DASHSTYLE].split(sep),\n                    styleToUse = \"\";\n                parts.forEach(function (p) {\n                    styleToUse += (Math.floor(p * style.strokeWidth) + sep);\n                });\n                node.setAttribute(STROKE_DASHARRAY, styleToUse);\n            }\n            else if (style[STROKE_DASHARRAY]) {\n                node.setAttribute(STROKE_DASHARRAY, style[STROKE_DASHARRAY]);\n            }\n\n            // extra attributes such as join type, dash offset.\n            for (var i in svgAttributeMap) {\n                if (style[i]) {\n                    node.setAttribute(svgAttributeMap[i], style[i]);\n                }\n            }\n        },\n        _appendAtIndex = function (svg, path, idx) {\n            if (svg.childNodes.length > idx) {\n                svg.insertBefore(path, svg.childNodes[idx]);\n            }\n            else {\n                svg.appendChild(path);\n            }\n        };\n\n    /**\n     utility methods for other objects to use.\n     */\n    _ju.svg = {\n        node: _node,\n        attr: _attr,\n        pos: _pos\n    };\n\n    // ************************** / SVG utility methods ********************************************\n\n    /*\n     * Base class for SVG components.\n     */\n    var SvgComponent = function (params) {\n        var pointerEventsSpec = params.pointerEventsSpec || \"all\", renderer = {};\n\n        _jp.jsPlumbUIComponent.apply(this, params.originalArgs);\n        this.canvas = null;\n        this.path = null;\n        this.svg = null;\n        this.bgCanvas = null;\n\n        var clazz = params.cssClass + \" \" + (params.originalArgs[0].cssClass || \"\"),\n            svgParams = {\n                \"style\": \"\",\n                \"width\": 0,\n                \"height\": 0,\n                \"pointer-events\": pointerEventsSpec,\n                \"position\": \"absolute\"\n            };\n\n        this.svg = _node(\"svg\", svgParams);\n\n        if (params.useDivWrapper) {\n            this.canvas = _jp.createElement(\"div\", { position : \"absolute\" });\n            _ju.sizeElement(this.canvas, 0, 0, 1, 1);\n            this.canvas.className = clazz;\n        }\n        else {\n            _attr(this.svg, { \"class\": clazz });\n            this.canvas = this.svg;\n        }\n\n        params._jsPlumb.appendElement(this.canvas, params.originalArgs[0].parent);\n        if (params.useDivWrapper) {\n            this.canvas.appendChild(this.svg);\n        }\n\n        var displayElements = [ this.canvas ];\n        this.getDisplayElements = function () {\n            return displayElements;\n        };\n\n        this.appendDisplayElement = function (el) {\n            displayElements.push(el);\n        };\n\n        this.paint = function (style, anchor, extents) {\n            if (style != null) {\n\n                var xy = [ this.x, this.y ], wh = [ this.w, this.h ], p;\n                if (extents != null) {\n                    if (extents.xmin < 0) {\n                        xy[0] += extents.xmin;\n                    }\n                    if (extents.ymin < 0) {\n                        xy[1] += extents.ymin;\n                    }\n                    wh[0] = extents.xmax + ((extents.xmin < 0) ? -extents.xmin : 0);\n                    wh[1] = extents.ymax + ((extents.ymin < 0) ? -extents.ymin : 0);\n                }\n\n                if (params.useDivWrapper) {\n                    _ju.sizeElement(this.canvas, xy[0], xy[1], wh[0], wh[1]);\n                    xy[0] = 0;\n                    xy[1] = 0;\n                    p = _pos([ 0, 0 ]);\n                }\n                else {\n                    p = _pos([ xy[0], xy[1] ]);\n                }\n\n                renderer.paint.apply(this, arguments);\n\n                _attr(this.svg, {\n                    \"style\": p,\n                    \"width\": wh[0] || 0,\n                    \"height\": wh[1] || 0\n                });\n            }\n        };\n\n        return {\n            renderer: renderer\n        };\n    };\n\n    _ju.extend(SvgComponent, _jp.jsPlumbUIComponent, {\n        cleanup: function (force) {\n            if (force || this.typeId == null) {\n                if (this.canvas) {\n                    this.canvas._jsPlumb = null;\n                }\n                if (this.svg) {\n                    this.svg._jsPlumb = null;\n                }\n                if (this.bgCanvas) {\n                    this.bgCanvas._jsPlumb = null;\n                }\n\n                if (this.canvas && this.canvas.parentNode) {\n                    this.canvas.parentNode.removeChild(this.canvas);\n                }\n                if (this.bgCanvas && this.bgCanvas.parentNode) {\n                    this.canvas.parentNode.removeChild(this.canvas);\n                }\n\n                this.svg = null;\n                this.canvas = null;\n                this.path = null;\n                this.group = null;\n            }\n            else {\n                // if not a forced cleanup, just detach from DOM for now.\n                if (this.canvas && this.canvas.parentNode) {\n                    this.canvas.parentNode.removeChild(this.canvas);\n                }\n                if (this.bgCanvas && this.bgCanvas.parentNode) {\n                    this.bgCanvas.parentNode.removeChild(this.bgCanvas);\n                }\n            }\n        },\n        reattach:function(instance) {\n            var c = instance.getContainer();\n            if (this.canvas && this.canvas.parentNode == null) {\n                c.appendChild(this.canvas);\n            }\n            if (this.bgCanvas && this.bgCanvas.parentNode == null) {\n                c.appendChild(this.bgCanvas);\n            }\n        },\n        setVisible: function (v) {\n            if (this.canvas) {\n                this.canvas.style.display = v ? \"block\" : \"none\";\n            }\n        }\n    });\n\n    /*\n     * Base class for SVG connectors.\n     */\n    _jp.ConnectorRenderers.svg = function (params) {\n        var self = this,\n            _super = SvgComponent.apply(this, [\n                {\n                    cssClass: params._jsPlumb.connectorClass,\n                    originalArgs: arguments,\n                    pointerEventsSpec: \"none\",\n                    _jsPlumb: params._jsPlumb\n                }\n            ]);\n\n        _super.renderer.paint = function (style, anchor, extents) {\n\n            var segments = self.getSegments(), p = \"\", offset = [0, 0];\n            if (extents.xmin < 0) {\n                offset[0] = -extents.xmin;\n            }\n            if (extents.ymin < 0) {\n                offset[1] = -extents.ymin;\n            }\n\n            if (segments.length > 0) {\n\n                p = self.getPathData();\n\n                var a = {\n                        d: p,\n                        transform: \"translate(\" + offset[0] + \",\" + offset[1] + \")\",\n                        \"pointer-events\": params[\"pointer-events\"] || \"visibleStroke\"\n                    },\n                    outlineStyle = null,\n                    d = [self.x, self.y, self.w, self.h];\n\n                // outline style.  actually means drawing an svg object underneath the main one.\n                if (style.outlineStroke) {\n                    var outlineWidth = style.outlineWidth || 1,\n                        outlineStrokeWidth = style.strokeWidth + (2 * outlineWidth);\n                    outlineStyle = _jp.extend({}, style);\n                    delete outlineStyle.gradient;\n                    outlineStyle.stroke = style.outlineStroke;\n                    outlineStyle.strokeWidth = outlineStrokeWidth;\n\n                    if (self.bgPath == null) {\n                        self.bgPath = _node(\"path\", a);\n                        _jp.addClass(self.bgPath, _jp.connectorOutlineClass);\n                        _appendAtIndex(self.svg, self.bgPath, 0);\n                    }\n                    else {\n                        _attr(self.bgPath, a);\n                    }\n\n                    _applyStyles(self.svg, self.bgPath, outlineStyle, d, self);\n                }\n\n                if (self.path == null) {\n                    self.path = _node(\"path\", a);\n                    _appendAtIndex(self.svg, self.path, style.outlineStroke ? 1 : 0);\n                }\n                else {\n                    _attr(self.path, a);\n                }\n\n                _applyStyles(self.svg, self.path, style, d, self);\n            }\n        };\n    };\n    _ju.extend(_jp.ConnectorRenderers.svg, SvgComponent);\n\n// ******************************* svg segment renderer *****************************************************\t\n\n\n// ******************************* /svg segments *****************************************************\n\n    /*\n     * Base class for SVG endpoints.\n     */\n    var SvgEndpoint = _jp.SvgEndpoint = function (params) {\n        var _super = SvgComponent.apply(this, [\n            {\n                cssClass: params._jsPlumb.endpointClass,\n                originalArgs: arguments,\n                pointerEventsSpec: \"all\",\n                useDivWrapper: true,\n                _jsPlumb: params._jsPlumb\n            }\n        ]);\n\n        _super.renderer.paint = function (style) {\n            var s = _jp.extend({}, style);\n            if (s.outlineStroke) {\n                s.stroke = s.outlineStroke;\n            }\n\n            if (this.node == null) {\n                this.node = this.makeNode(s);\n                this.svg.appendChild(this.node);\n            }\n            else if (this.updateNode != null) {\n                this.updateNode(this.node);\n            }\n            _applyStyles(this.svg, this.node, s, [ this.x, this.y, this.w, this.h ], this);\n            _pos(this.node, [ this.x, this.y ]);\n        }.bind(this);\n\n    };\n    _ju.extend(SvgEndpoint, SvgComponent);\n\n    /*\n     * SVG Dot Endpoint\n     */\n    _jp.Endpoints.svg.Dot = function () {\n        _jp.Endpoints.Dot.apply(this, arguments);\n        SvgEndpoint.apply(this, arguments);\n        this.makeNode = function (style) {\n            return _node(\"circle\", {\n                \"cx\": this.w / 2,\n                \"cy\": this.h / 2,\n                \"r\": this.radius\n            });\n        };\n        this.updateNode = function (node) {\n            _attr(node, {\n                \"cx\": this.w / 2,\n                \"cy\": this.h / 2,\n                \"r\": this.radius\n            });\n        };\n    };\n    _ju.extend(_jp.Endpoints.svg.Dot, [_jp.Endpoints.Dot, SvgEndpoint]);\n\n    /*\n     * SVG Rectangle Endpoint\n     */\n    _jp.Endpoints.svg.Rectangle = function () {\n        _jp.Endpoints.Rectangle.apply(this, arguments);\n        SvgEndpoint.apply(this, arguments);\n        this.makeNode = function (style) {\n            return _node(\"rect\", {\n                \"width\": this.w,\n                \"height\": this.h\n            });\n        };\n        this.updateNode = function (node) {\n            _attr(node, {\n                \"width\": this.w,\n                \"height\": this.h\n            });\n        };\n    };\n    _ju.extend(_jp.Endpoints.svg.Rectangle, [_jp.Endpoints.Rectangle, SvgEndpoint]);\n\n    /*\n     * SVG Image Endpoint is the default image endpoint.\n     */\n    _jp.Endpoints.svg.Image = _jp.Endpoints.Image;\n    /*\n     * Blank endpoint in svg renderer is the default Blank endpoint.\n     */\n    _jp.Endpoints.svg.Blank = _jp.Endpoints.Blank;\n    /*\n     * Label overlay in svg renderer is the default Label overlay.\n     */\n    _jp.Overlays.svg.Label = _jp.Overlays.Label;\n    /*\n     * Custom overlay in svg renderer is the default Custom overlay.\n     */\n    _jp.Overlays.svg.Custom = _jp.Overlays.Custom;\n\n    var AbstractSvgArrowOverlay = function (superclass, originalArgs) {\n        superclass.apply(this, originalArgs);\n        _jp.jsPlumbUIComponent.apply(this, originalArgs);\n        this.isAppendedAtTopLevel = false;\n        var self = this;\n        this.path = null;\n        this.paint = function (params, containerExtents) {\n            // only draws on connections, not endpoints.\n            if (params.component.svg && containerExtents) {\n                if (this.path == null) {\n                    this.path = _node(\"path\", {\n                        \"pointer-events\": \"all\"\n                    });\n                    params.component.svg.appendChild(this.path);\n                    if (this.elementCreated) {\n                        this.elementCreated(this.path, params.component);\n                    }\n\n                    this.canvas = params.component.svg; // for the sake of completeness; this behaves the same as other overlays\n                }\n                var clazz = originalArgs && (originalArgs.length === 1) ? (originalArgs[0].cssClass || \"\") : \"\",\n                    offset = [0, 0];\n\n                if (containerExtents.xmin < 0) {\n                    offset[0] = -containerExtents.xmin;\n                }\n                if (containerExtents.ymin < 0) {\n                    offset[1] = -containerExtents.ymin;\n                }\n\n                _attr(this.path, {\n                    \"d\": makePath(params.d),\n                    \"class\": clazz,\n                    stroke: params.stroke ? params.stroke : null,\n                    fill: params.fill ? params.fill : null,\n                    transform: \"translate(\" + offset[0] + \",\" + offset[1] + \")\"\n                });\n            }\n        };\n        var makePath = function (d) {\n            return (isNaN(d.cxy.x) || isNaN(d.cxy.y)) ? \"\" : \"M\" + d.hxy.x + \",\" + d.hxy.y +\n                \" L\" + d.tail[0].x + \",\" + d.tail[0].y +\n                \" L\" + d.cxy.x + \",\" + d.cxy.y +\n                \" L\" + d.tail[1].x + \",\" + d.tail[1].y +\n                \" L\" + d.hxy.x + \",\" + d.hxy.y;\n        };\n        this.transfer = function(target) {\n            if (target.canvas && this.path && this.path.parentNode) {\n                this.path.parentNode.removeChild(this.path);\n                target.canvas.appendChild(this.path);\n            }\n        };\n    };\n    _ju.extend(AbstractSvgArrowOverlay, [_jp.jsPlumbUIComponent, _jp.Overlays.AbstractOverlay], {\n        cleanup: function (force) {\n            if (this.path != null) {\n                if (force) {\n                    this._jsPlumb.instance.removeElement(this.path);\n                }\n                else {\n                    if (this.path.parentNode) {\n                        this.path.parentNode.removeChild(this.path);\n                    }\n                }\n            }\n        },\n        reattach:function(instance, component) {\n            if (this.path && component.canvas) {\n                component.canvas.appendChild(this.path);\n            }\n        },\n        setVisible: function (v) {\n            if (this.path != null) {\n                (this.path.style.display = (v ? \"block\" : \"none\"));\n            }\n        }\n    });\n\n    _jp.Overlays.svg.Arrow = function () {\n        AbstractSvgArrowOverlay.apply(this, [_jp.Overlays.Arrow, arguments]);\n    };\n    _ju.extend(_jp.Overlays.svg.Arrow, [ _jp.Overlays.Arrow, AbstractSvgArrowOverlay ]);\n\n    _jp.Overlays.svg.PlainArrow = function () {\n        AbstractSvgArrowOverlay.apply(this, [_jp.Overlays.PlainArrow, arguments]);\n    };\n    _ju.extend(_jp.Overlays.svg.PlainArrow, [ _jp.Overlays.PlainArrow, AbstractSvgArrowOverlay ]);\n\n    _jp.Overlays.svg.Diamond = function () {\n        AbstractSvgArrowOverlay.apply(this, [_jp.Overlays.Diamond, arguments]);\n    };\n    _ju.extend(_jp.Overlays.svg.Diamond, [ _jp.Overlays.Diamond, AbstractSvgArrowOverlay ]);\n\n    // a test\n    _jp.Overlays.svg.GuideLines = function () {\n        var path = null, self = this, p1_1, p1_2;\n        _jp.Overlays.GuideLines.apply(this, arguments);\n        this.paint = function (params, containerExtents) {\n            if (path == null) {\n                path = _node(\"path\");\n                params.connector.svg.appendChild(path);\n                self.attachListeners(path, params.connector);\n                self.attachListeners(path, self);\n\n                p1_1 = _node(\"path\");\n                params.connector.svg.appendChild(p1_1);\n                self.attachListeners(p1_1, params.connector);\n                self.attachListeners(p1_1, self);\n\n                p1_2 = _node(\"path\");\n                params.connector.svg.appendChild(p1_2);\n                self.attachListeners(p1_2, params.connector);\n                self.attachListeners(p1_2, self);\n            }\n\n            var offset = [0, 0];\n            if (containerExtents.xmin < 0) {\n                offset[0] = -containerExtents.xmin;\n            }\n            if (containerExtents.ymin < 0) {\n                offset[1] = -containerExtents.ymin;\n            }\n\n            _attr(path, {\n                \"d\": makePath(params.head, params.tail),\n                stroke: \"red\",\n                fill: null,\n                transform: \"translate(\" + offset[0] + \",\" + offset[1] + \")\"\n            });\n\n            _attr(p1_1, {\n                \"d\": makePath(params.tailLine[0], params.tailLine[1]),\n                stroke: \"blue\",\n                fill: null,\n                transform: \"translate(\" + offset[0] + \",\" + offset[1] + \")\"\n            });\n\n            _attr(p1_2, {\n                \"d\": makePath(params.headLine[0], params.headLine[1]),\n                stroke: \"green\",\n                fill: null,\n                transform: \"translate(\" + offset[0] + \",\" + offset[1] + \")\"\n            });\n        };\n\n        var makePath = function (d1, d2) {\n            return \"M \" + d1.x + \",\" + d1.y +\n                \" L\" + d2.x + \",\" + d2.y;\n        };\n    };\n    _ju.extend(_jp.Overlays.svg.GuideLines, _jp.Overlays.GuideLines);\n}).call(typeof window !== 'undefined' ? window : this);\n\n/*\n * This file contains the 'vanilla' adapter - having no external dependencies other than bundled libs.\n *\n * Copyright (c) 2010 - 2018 jsPlumb (hello@jsplumbtoolkit.com)\n * \n * https://jsplumbtoolkit.com\n * https://github.com/jsplumb/jsplumb\n * \n * Dual licensed under the MIT and GPL2 licenses.\n */\n;\n(function () {\n\n    \"use strict\";\n    var root = this, _jp = root.jsPlumb, _ju = root.jsPlumbUtil,\n        _jk = root.Katavorio, _jg = root.Biltong;\n\n    var _getDragManager = function (instance, category) {\n\n        category = category || \"main\";\n        var key = \"_katavorio_\" + category;\n        var k = instance[key],\n            e = instance.getEventManager();\n\n        if (!k) {\n            k = new _jk({\n                bind: e.on,\n                unbind: e.off,\n                getSize: _jp.getSize,\n                getConstrainingRectangle:function(el) {\n                    return [ el.parentNode.scrollWidth, el.parentNode.scrollHeight ];\n                },\n                getPosition: function (el, relativeToRoot) {\n                    // if this is a nested draggable then compute the offset against its own offsetParent, otherwise\n                    // compute against the Container's origin. see also the getUIPosition method below.\n                    var o = instance.getOffset(el, relativeToRoot, el._katavorioDrag ? el.offsetParent : null);\n                    return [o.left, o.top];\n                },\n                setPosition: function (el, xy) {\n                    el.style.left = xy[0] + \"px\";\n                    el.style.top = xy[1] + \"px\";\n                },\n                addClass: _jp.addClass,\n                removeClass: _jp.removeClass,\n                intersects: _jg.intersects,\n                indexOf: function(l, i) { return l.indexOf(i); },\n                scope:instance.getDefaultScope(),\n                css: {\n                    noSelect: instance.dragSelectClass,\n                    droppable: \"jtk-droppable\",\n                    draggable: \"jtk-draggable\",\n                    drag: \"jtk-drag\",\n                    selected: \"jtk-drag-selected\",\n                    active: \"jtk-drag-active\",\n                    hover: \"jtk-drag-hover\",\n                    ghostProxy:\"jtk-ghost-proxy\"\n                }\n            });\n            k.setZoom(instance.getZoom());\n            instance[key] = k;\n            instance.bind(\"zoom\", k.setZoom);\n        }\n        return k;\n    };\n\n    var _animProps = function (o, p) {\n        var _one = function (pName) {\n            if (p[pName] != null) {\n                if (_ju.isString(p[pName])) {\n                    var m = p[pName].match(/-=/) ? -1 : 1,\n                        v = p[pName].substring(2);\n                    return o[pName] + (m * v);\n                }\n                else {\n                    return p[pName];\n                }\n            }\n            else {\n                return o[pName];\n            }\n        };\n        return [ _one(\"left\"), _one(\"top\") ];\n    };\n\n    _jp.extend(root.jsPlumbInstance.prototype, {\n\n        animationSupported:true,\n        getElement: function (el) {\n            if (el == null) {\n                return null;\n            }\n            // here we pluck the first entry if el was a list of entries.\n            // this is not my favourite thing to do, but previous versions of\n            // jsplumb supported jquery selectors, and it is possible a selector\n            // will be passed in here.\n            el = typeof el === \"string\" ? el : el.length != null && el.enctype == null ? el[0] : el;\n            return typeof el === \"string\" ? document.getElementById(el) : el;\n        },\n        removeElement: function (element) {\n            _getDragManager(this).elementRemoved(element);\n            this.getEventManager().remove(element);\n        },\n        //\n        // this adapter supports a rudimentary animation function. no easing is supported.  only\n        // left/top properties are supported. property delta args are expected to be in the form\n        //\n        // +=x.xxxx\n        //\n        // or\n        //\n        // -=x.xxxx\n        //\n        doAnimate: function (el, properties, options) {\n            options = options || {};\n            var o = this.getOffset(el),\n                ap = _animProps(o, properties),\n                ldist = ap[0] - o.left,\n                tdist = ap[1] - o.top,\n                d = options.duration || 250,\n                step = 15, steps = d / step,\n                linc = (step / d) * ldist,\n                tinc = (step / d) * tdist,\n                idx = 0,\n                _int = setInterval(function () {\n                    _jp.setPosition(el, {\n                        left: o.left + (linc * (idx + 1)),\n                        top: o.top + (tinc * (idx + 1))\n                    });\n                    if (options.step != null) {\n                        options.step(idx, Math.ceil(steps));\n                    }\n                    idx++;\n                    if (idx >= steps) {\n                        window.clearInterval(_int);\n                        if (options.complete != null) {\n                            options.complete();\n                        }\n                    }\n                }, step);\n        },\n        // DRAG/DROP\n        destroyDraggable: function (el, category) {\n            _getDragManager(this, category).destroyDraggable(el);\n        },\n        unbindDraggable: function (el, evt, fn, category) {\n            _getDragManager(this, category).destroyDraggable(el, evt, fn);\n        },\n        destroyDroppable: function (el, category) {\n            _getDragManager(this, category).destroyDroppable(el);\n        },\n        unbindDroppable: function (el, evt, fn, category) {\n            _getDragManager(this, category).destroyDroppable(el, evt, fn);\n        },\n        initDraggable: function (el, options, category) {\n            _getDragManager(this, category).draggable(el, options);\n        },\n        initDroppable: function (el, options, category) {\n            _getDragManager(this, category).droppable(el, options);\n        },\n        isAlreadyDraggable: function (el) {\n            return el._katavorioDrag != null;\n        },\n        isDragSupported: function (el, options) {\n            return true;\n        },\n        isDropSupported: function (el, options) {\n            return true;\n        },\n        isElementDraggable: function (el) {\n            el = _jp.getElement(el);\n            return el._katavorioDrag && el._katavorioDrag.isEnabled();\n        },\n        getDragObject: function (eventArgs) {\n            return eventArgs[0].drag.getDragElement();\n        },\n        getDragScope: function (el) {\n            return el._katavorioDrag && el._katavorioDrag.scopes.join(\" \") || \"\";\n        },\n        getDropEvent: function (args) {\n            return args[0].e;\n        },\n        getUIPosition: function (eventArgs, zoom) {\n            // here the position reported to us by Katavorio is relative to the element's offsetParent. For top\n            // level nodes that is fine, but if we have a nested draggable then its offsetParent is actually\n            // not going to be the jsplumb container; it's going to be some child of that element. In that case\n            // we want to adjust the UI position to account for the offsetParent's position relative to the Container\n            // origin.\n            var el = eventArgs[0].el;\n            if (el.offsetParent == null) {\n                return null;\n            }\n            var finalPos = eventArgs[0].finalPos || eventArgs[0].pos;\n            var p = { left:finalPos[0], top:finalPos[1] };\n            if (el._katavorioDrag && el.offsetParent !== this.getContainer()) {\n                var oc = this.getOffset(el.offsetParent);\n                p.left += oc.left;\n                p.top += oc.top;\n            }\n            return p;\n        },\n        setDragFilter: function (el, filter, _exclude) {\n            if (el._katavorioDrag) {\n                el._katavorioDrag.setFilter(filter, _exclude);\n            }\n        },\n        setElementDraggable: function (el, draggable) {\n            el = _jp.getElement(el);\n            if (el._katavorioDrag) {\n                el._katavorioDrag.setEnabled(draggable);\n            }\n        },\n        setDragScope: function (el, scope) {\n            if (el._katavorioDrag) {\n                el._katavorioDrag.k.setDragScope(el, scope);\n            }\n        },\n        setDropScope:function(el, scope) {\n            if (el._katavorioDrop && el._katavorioDrop.length > 0) {\n                el._katavorioDrop[0].k.setDropScope(el, scope);\n            }\n        },\n        addToPosse:function(el, spec) {\n            var specs = Array.prototype.slice.call(arguments, 1);\n            var dm = _getDragManager(this);\n            _jp.each(el, function(_el) {\n                _el = [ _jp.getElement(_el) ];\n                _el.push.apply(_el, specs );\n                dm.addToPosse.apply(dm, _el);\n            });\n        },\n        setPosse:function(el, spec) {\n            var specs = Array.prototype.slice.call(arguments, 1);\n            var dm = _getDragManager(this);\n            _jp.each(el, function(_el) {\n                _el = [ _jp.getElement(_el) ];\n                _el.push.apply(_el, specs );\n                dm.setPosse.apply(dm, _el);\n            });\n        },\n        removeFromPosse:function(el, posseId) {\n            var specs = Array.prototype.slice.call(arguments, 1);\n            var dm = _getDragManager(this);\n            _jp.each(el, function(_el) {\n                _el = [ _jp.getElement(_el) ];\n                _el.push.apply(_el, specs );\n                dm.removeFromPosse.apply(dm, _el);\n            });\n        },\n        removeFromAllPosses:function(el) {\n            var dm = _getDragManager(this);\n            _jp.each(el, function(_el) { dm.removeFromAllPosses(_jp.getElement(_el)); });\n        },\n        setPosseState:function(el, posseId, state) {\n            var dm = _getDragManager(this);\n            _jp.each(el, function(_el) { dm.setPosseState(_jp.getElement(_el), posseId, state); });\n        },\n        dragEvents: {\n            'start': 'start', 'stop': 'stop', 'drag': 'drag', 'step': 'step',\n            'over': 'over', 'out': 'out', 'drop': 'drop', 'complete': 'complete',\n            'beforeStart':'beforeStart'\n        },\n        animEvents: {\n            'step': \"step\", 'complete': 'complete'\n        },\n        stopDrag: function (el) {\n            if (el._katavorioDrag) {\n                el._katavorioDrag.abort();\n            }\n        },\n        addToDragSelection: function (spec) {\n            _getDragManager(this).select(spec);\n        },\n        removeFromDragSelection: function (spec) {\n            _getDragManager(this).deselect(spec);\n        },\n        clearDragSelection: function () {\n            _getDragManager(this).deselectAll();\n        },\n        trigger: function (el, event, originalEvent, payload) {\n            this.getEventManager().trigger(el, event, originalEvent, payload);\n        },\n        doReset:function() {\n            // look for katavorio instances and reset each one if found.\n            for (var key in this) {\n                if (key.indexOf(\"_katavorio_\") === 0) {\n                    this[key].reset();\n                }\n            }\n        }\n    });\n\n    var ready = function (f) {\n        var _do = function () {\n            if (/complete|loaded|interactive/.test(document.readyState) && typeof(document.body) !== \"undefined\" && document.body != null) {\n                f();\n            }\n            else {\n                setTimeout(_do, 9);\n            }\n        };\n\n        _do();\n    };\n    ready(_jp.init);\n\n}).call(typeof window !== 'undefined' ? window : this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/jsplumb/dist/js/jsplumb.js\n// module id = 38\n// module chunks = 0","/*\nCopyright (c) 2012-2014 Chris Pettitt\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n*/\n\nmodule.exports = {\n  graphlib: require(\"./lib/graphlib\"),\n\n  layout: require(\"./lib/layout\"),\n  debug: require(\"./lib/debug\"),\n  util: {\n    time: require(\"./lib/util\").time,\n    notime: require(\"./lib/util\").notime\n  },\n  version: require(\"./lib/version\")\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/dagre/index.js\n// module id = 39\n// module chunks = 0","/**\n * Copyright (c) 2014, Chris Pettitt\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice, this\n * list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n * this list of conditions and the following disclaimer in the documentation\n * and/or other materials provided with the distribution.\n *\n * 3. Neither the name of the copyright holder nor the names of its contributors\n * may be used to endorse or promote products derived from this software without\n * specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nvar lib = require(\"./lib\");\n\nmodule.exports = {\n  Graph: lib.Graph,\n  json: require(\"./lib/json\"),\n  alg: require(\"./lib/alg\"),\n  version: lib.version\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/graphlib/index.js\n// module id = 40\n// module chunks = 0","// Includes only the \"core\" of graphlib\nmodule.exports = {\n  Graph: require(\"./graph\"),\n  version: require(\"./version\")\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/graphlib/lib/index.js\n// module id = 41\n// module chunks = 0","module.exports = function(module) {\n\tif(!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif(!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/module.js\n// module id = 42\n// module chunks = 0","module.exports = '2.1.5';\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/graphlib/lib/version.js\n// module id = 43\n// module chunks = 0","var _ = require(\"./lodash\"),\n    Graph = require(\"./graph\");\n\nmodule.exports = {\n  write: write,\n  read: read\n};\n\nfunction write(g) {\n  var json = {\n    options: {\n      directed: g.isDirected(),\n      multigraph: g.isMultigraph(),\n      compound: g.isCompound()\n    },\n    nodes: writeNodes(g),\n    edges: writeEdges(g)\n  };\n  if (!_.isUndefined(g.graph())) {\n    json.value = _.clone(g.graph());\n  }\n  return json;\n}\n\nfunction writeNodes(g) {\n  return _.map(g.nodes(), function(v) {\n    var nodeValue = g.node(v),\n        parent = g.parent(v),\n        node = { v: v };\n    if (!_.isUndefined(nodeValue)) {\n      node.value = nodeValue;\n    }\n    if (!_.isUndefined(parent)) {\n      node.parent = parent;\n    }\n    return node;\n  });\n}\n\nfunction writeEdges(g) {\n  return _.map(g.edges(), function(e) {\n    var edgeValue = g.edge(e),\n        edge = { v: e.v, w: e.w };\n    if (!_.isUndefined(e.name)) {\n      edge.name = e.name;\n    }\n    if (!_.isUndefined(edgeValue)) {\n      edge.value = edgeValue;\n    }\n    return edge;\n  });\n}\n\nfunction read(json) {\n  var g = new Graph(json.options).setGraph(json.value);\n  _.each(json.nodes, function(entry) {\n    g.setNode(entry.v, entry.value);\n    if (entry.parent) {\n      g.setParent(entry.v, entry.parent);\n    }\n  });\n  _.each(json.edges, function(entry) {\n    g.setEdge({ v: entry.v, w: entry.w, name: entry.name }, entry.value);\n  });\n  return g;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/graphlib/lib/json.js\n// module id = 44\n// module chunks = 0","module.exports = {\n  components: require(\"./components\"),\n  dijkstra: require(\"./dijkstra\"),\n  dijkstraAll: require(\"./dijkstra-all\"),\n  findCycles: require(\"./find-cycles\"),\n  floydWarshall: require(\"./floyd-warshall\"),\n  isAcyclic: require(\"./is-acyclic\"),\n  postorder: require(\"./postorder\"),\n  preorder: require(\"./preorder\"),\n  prim: require(\"./prim\"),\n  tarjan: require(\"./tarjan\"),\n  topsort: require(\"./topsort\")\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/graphlib/lib/alg/index.js\n// module id = 45\n// module chunks = 0","var _ = require(\"../lodash\");\n\nmodule.exports = components;\n\nfunction components(g) {\n  var visited = {},\n      cmpts = [],\n      cmpt;\n\n  function dfs(v) {\n    if (_.has(visited, v)) return;\n    visited[v] = true;\n    cmpt.push(v);\n    _.each(g.successors(v), dfs);\n    _.each(g.predecessors(v), dfs);\n  }\n\n  _.each(g.nodes(), function(v) {\n    cmpt = [];\n    dfs(v);\n    if (cmpt.length) {\n      cmpts.push(cmpt);\n    }\n  });\n\n  return cmpts;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/graphlib/lib/alg/components.js\n// module id = 46\n// module chunks = 0","var dijkstra = require(\"./dijkstra\"),\n    _ = require(\"../lodash\");\n\nmodule.exports = dijkstraAll;\n\nfunction dijkstraAll(g, weightFunc, edgeFunc) {\n  return _.transform(g.nodes(), function(acc, v) {\n    acc[v] = dijkstra(g, v, weightFunc, edgeFunc);\n  }, {});\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/graphlib/lib/alg/dijkstra-all.js\n// module id = 47\n// module chunks = 0","var _ = require(\"../lodash\"),\n    tarjan = require(\"./tarjan\");\n\nmodule.exports = findCycles;\n\nfunction findCycles(g) {\n  return _.filter(tarjan(g), function(cmpt) {\n    return cmpt.length > 1 || (cmpt.length === 1 && g.hasEdge(cmpt[0], cmpt[0]));\n  });\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/graphlib/lib/alg/find-cycles.js\n// module id = 48\n// module chunks = 0","var _ = require(\"../lodash\");\n\nmodule.exports = floydWarshall;\n\nvar DEFAULT_WEIGHT_FUNC = _.constant(1);\n\nfunction floydWarshall(g, weightFn, edgeFn) {\n  return runFloydWarshall(g,\n                          weightFn || DEFAULT_WEIGHT_FUNC,\n                          edgeFn || function(v) { return g.outEdges(v); });\n}\n\nfunction runFloydWarshall(g, weightFn, edgeFn) {\n  var results = {},\n      nodes = g.nodes();\n\n  nodes.forEach(function(v) {\n    results[v] = {};\n    results[v][v] = { distance: 0 };\n    nodes.forEach(function(w) {\n      if (v !== w) {\n        results[v][w] = { distance: Number.POSITIVE_INFINITY };\n      }\n    });\n    edgeFn(v).forEach(function(edge) {\n      var w = edge.v === v ? edge.w : edge.v,\n          d = weightFn(edge);\n      results[v][w] = { distance: d, predecessor: v };\n    });\n  });\n\n  nodes.forEach(function(k) {\n    var rowK = results[k];\n    nodes.forEach(function(i) {\n      var rowI = results[i];\n      nodes.forEach(function(j) {\n        var ik = rowI[k];\n        var kj = rowK[j];\n        var ij = rowI[j];\n        var altDistance = ik.distance + kj.distance;\n        if (altDistance < ij.distance) {\n          ij.distance = altDistance;\n          ij.predecessor = kj.predecessor;\n        }\n      });\n    });\n  });\n\n  return results;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/graphlib/lib/alg/floyd-warshall.js\n// module id = 49\n// module chunks = 0","var topsort = require(\"./topsort\");\n\nmodule.exports = isAcyclic;\n\nfunction isAcyclic(g) {\n  try {\n    topsort(g);\n  } catch (e) {\n    if (e instanceof topsort.CycleException) {\n      return false;\n    }\n    throw e;\n  }\n  return true;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/graphlib/lib/alg/is-acyclic.js\n// module id = 50\n// module chunks = 0","var dfs = require(\"./dfs\");\n\nmodule.exports = postorder;\n\nfunction postorder(g, vs) {\n  return dfs(g, vs, \"post\");\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/graphlib/lib/alg/postorder.js\n// module id = 51\n// module chunks = 0","var dfs = require(\"./dfs\");\n\nmodule.exports = preorder;\n\nfunction preorder(g, vs) {\n  return dfs(g, vs, \"pre\");\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/graphlib/lib/alg/preorder.js\n// module id = 52\n// module chunks = 0","var _ = require(\"../lodash\"),\n    Graph = require(\"../graph\"),\n    PriorityQueue = require(\"../data/priority-queue\");\n\nmodule.exports = prim;\n\nfunction prim(g, weightFunc) {\n  var result = new Graph(),\n      parents = {},\n      pq = new PriorityQueue(),\n      v;\n\n  function updateNeighbors(edge) {\n    var w = edge.v === v ? edge.w : edge.v,\n        pri = pq.priority(w);\n    if (pri !== undefined) {\n      var edgeWeight = weightFunc(edge);\n      if (edgeWeight < pri) {\n        parents[w] = v;\n        pq.decrease(w, edgeWeight);\n      }\n    }\n  }\n\n  if (g.nodeCount() === 0) {\n    return result;\n  }\n\n  _.each(g.nodes(), function(v) {\n    pq.add(v, Number.POSITIVE_INFINITY);\n    result.setNode(v);\n  });\n\n  // Start from an arbitrary node\n  pq.decrease(g.nodes()[0], 0);\n\n  var init = false;\n  while (pq.size() > 0) {\n    v = pq.removeMin();\n    if (_.has(parents, v)) {\n      result.setEdge(v, parents[v]);\n    } else if (init) {\n      throw new Error(\"Input graph is not connected: \" + g);\n    } else {\n      init = true;\n    }\n\n    g.nodeEdges(v).forEach(updateNeighbors);\n  }\n\n  return result;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/graphlib/lib/alg/prim.js\n// module id = 53\n// module chunks = 0","\"use strict\";\n\nvar _ = require(\"./lodash\"),\n    acyclic = require(\"./acyclic\"),\n    normalize = require(\"./normalize\"),\n    rank = require(\"./rank\"),\n    normalizeRanks = require(\"./util\").normalizeRanks,\n    parentDummyChains = require(\"./parent-dummy-chains\"),\n    removeEmptyRanks = require(\"./util\").removeEmptyRanks,\n    nestingGraph = require(\"./nesting-graph\"),\n    addBorderSegments = require(\"./add-border-segments\"),\n    coordinateSystem = require(\"./coordinate-system\"),\n    order = require(\"./order\"),\n    position = require(\"./position\"),\n    util = require(\"./util\"),\n    Graph = require(\"./graphlib\").Graph;\n\nmodule.exports = layout;\n\nfunction layout(g, opts) {\n  var time = opts && opts.debugTiming ? util.time : util.notime;\n  time(\"layout\", function() {\n    var layoutGraph = time(\"  buildLayoutGraph\",\n                               function() { return buildLayoutGraph(g); });\n    time(\"  runLayout\",        function() { runLayout(layoutGraph, time); });\n    time(\"  updateInputGraph\", function() { updateInputGraph(g, layoutGraph); });\n  });\n}\n\nfunction runLayout(g, time) {\n  time(\"    makeSpaceForEdgeLabels\", function() { makeSpaceForEdgeLabels(g); });\n  time(\"    removeSelfEdges\",        function() { removeSelfEdges(g); });\n  time(\"    acyclic\",                function() { acyclic.run(g); });\n  time(\"    nestingGraph.run\",       function() { nestingGraph.run(g); });\n  time(\"    rank\",                   function() { rank(util.asNonCompoundGraph(g)); });\n  time(\"    injectEdgeLabelProxies\", function() { injectEdgeLabelProxies(g); });\n  time(\"    removeEmptyRanks\",       function() { removeEmptyRanks(g); });\n  time(\"    nestingGraph.cleanup\",   function() { nestingGraph.cleanup(g); });\n  time(\"    normalizeRanks\",         function() { normalizeRanks(g); });\n  time(\"    assignRankMinMax\",       function() { assignRankMinMax(g); });\n  time(\"    removeEdgeLabelProxies\", function() { removeEdgeLabelProxies(g); });\n  time(\"    normalize.run\",          function() { normalize.run(g); });\n  time(\"    parentDummyChains\",      function() { parentDummyChains(g); });\n  time(\"    addBorderSegments\",      function() { addBorderSegments(g); });\n  time(\"    order\",                  function() { order(g); });\n  time(\"    insertSelfEdges\",        function() { insertSelfEdges(g); });\n  time(\"    adjustCoordinateSystem\", function() { coordinateSystem.adjust(g); });\n  time(\"    position\",               function() { position(g); });\n  time(\"    positionSelfEdges\",      function() { positionSelfEdges(g); });\n  time(\"    removeBorderNodes\",      function() { removeBorderNodes(g); });\n  time(\"    normalize.undo\",         function() { normalize.undo(g); });\n  time(\"    fixupEdgeLabelCoords\",   function() { fixupEdgeLabelCoords(g); });\n  time(\"    undoCoordinateSystem\",   function() { coordinateSystem.undo(g); });\n  time(\"    translateGraph\",         function() { translateGraph(g); });\n  time(\"    assignNodeIntersects\",   function() { assignNodeIntersects(g); });\n  time(\"    reversePoints\",          function() { reversePointsForReversedEdges(g); });\n  time(\"    acyclic.undo\",           function() { acyclic.undo(g); });\n}\n\n/*\n * Copies final layout information from the layout graph back to the input\n * graph. This process only copies whitelisted attributes from the layout graph\n * to the input graph, so it serves as a good place to determine what\n * attributes can influence layout.\n */\nfunction updateInputGraph(inputGraph, layoutGraph) {\n  _.forEach(inputGraph.nodes(), function(v) {\n    var inputLabel = inputGraph.node(v),\n        layoutLabel = layoutGraph.node(v);\n\n    if (inputLabel) {\n      inputLabel.x = layoutLabel.x;\n      inputLabel.y = layoutLabel.y;\n\n      if (layoutGraph.children(v).length) {\n        inputLabel.width = layoutLabel.width;\n        inputLabel.height = layoutLabel.height;\n      }\n    }\n  });\n\n  _.forEach(inputGraph.edges(), function(e) {\n    var inputLabel = inputGraph.edge(e),\n        layoutLabel = layoutGraph.edge(e);\n\n    inputLabel.points = layoutLabel.points;\n    if (_.has(layoutLabel, \"x\")) {\n      inputLabel.x = layoutLabel.x;\n      inputLabel.y = layoutLabel.y;\n    }\n  });\n\n  inputGraph.graph().width = layoutGraph.graph().width;\n  inputGraph.graph().height = layoutGraph.graph().height;\n}\n\nvar graphNumAttrs = [\"nodesep\", \"edgesep\", \"ranksep\", \"marginx\", \"marginy\"],\n    graphDefaults = { ranksep: 50, edgesep: 20, nodesep: 50, rankdir: \"tb\" },\n    graphAttrs = [\"acyclicer\", \"ranker\", \"rankdir\", \"align\"],\n    nodeNumAttrs = [\"width\", \"height\"],\n    nodeDefaults = { width: 0, height: 0 },\n    edgeNumAttrs = [\"minlen\", \"weight\", \"width\", \"height\", \"labeloffset\"],\n    edgeDefaults = {\n      minlen: 1, weight: 1, width: 0, height: 0,\n      labeloffset: 10, labelpos: \"r\"\n    },\n    edgeAttrs = [\"labelpos\"];\n\n/*\n * Constructs a new graph from the input graph, which can be used for layout.\n * This process copies only whitelisted attributes from the input graph to the\n * layout graph. Thus this function serves as a good place to determine what\n * attributes can influence layout.\n */\nfunction buildLayoutGraph(inputGraph) {\n  var g = new Graph({ multigraph: true, compound: true }),\n      graph = canonicalize(inputGraph.graph());\n\n  g.setGraph(_.merge({},\n    graphDefaults,\n    selectNumberAttrs(graph, graphNumAttrs),\n    _.pick(graph, graphAttrs)));\n\n  _.forEach(inputGraph.nodes(), function(v) {\n    var node = canonicalize(inputGraph.node(v));\n    g.setNode(v, _.defaults(selectNumberAttrs(node, nodeNumAttrs), nodeDefaults));\n    g.setParent(v, inputGraph.parent(v));\n  });\n\n  _.forEach(inputGraph.edges(), function(e) {\n    var edge = canonicalize(inputGraph.edge(e));\n    g.setEdge(e, _.merge({},\n      edgeDefaults,\n      selectNumberAttrs(edge, edgeNumAttrs),\n      _.pick(edge, edgeAttrs)));\n  });\n\n  return g;\n}\n\n/*\n * This idea comes from the Gansner paper: to account for edge labels in our\n * layout we split each rank in half by doubling minlen and halving ranksep.\n * Then we can place labels at these mid-points between nodes.\n *\n * We also add some minimal padding to the width to push the label for the edge\n * away from the edge itself a bit.\n */\nfunction makeSpaceForEdgeLabels(g) {\n  var graph = g.graph();\n  graph.ranksep /= 2;\n  _.forEach(g.edges(), function(e) {\n    var edge = g.edge(e);\n    edge.minlen *= 2;\n    if (edge.labelpos.toLowerCase() !== \"c\") {\n      if (graph.rankdir === \"TB\" || graph.rankdir === \"BT\") {\n        edge.width += edge.labeloffset;\n      } else {\n        edge.height += edge.labeloffset;\n      }\n    }\n  });\n}\n\n/*\n * Creates temporary dummy nodes that capture the rank in which each edge's\n * label is going to, if it has one of non-zero width and height. We do this\n * so that we can safely remove empty ranks while preserving balance for the\n * label's position.\n */\nfunction injectEdgeLabelProxies(g) {\n  _.forEach(g.edges(), function(e) {\n    var edge = g.edge(e);\n    if (edge.width && edge.height) {\n      var v = g.node(e.v),\n          w = g.node(e.w),\n          label = { rank: (w.rank - v.rank) / 2 + v.rank, e: e };\n      util.addDummyNode(g, \"edge-proxy\", label, \"_ep\");\n    }\n  });\n}\n\nfunction assignRankMinMax(g) {\n  var maxRank = 0;\n  _.forEach(g.nodes(), function(v) {\n    var node = g.node(v);\n    if (node.borderTop) {\n      node.minRank = g.node(node.borderTop).rank;\n      node.maxRank = g.node(node.borderBottom).rank;\n      maxRank = _.max(maxRank, node.maxRank);\n    }\n  });\n  g.graph().maxRank = maxRank;\n}\n\nfunction removeEdgeLabelProxies(g) {\n  _.forEach(g.nodes(), function(v) {\n    var node = g.node(v);\n    if (node.dummy === \"edge-proxy\") {\n      g.edge(node.e).labelRank = node.rank;\n      g.removeNode(v);\n    }\n  });\n}\n\nfunction translateGraph(g) {\n  var minX = Number.POSITIVE_INFINITY,\n      maxX = 0,\n      minY = Number.POSITIVE_INFINITY,\n      maxY = 0,\n      graphLabel = g.graph(),\n      marginX = graphLabel.marginx || 0,\n      marginY = graphLabel.marginy || 0;\n\n  function getExtremes(attrs) {\n    var x = attrs.x,\n        y = attrs.y,\n        w = attrs.width,\n        h = attrs.height;\n    minX = Math.min(minX, x - w / 2);\n    maxX = Math.max(maxX, x + w / 2);\n    minY = Math.min(minY, y - h / 2);\n    maxY = Math.max(maxY, y + h / 2);\n  }\n\n  _.forEach(g.nodes(), function(v) { getExtremes(g.node(v)); });\n  _.forEach(g.edges(), function(e) {\n    var edge = g.edge(e);\n    if (_.has(edge, \"x\")) {\n      getExtremes(edge);\n    }\n  });\n\n  minX -= marginX;\n  minY -= marginY;\n\n  _.forEach(g.nodes(), function(v) {\n    var node = g.node(v);\n    node.x -= minX;\n    node.y -= minY;\n  });\n\n  _.forEach(g.edges(), function(e) {\n    var edge = g.edge(e);\n    _.forEach(edge.points, function(p) {\n      p.x -= minX;\n      p.y -= minY;\n    });\n    if (_.has(edge, \"x\")) { edge.x -= minX; }\n    if (_.has(edge, \"y\")) { edge.y -= minY; }\n  });\n\n  graphLabel.width = maxX - minX + marginX;\n  graphLabel.height = maxY - minY + marginY;\n}\n\nfunction assignNodeIntersects(g) {\n  _.forEach(g.edges(), function(e) {\n    var edge = g.edge(e),\n        nodeV = g.node(e.v),\n        nodeW = g.node(e.w),\n        p1, p2;\n    if (!edge.points) {\n      edge.points = [];\n      p1 = nodeW;\n      p2 = nodeV;\n    } else {\n      p1 = edge.points[0];\n      p2 = edge.points[edge.points.length - 1];\n    }\n    edge.points.unshift(util.intersectRect(nodeV, p1));\n    edge.points.push(util.intersectRect(nodeW, p2));\n  });\n}\n\nfunction fixupEdgeLabelCoords(g) {\n  _.forEach(g.edges(), function(e) {\n    var edge = g.edge(e);\n    if (_.has(edge, \"x\")) {\n      if (edge.labelpos === \"l\" || edge.labelpos === \"r\") {\n        edge.width -= edge.labeloffset;\n      }\n      switch (edge.labelpos) {\n        case \"l\": edge.x -= edge.width / 2 + edge.labeloffset; break;\n        case \"r\": edge.x += edge.width / 2 + edge.labeloffset; break;\n      }\n    }\n  });\n}\n\nfunction reversePointsForReversedEdges(g) {\n  _.forEach(g.edges(), function(e) {\n    var edge = g.edge(e);\n    if (edge.reversed) {\n      edge.points.reverse();\n    }\n  });\n}\n\nfunction removeBorderNodes(g) {\n  _.forEach(g.nodes(), function(v) {\n    if (g.children(v).length) {\n      var node = g.node(v),\n          t = g.node(node.borderTop),\n          b = g.node(node.borderBottom),\n          l = g.node(_.last(node.borderLeft)),\n          r = g.node(_.last(node.borderRight));\n\n      node.width = Math.abs(r.x - l.x);\n      node.height = Math.abs(b.y - t.y);\n      node.x = l.x + node.width / 2;\n      node.y = t.y + node.height / 2;\n    }\n  });\n\n  _.forEach(g.nodes(), function(v) {\n    if (g.node(v).dummy === \"border\") {\n      g.removeNode(v);\n    }\n  });\n}\n\nfunction removeSelfEdges(g) {\n  _.forEach(g.edges(), function(e) {\n    if (e.v === e.w) {\n      var node = g.node(e.v);\n      if (!node.selfEdges) {\n        node.selfEdges = [];\n      }\n      node.selfEdges.push({ e: e, label: g.edge(e) });\n      g.removeEdge(e);\n    }\n  });\n}\n\nfunction insertSelfEdges(g) {\n  var layers = util.buildLayerMatrix(g);\n  _.forEach(layers, function(layer) {\n    var orderShift = 0;\n    _.forEach(layer, function(v, i) {\n      var node = g.node(v);\n      node.order = i + orderShift;\n      _.forEach(node.selfEdges, function(selfEdge) {\n        util.addDummyNode(g, \"selfedge\", {\n          width: selfEdge.label.width,\n          height: selfEdge.label.height,\n          rank: node.rank,\n          order: i + (++orderShift),\n          e: selfEdge.e,\n          label: selfEdge.label\n        }, \"_se\");\n      });\n      delete node.selfEdges;\n    });\n  });\n}\n\nfunction positionSelfEdges(g) {\n  _.forEach(g.nodes(), function(v) {\n    var node = g.node(v);\n    if (node.dummy === \"selfedge\") {\n      var selfNode = g.node(node.e.v),\n          x = selfNode.x + selfNode.width / 2,\n          y = selfNode.y,\n          dx = node.x - x,\n          dy = selfNode.height / 2;\n      g.setEdge(node.e, node.label);\n      g.removeNode(v);\n      node.label.points = [\n        { x: x + 2 * dx / 3, y: y - dy },\n        { x: x + 5 * dx / 6, y: y - dy },\n        { x: x +     dx    , y: y },\n        { x: x + 5 * dx / 6, y: y + dy },\n        { x: x + 2 * dx / 3, y: y + dy }\n      ];\n      node.label.x = node.x;\n      node.label.y = node.y;\n    }\n  });\n}\n\nfunction selectNumberAttrs(obj, attrs) {\n  return _.mapValues(_.pick(obj, attrs), Number);\n}\n\nfunction canonicalize(attrs) {\n  var newAttrs = {};\n  _.forEach(attrs, function(v, k) {\n    newAttrs[k.toLowerCase()] = v;\n  });\n  return newAttrs;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/dagre/lib/layout.js\n// module id = 54\n// module chunks = 0","\"use strict\";\n\nvar _ = require(\"./lodash\"),\n    greedyFAS = require(\"./greedy-fas\");\n\nmodule.exports = {\n  run: run,\n  undo: undo\n};\n\nfunction run(g) {\n  var fas = (g.graph().acyclicer === \"greedy\"\n                ? greedyFAS(g, weightFn(g))\n                : dfsFAS(g));\n  _.forEach(fas, function(e) {\n    var label = g.edge(e);\n    g.removeEdge(e);\n    label.forwardName = e.name;\n    label.reversed = true;\n    g.setEdge(e.w, e.v, label, _.uniqueId(\"rev\"));\n  });\n\n  function weightFn(g) {\n    return function(e) {\n      return g.edge(e).weight;\n    };\n  }\n}\n\nfunction dfsFAS(g) {\n  var fas = [],\n      stack = {},\n      visited = {};\n\n  function dfs(v) {\n    if (_.has(visited, v)) {\n      return;\n    }\n    visited[v] = true;\n    stack[v] = true;\n    _.forEach(g.outEdges(v), function(e) {\n      if (_.has(stack, e.w)) {\n        fas.push(e);\n      } else {\n        dfs(e.w);\n      }\n    });\n    delete stack[v];\n  }\n\n  _.forEach(g.nodes(), dfs);\n  return fas;\n}\n\nfunction undo(g) {\n  _.forEach(g.edges(), function(e) {\n    var label = g.edge(e);\n    if (label.reversed) {\n      g.removeEdge(e);\n\n      var forwardName = label.forwardName;\n      delete label.reversed;\n      delete label.forwardName;\n      g.setEdge(e.w, e.v, label, forwardName);\n    }\n  });\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/dagre/lib/acyclic.js\n// module id = 55\n// module chunks = 0","var _ = require(\"./lodash\"),\n    Graph = require(\"./graphlib\").Graph,\n    List = require(\"./data/list\");\n\n/*\n * A greedy heuristic for finding a feedback arc set for a graph. A feedback\n * arc set is a set of edges that can be removed to make a graph acyclic.\n * The algorithm comes from: P. Eades, X. Lin, and W. F. Smyth, \"A fast and\n * effective heuristic for the feedback arc set problem.\" This implementation\n * adjusts that from the paper to allow for weighted edges.\n */\nmodule.exports = greedyFAS;\n\nvar DEFAULT_WEIGHT_FN = _.constant(1);\n\nfunction greedyFAS(g, weightFn) {\n  if (g.nodeCount() <= 1) {\n    return [];\n  }\n  var state = buildState(g, weightFn || DEFAULT_WEIGHT_FN);\n  var results = doGreedyFAS(state.graph, state.buckets, state.zeroIdx);\n\n  // Expand multi-edges\n  return _.flatten(_.map(results, function(e) {\n    return g.outEdges(e.v, e.w);\n  }), true);\n}\n\nfunction doGreedyFAS(g, buckets, zeroIdx) {\n  var results = [],\n      sources = buckets[buckets.length - 1],\n      sinks = buckets[0];\n\n  var entry;\n  while (g.nodeCount()) {\n    while ((entry = sinks.dequeue()))   { removeNode(g, buckets, zeroIdx, entry); }\n    while ((entry = sources.dequeue())) { removeNode(g, buckets, zeroIdx, entry); }\n    if (g.nodeCount()) {\n      for (var i = buckets.length - 2; i > 0; --i) {\n        entry = buckets[i].dequeue();\n        if (entry) {\n          results = results.concat(removeNode(g, buckets, zeroIdx, entry, true));\n          break;\n        }\n      }\n    }\n  }\n\n  return results;\n}\n\nfunction removeNode(g, buckets, zeroIdx, entry, collectPredecessors) {\n  var results = collectPredecessors ? [] : undefined;\n\n  _.forEach(g.inEdges(entry.v), function(edge) {\n    var weight = g.edge(edge),\n        uEntry = g.node(edge.v);\n\n    if (collectPredecessors) {\n      results.push({ v: edge.v, w: edge.w });\n    }\n\n    uEntry.out -= weight;\n    assignBucket(buckets, zeroIdx, uEntry);\n  });\n\n  _.forEach(g.outEdges(entry.v), function(edge) {\n    var weight = g.edge(edge),\n        w = edge.w,\n        wEntry = g.node(w);\n    wEntry[\"in\"] -= weight;\n    assignBucket(buckets, zeroIdx, wEntry);\n  });\n\n  g.removeNode(entry.v);\n\n  return results;\n}\n\nfunction buildState(g, weightFn) {\n  var fasGraph = new Graph(),\n      maxIn = 0,\n      maxOut = 0;\n\n  _.forEach(g.nodes(), function(v) {\n    fasGraph.setNode(v, { v: v, \"in\": 0, out: 0 });\n  });\n\n  // Aggregate weights on nodes, but also sum the weights across multi-edges\n  // into a single edge for the fasGraph.\n  _.forEach(g.edges(), function(e) {\n    var prevWeight = fasGraph.edge(e.v, e.w) || 0,\n        weight = weightFn(e),\n        edgeWeight = prevWeight + weight;\n    fasGraph.setEdge(e.v, e.w, edgeWeight);\n    maxOut = Math.max(maxOut, fasGraph.node(e.v).out += weight);\n    maxIn  = Math.max(maxIn,  fasGraph.node(e.w)[\"in\"]  += weight);\n  });\n\n  var buckets = _.range(maxOut + maxIn + 3).map(function() { return new List(); });\n  var zeroIdx = maxIn + 1;\n\n  _.forEach(fasGraph.nodes(), function(v) {\n    assignBucket(buckets, zeroIdx, fasGraph.node(v));\n  });\n\n  return { graph: fasGraph, buckets: buckets, zeroIdx: zeroIdx };\n}\n\nfunction assignBucket(buckets, zeroIdx, entry) {\n  if (!entry.out) {\n    buckets[0].enqueue(entry);\n  } else if (!entry[\"in\"]) {\n    buckets[buckets.length - 1].enqueue(entry);\n  } else {\n    buckets[entry.out - entry[\"in\"] + zeroIdx].enqueue(entry);\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/dagre/lib/greedy-fas.js\n// module id = 56\n// module chunks = 0","/*\n * Simple doubly linked list implementation derived from Cormen, et al.,\n * \"Introduction to Algorithms\".\n */\n\nmodule.exports = List;\n\nfunction List() {\n  var sentinel = {};\n  sentinel._next = sentinel._prev = sentinel;\n  this._sentinel = sentinel;\n}\n\nList.prototype.dequeue = function() {\n  var sentinel = this._sentinel,\n      entry = sentinel._prev;\n  if (entry !== sentinel) {\n    unlink(entry);\n    return entry;\n  }\n};\n\nList.prototype.enqueue = function(entry) {\n  var sentinel = this._sentinel;\n  if (entry._prev && entry._next) {\n    unlink(entry);\n  }\n  entry._next = sentinel._next;\n  sentinel._next._prev = entry;\n  sentinel._next = entry;\n  entry._prev = sentinel;\n};\n\nList.prototype.toString = function() {\n  var strs = [],\n      sentinel = this._sentinel,\n      curr = sentinel._prev;\n  while (curr !== sentinel) {\n    strs.push(JSON.stringify(curr, filterOutLinks));\n    curr = curr._prev;\n  }\n  return \"[\" + strs.join(\", \") + \"]\";\n};\n\nfunction unlink(entry) {\n  entry._prev._next = entry._next;\n  entry._next._prev = entry._prev;\n  delete entry._next;\n  delete entry._prev;\n}\n\nfunction filterOutLinks(k, v) {\n  if (k !== \"_next\" && k !== \"_prev\") {\n    return v;\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/dagre/lib/data/list.js\n// module id = 57\n// module chunks = 0","\"use strict\";\n\nvar _ = require(\"./lodash\"),\n    util = require(\"./util\");\n\nmodule.exports = {\n  run: run,\n  undo: undo\n};\n\n/*\n * Breaks any long edges in the graph into short segments that span 1 layer\n * each. This operation is undoable with the denormalize function.\n *\n * Pre-conditions:\n *\n *    1. The input graph is a DAG.\n *    2. Each node in the graph has a \"rank\" property.\n *\n * Post-condition:\n *\n *    1. All edges in the graph have a length of 1.\n *    2. Dummy nodes are added where edges have been split into segments.\n *    3. The graph is augmented with a \"dummyChains\" attribute which contains\n *       the first dummy in each chain of dummy nodes produced.\n */\nfunction run(g) {\n  g.graph().dummyChains = [];\n  _.forEach(g.edges(), function(edge) { normalizeEdge(g, edge); });\n}\n\nfunction normalizeEdge(g, e) {\n  var v = e.v,\n      vRank = g.node(v).rank,\n      w = e.w,\n      wRank = g.node(w).rank,\n      name = e.name,\n      edgeLabel = g.edge(e),\n      labelRank = edgeLabel.labelRank;\n\n  if (wRank === vRank + 1) return;\n\n  g.removeEdge(e);\n\n  var dummy, attrs, i;\n  for (i = 0, ++vRank; vRank < wRank; ++i, ++vRank) {\n    edgeLabel.points = [];\n    attrs = {\n      width: 0, height: 0,\n      edgeLabel: edgeLabel, edgeObj: e,\n      rank: vRank\n    };\n    dummy = util.addDummyNode(g, \"edge\", attrs, \"_d\");\n    if (vRank === labelRank) {\n      attrs.width = edgeLabel.width;\n      attrs.height = edgeLabel.height;\n      attrs.dummy = \"edge-label\";\n      attrs.labelpos = edgeLabel.labelpos;\n    }\n    g.setEdge(v, dummy, { weight: edgeLabel.weight }, name);\n    if (i === 0) {\n      g.graph().dummyChains.push(dummy);\n    }\n    v = dummy;\n  }\n\n  g.setEdge(v, w, { weight: edgeLabel.weight }, name);\n}\n\nfunction undo(g) {\n  _.forEach(g.graph().dummyChains, function(v) {\n    var node = g.node(v),\n        origLabel = node.edgeLabel,\n        w;\n    g.setEdge(node.edgeObj, origLabel);\n    while (node.dummy) {\n      w = g.successors(v)[0];\n      g.removeNode(v);\n      origLabel.points.push({ x: node.x, y: node.y });\n      if (node.dummy === \"edge-label\") {\n        origLabel.x = node.x;\n        origLabel.y = node.y;\n        origLabel.width = node.width;\n        origLabel.height = node.height;\n      }\n      v = w;\n      node = g.node(v);\n    }\n  });\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/dagre/lib/normalize.js\n// module id = 58\n// module chunks = 0","\"use strict\";\n\nvar rankUtil = require(\"./util\"),\n    longestPath = rankUtil.longestPath,\n    feasibleTree = require(\"./feasible-tree\"),\n    networkSimplex = require(\"./network-simplex\");\n\nmodule.exports = rank;\n\n/*\n * Assigns a rank to each node in the input graph that respects the \"minlen\"\n * constraint specified on edges between nodes.\n *\n * This basic structure is derived from Gansner, et al., \"A Technique for\n * Drawing Directed Graphs.\"\n *\n * Pre-conditions:\n *\n *    1. Graph must be a connected DAG\n *    2. Graph nodes must be objects\n *    3. Graph edges must have \"weight\" and \"minlen\" attributes\n *\n * Post-conditions:\n *\n *    1. Graph nodes will have a \"rank\" attribute based on the results of the\n *       algorithm. Ranks can start at any index (including negative), we'll\n *       fix them up later.\n */\nfunction rank(g) {\n  switch(g.graph().ranker) {\n    case \"network-simplex\": networkSimplexRanker(g); break;\n    case \"tight-tree\": tightTreeRanker(g); break;\n    case \"longest-path\": longestPathRanker(g); break;\n    default: networkSimplexRanker(g);\n  }\n}\n\n// A fast and simple ranker, but results are far from optimal.\nvar longestPathRanker = longestPath;\n\nfunction tightTreeRanker(g) {\n  longestPath(g);\n  feasibleTree(g);\n}\n\nfunction networkSimplexRanker(g) {\n  networkSimplex(g);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/dagre/lib/rank/index.js\n// module id = 59\n// module chunks = 0","\"use strict\";\n\nvar _ = require(\"../lodash\"),\n    feasibleTree = require(\"./feasible-tree\"),\n    slack = require(\"./util\").slack,\n    initRank = require(\"./util\").longestPath,\n    preorder = require(\"../graphlib\").alg.preorder,\n    postorder = require(\"../graphlib\").alg.postorder,\n    simplify = require(\"../util\").simplify;\n\nmodule.exports = networkSimplex;\n\n// Expose some internals for testing purposes\nnetworkSimplex.initLowLimValues = initLowLimValues;\nnetworkSimplex.initCutValues = initCutValues;\nnetworkSimplex.calcCutValue = calcCutValue;\nnetworkSimplex.leaveEdge = leaveEdge;\nnetworkSimplex.enterEdge = enterEdge;\nnetworkSimplex.exchangeEdges = exchangeEdges;\n\n/*\n * The network simplex algorithm assigns ranks to each node in the input graph\n * and iteratively improves the ranking to reduce the length of edges.\n *\n * Preconditions:\n *\n *    1. The input graph must be a DAG.\n *    2. All nodes in the graph must have an object value.\n *    3. All edges in the graph must have \"minlen\" and \"weight\" attributes.\n *\n * Postconditions:\n *\n *    1. All nodes in the graph will have an assigned \"rank\" attribute that has\n *       been optimized by the network simplex algorithm. Ranks start at 0.\n *\n *\n * A rough sketch of the algorithm is as follows:\n *\n *    1. Assign initial ranks to each node. We use the longest path algorithm,\n *       which assigns ranks to the lowest position possible. In general this\n *       leads to very wide bottom ranks and unnecessarily long edges.\n *    2. Construct a feasible tight tree. A tight tree is one such that all\n *       edges in the tree have no slack (difference between length of edge\n *       and minlen for the edge). This by itself greatly improves the assigned\n *       rankings by shorting edges.\n *    3. Iteratively find edges that have negative cut values. Generally a\n *       negative cut value indicates that the edge could be removed and a new\n *       tree edge could be added to produce a more compact graph.\n *\n * Much of the algorithms here are derived from Gansner, et al., \"A Technique\n * for Drawing Directed Graphs.\" The structure of the file roughly follows the\n * structure of the overall algorithm.\n */\nfunction networkSimplex(g) {\n  g = simplify(g);\n  initRank(g);\n  var t = feasibleTree(g);\n  initLowLimValues(t);\n  initCutValues(t, g);\n\n  var e, f;\n  while ((e = leaveEdge(t))) {\n    f = enterEdge(t, g, e);\n    exchangeEdges(t, g, e, f);\n  }\n}\n\n/*\n * Initializes cut values for all edges in the tree.\n */\nfunction initCutValues(t, g) {\n  var vs = postorder(t, t.nodes());\n  vs = vs.slice(0, vs.length - 1);\n  _.forEach(vs, function(v) {\n    assignCutValue(t, g, v);\n  });\n}\n\nfunction assignCutValue(t, g, child) {\n  var childLab = t.node(child),\n      parent = childLab.parent;\n  t.edge(child, parent).cutvalue = calcCutValue(t, g, child);\n}\n\n/*\n * Given the tight tree, its graph, and a child in the graph calculate and\n * return the cut value for the edge between the child and its parent.\n */\nfunction calcCutValue(t, g, child) {\n  var childLab = t.node(child),\n      parent = childLab.parent,\n      // True if the child is on the tail end of the edge in the directed graph\n      childIsTail = true,\n      // The graph's view of the tree edge we're inspecting\n      graphEdge = g.edge(child, parent),\n      // The accumulated cut value for the edge between this node and its parent\n      cutValue = 0;\n\n  if (!graphEdge) {\n    childIsTail = false;\n    graphEdge = g.edge(parent, child);\n  }\n\n  cutValue = graphEdge.weight;\n\n  _.forEach(g.nodeEdges(child), function(e) {\n    var isOutEdge = e.v === child,\n        other = isOutEdge ? e.w : e.v;\n\n    if (other !== parent) {\n      var pointsToHead = isOutEdge === childIsTail,\n          otherWeight = g.edge(e).weight;\n\n      cutValue += pointsToHead ? otherWeight : -otherWeight;\n      if (isTreeEdge(t, child, other)) {\n        var otherCutValue = t.edge(child, other).cutvalue;\n        cutValue += pointsToHead ? -otherCutValue : otherCutValue;\n      }\n    }\n  });\n\n  return cutValue;\n}\n\nfunction initLowLimValues(tree, root) {\n  if (arguments.length < 2) {\n    root = tree.nodes()[0];\n  }\n  dfsAssignLowLim(tree, {}, 1, root);\n}\n\nfunction dfsAssignLowLim(tree, visited, nextLim, v, parent) {\n  var low = nextLim,\n      label = tree.node(v);\n\n  visited[v] = true;\n  _.forEach(tree.neighbors(v), function(w) {\n    if (!_.has(visited, w)) {\n      nextLim = dfsAssignLowLim(tree, visited, nextLim, w, v);\n    }\n  });\n\n  label.low = low;\n  label.lim = nextLim++;\n  if (parent) {\n    label.parent = parent;\n  } else {\n    // TODO should be able to remove this when we incrementally update low lim\n    delete label.parent;\n  }\n\n  return nextLim;\n}\n\nfunction leaveEdge(tree) {\n  return _.find(tree.edges(), function(e) {\n    return tree.edge(e).cutvalue < 0;\n  });\n}\n\nfunction enterEdge(t, g, edge) {\n  var v = edge.v,\n      w = edge.w;\n\n  // For the rest of this function we assume that v is the tail and w is the\n  // head, so if we don't have this edge in the graph we should flip it to\n  // match the correct orientation.\n  if (!g.hasEdge(v, w)) {\n    v = edge.w;\n    w = edge.v;\n  }\n\n  var vLabel = t.node(v),\n      wLabel = t.node(w),\n      tailLabel = vLabel,\n      flip = false;\n\n  // If the root is in the tail of the edge then we need to flip the logic that\n  // checks for the head and tail nodes in the candidates function below.\n  if (vLabel.lim > wLabel.lim) {\n    tailLabel = wLabel;\n    flip = true;\n  }\n\n  var candidates = _.filter(g.edges(), function(edge) {\n    return flip === isDescendant(t, t.node(edge.v), tailLabel) &&\n           flip !== isDescendant(t, t.node(edge.w), tailLabel);\n  });\n\n  return _.minBy(candidates, function(edge) { return slack(g, edge); });\n}\n\nfunction exchangeEdges(t, g, e, f) {\n  var v = e.v,\n      w = e.w;\n  t.removeEdge(v, w);\n  t.setEdge(f.v, f.w, {});\n  initLowLimValues(t);\n  initCutValues(t, g);\n  updateRanks(t, g);\n}\n\nfunction updateRanks(t, g) {\n  var root = _.find(t.nodes(), function(v) { return !g.node(v).parent; }),\n      vs = preorder(t, root);\n  vs = vs.slice(1);\n  _.forEach(vs, function(v) {\n    var parent = t.node(v).parent,\n        edge = g.edge(v, parent),\n        flipped = false;\n\n    if (!edge) {\n      edge = g.edge(parent, v);\n      flipped = true;\n    }\n\n    g.node(v).rank = g.node(parent).rank + (flipped ? edge.minlen : -edge.minlen);\n  });\n}\n\n/*\n * Returns true if the edge is in the tree.\n */\nfunction isTreeEdge(tree, u, v) {\n  return tree.hasEdge(u, v);\n}\n\n/*\n * Returns true if the specified node is descendant of the root node per the\n * assigned low and lim attributes in the tree.\n */\nfunction isDescendant(tree, vLabel, rootLabel) {\n  return rootLabel.low <= vLabel.lim && vLabel.lim <= rootLabel.lim;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/dagre/lib/rank/network-simplex.js\n// module id = 60\n// module chunks = 0","var _ = require(\"./lodash\");\n\nmodule.exports = parentDummyChains;\n\nfunction parentDummyChains(g) {\n  var postorderNums = postorder(g);\n\n  _.forEach(g.graph().dummyChains, function(v) {\n    var node = g.node(v),\n        edgeObj = node.edgeObj,\n        pathData = findPath(g, postorderNums, edgeObj.v, edgeObj.w),\n        path = pathData.path,\n        lca = pathData.lca,\n        pathIdx = 0,\n        pathV = path[pathIdx],\n        ascending = true;\n\n    while (v !== edgeObj.w) {\n      node = g.node(v);\n\n      if (ascending) {\n        while ((pathV = path[pathIdx]) !== lca &&\n               g.node(pathV).maxRank < node.rank) {\n          pathIdx++;\n        }\n\n        if (pathV === lca) {\n          ascending = false;\n        }\n      }\n\n      if (!ascending) {\n        while (pathIdx < path.length - 1 &&\n               g.node(pathV = path[pathIdx + 1]).minRank <= node.rank) {\n          pathIdx++;\n        }\n        pathV = path[pathIdx];\n      }\n\n      g.setParent(v, pathV);\n      v = g.successors(v)[0];\n    }\n  });\n}\n\n// Find a path from v to w through the lowest common ancestor (LCA). Return the\n// full path and the LCA.\nfunction findPath(g, postorderNums, v, w) {\n  var vPath = [],\n      wPath = [],\n      low = Math.min(postorderNums[v].low, postorderNums[w].low),\n      lim = Math.max(postorderNums[v].lim, postorderNums[w].lim),\n      parent,\n      lca;\n\n  // Traverse up from v to find the LCA\n  parent = v;\n  do {\n    parent = g.parent(parent);\n    vPath.push(parent);\n  } while (parent &&\n           (postorderNums[parent].low > low || lim > postorderNums[parent].lim));\n  lca = parent;\n\n  // Traverse from w to LCA\n  parent = w;\n  while ((parent = g.parent(parent)) !== lca) {\n    wPath.push(parent);\n  }\n\n  return { path: vPath.concat(wPath.reverse()), lca: lca };\n}\n\nfunction postorder(g) {\n  var result = {},\n      lim = 0;\n\n  function dfs(v) {\n    var low = lim;\n    _.forEach(g.children(v), dfs);\n    result[v] = { low: low, lim: lim++ };\n  }\n  _.forEach(g.children(), dfs);\n\n  return result;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/dagre/lib/parent-dummy-chains.js\n// module id = 61\n// module chunks = 0","var _ = require(\"./lodash\"),\n    util = require(\"./util\");\n\nmodule.exports = {\n  run: run,\n  cleanup: cleanup\n};\n\n/*\n * A nesting graph creates dummy nodes for the tops and bottoms of subgraphs,\n * adds appropriate edges to ensure that all cluster nodes are placed between\n * these boundries, and ensures that the graph is connected.\n *\n * In addition we ensure, through the use of the minlen property, that nodes\n * and subgraph border nodes to not end up on the same rank.\n *\n * Preconditions:\n *\n *    1. Input graph is a DAG\n *    2. Nodes in the input graph has a minlen attribute\n *\n * Postconditions:\n *\n *    1. Input graph is connected.\n *    2. Dummy nodes are added for the tops and bottoms of subgraphs.\n *    3. The minlen attribute for nodes is adjusted to ensure nodes do not\n *       get placed on the same rank as subgraph border nodes.\n *\n * The nesting graph idea comes from Sander, \"Layout of Compound Directed\n * Graphs.\"\n */\nfunction run(g) {\n  var root = util.addDummyNode(g, \"root\", {}, \"_root\");\n  var depths = treeDepths(g);\n  var height = _.max(_.values(depths)) - 1; // Note: depths is an Object not an array\n  var nodeSep = 2 * height + 1;\n\n  g.graph().nestingRoot = root;\n\n  // Multiply minlen by nodeSep to align nodes on non-border ranks.\n  _.forEach(g.edges(), function(e) { g.edge(e).minlen *= nodeSep; });\n\n  // Calculate a weight that is sufficient to keep subgraphs vertically compact\n  var weight = sumWeights(g) + 1;\n\n  // Create border nodes and link them up\n  _.forEach(g.children(), function(child) {\n    dfs(g, root, nodeSep, weight, height, depths, child);\n  });\n\n  // Save the multiplier for node layers for later removal of empty border\n  // layers.\n  g.graph().nodeRankFactor = nodeSep;\n}\n\nfunction dfs(g, root, nodeSep, weight, height, depths, v) {\n  var children = g.children(v);\n  if (!children.length) {\n    if (v !== root) {\n      g.setEdge(root, v, { weight: 0, minlen: nodeSep });\n    }\n    return;\n  }\n\n  var top = util.addBorderNode(g, \"_bt\"),\n      bottom = util.addBorderNode(g, \"_bb\"),\n      label = g.node(v);\n\n  g.setParent(top, v);\n  label.borderTop = top;\n  g.setParent(bottom, v);\n  label.borderBottom = bottom;\n\n  _.forEach(children, function(child) {\n    dfs(g, root, nodeSep, weight, height, depths, child);\n\n    var childNode = g.node(child),\n        childTop = childNode.borderTop ? childNode.borderTop : child,\n        childBottom = childNode.borderBottom ? childNode.borderBottom : child,\n        thisWeight = childNode.borderTop ? weight : 2 * weight,\n        minlen = childTop !== childBottom ? 1 : height - depths[v] + 1;\n\n    g.setEdge(top, childTop, {\n      weight: thisWeight,\n      minlen: minlen,\n      nestingEdge: true\n    });\n\n    g.setEdge(childBottom, bottom, {\n      weight: thisWeight,\n      minlen: minlen,\n      nestingEdge: true\n    });\n  });\n\n  if (!g.parent(v)) {\n    g.setEdge(root, top, { weight: 0, minlen: height + depths[v] });\n  }\n}\n\nfunction treeDepths(g) {\n  var depths = {};\n  function dfs(v, depth) {\n    var children = g.children(v);\n    if (children && children.length) {\n      _.forEach(children, function(child) {\n        dfs(child, depth + 1);\n      });\n    }\n    depths[v] = depth;\n  }\n  _.forEach(g.children(), function(v) { dfs(v, 1); });\n  return depths;\n}\n\nfunction sumWeights(g) {\n  return _.reduce(g.edges(), function(acc, e) {\n    return acc + g.edge(e).weight;\n  }, 0);\n}\n\nfunction cleanup(g) {\n  var graphLabel = g.graph();\n  g.removeNode(graphLabel.nestingRoot);\n  delete graphLabel.nestingRoot;\n  _.forEach(g.edges(), function(e) {\n    var edge = g.edge(e);\n    if (edge.nestingEdge) {\n      g.removeEdge(e);\n    }\n  });\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/dagre/lib/nesting-graph.js\n// module id = 62\n// module chunks = 0","var _ = require(\"./lodash\"),\n    util = require(\"./util\");\n\nmodule.exports = addBorderSegments;\n\nfunction addBorderSegments(g) {\n  function dfs(v) {\n    var children = g.children(v),\n        node = g.node(v);\n    if (children.length) {\n      _.forEach(children, dfs);\n    }\n\n    if (_.has(node, \"minRank\")) {\n      node.borderLeft = [];\n      node.borderRight = [];\n      for (var rank = node.minRank, maxRank = node.maxRank + 1;\n           rank < maxRank;\n           ++rank) {\n        addBorderNode(g, \"borderLeft\", \"_bl\", v, node, rank);\n        addBorderNode(g, \"borderRight\", \"_br\", v, node, rank);\n      }\n    }\n  }\n\n  _.forEach(g.children(), dfs);\n}\n\nfunction addBorderNode(g, prop, prefix, sg, sgNode, rank) {\n  var label = { width: 0, height: 0, rank: rank, borderType: prop },\n      prev = sgNode[prop][rank - 1],\n      curr = util.addDummyNode(g, \"border\", label, prefix);\n  sgNode[prop][rank] = curr;\n  g.setParent(curr, sg);\n  if (prev) {\n    g.setEdge(prev, curr, { weight: 1 });\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/dagre/lib/add-border-segments.js\n// module id = 63\n// module chunks = 0","\"use strict\";\n\nvar _ = require(\"./lodash\");\n\nmodule.exports = {\n  adjust: adjust,\n  undo: undo\n};\n\nfunction adjust(g) {\n  var rankDir = g.graph().rankdir.toLowerCase();\n  if (rankDir === \"lr\" || rankDir === \"rl\") {\n    swapWidthHeight(g);\n  }\n}\n\nfunction undo(g) {\n  var rankDir = g.graph().rankdir.toLowerCase();\n  if (rankDir === \"bt\" || rankDir === \"rl\") {\n    reverseY(g);\n  }\n\n  if (rankDir === \"lr\" || rankDir === \"rl\") {\n    swapXY(g);\n    swapWidthHeight(g);\n  }\n}\n\nfunction swapWidthHeight(g) {\n  _.forEach(g.nodes(), function(v) { swapWidthHeightOne(g.node(v)); });\n  _.forEach(g.edges(), function(e) { swapWidthHeightOne(g.edge(e)); });\n}\n\nfunction swapWidthHeightOne(attrs) {\n  var w = attrs.width;\n  attrs.width = attrs.height;\n  attrs.height = w;\n}\n\nfunction reverseY(g) {\n  _.forEach(g.nodes(), function(v) { reverseYOne(g.node(v)); });\n\n  _.forEach(g.edges(), function(e) {\n    var edge = g.edge(e);\n    _.forEach(edge.points, reverseYOne);\n    if (_.has(edge, \"y\")) {\n      reverseYOne(edge);\n    }\n  });\n}\n\nfunction reverseYOne(attrs) {\n  attrs.y = -attrs.y;\n}\n\nfunction swapXY(g) {\n  _.forEach(g.nodes(), function(v) { swapXYOne(g.node(v)); });\n\n  _.forEach(g.edges(), function(e) {\n    var edge = g.edge(e);\n    _.forEach(edge.points, swapXYOne);\n    if (_.has(edge, \"x\")) {\n      swapXYOne(edge);\n    }\n  });\n}\n\nfunction swapXYOne(attrs) {\n  var x = attrs.x;\n  attrs.x = attrs.y;\n  attrs.y = x;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/dagre/lib/coordinate-system.js\n// module id = 64\n// module chunks = 0","\"use strict\";\n\nvar _ = require(\"../lodash\"),\n    initOrder = require(\"./init-order\"),\n    crossCount = require(\"./cross-count\"),\n    sortSubgraph = require(\"./sort-subgraph\"),\n    buildLayerGraph = require(\"./build-layer-graph\"),\n    addSubgraphConstraints = require(\"./add-subgraph-constraints\"),\n    Graph = require(\"../graphlib\").Graph,\n    util = require(\"../util\");\n\nmodule.exports = order;\n\n/*\n * Applies heuristics to minimize edge crossings in the graph and sets the best\n * order solution as an order attribute on each node.\n *\n * Pre-conditions:\n *\n *    1. Graph must be DAG\n *    2. Graph nodes must be objects with a \"rank\" attribute\n *    3. Graph edges must have the \"weight\" attribute\n *\n * Post-conditions:\n *\n *    1. Graph nodes will have an \"order\" attribute based on the results of the\n *       algorithm.\n */\nfunction order(g) {\n  var maxRank = util.maxRank(g),\n      downLayerGraphs = buildLayerGraphs(g, _.range(1, maxRank + 1), \"inEdges\"),\n      upLayerGraphs = buildLayerGraphs(g, _.range(maxRank - 1, -1, -1), \"outEdges\");\n\n  var layering = initOrder(g);\n  assignOrder(g, layering);\n\n  var bestCC = Number.POSITIVE_INFINITY,\n      best;\n\n  for (var i = 0, lastBest = 0; lastBest < 4; ++i, ++lastBest) {\n    sweepLayerGraphs(i % 2 ? downLayerGraphs : upLayerGraphs, i % 4 >= 2);\n\n    layering = util.buildLayerMatrix(g);\n    var cc = crossCount(g, layering);\n    if (cc < bestCC) {\n      lastBest = 0;\n      best = _.cloneDeep(layering);\n      bestCC = cc;\n    }\n  }\n\n  assignOrder(g, best);\n}\n\nfunction buildLayerGraphs(g, ranks, relationship) {\n  return _.map(ranks, function(rank) {\n    return buildLayerGraph(g, rank, relationship);\n  });\n}\n\nfunction sweepLayerGraphs(layerGraphs, biasRight) {\n  var cg = new Graph();\n  _.forEach(layerGraphs, function(lg) {\n    var root = lg.graph().root;\n    var sorted = sortSubgraph(lg, root, cg, biasRight);\n    _.forEach(sorted.vs, function(v, i) {\n      lg.node(v).order = i;\n    });\n    addSubgraphConstraints(lg, cg, sorted.vs);\n  });\n}\n\nfunction assignOrder(g, layering) {\n  _.forEach(layering, function(layer) {\n    _.forEach(layer, function(v, i) {\n      g.node(v).order = i;\n    });\n  });\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/dagre/lib/order/index.js\n// module id = 65\n// module chunks = 0","\"use strict\";\n\nvar _ = require(\"../lodash\");\n\nmodule.exports = initOrder;\n\n/*\n * Assigns an initial order value for each node by performing a DFS search\n * starting from nodes in the first rank. Nodes are assigned an order in their\n * rank as they are first visited.\n *\n * This approach comes from Gansner, et al., \"A Technique for Drawing Directed\n * Graphs.\"\n *\n * Returns a layering matrix with an array per layer and each layer sorted by\n * the order of its nodes.\n */\nfunction initOrder(g) {\n  var visited = {},\n      simpleNodes = _.filter(g.nodes(), function(v) {\n        return !g.children(v).length;\n      }),\n      maxRank = _.max(_.map(simpleNodes, function(v) { return g.node(v).rank; })),\n      layers = _.map(_.range(maxRank + 1), function() { return []; });\n\n  function dfs(v) {\n    if (_.has(visited, v)) return;\n    visited[v] = true;\n    var node = g.node(v);\n    layers[node.rank].push(v);\n    _.forEach(g.successors(v), dfs);\n  }\n\n  var orderedVs = _.sortBy(simpleNodes, function(v) { return g.node(v).rank; });\n  _.forEach(orderedVs, dfs);\n\n  return layers;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/dagre/lib/order/init-order.js\n// module id = 66\n// module chunks = 0","\"use strict\";\n\nvar _ = require(\"../lodash\");\n\nmodule.exports = crossCount;\n\n/*\n * A function that takes a layering (an array of layers, each with an array of\n * ordererd nodes) and a graph and returns a weighted crossing count.\n *\n * Pre-conditions:\n *\n *    1. Input graph must be simple (not a multigraph), directed, and include\n *       only simple edges.\n *    2. Edges in the input graph must have assigned weights.\n *\n * Post-conditions:\n *\n *    1. The graph and layering matrix are left unchanged.\n *\n * This algorithm is derived from Barth, et al., \"Bilayer Cross Counting.\"\n */\nfunction crossCount(g, layering) {\n  var cc = 0;\n  for (var i = 1; i < layering.length; ++i) {\n    cc += twoLayerCrossCount(g, layering[i-1], layering[i]);\n  }\n  return cc;\n}\n\nfunction twoLayerCrossCount(g, northLayer, southLayer) {\n  // Sort all of the edges between the north and south layers by their position\n  // in the north layer and then the south. Map these edges to the position of\n  // their head in the south layer.\n  var southPos = _.zipObject(southLayer,\n                             _.map(southLayer, function (v, i) { return i; }));\n  var southEntries = _.flatten(_.map(northLayer, function(v) {\n    return _.chain(g.outEdges(v))\n            .map(function(e) {\n              return { pos: southPos[e.w], weight: g.edge(e).weight };\n            })\n            .sortBy(\"pos\")\n            .value();\n  }), true);\n\n  // Build the accumulator tree\n  var firstIndex = 1;\n  while (firstIndex < southLayer.length) firstIndex <<= 1;\n  var treeSize = 2 * firstIndex - 1;\n  firstIndex -= 1;\n  var tree = _.map(new Array(treeSize), function() { return 0; });\n\n  // Calculate the weighted crossings\n  var cc = 0;\n  _.forEach(southEntries.forEach(function(entry) {\n    var index = entry.pos + firstIndex;\n    tree[index] += entry.weight;\n    var weightSum = 0;\n    while (index > 0) {\n      if (index % 2) {\n        weightSum += tree[index + 1];\n      }\n      index = (index - 1) >> 1;\n      tree[index] += entry.weight;\n    }\n    cc += entry.weight * weightSum;\n  }));\n\n  return cc;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/dagre/lib/order/cross-count.js\n// module id = 67\n// module chunks = 0","var _ = require(\"../lodash\"),\n    barycenter = require(\"./barycenter\"),\n    resolveConflicts = require(\"./resolve-conflicts\"),\n    sort = require(\"./sort\");\n\nmodule.exports = sortSubgraph;\n\nfunction sortSubgraph(g, v, cg, biasRight) {\n  var movable = g.children(v),\n      node = g.node(v),\n      bl = node ? node.borderLeft : undefined,\n      br = node ? node.borderRight: undefined,\n      subgraphs = {};\n\n  if (bl) {\n    movable = _.filter(movable, function(w) {\n      return w !== bl && w !== br;\n    });\n  }\n\n  var barycenters = barycenter(g, movable);\n  _.forEach(barycenters, function(entry) {\n    if (g.children(entry.v).length) {\n      var subgraphResult = sortSubgraph(g, entry.v, cg, biasRight);\n      subgraphs[entry.v] = subgraphResult;\n      if (_.has(subgraphResult, \"barycenter\")) {\n        mergeBarycenters(entry, subgraphResult);\n      }\n    }\n  });\n\n  var entries = resolveConflicts(barycenters, cg);\n  expandSubgraphs(entries, subgraphs);\n\n  var result = sort(entries, biasRight);\n\n  if (bl) {\n    result.vs = _.flatten([bl, result.vs, br], true);\n    if (g.predecessors(bl).length) {\n      var blPred = g.node(g.predecessors(bl)[0]),\n          brPred = g.node(g.predecessors(br)[0]);\n      if (!_.has(result, \"barycenter\")) {\n        result.barycenter = 0;\n        result.weight = 0;\n      }\n      result.barycenter = (result.barycenter * result.weight +\n                           blPred.order + brPred.order) / (result.weight + 2);\n      result.weight += 2;\n    }\n  }\n\n  return result;\n}\n\nfunction expandSubgraphs(entries, subgraphs) {\n  _.forEach(entries, function(entry) {\n    entry.vs = _.flatten(entry.vs.map(function(v) {\n      if (subgraphs[v]) {\n        return subgraphs[v].vs;\n      }\n      return v;\n    }), true);\n  });\n}\n\nfunction mergeBarycenters(target, other) {\n  if (!_.isUndefined(target.barycenter)) {\n    target.barycenter = (target.barycenter * target.weight +\n                         other.barycenter * other.weight) /\n                        (target.weight + other.weight);\n    target.weight += other.weight;\n  } else {\n    target.barycenter = other.barycenter;\n    target.weight = other.weight;\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/dagre/lib/order/sort-subgraph.js\n// module id = 68\n// module chunks = 0","var _ = require(\"../lodash\");\n\nmodule.exports = barycenter;\n\nfunction barycenter(g, movable) {\n  return _.map(movable, function(v) {\n    var inV = g.inEdges(v);\n    if (!inV.length) {\n      return { v: v };\n    } else {\n      var result = _.reduce(inV, function(acc, e) {\n        var edge = g.edge(e),\n            nodeU = g.node(e.v);\n        return {\n          sum: acc.sum + (edge.weight * nodeU.order),\n          weight: acc.weight + edge.weight\n        };\n      }, { sum: 0, weight: 0 });\n\n      return {\n        v: v,\n        barycenter: result.sum / result.weight,\n        weight: result.weight\n      };\n    }\n  });\n}\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/dagre/lib/order/barycenter.js\n// module id = 69\n// module chunks = 0","\"use strict\";\n\nvar _ = require(\"../lodash\");\n\nmodule.exports = resolveConflicts;\n\n/*\n * Given a list of entries of the form {v, barycenter, weight} and a\n * constraint graph this function will resolve any conflicts between the\n * constraint graph and the barycenters for the entries. If the barycenters for\n * an entry would violate a constraint in the constraint graph then we coalesce\n * the nodes in the conflict into a new node that respects the contraint and\n * aggregates barycenter and weight information.\n *\n * This implementation is based on the description in Forster, \"A Fast and\n * Simple Hueristic for Constrained Two-Level Crossing Reduction,\" thought it\n * differs in some specific details.\n *\n * Pre-conditions:\n *\n *    1. Each entry has the form {v, barycenter, weight}, or if the node has\n *       no barycenter, then {v}.\n *\n * Returns:\n *\n *    A new list of entries of the form {vs, i, barycenter, weight}. The list\n *    `vs` may either be a singleton or it may be an aggregation of nodes\n *    ordered such that they do not violate constraints from the constraint\n *    graph. The property `i` is the lowest original index of any of the\n *    elements in `vs`.\n */\nfunction resolveConflicts(entries, cg) {\n  var mappedEntries = {};\n  _.forEach(entries, function(entry, i) {\n    var tmp = mappedEntries[entry.v] = {\n      indegree: 0,\n      \"in\": [],\n      out: [],\n      vs: [entry.v],\n      i: i\n    };\n    if (!_.isUndefined(entry.barycenter)) {\n      tmp.barycenter = entry.barycenter;\n      tmp.weight = entry.weight;\n    }\n  });\n\n  _.forEach(cg.edges(), function(e) {\n    var entryV = mappedEntries[e.v],\n        entryW = mappedEntries[e.w];\n    if (!_.isUndefined(entryV) && !_.isUndefined(entryW)) {\n      entryW.indegree++;\n      entryV.out.push(mappedEntries[e.w]);\n    }\n  });\n\n  var sourceSet = _.filter(mappedEntries, function(entry) {\n    return !entry.indegree;\n  });\n\n  return doResolveConflicts(sourceSet);\n}\n\nfunction doResolveConflicts(sourceSet) {\n  var entries = [];\n\n  function handleIn(vEntry) {\n    return function(uEntry) {\n      if (uEntry.merged) {\n        return;\n      }\n      if (_.isUndefined(uEntry.barycenter) ||\n          _.isUndefined(vEntry.barycenter) ||\n          uEntry.barycenter >= vEntry.barycenter) {\n        mergeEntries(vEntry, uEntry);\n      }\n    };\n  }\n\n  function handleOut(vEntry) {\n    return function(wEntry) {\n      wEntry[\"in\"].push(vEntry);\n      if (--wEntry.indegree === 0) {\n        sourceSet.push(wEntry);\n      }\n    };\n  }\n\n  while (sourceSet.length) {\n    var entry = sourceSet.pop();\n    entries.push(entry);\n    _.forEach(entry[\"in\"].reverse(), handleIn(entry));\n    _.forEach(entry.out, handleOut(entry));\n  }\n\n  return _.chain(entries)\n          .filter(function(entry) { return !entry.merged; })\n          .map(function(entry) {\n            return _.pick(entry, [\"vs\", \"i\", \"barycenter\", \"weight\"]);\n          })\n          .value();\n}\n\nfunction mergeEntries(target, source) {\n  var sum = 0,\n      weight = 0;\n\n  if (target.weight) {\n    sum += target.barycenter * target.weight;\n    weight += target.weight;\n  }\n\n  if (source.weight) {\n    sum += source.barycenter * source.weight;\n    weight += source.weight;\n  }\n\n  target.vs = source.vs.concat(target.vs);\n  target.barycenter = sum / weight;\n  target.weight = weight;\n  target.i = Math.min(source.i, target.i);\n  source.merged = true;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/dagre/lib/order/resolve-conflicts.js\n// module id = 70\n// module chunks = 0","var _ = require(\"../lodash\"),\n    util = require(\"../util\");\n\nmodule.exports = sort;\n\nfunction sort(entries, biasRight) {\n  var parts = util.partition(entries, function(entry) {\n    return _.has(entry, \"barycenter\");\n  });\n  var sortable = parts.lhs,\n      unsortable = _.sortBy(parts.rhs, function(entry) { return -entry.i; }),\n      vs = [],\n      sum = 0,\n      weight = 0,\n      vsIndex = 0;\n\n  sortable.sort(compareWithBias(!!biasRight));\n\n  vsIndex = consumeUnsortable(vs, unsortable, vsIndex);\n\n  _.forEach(sortable, function (entry) {\n    vsIndex += entry.vs.length;\n    vs.push(entry.vs);\n    sum += entry.barycenter * entry.weight;\n    weight += entry.weight;\n    vsIndex = consumeUnsortable(vs, unsortable, vsIndex);\n  });\n\n  var result = { vs: _.flatten(vs, true) };\n  if (weight) {\n    result.barycenter = sum / weight;\n    result.weight = weight;\n  }\n  return result;\n}\n\nfunction consumeUnsortable(vs, unsortable, index) {\n  var last;\n  while (unsortable.length && (last = _.last(unsortable)).i <= index) {\n    unsortable.pop();\n    vs.push(last.vs);\n    index++;\n  }\n  return index;\n}\n\nfunction compareWithBias(bias) {\n  return function(entryV, entryW) {\n    if (entryV.barycenter < entryW.barycenter) {\n      return -1;\n    } else if (entryV.barycenter > entryW.barycenter) {\n      return 1;\n    }\n\n    return !bias ? entryV.i - entryW.i : entryW.i - entryV.i;\n  };\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/dagre/lib/order/sort.js\n// module id = 71\n// module chunks = 0","var _ = require(\"../lodash\"),\n    Graph = require(\"../graphlib\").Graph;\n\nmodule.exports = buildLayerGraph;\n\n/*\n * Constructs a graph that can be used to sort a layer of nodes. The graph will\n * contain all base and subgraph nodes from the request layer in their original\n * hierarchy and any edges that are incident on these nodes and are of the type\n * requested by the \"relationship\" parameter.\n *\n * Nodes from the requested rank that do not have parents are assigned a root\n * node in the output graph, which is set in the root graph attribute. This\n * makes it easy to walk the hierarchy of movable nodes during ordering.\n *\n * Pre-conditions:\n *\n *    1. Input graph is a DAG\n *    2. Base nodes in the input graph have a rank attribute\n *    3. Subgraph nodes in the input graph has minRank and maxRank attributes\n *    4. Edges have an assigned weight\n *\n * Post-conditions:\n *\n *    1. Output graph has all nodes in the movable rank with preserved\n *       hierarchy.\n *    2. Root nodes in the movable layer are made children of the node\n *       indicated by the root attribute of the graph.\n *    3. Non-movable nodes incident on movable nodes, selected by the\n *       relationship parameter, are included in the graph (without hierarchy).\n *    4. Edges incident on movable nodes, selected by the relationship\n *       parameter, are added to the output graph.\n *    5. The weights for copied edges are aggregated as need, since the output\n *       graph is not a multi-graph.\n */\nfunction buildLayerGraph(g, rank, relationship) {\n  var root = createRootNode(g),\n      result = new Graph({ compound: true }).setGraph({ root: root })\n                  .setDefaultNodeLabel(function(v) { return g.node(v); });\n\n  _.forEach(g.nodes(), function(v) {\n    var node = g.node(v),\n        parent = g.parent(v);\n\n    if (node.rank === rank || node.minRank <= rank && rank <= node.maxRank) {\n      result.setNode(v);\n      result.setParent(v, parent || root);\n\n      // This assumes we have only short edges!\n      _.forEach(g[relationship](v), function(e) {\n        var u = e.v === v ? e.w : e.v,\n            edge = result.edge(u, v),\n            weight = !_.isUndefined(edge) ? edge.weight : 0;\n        result.setEdge(u, v, { weight: g.edge(e).weight + weight });\n      });\n\n      if (_.has(node, \"minRank\")) {\n        result.setNode(v, {\n          borderLeft: node.borderLeft[rank],\n          borderRight: node.borderRight[rank]\n        });\n      }\n    }\n  });\n\n  return result;\n}\n\nfunction createRootNode(g) {\n  var v;\n  while (g.hasNode((v = _.uniqueId(\"_root\"))));\n  return v;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/dagre/lib/order/build-layer-graph.js\n// module id = 72\n// module chunks = 0","var _ = require(\"../lodash\");\n\nmodule.exports = addSubgraphConstraints;\n\nfunction addSubgraphConstraints(g, cg, vs) {\n  var prev = {},\n      rootPrev;\n\n  _.forEach(vs, function(v) {\n    var child = g.parent(v),\n        parent,\n        prevChild;\n    while (child) {\n      parent = g.parent(child);\n      if (parent) {\n        prevChild = prev[parent];\n        prev[parent] = child;\n      } else {\n        prevChild = rootPrev;\n        rootPrev = child;\n      }\n      if (prevChild && prevChild !== child) {\n        cg.setEdge(prevChild, child);\n        return;\n      }\n      child = parent;\n    }\n  });\n\n  /*\n  function dfs(v) {\n    var children = v ? g.children(v) : g.children();\n    if (children.length) {\n      var min = Number.POSITIVE_INFINITY,\n          subgraphs = [];\n      _.each(children, function(child) {\n        var childMin = dfs(child);\n        if (g.children(child).length) {\n          subgraphs.push({ v: child, order: childMin });\n        }\n        min = Math.min(min, childMin);\n      });\n      _.reduce(_.sortBy(subgraphs, \"order\"), function(prev, curr) {\n        cg.setEdge(prev.v, curr.v);\n        return curr;\n      });\n      return min;\n    }\n    return g.node(v).order;\n  }\n  dfs(undefined);\n  */\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/dagre/lib/order/add-subgraph-constraints.js\n// module id = 73\n// module chunks = 0","\"use strict\";\n\nvar _ = require(\"../lodash\"),\n    util = require(\"../util\"),\n    positionX = require(\"./bk\").positionX;\n\nmodule.exports = position;\n\nfunction position(g) {\n  g = util.asNonCompoundGraph(g);\n\n  positionY(g);\n  _.forEach(positionX(g), function(x, v) {\n    g.node(v).x = x;\n  });\n}\n\nfunction positionY(g) {\n  var layering = util.buildLayerMatrix(g),\n      rankSep = g.graph().ranksep,\n      prevY = 0;\n  _.forEach(layering, function(layer) {\n    var maxHeight = _.max(_.map(layer, function(v) { return g.node(v).height; }));\n    _.forEach(layer, function(v) {\n      g.node(v).y = prevY + maxHeight / 2;\n    });\n    prevY += maxHeight + rankSep;\n  });\n}\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/dagre/lib/position/index.js\n// module id = 74\n// module chunks = 0","\"use strict\";\n\nvar _ = require(\"../lodash\"),\n    Graph = require(\"../graphlib\").Graph,\n    util = require(\"../util\");\n\n/*\n * This module provides coordinate assignment based on Brandes and Köpf, \"Fast\n * and Simple Horizontal Coordinate Assignment.\"\n */\n\nmodule.exports = {\n  positionX: positionX,\n  findType1Conflicts: findType1Conflicts,\n  findType2Conflicts: findType2Conflicts,\n  addConflict: addConflict,\n  hasConflict: hasConflict,\n  verticalAlignment: verticalAlignment,\n  horizontalCompaction: horizontalCompaction,\n  alignCoordinates: alignCoordinates,\n  findSmallestWidthAlignment: findSmallestWidthAlignment,\n  balance: balance\n};\n\n/*\n * Marks all edges in the graph with a type-1 conflict with the \"type1Conflict\"\n * property. A type-1 conflict is one where a non-inner segment crosses an\n * inner segment. An inner segment is an edge with both incident nodes marked\n * with the \"dummy\" property.\n *\n * This algorithm scans layer by layer, starting with the second, for type-1\n * conflicts between the current layer and the previous layer. For each layer\n * it scans the nodes from left to right until it reaches one that is incident\n * on an inner segment. It then scans predecessors to determine if they have\n * edges that cross that inner segment. At the end a final scan is done for all\n * nodes on the current rank to see if they cross the last visited inner\n * segment.\n *\n * This algorithm (safely) assumes that a dummy node will only be incident on a\n * single node in the layers being scanned.\n */\nfunction findType1Conflicts(g, layering) {\n  var conflicts = {};\n\n  function visitLayer(prevLayer, layer) {\n    var\n      // last visited node in the previous layer that is incident on an inner\n      // segment.\n      k0 = 0,\n      // Tracks the last node in this layer scanned for crossings with a type-1\n      // segment.\n      scanPos = 0,\n      prevLayerLength = prevLayer.length,\n      lastNode = _.last(layer);\n\n    _.forEach(layer, function(v, i) {\n      var w = findOtherInnerSegmentNode(g, v),\n          k1 = w ? g.node(w).order : prevLayerLength;\n\n      if (w || v === lastNode) {\n        _.forEach(layer.slice(scanPos, i +1), function(scanNode) {\n          _.forEach(g.predecessors(scanNode), function(u) {\n            var uLabel = g.node(u),\n                uPos = uLabel.order;\n            if ((uPos < k0 || k1 < uPos) &&\n                !(uLabel.dummy && g.node(scanNode).dummy)) {\n              addConflict(conflicts, u, scanNode);\n            }\n          });\n        });\n        scanPos = i + 1;\n        k0 = k1;\n      }\n    });\n\n    return layer;\n  }\n\n  _.reduce(layering, visitLayer);\n  return conflicts;\n}\n\nfunction findType2Conflicts(g, layering) {\n  var conflicts = {};\n\n  function scan(south, southPos, southEnd, prevNorthBorder, nextNorthBorder) {\n    var v;\n    _.forEach(_.range(southPos, southEnd), function(i) {\n      v = south[i];\n      if (g.node(v).dummy) {\n        _.forEach(g.predecessors(v), function(u) {\n          var uNode = g.node(u);\n          if (uNode.dummy &&\n              (uNode.order < prevNorthBorder || uNode.order > nextNorthBorder)) {\n            addConflict(conflicts, u, v);\n          }\n        });\n      }\n    });\n  }\n\n\n  function visitLayer(north, south) {\n    var prevNorthPos = -1,\n        nextNorthPos,\n        southPos = 0;\n\n    _.forEach(south, function(v, southLookahead) {\n      if (g.node(v).dummy === \"border\") {\n        var predecessors = g.predecessors(v);\n        if (predecessors.length) {\n          nextNorthPos = g.node(predecessors[0]).order;\n          scan(south, southPos, southLookahead, prevNorthPos, nextNorthPos);\n          southPos = southLookahead;\n          prevNorthPos = nextNorthPos;\n        }\n      }\n      scan(south, southPos, south.length, nextNorthPos, north.length);\n    });\n\n    return south;\n  }\n\n  _.reduce(layering, visitLayer);\n  return conflicts;\n}\n\nfunction findOtherInnerSegmentNode(g, v) {\n  if (g.node(v).dummy) {\n    return _.find(g.predecessors(v), function(u) {\n      return g.node(u).dummy;\n    });\n  }\n}\n\nfunction addConflict(conflicts, v, w) {\n  if (v > w) {\n    var tmp = v;\n    v = w;\n    w = tmp;\n  }\n\n  var conflictsV = conflicts[v];\n  if (!conflictsV) {\n    conflicts[v] = conflictsV = {};\n  }\n  conflictsV[w] = true;\n}\n\nfunction hasConflict(conflicts, v, w) {\n  if (v > w) {\n    var tmp = v;\n    v = w;\n    w = tmp;\n  }\n  return _.has(conflicts[v], w);\n}\n\n/*\n * Try to align nodes into vertical \"blocks\" where possible. This algorithm\n * attempts to align a node with one of its median neighbors. If the edge\n * connecting a neighbor is a type-1 conflict then we ignore that possibility.\n * If a previous node has already formed a block with a node after the node\n * we're trying to form a block with, we also ignore that possibility - our\n * blocks would be split in that scenario.\n */\nfunction verticalAlignment(g, layering, conflicts, neighborFn) {\n  var root = {},\n      align = {},\n      pos = {};\n\n  // We cache the position here based on the layering because the graph and\n  // layering may be out of sync. The layering matrix is manipulated to\n  // generate different extreme alignments.\n  _.forEach(layering, function(layer) {\n    _.forEach(layer, function(v, order) {\n      root[v] = v;\n      align[v] = v;\n      pos[v] = order;\n    });\n  });\n\n  _.forEach(layering, function(layer) {\n    var prevIdx = -1;\n    _.forEach(layer, function(v) {\n      var ws = neighborFn(v);\n      if (ws.length) {\n        ws = _.sortBy(ws, function(w) { return pos[w]; });\n        var mp = (ws.length - 1) / 2;\n        for (var i = Math.floor(mp), il = Math.ceil(mp); i <= il; ++i) {\n          var w = ws[i];\n          if (align[v] === v &&\n              prevIdx < pos[w] &&\n              !hasConflict(conflicts, v, w)) {\n            align[w] = v;\n            align[v] = root[v] = root[w];\n            prevIdx = pos[w];\n          }\n        }\n      }\n    });\n  });\n\n  return { root: root, align: align };\n}\n\nfunction horizontalCompaction(g, layering, root, align, reverseSep) {\n  // This portion of the algorithm differs from BK due to a number of problems.\n  // Instead of their algorithm we construct a new block graph and do two\n  // sweeps. The first sweep places blocks with the smallest possible\n  // coordinates. The second sweep removes unused space by moving blocks to the\n  // greatest coordinates without violating separation.\n  var xs = {},\n      blockG = buildBlockGraph(g, layering, root, reverseSep),\n      borderType = reverseSep ? \"borderLeft\" : \"borderRight\";\n\n  function iterate(setXsFunc, nextNodesFunc) {\n    var stack = blockG.nodes();\n    var elem = stack.pop();\n    var visited = {};\n    while (elem) {\n      if (visited[elem]) {\n        setXsFunc(elem);\n      } else {\n        visited[elem] = true;\n        stack.push(elem);\n        stack = stack.concat(nextNodesFunc(elem));\n      }\n\n      elem = stack.pop();\n    }\n  }\n\n  // First pass, assign smallest coordinates\n  function pass1(elem) {\n    xs[elem] = blockG.inEdges(elem).reduce(function(acc, e) {\n      return Math.max(acc, xs[e.v] + blockG.edge(e));\n    }, 0);\n  }\n\n  // Second pass, assign greatest coordinates\n  function pass2(elem) {\n    var min = blockG.outEdges(elem).reduce(function(acc, e) {\n      return Math.min(acc, xs[e.w] - blockG.edge(e));\n    }, Number.POSITIVE_INFINITY);\n\n    var node = g.node(elem);\n    if (min !== Number.POSITIVE_INFINITY && node.borderType !== borderType) {\n      xs[elem] = Math.max(xs[elem], min);\n    }\n  }\n\n  iterate(pass1, _.bind(blockG.predecessors, blockG));\n  iterate(pass2, _.bind(blockG.successors, blockG));\n\n  // Assign x coordinates to all nodes\n  _.forEach(align, function(v) {\n    xs[v] = xs[root[v]];\n  });\n\n  return xs;\n}\n\n\nfunction buildBlockGraph(g, layering, root, reverseSep) {\n  var blockGraph = new Graph(),\n      graphLabel = g.graph(),\n      sepFn = sep(graphLabel.nodesep, graphLabel.edgesep, reverseSep);\n\n  _.forEach(layering, function(layer) {\n    var u;\n    _.forEach(layer, function(v) {\n      var vRoot = root[v];\n      blockGraph.setNode(vRoot);\n      if (u) {\n        var uRoot = root[u],\n            prevMax = blockGraph.edge(uRoot, vRoot);\n        blockGraph.setEdge(uRoot, vRoot, Math.max(sepFn(g, v, u), prevMax || 0));\n      }\n      u = v;\n    });\n  });\n\n  return blockGraph;\n}\n\n/*\n * Returns the alignment that has the smallest width of the given alignments.\n */\nfunction findSmallestWidthAlignment(g, xss) {\n  return _.minBy(_.values(xss), function (xs) {\n    var max = Number.NEGATIVE_INFINITY;\n    var min = Number.POSITIVE_INFINITY;\n\n    _.forIn(xs, function (x, v) {\n      var halfWidth = width(g, v) / 2;\n\n      max = Math.max(x + halfWidth, max);\n      min = Math.min(x - halfWidth, min);\n    });\n\n    return max - min;\n  });\n}\n\n/*\n * Align the coordinates of each of the layout alignments such that\n * left-biased alignments have their minimum coordinate at the same point as\n * the minimum coordinate of the smallest width alignment and right-biased\n * alignments have their maximum coordinate at the same point as the maximum\n * coordinate of the smallest width alignment.\n */\nfunction alignCoordinates(xss, alignTo) {\n  var alignToVals = _.values(alignTo),\n      alignToMin = _.min(alignToVals),\n      alignToMax = _.max(alignToVals);\n\n  _.forEach([\"u\", \"d\"], function(vert) {\n    _.forEach([\"l\", \"r\"], function(horiz) {\n      var alignment = vert + horiz,\n          xs = xss[alignment],\n          delta;\n      if (xs === alignTo) return;\n\n      var xsVals = _.values(xs);\n      delta = horiz === \"l\" ? alignToMin - _.min(xsVals) : alignToMax - _.max(xsVals);\n\n      if (delta) {\n        xss[alignment] = _.mapValues(xs, function(x) { return x + delta; });\n      }\n    });\n  });\n}\n\nfunction balance(xss, align) {\n  return _.mapValues(xss.ul, function(ignore, v) {\n    if (align) {\n      return xss[align.toLowerCase()][v];\n    } else {\n      var xs = _.sortBy(_.map(xss, v));\n      return (xs[1] + xs[2]) / 2;\n    }\n  });\n}\n\nfunction positionX(g) {\n  var layering = util.buildLayerMatrix(g),\n      conflicts = _.merge(findType1Conflicts(g, layering),\n                          findType2Conflicts(g, layering));\n\n  var xss = {},\n      adjustedLayering;\n  _.forEach([\"u\", \"d\"], function(vert) {\n    adjustedLayering = vert === \"u\" ? layering : _.values(layering).reverse();\n    _.forEach([\"l\", \"r\"], function(horiz) {\n      if (horiz === \"r\") {\n        adjustedLayering = _.map(adjustedLayering, function(inner) {\n          return _.values(inner).reverse();\n        });\n      }\n\n      var neighborFn = _.bind(vert === \"u\" ? g.predecessors : g.successors, g);\n      var align = verticalAlignment(g, adjustedLayering, conflicts, neighborFn);\n      var xs = horizontalCompaction(g, adjustedLayering,\n                                    align.root, align.align,\n                                    horiz === \"r\");\n      if (horiz === \"r\") {\n        xs = _.mapValues(xs, function(x) { return -x; });\n      }\n      xss[vert + horiz] = xs;\n    });\n  });\n\n  var smallestWidth = findSmallestWidthAlignment(g, xss);\n  alignCoordinates(xss, smallestWidth);\n  return balance(xss, g.graph().align);\n}\n\nfunction sep(nodeSep, edgeSep, reverseSep) {\n  return function(g, v, w) {\n    var vLabel = g.node(v),\n        wLabel = g.node(w),\n        sum = 0,\n        delta;\n\n    sum += vLabel.width / 2;\n    if (_.has(vLabel, \"labelpos\")) {\n      switch (vLabel.labelpos.toLowerCase()) {\n        case \"l\": delta = -vLabel.width / 2; break;\n        case \"r\": delta = vLabel.width / 2; break;\n      }\n    }\n    if (delta) {\n      sum += reverseSep ? delta : -delta;\n    }\n    delta = 0;\n\n    sum += (vLabel.dummy ? edgeSep : nodeSep) / 2;\n    sum += (wLabel.dummy ? edgeSep : nodeSep) / 2;\n\n    sum += wLabel.width / 2;\n    if (_.has(wLabel, \"labelpos\")) {\n      switch (wLabel.labelpos.toLowerCase()) {\n        case \"l\": delta = wLabel.width / 2; break;\n        case \"r\": delta = -wLabel.width / 2; break;\n      }\n    }\n    if (delta) {\n      sum += reverseSep ? delta : -delta;\n    }\n    delta = 0;\n\n    return sum;\n  };\n}\n\nfunction width(g, v) {\n  return g.node(v).width;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/dagre/lib/position/bk.js\n// module id = 75\n// module chunks = 0","var _ = require(\"./lodash\"),\n    util = require(\"./util\"),\n    Graph = require(\"./graphlib\").Graph;\n\nmodule.exports = {\n  debugOrdering: debugOrdering\n};\n\n/* istanbul ignore next */\nfunction debugOrdering(g) {\n  var layerMatrix = util.buildLayerMatrix(g);\n\n  var h = new Graph({ compound: true, multigraph: true }).setGraph({});\n\n  _.forEach(g.nodes(), function(v) {\n    h.setNode(v, { label: v });\n    h.setParent(v, \"layer\" + g.node(v).rank);\n  });\n\n  _.forEach(g.edges(), function(e) {\n    h.setEdge(e.v, e.w, {}, e.name);\n  });\n\n  _.forEach(layerMatrix, function(layer, i) {\n    var layerV = \"layer\" + i;\n    h.setNode(layerV, { rank: \"same\" });\n    _.reduce(layer, function(u, v) {\n      h.setEdge(u, v, { style: \"invis\" });\n      return v;\n    });\n  });\n\n  return h;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/dagre/lib/debug.js\n// module id = 76\n// module chunks = 0","module.exports = \"0.8.2\";\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/dagre/lib/version.js\n// module id = 77\n// module chunks = 0","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/registerServiceWorker.js"],"sourceRoot":""}